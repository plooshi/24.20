// Generated by Sarah's Offset Finder
// Fortnite version: 24.20

#pragma once
#include <stdint.h>
#include <stdexcept>
#include <vector>
#include <intrin.h>

class Sarah
{
public:
	class Offsets
	{
	public:
		static inline uint64_t ImageBase;
		static inline uint64_t Step;
		static inline uint64_t StepExplicitProperty;
		static inline uint64_t CreateNetDriver;
		static inline uint64_t InitHost;
		static inline uint64_t PauseBeaconRequests;
		static inline uint64_t InitListen;
		static inline uint64_t SetWorld;
		static inline uint64_t WorldNetMode;
		static inline uint64_t GIsClient;
		static inline uint64_t TickFlush;
		static inline uint64_t GetMaxTickRate;
		static inline uint64_t DispatchRequest;
		static inline uint64_t StaticFindObject;
		static inline uint64_t StaticLoadObject;
		static inline uint64_t ApplyCharacterCustomization;
		static inline uint64_t InternalTryActivateAbility;
		static inline uint64_t InternalServerTryActivateAbility;
		static inline uint64_t Realloc;
		static inline uint64_t StartNewSafeZonePhase;
		static inline uint64_t PickTeam;
		static inline uint32_t ReadyToStartMatchVft;
		static inline uint32_t SpawnDefaultPawnForVft;
		static inline uint32_t ServerAcknowledgePossessionVft;
		static inline uint32_t HandleStartingNewPlayerVft;
		static inline uint32_t ServerExecuteInventoryItemVft;
		static inline uint32_t ServerAttemptAircraftJumpVft;
		static inline uint32_t InternalServerTryActivateAbilityVft;
		static inline uint64_t GameSessionPatch;
		static inline uint64_t EncryptionPatch;

		static inline std::vector<uint64_t> NullFuncs;

		static inline std::vector<uint64_t> RetTrueFuncs;

		static int Init()
		{
			ImageBase = *(uint64_t*)(__readgsqword(0x60) + 0x10);
			Step = ImageBase + 0x11ef29c;
			StepExplicitProperty = ImageBase + 0x11ee724;
			CreateNetDriver = ImageBase + 0x23c7b34;
			InitHost = ImageBase + 0x87ddc24;
			PauseBeaconRequests = ImageBase + 0xa43fc90;
			InitListen = ImageBase + 0x87de160;
			SetWorld = ImageBase + 0x17fbc64;
			WorldNetMode = ImageBase + 0x1172c6c;
			GIsClient = ImageBase + 0x105128b3;
			TickFlush = ImageBase + 0x1090880;
			GetMaxTickRate = ImageBase + 0xfdee80;
			DispatchRequest = ImageBase + 0x1cba3c0;
			StaticFindObject = ImageBase + 0xee6bc0;
			StaticLoadObject = ImageBase + 0x137c998;
			ApplyCharacterCustomization = ImageBase + 0x1fbb290;
			InternalTryActivateAbility = ImageBase + 0x858b5f8;
			Realloc = ImageBase + 0x6e06614;
			StartNewSafeZonePhase = ImageBase + 0x9919130;
			PickTeam = ImageBase + 0x9920990;
			ReadyToStartMatchVft = 0x120;
			SpawnDefaultPawnForVft = 0xe2;
			ServerAcknowledgePossessionVft = 0x130;
			HandleStartingNewPlayerVft = 0xe8;
			ServerExecuteInventoryItemVft = 0x22d;
			ServerAttemptAircraftJumpVft = 0xa5;
			InternalServerTryActivateAbilityVft = 0x115;
			GameSessionPatch = ImageBase + 0x1638670;
			EncryptionPatch = ImageBase + 0x81dbbc2;

			NullFuncs.push_back(ImageBase + 0x1F02160);
			NullFuncs.push_back(ImageBase + 0x31C19D4);
			NullFuncs.push_back(ImageBase + 0x1A967CC);
			NullFuncs.push_back(ImageBase + 0x1A774A4);
			NullFuncs.push_back(ImageBase + 0x1BBE214);
			NullFuncs.push_back(ImageBase + 0x1D29A20);
			// BRO THERE CAN ONLY BE SO MANY WIDGETS
			NullFuncs.push_back(ImageBase + 0x22FC2EC);
			NullFuncs.push_back(ImageBase + 0x2A6EBB8);
			NullFuncs.push_back(ImageBase + 0x1B36978);
			NullFuncs.push_back(ImageBase + 0x1689848);
			NullFuncs.push_back(ImageBase + 0x20CD178);
			NullFuncs.push_back(ImageBase + 0x1D841B4);
			NullFuncs.push_back(ImageBase + 0x2E32CC8);
			NullFuncs.push_back(ImageBase + 0x2C56DCC);
			NullFuncs.push_back(ImageBase + 0x1B33C7C);
			NullFuncs.push_back(ImageBase + 0x205C1C0);
			NullFuncs.push_back(ImageBase + 0x2AB6CD0);
			NullFuncs.push_back(ImageBase + 0x2B562E8);
			NullFuncs.push_back(ImageBase + 0x298FFB0);
			NullFuncs.push_back(ImageBase + 0x1D27130);
			NullFuncs.push_back(ImageBase + 0x14B7CE8);
			//NullFuncs.push_back(ImageBase + 0x1B340E8);
			//NullFuncs.push_back(ImageBase + 0x1BBE214);
			//NullFuncs.push_back(ImageBase + 0x293CE0C);
			//NullFuncs.push_back(ImageBase + 0x1a774a4);
			//RetTrueFuncs.push_back(ImageBase + 0x193e720);
			//RetTrueFuncs.push_back(ImageBase + 0x2487584);
			//RetTrueFuncs.push_back(ImageBase + 0x193E720);
			RetTrueFuncs.push_back(ImageBase + 0x99ACF70);
			RetTrueFuncs.push_back(ImageBase + 0xABEB8A4);
			RetTrueFuncs.push_back(ImageBase + 0x853F4F8);

			return 0;
		}
	};
};
#define InitOffsets auto _offsetInitter = Sarah::Offsets::Init();