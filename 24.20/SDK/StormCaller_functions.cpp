#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StormCaller

#include "Basic.hpp"

#include "StormCaller_classes.hpp"
#include "StormCaller_parameters.hpp"


namespace SDK
{

// Function StormCaller.StormCallerComponent.ApplyPOINamesToDataRegistry
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UPlaylistUserOptions*             UserOptions                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     GameplayTagForPOI                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             MapCenterText                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             RandomText                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UStormCallerComponent::ApplyPOINamesToDataRegistry(const class UPlaylistUserOptions* UserOptions, const struct FGameplayTag& GameplayTagForPOI, const class FText& MapCenterText, const class FText& RandomText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StormCallerComponent", "ApplyPOINamesToDataRegistry");

	Params::StormCallerComponent_ApplyPOINamesToDataRegistry Parms{};

	Parms.UserOptions = UserOptions;
	Parms.GameplayTagForPOI = std::move(GameplayTagForPOI);
	Parms.MapCenterText = std::move(MapCenterText);
	Parms.RandomText = std::move(RandomText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function StormCaller.StormCallerComponent.ApplySavedPoiOptions
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   PoiSavedOptionKeys                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FText>                     PoiSavedOptionName                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class UFortActorOptionsComponent*       ToyOptionsComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStormCallerComponent::ApplySavedPoiOptions(const TArray<class FString>& PoiSavedOptionKeys, const TArray<class FText>& PoiSavedOptionName, class UFortActorOptionsComponent* ToyOptionsComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StormCallerComponent", "ApplySavedPoiOptions");

	Params::StormCallerComponent_ApplySavedPoiOptions Parms{};

	Parms.PoiSavedOptionKeys = std::move(PoiSavedOptionKeys);
	Parms.PoiSavedOptionName = std::move(PoiSavedOptionName);
	Parms.ToyOptionsComponent = ToyOptionsComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function StormCaller.StormCallerComponent.GetPoiVolumeFromOptionIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   OptionIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPoiVolume*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPoiVolume* UStormCallerComponent::GetPoiVolumeFromOptionIndex(int32 OptionIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StormCallerComponent", "GetPoiVolumeFromOptionIndex");

	Params::StormCallerComponent_GetPoiVolumeFromOptionIndex Parms{};

	Parms.OptionIndex = OptionIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function StormCaller.StormCallerComponent.SpawnInitialSafeZone
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UStormCallerComponent::SpawnInitialSafeZone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StormCallerComponent", "SpawnInitialSafeZone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function StormCaller.StormCallerComponent.UpdatePoiSavedOptions
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   InOutPoiSavedOptionKeys                                (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FText>                     InOutPoiSavedOptionNames                               (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class UPlaylistUserOptions*             UserOptions                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     GameplayTagForPOI                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStormCallerComponent::UpdatePoiSavedOptions(TArray<class FString>& InOutPoiSavedOptionKeys, TArray<class FText>& InOutPoiSavedOptionNames, const class UPlaylistUserOptions* UserOptions, const struct FGameplayTag& GameplayTagForPOI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StormCallerComponent", "UpdatePoiSavedOptions");

	Params::StormCallerComponent_UpdatePoiSavedOptions Parms{};

	Parms.InOutPoiSavedOptionKeys = std::move(InOutPoiSavedOptionKeys);
	Parms.InOutPoiSavedOptionNames = std::move(InOutPoiSavedOptionNames);
	Parms.UserOptions = UserOptions;
	Parms.GameplayTagForPOI = std::move(GameplayTagForPOI);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	InOutPoiSavedOptionKeys = std::move(Parms.InOutPoiSavedOptionKeys);
	InOutPoiSavedOptionNames = std::move(Parms.InOutPoiSavedOptionNames);
}


// Function StormCaller.StormCallerComponent.GetSafeZoneLocationBlockList
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<struct FVector4>           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<struct FVector4> UStormCallerComponent::GetSafeZoneLocationBlockList() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StormCallerComponent", "GetSafeZoneLocationBlockList");

	Params::StormCallerComponent_GetSafeZoneLocationBlockList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

