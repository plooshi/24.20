#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HmxGraphics

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// Enum HmxGraphics.ETextureFilterMode
// NumValues: 0x0003
enum class ETextureFilterMode : uint32
{
	Point                                    = 0,
	Linear                                   = 1,
	MAX                                      = 2,
};

// Enum HmxGraphics.FInterpolationType
// NumValues: 0x0004
enum class EFInterpolationType : uint32
{
	sRGB                                     = 0,
	HSV                                      = 1,
	NumOf                                    = 2,
	FInterpolationType_MAX                   = 3,
};

// ScriptStruct HmxGraphics.ColorKey
// 0x0014 (0x0014 - 0x0000)
struct FColorKey final
{
public:
	float                                         Position;                                          // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Value;                                             // 0x0004(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FColorKey) == 0x000004, "Wrong alignment on FColorKey");
static_assert(sizeof(FColorKey) == 0x000014, "Wrong size on FColorKey");
static_assert(offsetof(FColorKey, Position) == 0x000000, "Member 'FColorKey::Position' has a wrong offset!");
static_assert(offsetof(FColorKey, Value) == 0x000004, "Member 'FColorKey::Value' has a wrong offset!");

// ScriptStruct HmxGraphics.ColorCurve
// 0x0070 (0x0070 - 0x0000)
struct FColorCurve final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FColorKey>                      Keys;                                              // 0x0008(0x0010)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_18[0x50];                                      // 0x0018(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	EFInterpolationType                           InterpolationType;                                 // 0x0068(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FColorCurve) == 0x000008, "Wrong alignment on FColorCurve");
static_assert(sizeof(FColorCurve) == 0x000070, "Wrong size on FColorCurve");
static_assert(offsetof(FColorCurve, Keys) == 0x000008, "Member 'FColorCurve::Keys' has a wrong offset!");
static_assert(offsetof(FColorCurve, InterpolationType) == 0x000068, "Member 'FColorCurve::InterpolationType' has a wrong offset!");

// ScriptStruct HmxGraphics.GrayscaleGradient
// 0x0080 (0x0080 - 0x0000)
struct FGrayscaleGradient final
{
public:
	struct FRichCurve                             Curve;                                             // 0x0000(0x0080)(NativeAccessSpecifierPublic)
};
static_assert(alignof(FGrayscaleGradient) == 0x000008, "Wrong alignment on FGrayscaleGradient");
static_assert(sizeof(FGrayscaleGradient) == 0x000080, "Wrong size on FGrayscaleGradient");
static_assert(offsetof(FGrayscaleGradient, Curve) == 0x000000, "Member 'FGrayscaleGradient::Curve' has a wrong offset!");

// ScriptStruct HmxGraphics.ColorGradient
// 0x00F0 (0x00F0 - 0x0000)
struct FColorGradient final
{
public:
	struct FColorCurve                            ColorCurve;                                        // 0x0000(0x0070)(Edit, NativeAccessSpecifierPublic)
	struct FRichCurve                             AlphaCurve;                                        // 0x0070(0x0080)(NativeAccessSpecifierPublic)
};
static_assert(alignof(FColorGradient) == 0x000008, "Wrong alignment on FColorGradient");
static_assert(sizeof(FColorGradient) == 0x0000F0, "Wrong size on FColorGradient");
static_assert(offsetof(FColorGradient, ColorCurve) == 0x000000, "Member 'FColorGradient::ColorCurve' has a wrong offset!");
static_assert(offsetof(FColorGradient, AlphaCurve) == 0x000070, "Member 'FColorGradient::AlphaCurve' has a wrong offset!");

}

