#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BladesMenu_XpBar

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BladesMenu_XpBar.BladesMenu_XpBar_C
// 0x0068 (0x02F8 - 0x0290)
class UBladesMenu_XpBar_C final : public UFortSeasonDataWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Backing_Color;                                     // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Backing_Darken;                                    // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Backing_Outline;                                   // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_108;                                         // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_198;                                         // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_355;                                         // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_480;                                         // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_RaceTrack;                                   // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                RestedXPTextBox;                                   // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   RichText_CurrentLevel;                             // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   RichText_Level;                                    // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         Max_BPLevel_for_Rewards;                           // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BladesMenu_XpBar(int32 EntryPoint);
	void OnLevelChanged();
	void OnProgressUpdated();
	void OnSuperCharged();
	void OnUpdatedRestedState(const bool bIsRested);
	void Update_Text();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BladesMenu_XpBar_C">();
	}
	static class UBladesMenu_XpBar_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBladesMenu_XpBar_C>();
	}
};
static_assert(alignof(UBladesMenu_XpBar_C) == 0x000008, "Wrong alignment on UBladesMenu_XpBar_C");
static_assert(sizeof(UBladesMenu_XpBar_C) == 0x0002F8, "Wrong size on UBladesMenu_XpBar_C");
static_assert(offsetof(UBladesMenu_XpBar_C, UberGraphFrame) == 0x000290, "Member 'UBladesMenu_XpBar_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBladesMenu_XpBar_C, Backing_Color) == 0x000298, "Member 'UBladesMenu_XpBar_C::Backing_Color' has a wrong offset!");
static_assert(offsetof(UBladesMenu_XpBar_C, Backing_Darken) == 0x0002A0, "Member 'UBladesMenu_XpBar_C::Backing_Darken' has a wrong offset!");
static_assert(offsetof(UBladesMenu_XpBar_C, Backing_Outline) == 0x0002A8, "Member 'UBladesMenu_XpBar_C::Backing_Outline' has a wrong offset!");
static_assert(offsetof(UBladesMenu_XpBar_C, Image_108) == 0x0002B0, "Member 'UBladesMenu_XpBar_C::Image_108' has a wrong offset!");
static_assert(offsetof(UBladesMenu_XpBar_C, Image_198) == 0x0002B8, "Member 'UBladesMenu_XpBar_C::Image_198' has a wrong offset!");
static_assert(offsetof(UBladesMenu_XpBar_C, Image_355) == 0x0002C0, "Member 'UBladesMenu_XpBar_C::Image_355' has a wrong offset!");
static_assert(offsetof(UBladesMenu_XpBar_C, Image_480) == 0x0002C8, "Member 'UBladesMenu_XpBar_C::Image_480' has a wrong offset!");
static_assert(offsetof(UBladesMenu_XpBar_C, Image_RaceTrack) == 0x0002D0, "Member 'UBladesMenu_XpBar_C::Image_RaceTrack' has a wrong offset!");
static_assert(offsetof(UBladesMenu_XpBar_C, RestedXPTextBox) == 0x0002D8, "Member 'UBladesMenu_XpBar_C::RestedXPTextBox' has a wrong offset!");
static_assert(offsetof(UBladesMenu_XpBar_C, RichText_CurrentLevel) == 0x0002E0, "Member 'UBladesMenu_XpBar_C::RichText_CurrentLevel' has a wrong offset!");
static_assert(offsetof(UBladesMenu_XpBar_C, RichText_Level) == 0x0002E8, "Member 'UBladesMenu_XpBar_C::RichText_Level' has a wrong offset!");
static_assert(offsetof(UBladesMenu_XpBar_C, Max_BPLevel_for_Rewards) == 0x0002F0, "Member 'UBladesMenu_XpBar_C::Max_BPLevel_for_Rewards' has a wrong offset!");

}

