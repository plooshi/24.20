#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CreativeLowMemoryFallbackRuntime

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct CreativeLowMemoryFallbackRuntime.CreativeLowMemoryFallbackUserFacingText
// 0x0048 (0x0048 - 0x0000)
struct FCreativeLowMemoryFallbackUserFacingText final
{
public:
	class FText                                   ExitToMainMenuReasonText;                          // 0x0000(0x0018)(Edit, NativeAccessSpecifierPublic)
	class FText                                   WarningToastTitle;                                 // 0x0018(0x0018)(Edit, NativeAccessSpecifierPublic)
	class FText                                   WarningToastDescription;                           // 0x0030(0x0018)(Edit, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCreativeLowMemoryFallbackUserFacingText) == 0x000008, "Wrong alignment on FCreativeLowMemoryFallbackUserFacingText");
static_assert(sizeof(FCreativeLowMemoryFallbackUserFacingText) == 0x000048, "Wrong size on FCreativeLowMemoryFallbackUserFacingText");
static_assert(offsetof(FCreativeLowMemoryFallbackUserFacingText, ExitToMainMenuReasonText) == 0x000000, "Member 'FCreativeLowMemoryFallbackUserFacingText::ExitToMainMenuReasonText' has a wrong offset!");
static_assert(offsetof(FCreativeLowMemoryFallbackUserFacingText, WarningToastTitle) == 0x000018, "Member 'FCreativeLowMemoryFallbackUserFacingText::WarningToastTitle' has a wrong offset!");
static_assert(offsetof(FCreativeLowMemoryFallbackUserFacingText, WarningToastDescription) == 0x000030, "Member 'FCreativeLowMemoryFallbackUserFacingText::WarningToastDescription' has a wrong offset!");

// ScriptStruct CreativeLowMemoryFallbackRuntime.CreativeLowMemoryFallbackFreeMemoryThresholds
// 0x000C (0x000C - 0x0000)
struct FCreativeLowMemoryFallbackFreeMemoryThresholds final
{
public:
	float                                         FallbackMB;                                        // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WarningMB;                                         // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RecoveryMB;                                        // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCreativeLowMemoryFallbackFreeMemoryThresholds) == 0x000004, "Wrong alignment on FCreativeLowMemoryFallbackFreeMemoryThresholds");
static_assert(sizeof(FCreativeLowMemoryFallbackFreeMemoryThresholds) == 0x00000C, "Wrong size on FCreativeLowMemoryFallbackFreeMemoryThresholds");
static_assert(offsetof(FCreativeLowMemoryFallbackFreeMemoryThresholds, FallbackMB) == 0x000000, "Member 'FCreativeLowMemoryFallbackFreeMemoryThresholds::FallbackMB' has a wrong offset!");
static_assert(offsetof(FCreativeLowMemoryFallbackFreeMemoryThresholds, WarningMB) == 0x000004, "Member 'FCreativeLowMemoryFallbackFreeMemoryThresholds::WarningMB' has a wrong offset!");
static_assert(offsetof(FCreativeLowMemoryFallbackFreeMemoryThresholds, RecoveryMB) == 0x000008, "Member 'FCreativeLowMemoryFallbackFreeMemoryThresholds::RecoveryMB' has a wrong offset!");

}

