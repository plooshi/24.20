#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ElectraDataChannelRuntime

#include "Basic.hpp"

#include "ElectraDataChannelRuntime_classes.hpp"
#include "ElectraDataChannelRuntime_parameters.hpp"


namespace SDK
{

// Function ElectraDataChannelRuntime.ElectraDataChannelPlayer.EndPlayback
// (Final, Native, Public, BlueprintCallable)

void AElectraDataChannelPlayer::EndPlayback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectraDataChannelPlayer", "EndPlayback");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ElectraDataChannelRuntime.ElectraDataChannelPlayer.PlayFromFile
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InFilename                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AElectraDataChannelPlayer::PlayFromFile(const class FString& InFilename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectraDataChannelPlayer", "PlayFromFile");

	Params::ElectraDataChannelPlayer_PlayFromFile Parms{};

	Parms.InFilename = std::move(InFilename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ElectraDataChannelRuntime.ElectraDataChannelPlayer.PlayFromMediaPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMediaPlayer*                     InMediaPlayer                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AElectraDataChannelPlayer::PlayFromMediaPlayer(class UMediaPlayer* InMediaPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectraDataChannelPlayer", "PlayFromMediaPlayer");

	Params::ElectraDataChannelPlayer_PlayFromMediaPlayer Parms{};

	Parms.InMediaPlayer = InMediaPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ElectraDataChannelRuntime.ElectraDataChannelPlayer.PlayFromStateStreamServer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InStatePlaylistURL                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AElectraDataChannelPlayer::PlayFromStateStreamServer(const class FString& InStatePlaylistURL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectraDataChannelPlayer", "PlayFromStateStreamServer");

	Params::ElectraDataChannelPlayer_PlayFromStateStreamServer Parms{};

	Parms.InStatePlaylistURL = std::move(InStatePlaylistURL);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ElectraDataChannelRuntime.ElectraDataChannelPlayer.UseTimeFromMediaPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMediaPlayer*                     InMediaPlayer                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AElectraDataChannelPlayer::UseTimeFromMediaPlayer(class UMediaPlayer* InMediaPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectraDataChannelPlayer", "UseTimeFromMediaPlayer");

	Params::ElectraDataChannelPlayer_UseTimeFromMediaPlayer Parms{};

	Parms.InMediaPlayer = InMediaPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ElectraDataChannelRuntime.ElectraDataChannelRecorder.EndRecording
// (Final, Native, Public, BlueprintCallable)

void AElectraDataChannelRecorder::EndRecording()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectraDataChannelRecorder", "EndRecording");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ElectraDataChannelRuntime.ElectraDataChannelRecorder.RecordToFile
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InFilename                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AElectraDataChannelRecorder::RecordToFile(const class FString& InFilename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectraDataChannelRecorder", "RecordToFile");

	Params::ElectraDataChannelRecorder_RecordToFile Parms{};

	Parms.InFilename = std::move(InFilename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ElectraDataChannelRuntime.ElectraDataChannelRecorder.StartRecording
// (Final, Native, Public, BlueprintCallable)

void AElectraDataChannelRecorder::StartRecording()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectraDataChannelRecorder", "StartRecording");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ElectraDataChannelRuntime.ElectraDataChannelRecorder.UseTimeFromMediaPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMediaPlayer*                     InMediaPlayer                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AElectraDataChannelRecorder::UseTimeFromMediaPlayer(class UMediaPlayer* InMediaPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectraDataChannelRecorder", "UseTimeFromMediaPlayer");

	Params::ElectraDataChannelRecorder_UseTimeFromMediaPlayer Parms{};

	Parms.InMediaPlayer = InMediaPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ElectraDataChannelRuntime.ElectraDataChannelTarget.SetTargetAlias
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InAlias                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AElectraDataChannelTarget::SetTargetAlias(const class FString& InAlias)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectraDataChannelTarget", "SetTargetAlias");

	Params::ElectraDataChannelTarget_SetTargetAlias Parms{};

	Parms.InAlias = std::move(InAlias);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ElectraDataChannelRuntime.ElectraDataChannelTarget.GetTargetAlias
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AElectraDataChannelTarget::GetTargetAlias() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectraDataChannelTarget", "GetTargetAlias");

	Params::ElectraDataChannelTarget_GetTargetAlias Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

