#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LockerBuiltInEmoteWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass LockerBuiltInEmoteWidget.LockerBuiltInEmoteWidget_C
// 0x0030 (0x1470 - 0x1440)
class ULockerBuiltInEmoteWidget_C final : public UFortLockerBuiltInEmoteWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1440(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       WarningPulse;                                      // 0x1448(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetSwitcher*                        IconSwitcher;                                      // 0x1450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LockedFill;                                        // 0x1458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               LockedOvr;                                         // 0x1460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_LockerBuiltInEmoteWidget(int32 EntryPoint);
	void OnUpdateAccessRestrictionWarning(bool bShouldShow, EAthenaLockerInfoRestrictionWarning WarningType);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LockerBuiltInEmoteWidget_C">();
	}
	static class ULockerBuiltInEmoteWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULockerBuiltInEmoteWidget_C>();
	}
};
static_assert(alignof(ULockerBuiltInEmoteWidget_C) == 0x000010, "Wrong alignment on ULockerBuiltInEmoteWidget_C");
static_assert(sizeof(ULockerBuiltInEmoteWidget_C) == 0x001470, "Wrong size on ULockerBuiltInEmoteWidget_C");
static_assert(offsetof(ULockerBuiltInEmoteWidget_C, UberGraphFrame) == 0x001440, "Member 'ULockerBuiltInEmoteWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ULockerBuiltInEmoteWidget_C, WarningPulse) == 0x001448, "Member 'ULockerBuiltInEmoteWidget_C::WarningPulse' has a wrong offset!");
static_assert(offsetof(ULockerBuiltInEmoteWidget_C, IconSwitcher) == 0x001450, "Member 'ULockerBuiltInEmoteWidget_C::IconSwitcher' has a wrong offset!");
static_assert(offsetof(ULockerBuiltInEmoteWidget_C, LockedFill) == 0x001458, "Member 'ULockerBuiltInEmoteWidget_C::LockedFill' has a wrong offset!");
static_assert(offsetof(ULockerBuiltInEmoteWidget_C, LockedOvr) == 0x001460, "Member 'ULockerBuiltInEmoteWidget_C::LockedOvr' has a wrong offset!");

}

