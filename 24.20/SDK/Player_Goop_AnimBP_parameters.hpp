#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Player_Goop_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function Player_Goop_AnimBP.Player_Goop_AnimBP_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct Player_Goop_AnimBP_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Player_Goop_AnimBP_C_AnimGraph) == 0x000008, "Wrong alignment on Player_Goop_AnimBP_C_AnimGraph");
static_assert(sizeof(Player_Goop_AnimBP_C_AnimGraph) == 0x000010, "Wrong size on Player_Goop_AnimBP_C_AnimGraph");
static_assert(offsetof(Player_Goop_AnimBP_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'Player_Goop_AnimBP_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function Player_Goop_AnimBP.Player_Goop_AnimBP_C.ExecuteUbergraph_Player_Goop_AnimBP
// 0x0004 (0x0004 - 0x0000)
struct Player_Goop_AnimBP_C_ExecuteUbergraph_Player_Goop_AnimBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Player_Goop_AnimBP_C_ExecuteUbergraph_Player_Goop_AnimBP) == 0x000004, "Wrong alignment on Player_Goop_AnimBP_C_ExecuteUbergraph_Player_Goop_AnimBP");
static_assert(sizeof(Player_Goop_AnimBP_C_ExecuteUbergraph_Player_Goop_AnimBP) == 0x000004, "Wrong size on Player_Goop_AnimBP_C_ExecuteUbergraph_Player_Goop_AnimBP");
static_assert(offsetof(Player_Goop_AnimBP_C_ExecuteUbergraph_Player_Goop_AnimBP, EntryPoint) == 0x000000, "Member 'Player_Goop_AnimBP_C_ExecuteUbergraph_Player_Goop_AnimBP::EntryPoint' has a wrong offset!");

// Function Player_Goop_AnimBP.Player_Goop_AnimBP_C.ItemAimOffset
// 0x0048 (0x0048 - 0x0000)
struct Player_Goop_AnimBP_C_ItemAimOffset final
{
public:
	struct FPoseLink                              InPose_AimOffset;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	double                                        AimOffsetAlpha;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Yaw;                                               // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Pitch;                                             // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPoseLink                              InPose_UpperLowerPreMeleeAO;                       // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              ItemAimOffset_0;                                   // 0x0038(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Player_Goop_AnimBP_C_ItemAimOffset) == 0x000008, "Wrong alignment on Player_Goop_AnimBP_C_ItemAimOffset");
static_assert(sizeof(Player_Goop_AnimBP_C_ItemAimOffset) == 0x000048, "Wrong size on Player_Goop_AnimBP_C_ItemAimOffset");
static_assert(offsetof(Player_Goop_AnimBP_C_ItemAimOffset, InPose_AimOffset) == 0x000000, "Member 'Player_Goop_AnimBP_C_ItemAimOffset::InPose_AimOffset' has a wrong offset!");
static_assert(offsetof(Player_Goop_AnimBP_C_ItemAimOffset, AimOffsetAlpha) == 0x000010, "Member 'Player_Goop_AnimBP_C_ItemAimOffset::AimOffsetAlpha' has a wrong offset!");
static_assert(offsetof(Player_Goop_AnimBP_C_ItemAimOffset, Yaw) == 0x000018, "Member 'Player_Goop_AnimBP_C_ItemAimOffset::Yaw' has a wrong offset!");
static_assert(offsetof(Player_Goop_AnimBP_C_ItemAimOffset, Pitch) == 0x000020, "Member 'Player_Goop_AnimBP_C_ItemAimOffset::Pitch' has a wrong offset!");
static_assert(offsetof(Player_Goop_AnimBP_C_ItemAimOffset, InPose_UpperLowerPreMeleeAO) == 0x000028, "Member 'Player_Goop_AnimBP_C_ItemAimOffset::InPose_UpperLowerPreMeleeAO' has a wrong offset!");
static_assert(offsetof(Player_Goop_AnimBP_C_ItemAimOffset, ItemAimOffset_0) == 0x000038, "Member 'Player_Goop_AnimBP_C_ItemAimOffset::ItemAimOffset_0' has a wrong offset!");

// Function Player_Goop_AnimBP.Player_Goop_AnimBP_C.ItemFallAdditive
// 0x0010 (0x0010 - 0x0000)
struct Player_Goop_AnimBP_C_ItemFallAdditive final
{
public:
	struct FPoseLink                              ItemFallAdditive_0;                                // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Player_Goop_AnimBP_C_ItemFallAdditive) == 0x000008, "Wrong alignment on Player_Goop_AnimBP_C_ItemFallAdditive");
static_assert(sizeof(Player_Goop_AnimBP_C_ItemFallAdditive) == 0x000010, "Wrong size on Player_Goop_AnimBP_C_ItemFallAdditive");
static_assert(offsetof(Player_Goop_AnimBP_C_ItemFallAdditive, ItemFallAdditive_0) == 0x000000, "Member 'Player_Goop_AnimBP_C_ItemFallAdditive::ItemFallAdditive_0' has a wrong offset!");

// Function Player_Goop_AnimBP.Player_Goop_AnimBP_C.ItemFallLandAdditive
// 0x0010 (0x0010 - 0x0000)
struct Player_Goop_AnimBP_C_ItemFallLandAdditive final
{
public:
	struct FPoseLink                              ItemFallLandAdditive_0;                            // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Player_Goop_AnimBP_C_ItemFallLandAdditive) == 0x000008, "Wrong alignment on Player_Goop_AnimBP_C_ItemFallLandAdditive");
static_assert(sizeof(Player_Goop_AnimBP_C_ItemFallLandAdditive) == 0x000010, "Wrong size on Player_Goop_AnimBP_C_ItemFallLandAdditive");
static_assert(offsetof(Player_Goop_AnimBP_C_ItemFallLandAdditive, ItemFallLandAdditive_0) == 0x000000, "Member 'Player_Goop_AnimBP_C_ItemFallLandAdditive::ItemFallLandAdditive_0' has a wrong offset!");

// Function Player_Goop_AnimBP.Player_Goop_AnimBP_C.ItemFullBodyOverride
// 0x0020 (0x0020 - 0x0000)
struct Player_Goop_AnimBP_C_ItemFullBodyOverride final
{
public:
	struct FPoseLink                              InPoseFullBody;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              ItemFullBodyOverride_0;                            // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Player_Goop_AnimBP_C_ItemFullBodyOverride) == 0x000008, "Wrong alignment on Player_Goop_AnimBP_C_ItemFullBodyOverride");
static_assert(sizeof(Player_Goop_AnimBP_C_ItemFullBodyOverride) == 0x000020, "Wrong size on Player_Goop_AnimBP_C_ItemFullBodyOverride");
static_assert(offsetof(Player_Goop_AnimBP_C_ItemFullBodyOverride, InPoseFullBody) == 0x000000, "Member 'Player_Goop_AnimBP_C_ItemFullBodyOverride::InPoseFullBody' has a wrong offset!");
static_assert(offsetof(Player_Goop_AnimBP_C_ItemFullBodyOverride, ItemFullBodyOverride_0) == 0x000010, "Member 'Player_Goop_AnimBP_C_ItemFullBodyOverride::ItemFullBodyOverride_0' has a wrong offset!");

// Function Player_Goop_AnimBP.Player_Goop_AnimBP_C.ItemIdleAdditive
// 0x0020 (0x0020 - 0x0000)
struct Player_Goop_AnimBP_C_ItemIdleAdditive final
{
public:
	struct FPoseLink                              InPoseIdleAdditive;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              ItemIdleAdditive_0;                                // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Player_Goop_AnimBP_C_ItemIdleAdditive) == 0x000008, "Wrong alignment on Player_Goop_AnimBP_C_ItemIdleAdditive");
static_assert(sizeof(Player_Goop_AnimBP_C_ItemIdleAdditive) == 0x000020, "Wrong size on Player_Goop_AnimBP_C_ItemIdleAdditive");
static_assert(offsetof(Player_Goop_AnimBP_C_ItemIdleAdditive, InPoseIdleAdditive) == 0x000000, "Member 'Player_Goop_AnimBP_C_ItemIdleAdditive::InPoseIdleAdditive' has a wrong offset!");
static_assert(offsetof(Player_Goop_AnimBP_C_ItemIdleAdditive, ItemIdleAdditive_0) == 0x000010, "Member 'Player_Goop_AnimBP_C_ItemIdleAdditive::ItemIdleAdditive_0' has a wrong offset!");

// Function Player_Goop_AnimBP.Player_Goop_AnimBP_C.ItemJetPackJumpAdditive
// 0x0010 (0x0010 - 0x0000)
struct Player_Goop_AnimBP_C_ItemJetPackJumpAdditive final
{
public:
	struct FPoseLink                              ItemJetPackJumpAdditive_0;                         // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Player_Goop_AnimBP_C_ItemJetPackJumpAdditive) == 0x000008, "Wrong alignment on Player_Goop_AnimBP_C_ItemJetPackJumpAdditive");
static_assert(sizeof(Player_Goop_AnimBP_C_ItemJetPackJumpAdditive) == 0x000010, "Wrong size on Player_Goop_AnimBP_C_ItemJetPackJumpAdditive");
static_assert(offsetof(Player_Goop_AnimBP_C_ItemJetPackJumpAdditive, ItemJetPackJumpAdditive_0) == 0x000000, "Member 'Player_Goop_AnimBP_C_ItemJetPackJumpAdditive::ItemJetPackJumpAdditive_0' has a wrong offset!");

// Function Player_Goop_AnimBP.Player_Goop_AnimBP_C.ItemJetPackStartAdditive
// 0x0010 (0x0010 - 0x0000)
struct Player_Goop_AnimBP_C_ItemJetPackStartAdditive final
{
public:
	struct FPoseLink                              ItemJetPackStartAdditive_0;                        // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Player_Goop_AnimBP_C_ItemJetPackStartAdditive) == 0x000008, "Wrong alignment on Player_Goop_AnimBP_C_ItemJetPackStartAdditive");
static_assert(sizeof(Player_Goop_AnimBP_C_ItemJetPackStartAdditive) == 0x000010, "Wrong size on Player_Goop_AnimBP_C_ItemJetPackStartAdditive");
static_assert(offsetof(Player_Goop_AnimBP_C_ItemJetPackStartAdditive, ItemJetPackStartAdditive_0) == 0x000000, "Member 'Player_Goop_AnimBP_C_ItemJetPackStartAdditive::ItemJetPackStartAdditive_0' has a wrong offset!");

// Function Player_Goop_AnimBP.Player_Goop_AnimBP_C.ItemJumpLoopAdditive
// 0x0010 (0x0010 - 0x0000)
struct Player_Goop_AnimBP_C_ItemJumpLoopAdditive final
{
public:
	struct FPoseLink                              ItemJumpLoopAdditive_0;                            // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Player_Goop_AnimBP_C_ItemJumpLoopAdditive) == 0x000008, "Wrong alignment on Player_Goop_AnimBP_C_ItemJumpLoopAdditive");
static_assert(sizeof(Player_Goop_AnimBP_C_ItemJumpLoopAdditive) == 0x000010, "Wrong size on Player_Goop_AnimBP_C_ItemJumpLoopAdditive");
static_assert(offsetof(Player_Goop_AnimBP_C_ItemJumpLoopAdditive, ItemJumpLoopAdditive_0) == 0x000000, "Member 'Player_Goop_AnimBP_C_ItemJumpLoopAdditive::ItemJumpLoopAdditive_0' has a wrong offset!");

// Function Player_Goop_AnimBP.Player_Goop_AnimBP_C.ItemJumpUpAdditive
// 0x0010 (0x0010 - 0x0000)
struct Player_Goop_AnimBP_C_ItemJumpUpAdditive final
{
public:
	struct FPoseLink                              ItemJumpUpAdditive_0;                              // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Player_Goop_AnimBP_C_ItemJumpUpAdditive) == 0x000008, "Wrong alignment on Player_Goop_AnimBP_C_ItemJumpUpAdditive");
static_assert(sizeof(Player_Goop_AnimBP_C_ItemJumpUpAdditive) == 0x000010, "Wrong size on Player_Goop_AnimBP_C_ItemJumpUpAdditive");
static_assert(offsetof(Player_Goop_AnimBP_C_ItemJumpUpAdditive, ItemJumpUpAdditive_0) == 0x000000, "Member 'Player_Goop_AnimBP_C_ItemJumpUpAdditive::ItemJumpUpAdditive_0' has a wrong offset!");

// Function Player_Goop_AnimBP.Player_Goop_AnimBP_C.ItemLowerBodyMovement
// 0x0020 (0x0020 - 0x0000)
struct Player_Goop_AnimBP_C_ItemLowerBodyMovement final
{
public:
	struct FPoseLink                              InPoseLowerBodyMovement;                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              ItemLowerBodyMovement_0;                           // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Player_Goop_AnimBP_C_ItemLowerBodyMovement) == 0x000008, "Wrong alignment on Player_Goop_AnimBP_C_ItemLowerBodyMovement");
static_assert(sizeof(Player_Goop_AnimBP_C_ItemLowerBodyMovement) == 0x000020, "Wrong size on Player_Goop_AnimBP_C_ItemLowerBodyMovement");
static_assert(offsetof(Player_Goop_AnimBP_C_ItemLowerBodyMovement, InPoseLowerBodyMovement) == 0x000000, "Member 'Player_Goop_AnimBP_C_ItemLowerBodyMovement::InPoseLowerBodyMovement' has a wrong offset!");
static_assert(offsetof(Player_Goop_AnimBP_C_ItemLowerBodyMovement, ItemLowerBodyMovement_0) == 0x000010, "Member 'Player_Goop_AnimBP_C_ItemLowerBodyMovement::ItemLowerBodyMovement_0' has a wrong offset!");

// Function Player_Goop_AnimBP.Player_Goop_AnimBP_C.ItemPreIK
// 0x0020 (0x0020 - 0x0000)
struct Player_Goop_AnimBP_C_ItemPreIK final
{
public:
	struct FPoseLink                              InPose_PreIK;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              ItemPreIK_0;                                       // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Player_Goop_AnimBP_C_ItemPreIK) == 0x000008, "Wrong alignment on Player_Goop_AnimBP_C_ItemPreIK");
static_assert(sizeof(Player_Goop_AnimBP_C_ItemPreIK) == 0x000020, "Wrong size on Player_Goop_AnimBP_C_ItemPreIK");
static_assert(offsetof(Player_Goop_AnimBP_C_ItemPreIK, InPose_PreIK) == 0x000000, "Member 'Player_Goop_AnimBP_C_ItemPreIK::InPose_PreIK' has a wrong offset!");
static_assert(offsetof(Player_Goop_AnimBP_C_ItemPreIK, ItemPreIK_0) == 0x000010, "Member 'Player_Goop_AnimBP_C_ItemPreIK::ItemPreIK_0' has a wrong offset!");

// Function Player_Goop_AnimBP.Player_Goop_AnimBP_C.ItemRelaxedEntry
// 0x0020 (0x0020 - 0x0000)
struct Player_Goop_AnimBP_C_ItemRelaxedEntry final
{
public:
	struct FPoseLink                              InPoseRelaxedEntry;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              ItemRelaxedEntry_0;                                // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Player_Goop_AnimBP_C_ItemRelaxedEntry) == 0x000008, "Wrong alignment on Player_Goop_AnimBP_C_ItemRelaxedEntry");
static_assert(sizeof(Player_Goop_AnimBP_C_ItemRelaxedEntry) == 0x000020, "Wrong size on Player_Goop_AnimBP_C_ItemRelaxedEntry");
static_assert(offsetof(Player_Goop_AnimBP_C_ItemRelaxedEntry, InPoseRelaxedEntry) == 0x000000, "Member 'Player_Goop_AnimBP_C_ItemRelaxedEntry::InPoseRelaxedEntry' has a wrong offset!");
static_assert(offsetof(Player_Goop_AnimBP_C_ItemRelaxedEntry, ItemRelaxedEntry_0) == 0x000010, "Member 'Player_Goop_AnimBP_C_ItemRelaxedEntry::ItemRelaxedEntry_0' has a wrong offset!");

// Function Player_Goop_AnimBP.Player_Goop_AnimBP_C.ItemSkeletalControl
// 0x0020 (0x0020 - 0x0000)
struct Player_Goop_AnimBP_C_ItemSkeletalControl final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              ItemSkeletalControl_0;                             // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Player_Goop_AnimBP_C_ItemSkeletalControl) == 0x000008, "Wrong alignment on Player_Goop_AnimBP_C_ItemSkeletalControl");
static_assert(sizeof(Player_Goop_AnimBP_C_ItemSkeletalControl) == 0x000020, "Wrong size on Player_Goop_AnimBP_C_ItemSkeletalControl");
static_assert(offsetof(Player_Goop_AnimBP_C_ItemSkeletalControl, InPose) == 0x000000, "Member 'Player_Goop_AnimBP_C_ItemSkeletalControl::InPose' has a wrong offset!");
static_assert(offsetof(Player_Goop_AnimBP_C_ItemSkeletalControl, ItemSkeletalControl_0) == 0x000010, "Member 'Player_Goop_AnimBP_C_ItemSkeletalControl::ItemSkeletalControl_0' has a wrong offset!");

// Function Player_Goop_AnimBP.Player_Goop_AnimBP_C.ItemSwimJumpFallLoop
// 0x0010 (0x0010 - 0x0000)
struct Player_Goop_AnimBP_C_ItemSwimJumpFallLoop final
{
public:
	struct FPoseLink                              ItemSwimJumpFallLoop_0;                            // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Player_Goop_AnimBP_C_ItemSwimJumpFallLoop) == 0x000008, "Wrong alignment on Player_Goop_AnimBP_C_ItemSwimJumpFallLoop");
static_assert(sizeof(Player_Goop_AnimBP_C_ItemSwimJumpFallLoop) == 0x000010, "Wrong size on Player_Goop_AnimBP_C_ItemSwimJumpFallLoop");
static_assert(offsetof(Player_Goop_AnimBP_C_ItemSwimJumpFallLoop, ItemSwimJumpFallLoop_0) == 0x000000, "Member 'Player_Goop_AnimBP_C_ItemSwimJumpFallLoop::ItemSwimJumpFallLoop_0' has a wrong offset!");

// Function Player_Goop_AnimBP.Player_Goop_AnimBP_C.ItemSwimJumpStart
// 0x0010 (0x0010 - 0x0000)
struct Player_Goop_AnimBP_C_ItemSwimJumpStart final
{
public:
	struct FPoseLink                              ItemSwimJumpStart_0;                               // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Player_Goop_AnimBP_C_ItemSwimJumpStart) == 0x000008, "Wrong alignment on Player_Goop_AnimBP_C_ItemSwimJumpStart");
static_assert(sizeof(Player_Goop_AnimBP_C_ItemSwimJumpStart) == 0x000010, "Wrong size on Player_Goop_AnimBP_C_ItemSwimJumpStart");
static_assert(offsetof(Player_Goop_AnimBP_C_ItemSwimJumpStart, ItemSwimJumpStart_0) == 0x000000, "Member 'Player_Goop_AnimBP_C_ItemSwimJumpStart::ItemSwimJumpStart_0' has a wrong offset!");

// Function Player_Goop_AnimBP.Player_Goop_AnimBP_C.ItemSwimJumpStartLoop
// 0x0010 (0x0010 - 0x0000)
struct Player_Goop_AnimBP_C_ItemSwimJumpStartLoop final
{
public:
	struct FPoseLink                              ItemSwimJumpStartLoop_0;                           // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Player_Goop_AnimBP_C_ItemSwimJumpStartLoop) == 0x000008, "Wrong alignment on Player_Goop_AnimBP_C_ItemSwimJumpStartLoop");
static_assert(sizeof(Player_Goop_AnimBP_C_ItemSwimJumpStartLoop) == 0x000010, "Wrong size on Player_Goop_AnimBP_C_ItemSwimJumpStartLoop");
static_assert(offsetof(Player_Goop_AnimBP_C_ItemSwimJumpStartLoop, ItemSwimJumpStartLoop_0) == 0x000000, "Member 'Player_Goop_AnimBP_C_ItemSwimJumpStartLoop::ItemSwimJumpStartLoop_0' has a wrong offset!");

// Function Player_Goop_AnimBP.Player_Goop_AnimBP_C.ItemSwimJumpSurfaceEnd
// 0x0010 (0x0010 - 0x0000)
struct Player_Goop_AnimBP_C_ItemSwimJumpSurfaceEnd final
{
public:
	struct FPoseLink                              ItemSwimJumpSurfaceEnd_0;                          // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Player_Goop_AnimBP_C_ItemSwimJumpSurfaceEnd) == 0x000008, "Wrong alignment on Player_Goop_AnimBP_C_ItemSwimJumpSurfaceEnd");
static_assert(sizeof(Player_Goop_AnimBP_C_ItemSwimJumpSurfaceEnd) == 0x000010, "Wrong size on Player_Goop_AnimBP_C_ItemSwimJumpSurfaceEnd");
static_assert(offsetof(Player_Goop_AnimBP_C_ItemSwimJumpSurfaceEnd, ItemSwimJumpSurfaceEnd_0) == 0x000000, "Member 'Player_Goop_AnimBP_C_ItemSwimJumpSurfaceEnd::ItemSwimJumpSurfaceEnd_0' has a wrong offset!");

// Function Player_Goop_AnimBP.Player_Goop_AnimBP_C.ItemSwimJumpSurfaceLoop
// 0x0010 (0x0010 - 0x0000)
struct Player_Goop_AnimBP_C_ItemSwimJumpSurfaceLoop final
{
public:
	struct FPoseLink                              ItemSwimJumpSurfaceLoop_0;                         // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Player_Goop_AnimBP_C_ItemSwimJumpSurfaceLoop) == 0x000008, "Wrong alignment on Player_Goop_AnimBP_C_ItemSwimJumpSurfaceLoop");
static_assert(sizeof(Player_Goop_AnimBP_C_ItemSwimJumpSurfaceLoop) == 0x000010, "Wrong size on Player_Goop_AnimBP_C_ItemSwimJumpSurfaceLoop");
static_assert(offsetof(Player_Goop_AnimBP_C_ItemSwimJumpSurfaceLoop, ItemSwimJumpSurfaceLoop_0) == 0x000000, "Member 'Player_Goop_AnimBP_C_ItemSwimJumpSurfaceLoop::ItemSwimJumpSurfaceLoop_0' has a wrong offset!");

// Function Player_Goop_AnimBP.Player_Goop_AnimBP_C.ItemUpperBody
// 0x0280 (0x0280 - 0x0000)
struct Player_Goop_AnimBP_C_ItemUpperBody final
{
public:
	struct FPoseLink                              InPoseUpperBody;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FFortAnimInput_AdjustedAim             InputParam;                                        // 0x0010(0x025C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPoseLink                              ItemUpperBody_0;                                   // 0x0270(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Player_Goop_AnimBP_C_ItemUpperBody) == 0x000008, "Wrong alignment on Player_Goop_AnimBP_C_ItemUpperBody");
static_assert(sizeof(Player_Goop_AnimBP_C_ItemUpperBody) == 0x000280, "Wrong size on Player_Goop_AnimBP_C_ItemUpperBody");
static_assert(offsetof(Player_Goop_AnimBP_C_ItemUpperBody, InPoseUpperBody) == 0x000000, "Member 'Player_Goop_AnimBP_C_ItemUpperBody::InPoseUpperBody' has a wrong offset!");
static_assert(offsetof(Player_Goop_AnimBP_C_ItemUpperBody, InputParam) == 0x000010, "Member 'Player_Goop_AnimBP_C_ItemUpperBody::InputParam' has a wrong offset!");
static_assert(offsetof(Player_Goop_AnimBP_C_ItemUpperBody, ItemUpperBody_0) == 0x000270, "Member 'Player_Goop_AnimBP_C_ItemUpperBody::ItemUpperBody_0' has a wrong offset!");

// Function Player_Goop_AnimBP.Player_Goop_AnimBP_C.ItemZipLineStartAdditive
// 0x0010 (0x0010 - 0x0000)
struct Player_Goop_AnimBP_C_ItemZipLineStartAdditive final
{
public:
	struct FPoseLink                              ItemZipLineStartAdditive_0;                        // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Player_Goop_AnimBP_C_ItemZipLineStartAdditive) == 0x000008, "Wrong alignment on Player_Goop_AnimBP_C_ItemZipLineStartAdditive");
static_assert(sizeof(Player_Goop_AnimBP_C_ItemZipLineStartAdditive) == 0x000010, "Wrong size on Player_Goop_AnimBP_C_ItemZipLineStartAdditive");
static_assert(offsetof(Player_Goop_AnimBP_C_ItemZipLineStartAdditive, ItemZipLineStartAdditive_0) == 0x000000, "Member 'Player_Goop_AnimBP_C_ItemZipLineStartAdditive::ItemZipLineStartAdditive_0' has a wrong offset!");

}

