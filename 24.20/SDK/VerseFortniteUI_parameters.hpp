#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerseFortniteUI

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function VerseFortniteUI.VerseFortniteUIFrameworkButton_Base.ServerClick
// 0x0008 (0x0008 - 0x0000)
struct VerseFortniteUIFrameworkButton_Base_ServerClick final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VerseFortniteUIFrameworkButton_Base_ServerClick) == 0x000008, "Wrong alignment on VerseFortniteUIFrameworkButton_Base_ServerClick");
static_assert(sizeof(VerseFortniteUIFrameworkButton_Base_ServerClick) == 0x000008, "Wrong size on VerseFortniteUIFrameworkButton_Base_ServerClick");
static_assert(offsetof(VerseFortniteUIFrameworkButton_Base_ServerClick, PlayerController) == 0x000000, "Member 'VerseFortniteUIFrameworkButton_Base_ServerClick::PlayerController' has a wrong offset!");

// Function VerseFortniteUI.VerseFortniteUIFrameworkButton_Base.SetText
// 0x0018 (0x0018 - 0x0000)
struct VerseFortniteUIFrameworkButton_Base_SetText final
{
public:
	class FText                                   Text_0;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VerseFortniteUIFrameworkButton_Base_SetText) == 0x000008, "Wrong alignment on VerseFortniteUIFrameworkButton_Base_SetText");
static_assert(sizeof(VerseFortniteUIFrameworkButton_Base_SetText) == 0x000018, "Wrong size on VerseFortniteUIFrameworkButton_Base_SetText");
static_assert(offsetof(VerseFortniteUIFrameworkButton_Base_SetText, Text_0) == 0x000000, "Member 'VerseFortniteUIFrameworkButton_Base_SetText::Text_0' has a wrong offset!");

// Function VerseFortniteUI.VerseFortniteUIFrameworkButton_Base.GetText
// 0x0018 (0x0018 - 0x0000)
struct VerseFortniteUIFrameworkButton_Base_GetText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VerseFortniteUIFrameworkButton_Base_GetText) == 0x000008, "Wrong alignment on VerseFortniteUIFrameworkButton_Base_GetText");
static_assert(sizeof(VerseFortniteUIFrameworkButton_Base_GetText) == 0x000018, "Wrong size on VerseFortniteUIFrameworkButton_Base_GetText");
static_assert(offsetof(VerseFortniteUIFrameworkButton_Base_GetText, ReturnValue) == 0x000000, "Member 'VerseFortniteUIFrameworkButton_Base_GetText::ReturnValue' has a wrong offset!");

// Function VerseFortniteUI.VerseFortniteUIFrameworkText_Base.ExecuteServerTextCommitted
// 0x0020 (0x0020 - 0x0000)
struct VerseFortniteUIFrameworkText_Base_ExecuteServerTextCommitted final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	ETextCommit                                   InCommitMethod;                                    // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VerseFortniteUIFrameworkText_Base_ExecuteServerTextCommitted) == 0x000008, "Wrong alignment on VerseFortniteUIFrameworkText_Base_ExecuteServerTextCommitted");
static_assert(sizeof(VerseFortniteUIFrameworkText_Base_ExecuteServerTextCommitted) == 0x000020, "Wrong size on VerseFortniteUIFrameworkText_Base_ExecuteServerTextCommitted");
static_assert(offsetof(VerseFortniteUIFrameworkText_Base_ExecuteServerTextCommitted, InText) == 0x000000, "Member 'VerseFortniteUIFrameworkText_Base_ExecuteServerTextCommitted::InText' has a wrong offset!");
static_assert(offsetof(VerseFortniteUIFrameworkText_Base_ExecuteServerTextCommitted, InCommitMethod) == 0x000018, "Member 'VerseFortniteUIFrameworkText_Base_ExecuteServerTextCommitted::InCommitMethod' has a wrong offset!");

// Function VerseFortniteUI.VerseFortniteUIFrameworkText_Base.ServerTextCommitted
// 0x0020 (0x0020 - 0x0000)
struct VerseFortniteUIFrameworkText_Base_ServerTextCommitted final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   NewText;                                           // 0x0008(0x0018)(ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VerseFortniteUIFrameworkText_Base_ServerTextCommitted) == 0x000008, "Wrong alignment on VerseFortniteUIFrameworkText_Base_ServerTextCommitted");
static_assert(sizeof(VerseFortniteUIFrameworkText_Base_ServerTextCommitted) == 0x000020, "Wrong size on VerseFortniteUIFrameworkText_Base_ServerTextCommitted");
static_assert(offsetof(VerseFortniteUIFrameworkText_Base_ServerTextCommitted, PlayerController) == 0x000000, "Member 'VerseFortniteUIFrameworkText_Base_ServerTextCommitted::PlayerController' has a wrong offset!");
static_assert(offsetof(VerseFortniteUIFrameworkText_Base_ServerTextCommitted, NewText) == 0x000008, "Member 'VerseFortniteUIFrameworkText_Base_ServerTextCommitted::NewText' has a wrong offset!");

// Function VerseFortniteUI.VerseFortniteUIFrameworkSlider.ExecuteServerValueChanged
// 0x0008 (0x0008 - 0x0000)
struct VerseFortniteUIFrameworkSlider_ExecuteServerValueChanged final
{
public:
	float                                         InNewValue;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InValueID;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VerseFortniteUIFrameworkSlider_ExecuteServerValueChanged) == 0x000004, "Wrong alignment on VerseFortniteUIFrameworkSlider_ExecuteServerValueChanged");
static_assert(sizeof(VerseFortniteUIFrameworkSlider_ExecuteServerValueChanged) == 0x000008, "Wrong size on VerseFortniteUIFrameworkSlider_ExecuteServerValueChanged");
static_assert(offsetof(VerseFortniteUIFrameworkSlider_ExecuteServerValueChanged, InNewValue) == 0x000000, "Member 'VerseFortniteUIFrameworkSlider_ExecuteServerValueChanged::InNewValue' has a wrong offset!");
static_assert(offsetof(VerseFortniteUIFrameworkSlider_ExecuteServerValueChanged, InValueID) == 0x000004, "Member 'VerseFortniteUIFrameworkSlider_ExecuteServerValueChanged::InValueID' has a wrong offset!");

// Function VerseFortniteUI.VerseFortniteUIFrameworkSlider.HandleValueChanged
// 0x0004 (0x0004 - 0x0000)
struct VerseFortniteUIFrameworkSlider_HandleValueChanged final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VerseFortniteUIFrameworkSlider_HandleValueChanged) == 0x000004, "Wrong alignment on VerseFortniteUIFrameworkSlider_HandleValueChanged");
static_assert(sizeof(VerseFortniteUIFrameworkSlider_HandleValueChanged) == 0x000004, "Wrong size on VerseFortniteUIFrameworkSlider_HandleValueChanged");
static_assert(offsetof(VerseFortniteUIFrameworkSlider_HandleValueChanged, NewValue) == 0x000000, "Member 'VerseFortniteUIFrameworkSlider_HandleValueChanged::NewValue' has a wrong offset!");

// Function VerseFortniteUI.VerseFortniteUIFrameworkSlider.ServerValueChanged
// 0x0010 (0x0010 - 0x0000)
struct VerseFortniteUIFrameworkSlider_ServerValueChanged final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InNewValue;                                        // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InValueID;                                         // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VerseFortniteUIFrameworkSlider_ServerValueChanged) == 0x000008, "Wrong alignment on VerseFortniteUIFrameworkSlider_ServerValueChanged");
static_assert(sizeof(VerseFortniteUIFrameworkSlider_ServerValueChanged) == 0x000010, "Wrong size on VerseFortniteUIFrameworkSlider_ServerValueChanged");
static_assert(offsetof(VerseFortniteUIFrameworkSlider_ServerValueChanged, PlayerController) == 0x000000, "Member 'VerseFortniteUIFrameworkSlider_ServerValueChanged::PlayerController' has a wrong offset!");
static_assert(offsetof(VerseFortniteUIFrameworkSlider_ServerValueChanged, InNewValue) == 0x000008, "Member 'VerseFortniteUIFrameworkSlider_ServerValueChanged::InNewValue' has a wrong offset!");
static_assert(offsetof(VerseFortniteUIFrameworkSlider_ServerValueChanged, InValueID) == 0x00000C, "Member 'VerseFortniteUIFrameworkSlider_ServerValueChanged::InValueID' has a wrong offset!");

// Function VerseFortniteUI.VerseFortniteUIFrameworkSlider.SetMaxValue
// 0x0004 (0x0004 - 0x0000)
struct VerseFortniteUIFrameworkSlider_SetMaxValue final
{
public:
	float                                         InMaxValue;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VerseFortniteUIFrameworkSlider_SetMaxValue) == 0x000004, "Wrong alignment on VerseFortniteUIFrameworkSlider_SetMaxValue");
static_assert(sizeof(VerseFortniteUIFrameworkSlider_SetMaxValue) == 0x000004, "Wrong size on VerseFortniteUIFrameworkSlider_SetMaxValue");
static_assert(offsetof(VerseFortniteUIFrameworkSlider_SetMaxValue, InMaxValue) == 0x000000, "Member 'VerseFortniteUIFrameworkSlider_SetMaxValue::InMaxValue' has a wrong offset!");

// Function VerseFortniteUI.VerseFortniteUIFrameworkSlider.SetMinValue
// 0x0004 (0x0004 - 0x0000)
struct VerseFortniteUIFrameworkSlider_SetMinValue final
{
public:
	float                                         InMinValue;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VerseFortniteUIFrameworkSlider_SetMinValue) == 0x000004, "Wrong alignment on VerseFortniteUIFrameworkSlider_SetMinValue");
static_assert(sizeof(VerseFortniteUIFrameworkSlider_SetMinValue) == 0x000004, "Wrong size on VerseFortniteUIFrameworkSlider_SetMinValue");
static_assert(offsetof(VerseFortniteUIFrameworkSlider_SetMinValue, InMinValue) == 0x000000, "Member 'VerseFortniteUIFrameworkSlider_SetMinValue::InMinValue' has a wrong offset!");

// Function VerseFortniteUI.VerseFortniteUIFrameworkSlider.SetStepSize
// 0x0004 (0x0004 - 0x0000)
struct VerseFortniteUIFrameworkSlider_SetStepSize final
{
public:
	float                                         InMinValue;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VerseFortniteUIFrameworkSlider_SetStepSize) == 0x000004, "Wrong alignment on VerseFortniteUIFrameworkSlider_SetStepSize");
static_assert(sizeof(VerseFortniteUIFrameworkSlider_SetStepSize) == 0x000004, "Wrong size on VerseFortniteUIFrameworkSlider_SetStepSize");
static_assert(offsetof(VerseFortniteUIFrameworkSlider_SetStepSize, InMinValue) == 0x000000, "Member 'VerseFortniteUIFrameworkSlider_SetStepSize::InMinValue' has a wrong offset!");

// Function VerseFortniteUI.VerseFortniteUIFrameworkSlider.SetValue
// 0x0004 (0x0004 - 0x0000)
struct VerseFortniteUIFrameworkSlider_SetValue final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VerseFortniteUIFrameworkSlider_SetValue) == 0x000004, "Wrong alignment on VerseFortniteUIFrameworkSlider_SetValue");
static_assert(sizeof(VerseFortniteUIFrameworkSlider_SetValue) == 0x000004, "Wrong size on VerseFortniteUIFrameworkSlider_SetValue");
static_assert(offsetof(VerseFortniteUIFrameworkSlider_SetValue, InValue) == 0x000000, "Member 'VerseFortniteUIFrameworkSlider_SetValue::InValue' has a wrong offset!");

// Function VerseFortniteUI.VerseFortniteUIFrameworkSlider.GetMaxValue
// 0x0004 (0x0004 - 0x0000)
struct VerseFortniteUIFrameworkSlider_GetMaxValue final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VerseFortniteUIFrameworkSlider_GetMaxValue) == 0x000004, "Wrong alignment on VerseFortniteUIFrameworkSlider_GetMaxValue");
static_assert(sizeof(VerseFortniteUIFrameworkSlider_GetMaxValue) == 0x000004, "Wrong size on VerseFortniteUIFrameworkSlider_GetMaxValue");
static_assert(offsetof(VerseFortniteUIFrameworkSlider_GetMaxValue, ReturnValue) == 0x000000, "Member 'VerseFortniteUIFrameworkSlider_GetMaxValue::ReturnValue' has a wrong offset!");

// Function VerseFortniteUI.VerseFortniteUIFrameworkSlider.GetMinValue
// 0x0004 (0x0004 - 0x0000)
struct VerseFortniteUIFrameworkSlider_GetMinValue final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VerseFortniteUIFrameworkSlider_GetMinValue) == 0x000004, "Wrong alignment on VerseFortniteUIFrameworkSlider_GetMinValue");
static_assert(sizeof(VerseFortniteUIFrameworkSlider_GetMinValue) == 0x000004, "Wrong size on VerseFortniteUIFrameworkSlider_GetMinValue");
static_assert(offsetof(VerseFortniteUIFrameworkSlider_GetMinValue, ReturnValue) == 0x000000, "Member 'VerseFortniteUIFrameworkSlider_GetMinValue::ReturnValue' has a wrong offset!");

// Function VerseFortniteUI.VerseFortniteUIFrameworkSlider.GetStepSize
// 0x0004 (0x0004 - 0x0000)
struct VerseFortniteUIFrameworkSlider_GetStepSize final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VerseFortniteUIFrameworkSlider_GetStepSize) == 0x000004, "Wrong alignment on VerseFortniteUIFrameworkSlider_GetStepSize");
static_assert(sizeof(VerseFortniteUIFrameworkSlider_GetStepSize) == 0x000004, "Wrong size on VerseFortniteUIFrameworkSlider_GetStepSize");
static_assert(offsetof(VerseFortniteUIFrameworkSlider_GetStepSize, ReturnValue) == 0x000000, "Member 'VerseFortniteUIFrameworkSlider_GetStepSize::ReturnValue' has a wrong offset!");

// Function VerseFortniteUI.VerseFortniteUIFrameworkSlider.GetValue
// 0x0004 (0x0004 - 0x0000)
struct VerseFortniteUIFrameworkSlider_GetValue final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VerseFortniteUIFrameworkSlider_GetValue) == 0x000004, "Wrong alignment on VerseFortniteUIFrameworkSlider_GetValue");
static_assert(sizeof(VerseFortniteUIFrameworkSlider_GetValue) == 0x000004, "Wrong size on VerseFortniteUIFrameworkSlider_GetValue");
static_assert(offsetof(VerseFortniteUIFrameworkSlider_GetValue, ReturnValue) == 0x000000, "Member 'VerseFortniteUIFrameworkSlider_GetValue::ReturnValue' has a wrong offset!");

}

