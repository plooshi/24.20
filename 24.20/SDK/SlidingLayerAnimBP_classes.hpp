#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SlidingLayerAnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlidingLayerAnimBP_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass SlidingLayerAnimBP.SlidingLayerAnimBP_C
// 0x1740 (0x1C10 - 0x04D0)
class USlidingLayerAnimBP_C final : public UFortSlidingLayerAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct SlidingLayerAnimBP::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x04D8(0x0040)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0518(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0520(0x0008)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_7;                   // 0x0528(0x00C0)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_6;                   // 0x05E8(0x00C0)()
	struct FAnimNode_Root                         AnimGraphNode_Root_6;                              // 0x06A8(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_5;                   // 0x06C8(0x00C0)()
	struct FAnimNode_Root                         AnimGraphNode_Root_5;                              // 0x0788(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_4;                   // 0x07A8(0x00C0)()
	struct FAnimNode_Root                         AnimGraphNode_Root_4;                              // 0x0868(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_3;                   // 0x0888(0x00C0)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_5;            // 0x0948(0x00D0)()
	struct FAnimNode_Root                         AnimGraphNode_Root_3;                              // 0x0A18(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_6;                  // 0x0A38(0x0070)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x0AA8(0x0048)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose;                        // 0x0AF0(0x0010)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_5;                  // 0x0B00(0x0070)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_4;            // 0x0B70(0x00D0)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x0C40(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_2;                   // 0x0C60(0x00C0)()
	struct FAnimNode_RotateRootBone               AnimGraphNode_RotateRootBone_1;                    // 0x0D20(0x00A8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0DC8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0DF0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0E18(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0E40(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0E68(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0E90(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0EB8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0EE0(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0F08(0x0048)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_3;            // 0x0F50(0x00D0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x1020(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_4;                  // 0x1068(0x0070)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_2;            // 0x10D8(0x00D0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x11A8(0x0070)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x1218(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x1260(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x1280(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x12F0(0x0020)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_1;            // 0x1310(0x00D0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x13E0(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x1428(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1498(0x0020)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive;              // 0x14B8(0x00D0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1588(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x15D0(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1640(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1660(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1728(0x0100)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1828(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x1870(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x1898(0x0028)()
	struct FAnimNode_RotateRootBone               AnimGraphNode_RotateRootBone;                      // 0x18C0(0x00A8)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x1968(0x00C0)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x1A28(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x1A48(0x00C0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1B08(0x0048)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x1B50(0x0020)()
	bool                                          IsKneeSliding;                                     // 0x1B70(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          b_KneeSlideNote_bTransition_FullBody_Sprinting;    // 0x1B71(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B72[0x6];                                     // 0x1B72(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               KneeSlideLowerBodyInitialRot_0;                    // 0x1B78(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               KneeSlideLowerBodyInitialRotSmooth_0;              // 0x1B90(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class AFortPlayerPawn*                        FortPlayerPawn_0;                                  // 0x1BA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UFortPlayerAnimInstance*                Fort_Player_Anim_Instance;                         // 0x1BB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Delta_Time_;                                       // 0x1BB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        KneeSlideLowerBodyYawOffset;                       // 0x1BC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        KneeSlideRootYawOffset_0;                          // 0x1BC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        VelocityAimYawDelta_0;                             // 0x1BD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        KneeSlideSlopeAngle_0;                             // 0x1BD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        KneeSlideSlopeYaw_0;                               // 0x1BE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        KneeSlideSlopeYawMinusRootRot_0;                   // 0x1BE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TransitionToKneeSlide;                             // 0x1BF0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BF1[0x7];                                     // 0x1BF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        KneeSlideForwardVectorVelocityDelta_0;             // 0x1BF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InitiatedSlideUpHill;                              // 0x1C00(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BypassEntry_0;                                     // 0x1C01(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C02[0x6];                                     // 0x1C02(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SpineTweakLean_0;                                  // 0x1C08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SlidingLayerAnimBP_AnimGraphNode_ApplyMeshSpaceAdditive_CA45D1154A0385BF8F15FBB40CA66AD6();
	void ExecuteUbergraph_SlidingLayerAnimBP(int32 EntryPoint);
	void MovementMode_AimOffset(const struct FPoseLink& InAimOffsetsPose, const struct FPoseLink& InSourcePosePreAimOffsets, struct FPoseLink* MovementMode_AimOffset_0);
	void MovementMode_FinalPoseOverride(const struct FPoseLink& InFinalPose, struct FPoseLink* MovementMode_FinalPoseOverride_0);
	void MovementMode_FullBodyOverride(const struct FPoseLink& InputPoseFullBody, struct FPoseLink* MovementMode_FullBodyOverride_0);
	void MovementMode_LocomotionAdditives(const struct FPoseLink& InLocomotionAdditivesPose, struct FPoseLink* MovementMode_LocomotionAdditives_0);
	void MovementMode_LowerBodyOverride(const struct FPoseLink& InLowerBodyPose, const struct FPoseLink& InSourcePose, struct FPoseLink* MovementMode_LowerBodyOverride_0);
	void MovementMode_SourcePose(const struct FPoseLink& InSourcePoseBase, struct FPoseLink* MovementMode_SourcePose_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SlidingLayerAnimBP_C">();
	}
	static class USlidingLayerAnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USlidingLayerAnimBP_C>();
	}
};
static_assert(alignof(USlidingLayerAnimBP_C) == 0x000010, "Wrong alignment on USlidingLayerAnimBP_C");
static_assert(sizeof(USlidingLayerAnimBP_C) == 0x001C10, "Wrong size on USlidingLayerAnimBP_C");
static_assert(offsetof(USlidingLayerAnimBP_C, UberGraphFrame) == 0x0004D0, "Member 'USlidingLayerAnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, __AnimBlueprintMutables) == 0x0004D8, "Member 'USlidingLayerAnimBP_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimBlueprintExtension_PropertyAccess) == 0x000518, "Member 'USlidingLayerAnimBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimBlueprintExtension_Base) == 0x000520, "Member 'USlidingLayerAnimBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_LinkedInputPose_7) == 0x000528, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_LinkedInputPose_7' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_LinkedInputPose_6) == 0x0005E8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_LinkedInputPose_6' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_Root_6) == 0x0006A8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_Root_6' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_LinkedInputPose_5) == 0x0006C8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_LinkedInputPose_5' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_Root_5) == 0x000788, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_Root_5' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_LinkedInputPose_4) == 0x0007A8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_LinkedInputPose_4' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_Root_4) == 0x000868, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_Root_4' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_LinkedInputPose_3) == 0x000888, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_LinkedInputPose_3' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_ApplyMeshSpaceAdditive_5) == 0x000948, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_ApplyMeshSpaceAdditive_5' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_Root_3) == 0x000A18, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_Root_3' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer_6) == 0x000A38, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer_6' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendListByBool_2) == 0x000AA8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_IdentityPose) == 0x000AF0, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_IdentityPose' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer_5) == 0x000B00, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer_5' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_ApplyMeshSpaceAdditive_4) == 0x000B70, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_ApplyMeshSpaceAdditive_4' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_Root_2) == 0x000C40, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_LinkedInputPose_2) == 0x000C60, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_LinkedInputPose_2' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_RotateRootBone_1) == 0x000D20, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_RotateRootBone_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_TransitionResult_7) == 0x000DC8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_TransitionResult_6) == 0x000DF0, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_TransitionResult_5) == 0x000E18, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_TransitionResult_4) == 0x000E40, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_TransitionResult_3) == 0x000E68, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_TransitionResult_2) == 0x000E90, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_TransitionResult_1) == 0x000EB8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_TransitionResult) == 0x000EE0, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendListByBool_1) == 0x000F08, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_ApplyMeshSpaceAdditive_3) == 0x000F50, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_ApplyMeshSpaceAdditive_3' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x001020, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer_4) == 0x001068, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer_4' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_ApplyMeshSpaceAdditive_2) == 0x0010D8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_ApplyMeshSpaceAdditive_2' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer_3) == 0x0011A8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x001218, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_StateResult_3) == 0x001260, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer_2) == 0x001280, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_StateResult_2) == 0x0012F0, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_ApplyMeshSpaceAdditive_1) == 0x001310, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_ApplyMeshSpaceAdditive_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x0013E0, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer_1) == 0x001428, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_StateResult_1) == 0x001498, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_ApplyMeshSpaceAdditive) == 0x0014B8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_ApplyMeshSpaceAdditive' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x001588, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer) == 0x0015D0, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_StateResult) == 0x001640, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_StateMachine) == 0x001660, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_SaveCachedPose) == 0x001728, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendListByBool) == 0x001828, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_UseCachedPose_1) == 0x001870, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_UseCachedPose) == 0x001898, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_RotateRootBone) == 0x0018C0, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_RotateRootBone' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_LinkedInputPose_1) == 0x001968, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_Root_1) == 0x001A28, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_LinkedInputPose) == 0x001A48, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_SequencePlayer) == 0x001B08, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_Root) == 0x001B50, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, IsKneeSliding) == 0x001B70, "Member 'USlidingLayerAnimBP_C::IsKneeSliding' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, b_KneeSlideNote_bTransition_FullBody_Sprinting) == 0x001B71, "Member 'USlidingLayerAnimBP_C::b_KneeSlideNote_bTransition_FullBody_Sprinting' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, KneeSlideLowerBodyInitialRot_0) == 0x001B78, "Member 'USlidingLayerAnimBP_C::KneeSlideLowerBodyInitialRot_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, KneeSlideLowerBodyInitialRotSmooth_0) == 0x001B90, "Member 'USlidingLayerAnimBP_C::KneeSlideLowerBodyInitialRotSmooth_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, FortPlayerPawn_0) == 0x001BA8, "Member 'USlidingLayerAnimBP_C::FortPlayerPawn_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, Fort_Player_Anim_Instance) == 0x001BB0, "Member 'USlidingLayerAnimBP_C::Fort_Player_Anim_Instance' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, Delta_Time_) == 0x001BB8, "Member 'USlidingLayerAnimBP_C::Delta_Time_' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, KneeSlideLowerBodyYawOffset) == 0x001BC0, "Member 'USlidingLayerAnimBP_C::KneeSlideLowerBodyYawOffset' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, KneeSlideRootYawOffset_0) == 0x001BC8, "Member 'USlidingLayerAnimBP_C::KneeSlideRootYawOffset_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, VelocityAimYawDelta_0) == 0x001BD0, "Member 'USlidingLayerAnimBP_C::VelocityAimYawDelta_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, KneeSlideSlopeAngle_0) == 0x001BD8, "Member 'USlidingLayerAnimBP_C::KneeSlideSlopeAngle_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, KneeSlideSlopeYaw_0) == 0x001BE0, "Member 'USlidingLayerAnimBP_C::KneeSlideSlopeYaw_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, KneeSlideSlopeYawMinusRootRot_0) == 0x001BE8, "Member 'USlidingLayerAnimBP_C::KneeSlideSlopeYawMinusRootRot_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, TransitionToKneeSlide) == 0x001BF0, "Member 'USlidingLayerAnimBP_C::TransitionToKneeSlide' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, KneeSlideForwardVectorVelocityDelta_0) == 0x001BF8, "Member 'USlidingLayerAnimBP_C::KneeSlideForwardVectorVelocityDelta_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, InitiatedSlideUpHill) == 0x001C00, "Member 'USlidingLayerAnimBP_C::InitiatedSlideUpHill' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, BypassEntry_0) == 0x001C01, "Member 'USlidingLayerAnimBP_C::BypassEntry_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, SpineTweakLean_0) == 0x001C08, "Member 'USlidingLayerAnimBP_C::SpineTweakLean_0' has a wrong offset!");

}

