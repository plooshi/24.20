#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_Player_Slide

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Athena_Player_Slide.GA_Athena_Player_Slide_C
// 0x0E58 (0x1980 - 0x0B28)
class UGA_Athena_Player_Slide_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B28(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TSubclassOf<class UCameraShakeBase>           CameraShake;                                       // 0x0B30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UFortCameraMode>            Camera_Mode_Class;                                 // 0x0B38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FGameplayTag                           CameraShakeGCNL;                                   // 0x0B40(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B44[0x4];                                      // 0x0B44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCameraModifier>            CameraModifier;                                    // 0x0B48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	double                                        MinAngleForMomentum;                               // 0x0B50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SpeedlinesCue;                                     // 0x0B58(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5C[0x4];                                      // 0x0B5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCameraShakeBase>           StartSlideCameraShake;                             // 0x0B60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	double                                        AdditionalLaunchVelocityOffRamp;                   // 0x0B68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlidingControlParams                  DefaultSlidingParams;                              // 0x0B70(0x0698)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlidingControlParams                  PostDashGroundSlidingParams;                       // 0x1208(0x0698)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        LevelGroundSlideDuration;                          // 0x18A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           EndLevelGroundSlideTimerHandle;                    // 0x18A8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         DashDuration;                                      // 0x18B0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           CameraFXDelay;                                     // 0x18D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           PlayerGameplayCue;                                 // 0x18E0(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18E4[0x4];                                     // 0x18E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CameraShakeDelay;                                  // 0x18E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         MinAdditionalMomentum;                             // 0x18F0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         MaxAdditionalMomentum;                             // 0x1918(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         MinAngleForAdditionalMomentum;                     // 0x1940(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Prev_FallingGracePeriodState;                      // 0x1968(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1969[0x7];                                     // 0x1969(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraModifier*                        SlideCameraModifier;                               // 0x1970(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           AddMomentumTimerHandle;                            // 0x1978(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AddMomentum();
	void CameraFX();
	void EndAbilityClientSide();
	void EndAbilityServerSide();
	void EndLevelGroundSlide();
	void ExecuteUbergraph_GA_Athena_Player_Slide(int32 EntryPoint);
	void ForceRemoveSlideGC();
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void K2_OnEndAbility(bool bWasCancelled);
	void OnFinishedCharacterCustomization_Event_0(class AFortPlayerPawn* Pawn);

	bool BuildDataRegistryResolverScope(TArray<class FName>* InOutResolverScopes, int32* InOutPriority) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Athena_Player_Slide_C">();
	}
	static class UGA_Athena_Player_Slide_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Athena_Player_Slide_C>();
	}
};
static_assert(alignof(UGA_Athena_Player_Slide_C) == 0x000008, "Wrong alignment on UGA_Athena_Player_Slide_C");
static_assert(sizeof(UGA_Athena_Player_Slide_C) == 0x001980, "Wrong size on UGA_Athena_Player_Slide_C");
static_assert(offsetof(UGA_Athena_Player_Slide_C, UberGraphFrame) == 0x000B28, "Member 'UGA_Athena_Player_Slide_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, CameraShake) == 0x000B30, "Member 'UGA_Athena_Player_Slide_C::CameraShake' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, Camera_Mode_Class) == 0x000B38, "Member 'UGA_Athena_Player_Slide_C::Camera_Mode_Class' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, CameraShakeGCNL) == 0x000B40, "Member 'UGA_Athena_Player_Slide_C::CameraShakeGCNL' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, CameraModifier) == 0x000B48, "Member 'UGA_Athena_Player_Slide_C::CameraModifier' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, MinAngleForMomentum) == 0x000B50, "Member 'UGA_Athena_Player_Slide_C::MinAngleForMomentum' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, SpeedlinesCue) == 0x000B58, "Member 'UGA_Athena_Player_Slide_C::SpeedlinesCue' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, StartSlideCameraShake) == 0x000B60, "Member 'UGA_Athena_Player_Slide_C::StartSlideCameraShake' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, AdditionalLaunchVelocityOffRamp) == 0x000B68, "Member 'UGA_Athena_Player_Slide_C::AdditionalLaunchVelocityOffRamp' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, DefaultSlidingParams) == 0x000B70, "Member 'UGA_Athena_Player_Slide_C::DefaultSlidingParams' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, PostDashGroundSlidingParams) == 0x001208, "Member 'UGA_Athena_Player_Slide_C::PostDashGroundSlidingParams' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, LevelGroundSlideDuration) == 0x0018A0, "Member 'UGA_Athena_Player_Slide_C::LevelGroundSlideDuration' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, EndLevelGroundSlideTimerHandle) == 0x0018A8, "Member 'UGA_Athena_Player_Slide_C::EndLevelGroundSlideTimerHandle' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, DashDuration) == 0x0018B0, "Member 'UGA_Athena_Player_Slide_C::DashDuration' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, CameraFXDelay) == 0x0018D8, "Member 'UGA_Athena_Player_Slide_C::CameraFXDelay' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, PlayerGameplayCue) == 0x0018E0, "Member 'UGA_Athena_Player_Slide_C::PlayerGameplayCue' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, CameraShakeDelay) == 0x0018E8, "Member 'UGA_Athena_Player_Slide_C::CameraShakeDelay' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, MinAdditionalMomentum) == 0x0018F0, "Member 'UGA_Athena_Player_Slide_C::MinAdditionalMomentum' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, MaxAdditionalMomentum) == 0x001918, "Member 'UGA_Athena_Player_Slide_C::MaxAdditionalMomentum' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, MinAngleForAdditionalMomentum) == 0x001940, "Member 'UGA_Athena_Player_Slide_C::MinAngleForAdditionalMomentum' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, Prev_FallingGracePeriodState) == 0x001968, "Member 'UGA_Athena_Player_Slide_C::Prev_FallingGracePeriodState' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, SlideCameraModifier) == 0x001970, "Member 'UGA_Athena_Player_Slide_C::SlideCameraModifier' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, AddMomentumTimerHandle) == 0x001978, "Member 'UGA_Athena_Player_Slide_C::AddMomentumTimerHandle' has a wrong offset!");

}

