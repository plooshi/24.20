#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MatchmakingPortalUI

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function MatchmakingPortalUI.FortMatchmakingPortalModal.GetCodeTextFormat
// 0x0030 (0x0030 - 0x0000)
struct FortMatchmakingPortalModal_GetCodeTextFormat final
{
public:
	class FText                                   IslandCode;                                        // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0018(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMatchmakingPortalModal_GetCodeTextFormat) == 0x000008, "Wrong alignment on FortMatchmakingPortalModal_GetCodeTextFormat");
static_assert(sizeof(FortMatchmakingPortalModal_GetCodeTextFormat) == 0x000030, "Wrong size on FortMatchmakingPortalModal_GetCodeTextFormat");
static_assert(offsetof(FortMatchmakingPortalModal_GetCodeTextFormat, IslandCode) == 0x000000, "Member 'FortMatchmakingPortalModal_GetCodeTextFormat::IslandCode' has a wrong offset!");
static_assert(offsetof(FortMatchmakingPortalModal_GetCodeTextFormat, ReturnValue) == 0x000018, "Member 'FortMatchmakingPortalModal_GetCodeTextFormat::ReturnValue' has a wrong offset!");

// Function MatchmakingPortalUI.FortMatchmakingPortalModal.GetCreatorTextFormat
// 0x0030 (0x0030 - 0x0000)
struct FortMatchmakingPortalModal_GetCreatorTextFormat final
{
public:
	class FText                                   CreatorName;                                       // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0018(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMatchmakingPortalModal_GetCreatorTextFormat) == 0x000008, "Wrong alignment on FortMatchmakingPortalModal_GetCreatorTextFormat");
static_assert(sizeof(FortMatchmakingPortalModal_GetCreatorTextFormat) == 0x000030, "Wrong size on FortMatchmakingPortalModal_GetCreatorTextFormat");
static_assert(offsetof(FortMatchmakingPortalModal_GetCreatorTextFormat, CreatorName) == 0x000000, "Member 'FortMatchmakingPortalModal_GetCreatorTextFormat::CreatorName' has a wrong offset!");
static_assert(offsetof(FortMatchmakingPortalModal_GetCreatorTextFormat, ReturnValue) == 0x000018, "Member 'FortMatchmakingPortalModal_GetCreatorTextFormat::ReturnValue' has a wrong offset!");

// Function MatchmakingPortalUI.FortMatchmakingPortalModal.OnAdditionalContentUpdate
// 0x0020 (0x0020 - 0x0000)
struct FortMatchmakingPortalModal_OnAdditionalContentUpdate final
{
public:
	class FText                                   MatchmakingState;                                  // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         Progress;                                          // 0x0018(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowProgressBar;                                  // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortMatchmakingPortalModal_OnAdditionalContentUpdate) == 0x000008, "Wrong alignment on FortMatchmakingPortalModal_OnAdditionalContentUpdate");
static_assert(sizeof(FortMatchmakingPortalModal_OnAdditionalContentUpdate) == 0x000020, "Wrong size on FortMatchmakingPortalModal_OnAdditionalContentUpdate");
static_assert(offsetof(FortMatchmakingPortalModal_OnAdditionalContentUpdate, MatchmakingState) == 0x000000, "Member 'FortMatchmakingPortalModal_OnAdditionalContentUpdate::MatchmakingState' has a wrong offset!");
static_assert(offsetof(FortMatchmakingPortalModal_OnAdditionalContentUpdate, Progress) == 0x000018, "Member 'FortMatchmakingPortalModal_OnAdditionalContentUpdate::Progress' has a wrong offset!");
static_assert(offsetof(FortMatchmakingPortalModal_OnAdditionalContentUpdate, bShowProgressBar) == 0x00001C, "Member 'FortMatchmakingPortalModal_OnAdditionalContentUpdate::bShowProgressBar' has a wrong offset!");

// Function MatchmakingPortalUI.FortMatchmakingPortalModal.OnMatchmakingStarted
// 0x0018 (0x0018 - 0x0000)
struct FortMatchmakingPortalModal_OnMatchmakingStarted final
{
public:
	class FText                                   MatchmakingState;                                  // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMatchmakingPortalModal_OnMatchmakingStarted) == 0x000008, "Wrong alignment on FortMatchmakingPortalModal_OnMatchmakingStarted");
static_assert(sizeof(FortMatchmakingPortalModal_OnMatchmakingStarted) == 0x000018, "Wrong size on FortMatchmakingPortalModal_OnMatchmakingStarted");
static_assert(offsetof(FortMatchmakingPortalModal_OnMatchmakingStarted, MatchmakingState) == 0x000000, "Member 'FortMatchmakingPortalModal_OnMatchmakingStarted::MatchmakingState' has a wrong offset!");

// Function MatchmakingPortalUI.FortMatchmakingPortalModal.SetMatchmakingStateText
// 0x0018 (0x0018 - 0x0000)
struct FortMatchmakingPortalModal_SetMatchmakingStateText final
{
public:
	class FText                                   MatchmakingStateText;                              // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMatchmakingPortalModal_SetMatchmakingStateText) == 0x000008, "Wrong alignment on FortMatchmakingPortalModal_SetMatchmakingStateText");
static_assert(sizeof(FortMatchmakingPortalModal_SetMatchmakingStateText) == 0x000018, "Wrong size on FortMatchmakingPortalModal_SetMatchmakingStateText");
static_assert(offsetof(FortMatchmakingPortalModal_SetMatchmakingStateText, MatchmakingStateText) == 0x000000, "Member 'FortMatchmakingPortalModal_SetMatchmakingStateText::MatchmakingStateText' has a wrong offset!");

// Function MatchmakingPortalUI.FortMatchmakingPortalModal.GetContentWarningStrings
// 0x0010 (0x0010 - 0x0000)
struct FortMatchmakingPortalModal_GetContentWarningStrings final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMatchmakingPortalModal_GetContentWarningStrings) == 0x000008, "Wrong alignment on FortMatchmakingPortalModal_GetContentWarningStrings");
static_assert(sizeof(FortMatchmakingPortalModal_GetContentWarningStrings) == 0x000010, "Wrong size on FortMatchmakingPortalModal_GetContentWarningStrings");
static_assert(offsetof(FortMatchmakingPortalModal_GetContentWarningStrings, ReturnValue) == 0x000000, "Member 'FortMatchmakingPortalModal_GetContentWarningStrings::ReturnValue' has a wrong offset!");

// Function MatchmakingPortalUI.FortMatchmakingPortalModal.GetInvalidActivityReason
// 0x0001 (0x0001 - 0x0000)
struct FortMatchmakingPortalModal_GetInvalidActivityReason final
{
public:
	EFortInvalidActivityReason                    ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMatchmakingPortalModal_GetInvalidActivityReason) == 0x000001, "Wrong alignment on FortMatchmakingPortalModal_GetInvalidActivityReason");
static_assert(sizeof(FortMatchmakingPortalModal_GetInvalidActivityReason) == 0x000001, "Wrong size on FortMatchmakingPortalModal_GetInvalidActivityReason");
static_assert(offsetof(FortMatchmakingPortalModal_GetInvalidActivityReason, ReturnValue) == 0x000000, "Member 'FortMatchmakingPortalModal_GetInvalidActivityReason::ReturnValue' has a wrong offset!");

// Function MatchmakingPortalUI.FortMatchmakingPortalModal.IsDownloadRequired
// 0x0001 (0x0001 - 0x0000)
struct FortMatchmakingPortalModal_IsDownloadRequired final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMatchmakingPortalModal_IsDownloadRequired) == 0x000001, "Wrong alignment on FortMatchmakingPortalModal_IsDownloadRequired");
static_assert(sizeof(FortMatchmakingPortalModal_IsDownloadRequired) == 0x000001, "Wrong size on FortMatchmakingPortalModal_IsDownloadRequired");
static_assert(offsetof(FortMatchmakingPortalModal_IsDownloadRequired, ReturnValue) == 0x000000, "Member 'FortMatchmakingPortalModal_IsDownloadRequired::ReturnValue' has a wrong offset!");

// Function MatchmakingPortalUI.FortMatchmakingPortalPopup.GetIslandData
// 0x0070 (0x0070 - 0x0000)
struct FortMatchmakingPortalPopup_GetIslandData final
{
public:
	struct FMatchmakingPortalPopupData            OutIslandData;                                     // 0x0000(0x0060)(Parm, OutParm, NativeAccessSpecifierPublic)
	class UHeaderDescriptionHUDComponent*         HUDComponent;                                      // 0x0060(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0068(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortMatchmakingPortalPopup_GetIslandData) == 0x000008, "Wrong alignment on FortMatchmakingPortalPopup_GetIslandData");
static_assert(sizeof(FortMatchmakingPortalPopup_GetIslandData) == 0x000070, "Wrong size on FortMatchmakingPortalPopup_GetIslandData");
static_assert(offsetof(FortMatchmakingPortalPopup_GetIslandData, OutIslandData) == 0x000000, "Member 'FortMatchmakingPortalPopup_GetIslandData::OutIslandData' has a wrong offset!");
static_assert(offsetof(FortMatchmakingPortalPopup_GetIslandData, HUDComponent) == 0x000060, "Member 'FortMatchmakingPortalPopup_GetIslandData::HUDComponent' has a wrong offset!");
static_assert(offsetof(FortMatchmakingPortalPopup_GetIslandData, ReturnValue) == 0x000068, "Member 'FortMatchmakingPortalPopup_GetIslandData::ReturnValue' has a wrong offset!");

// Function MatchmakingPortalUI.FortMatchmakingPortalPopup.HandleHUDShow
// 0x0002 (0x0002 - 0x0000)
struct FortMatchmakingPortalPopup_HandleHUDShow final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldAnimate;                                    // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMatchmakingPortalPopup_HandleHUDShow) == 0x000001, "Wrong alignment on FortMatchmakingPortalPopup_HandleHUDShow");
static_assert(sizeof(FortMatchmakingPortalPopup_HandleHUDShow) == 0x000002, "Wrong size on FortMatchmakingPortalPopup_HandleHUDShow");
static_assert(offsetof(FortMatchmakingPortalPopup_HandleHUDShow, bShow) == 0x000000, "Member 'FortMatchmakingPortalPopup_HandleHUDShow::bShow' has a wrong offset!");
static_assert(offsetof(FortMatchmakingPortalPopup_HandleHUDShow, bShouldAnimate) == 0x000001, "Member 'FortMatchmakingPortalPopup_HandleHUDShow::bShouldAnimate' has a wrong offset!");

// Function MatchmakingPortalUI.FortMatchmakingPortalPopup.HandleLoadScreenChanged
// 0x0028 (0x0028 - 0x0000)
struct FortMatchmakingPortalPopup_HandleLoadScreenChanged final
{
public:
	class AFortPlayerControllerAthena*            PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLoadScreenEnabled;                                // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   HUDReason;                                         // 0x0010(0x0018)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMatchmakingPortalPopup_HandleLoadScreenChanged) == 0x000008, "Wrong alignment on FortMatchmakingPortalPopup_HandleLoadScreenChanged");
static_assert(sizeof(FortMatchmakingPortalPopup_HandleLoadScreenChanged) == 0x000028, "Wrong size on FortMatchmakingPortalPopup_HandleLoadScreenChanged");
static_assert(offsetof(FortMatchmakingPortalPopup_HandleLoadScreenChanged, PlayerController) == 0x000000, "Member 'FortMatchmakingPortalPopup_HandleLoadScreenChanged::PlayerController' has a wrong offset!");
static_assert(offsetof(FortMatchmakingPortalPopup_HandleLoadScreenChanged, bLoadScreenEnabled) == 0x000008, "Member 'FortMatchmakingPortalPopup_HandleLoadScreenChanged::bLoadScreenEnabled' has a wrong offset!");
static_assert(offsetof(FortMatchmakingPortalPopup_HandleLoadScreenChanged, HUDReason) == 0x000010, "Member 'FortMatchmakingPortalPopup_HandleLoadScreenChanged::HUDReason' has a wrong offset!");

// Function MatchmakingPortalUI.FortMatchmakingPortalPopup.HandleOnPortalDetailsVisibilityCheck
// 0x0001 (0x0001 - 0x0000)
struct FortMatchmakingPortalPopup_HandleOnPortalDetailsVisibilityCheck final
{
public:
	bool                                          bShowWidget;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMatchmakingPortalPopup_HandleOnPortalDetailsVisibilityCheck) == 0x000001, "Wrong alignment on FortMatchmakingPortalPopup_HandleOnPortalDetailsVisibilityCheck");
static_assert(sizeof(FortMatchmakingPortalPopup_HandleOnPortalDetailsVisibilityCheck) == 0x000001, "Wrong size on FortMatchmakingPortalPopup_HandleOnPortalDetailsVisibilityCheck");
static_assert(offsetof(FortMatchmakingPortalPopup_HandleOnPortalDetailsVisibilityCheck, bShowWidget) == 0x000000, "Member 'FortMatchmakingPortalPopup_HandleOnPortalDetailsVisibilityCheck::bShowWidget' has a wrong offset!");

// Function MatchmakingPortalUI.FortMatchmakingPortalPopup.HandleStartedRespawn
// 0x0008 (0x0008 - 0x0000)
struct FortMatchmakingPortalPopup_HandleStartedRespawn final
{
public:
	class AFortPlayerControllerZone*              PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMatchmakingPortalPopup_HandleStartedRespawn) == 0x000008, "Wrong alignment on FortMatchmakingPortalPopup_HandleStartedRespawn");
static_assert(sizeof(FortMatchmakingPortalPopup_HandleStartedRespawn) == 0x000008, "Wrong size on FortMatchmakingPortalPopup_HandleStartedRespawn");
static_assert(offsetof(FortMatchmakingPortalPopup_HandleStartedRespawn, PlayerController) == 0x000000, "Member 'FortMatchmakingPortalPopup_HandleStartedRespawn::PlayerController' has a wrong offset!");

// Function MatchmakingPortalUI.FortMatchmakingPortalPopup.IsInteractingDeviceAMatchmakingPortal
// 0x0001 (0x0001 - 0x0000)
struct FortMatchmakingPortalPopup_IsInteractingDeviceAMatchmakingPortal final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMatchmakingPortalPopup_IsInteractingDeviceAMatchmakingPortal) == 0x000001, "Wrong alignment on FortMatchmakingPortalPopup_IsInteractingDeviceAMatchmakingPortal");
static_assert(sizeof(FortMatchmakingPortalPopup_IsInteractingDeviceAMatchmakingPortal) == 0x000001, "Wrong size on FortMatchmakingPortalPopup_IsInteractingDeviceAMatchmakingPortal");
static_assert(offsetof(FortMatchmakingPortalPopup_IsInteractingDeviceAMatchmakingPortal, ReturnValue) == 0x000000, "Member 'FortMatchmakingPortalPopup_IsInteractingDeviceAMatchmakingPortal::ReturnValue' has a wrong offset!");

// Function MatchmakingPortalUI.FortMatchmakingPortalPopup.OnPlayerCanInteractChanged
// 0x0001 (0x0001 - 0x0000)
struct FortMatchmakingPortalPopup_OnPlayerCanInteractChanged final
{
public:
	bool                                          bPlayerCanInteract;                                // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMatchmakingPortalPopup_OnPlayerCanInteractChanged) == 0x000001, "Wrong alignment on FortMatchmakingPortalPopup_OnPlayerCanInteractChanged");
static_assert(sizeof(FortMatchmakingPortalPopup_OnPlayerCanInteractChanged) == 0x000001, "Wrong size on FortMatchmakingPortalPopup_OnPlayerCanInteractChanged");
static_assert(offsetof(FortMatchmakingPortalPopup_OnPlayerCanInteractChanged, bPlayerCanInteract) == 0x000000, "Member 'FortMatchmakingPortalPopup_OnPlayerCanInteractChanged::bPlayerCanInteract' has a wrong offset!");

// Function MatchmakingPortalUI.FortMatchmakingPortalPopup.OnShowPortalPopup
// 0x0002 (0x0002 - 0x0000)
struct FortMatchmakingPortalPopup_OnShowPortalPopup final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAnimate;                                          // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMatchmakingPortalPopup_OnShowPortalPopup) == 0x000001, "Wrong alignment on FortMatchmakingPortalPopup_OnShowPortalPopup");
static_assert(sizeof(FortMatchmakingPortalPopup_OnShowPortalPopup) == 0x000002, "Wrong size on FortMatchmakingPortalPopup_OnShowPortalPopup");
static_assert(offsetof(FortMatchmakingPortalPopup_OnShowPortalPopup, bShow) == 0x000000, "Member 'FortMatchmakingPortalPopup_OnShowPortalPopup::bShow' has a wrong offset!");
static_assert(offsetof(FortMatchmakingPortalPopup_OnShowPortalPopup, bAnimate) == 0x000001, "Member 'FortMatchmakingPortalPopup_OnShowPortalPopup::bAnimate' has a wrong offset!");

// Function MatchmakingPortalUI.FortMatchmakingPortalPopup.UpdateVisuals
// 0x0008 (0x0008 - 0x0000)
struct FortMatchmakingPortalPopup_UpdateVisuals final
{
public:
	const class UHeaderDescriptionHUDComponent*   HUDComponent;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMatchmakingPortalPopup_UpdateVisuals) == 0x000008, "Wrong alignment on FortMatchmakingPortalPopup_UpdateVisuals");
static_assert(sizeof(FortMatchmakingPortalPopup_UpdateVisuals) == 0x000008, "Wrong size on FortMatchmakingPortalPopup_UpdateVisuals");
static_assert(offsetof(FortMatchmakingPortalPopup_UpdateVisuals, HUDComponent) == 0x000000, "Member 'FortMatchmakingPortalPopup_UpdateVisuals::HUDComponent' has a wrong offset!");

// Function MatchmakingPortalUI.FortMatchmakingPortalPopup.GetMatchmakingFeedbackWidget
// 0x0010 (0x0010 - 0x0000)
struct FortMatchmakingPortalPopup_GetMatchmakingFeedbackWidget final
{
public:
	const class UCommonActivatableWidget*         MatchmakingFeedbackContainer;                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortAthenaCreativeMatchmakingWidget*   ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMatchmakingPortalPopup_GetMatchmakingFeedbackWidget) == 0x000008, "Wrong alignment on FortMatchmakingPortalPopup_GetMatchmakingFeedbackWidget");
static_assert(sizeof(FortMatchmakingPortalPopup_GetMatchmakingFeedbackWidget) == 0x000010, "Wrong size on FortMatchmakingPortalPopup_GetMatchmakingFeedbackWidget");
static_assert(offsetof(FortMatchmakingPortalPopup_GetMatchmakingFeedbackWidget, MatchmakingFeedbackContainer) == 0x000000, "Member 'FortMatchmakingPortalPopup_GetMatchmakingFeedbackWidget::MatchmakingFeedbackContainer' has a wrong offset!");
static_assert(offsetof(FortMatchmakingPortalPopup_GetMatchmakingFeedbackWidget, ReturnValue) == 0x000008, "Member 'FortMatchmakingPortalPopup_GetMatchmakingFeedbackWidget::ReturnValue' has a wrong offset!");

// Function MatchmakingPortalUI.FortMatchmakingPortalPopup.HasActivityToShow
// 0x0001 (0x0001 - 0x0000)
struct FortMatchmakingPortalPopup_HasActivityToShow final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMatchmakingPortalPopup_HasActivityToShow) == 0x000001, "Wrong alignment on FortMatchmakingPortalPopup_HasActivityToShow");
static_assert(sizeof(FortMatchmakingPortalPopup_HasActivityToShow) == 0x000001, "Wrong size on FortMatchmakingPortalPopup_HasActivityToShow");
static_assert(offsetof(FortMatchmakingPortalPopup_HasActivityToShow, ReturnValue) == 0x000000, "Member 'FortMatchmakingPortalPopup_HasActivityToShow::ReturnValue' has a wrong offset!");

// Function MatchmakingPortalUI.FortModalBackground.OnPreviewImageChanged
// 0x0010 (0x0010 - 0x0000)
struct FortModalBackground_OnPreviewImageChanged final
{
public:
	bool                                          bIsLoading;                                        // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UTexture*                         InTexture;                                         // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortModalBackground_OnPreviewImageChanged) == 0x000008, "Wrong alignment on FortModalBackground_OnPreviewImageChanged");
static_assert(sizeof(FortModalBackground_OnPreviewImageChanged) == 0x000010, "Wrong size on FortModalBackground_OnPreviewImageChanged");
static_assert(offsetof(FortModalBackground_OnPreviewImageChanged, bIsLoading) == 0x000000, "Member 'FortModalBackground_OnPreviewImageChanged::bIsLoading' has a wrong offset!");
static_assert(offsetof(FortModalBackground_OnPreviewImageChanged, InTexture) == 0x000008, "Member 'FortModalBackground_OnPreviewImageChanged::InTexture' has a wrong offset!");

}

