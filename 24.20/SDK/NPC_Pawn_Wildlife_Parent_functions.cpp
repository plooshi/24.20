#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NPC_Pawn_Wildlife_Parent

#include "Basic.hpp"

#include "NPC_Pawn_Wildlife_Parent_classes.hpp"
#include "NPC_Pawn_Wildlife_Parent_parameters.hpp"


namespace SDK
{

// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.AsyncLinkAnimationLayer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftClassPtr<class UClass>             AnimationLayer                                         (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ANPC_Pawn_Wildlife_Parent_C::AsyncLinkAnimationLayer(TSoftClassPtr<class UClass> AnimationLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "AsyncLinkAnimationLayer");

	Params::NPC_Pawn_Wildlife_Parent_C_AsyncLinkAnimationLayer Parms{};

	Parms.AnimationLayer = AnimationLayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.AttachAndApplyVocalFX
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSoundLibraryPlaySoundResult     SoundLibraryResult                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void ANPC_Pawn_Wildlife_Parent_C::AttachAndApplyVocalFX(const struct FSoundLibraryPlaySoundResult& SoundLibraryResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "AttachAndApplyVocalFX");

	Params::NPC_Pawn_Wildlife_Parent_C_AttachAndApplyVocalFX Parms{};

	Parms.SoundLibraryResult = std::move(SoundLibraryResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.BlueprintModifyIncomingDamage
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FGameplayEffectContextHandle     EffectContext                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class AController*                      EventInstigator                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ANPC_Pawn_Wildlife_Parent_C::BlueprintModifyIncomingDamage(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FGameplayEffectContextHandle& EffectContext, class AController* EventInstigator, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "BlueprintModifyIncomingDamage");

	Params::NPC_Pawn_Wildlife_Parent_C_BlueprintModifyIncomingDamage Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = std::move(DamageTags);
	Parms.EffectContext = std::move(EffectContext);
	Parms.EventInstigator = EventInstigator;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.BndEvt__ConvertComponent_K2Node_ComponentBoundEvent_0_ConvertedEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AFortPawn*                        InstigatorPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AFortPawn*                        ConvertedPawn                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Wildlife_Parent_C::BndEvt__ConvertComponent_K2Node_ComponentBoundEvent_0_ConvertedEvent__DelegateSignature(class AFortPawn* InstigatorPawn, class AFortPawn* ConvertedPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "BndEvt__ConvertComponent_K2Node_ComponentBoundEvent_0_ConvertedEvent__DelegateSignature");

	Params::NPC_Pawn_Wildlife_Parent_C_BndEvt__ConvertComponent_K2Node_ComponentBoundEvent_0_ConvertedEvent__DelegateSignature Parms{};

	Parms.InstigatorPawn = InstigatorPawn;
	Parms.ConvertedPawn = ConvertedPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.BndEvt__ConvertComponent_K2Node_ComponentBoundEvent_1_UnconvertedEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AFortPawn*                        UnconvertedPawn                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EUnconvertReason                        UnconvertReason                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Wildlife_Parent_C::BndEvt__ConvertComponent_K2Node_ComponentBoundEvent_1_UnconvertedEvent__DelegateSignature(class AFortPawn* UnconvertedPawn, EUnconvertReason UnconvertReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "BndEvt__ConvertComponent_K2Node_ComponentBoundEvent_1_UnconvertedEvent__DelegateSignature");

	Params::NPC_Pawn_Wildlife_Parent_C_BndEvt__ConvertComponent_K2Node_ComponentBoundEvent_1_UnconvertedEvent__DelegateSignature Parms{};

	Parms.UnconvertedPawn = UnconvertedPawn;
	Parms.UnconvertReason = UnconvertReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.BndEvt__SoundLibrary_Component_K2Node_ComponentBoundEvent_2_OnSoundLibraryPlayEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FSoundLibraryPlaySoundResult     Results                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class USoundLibraryContext*             Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Wildlife_Parent_C::BndEvt__SoundLibrary_Component_K2Node_ComponentBoundEvent_2_OnSoundLibraryPlayEvent__DelegateSignature(const struct FSoundLibraryPlaySoundResult& Results, const class USoundLibraryContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "BndEvt__SoundLibrary_Component_K2Node_ComponentBoundEvent_2_OnSoundLibraryPlayEvent__DelegateSignature");

	Params::NPC_Pawn_Wildlife_Parent_C_BndEvt__SoundLibrary_Component_K2Node_ComponentBoundEvent_2_OnSoundLibraryPlayEvent__DelegateSignature Parms{};

	Parms.Results = std::move(Results);
	Parms.Context = Context;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.CanBeInteractedWithWhenTamed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bCanInteract_0                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Wildlife_Parent_C::CanBeInteractedWithWhenTamed(bool* bCanInteract_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "CanBeInteractedWithWhenTamed");

	Params::NPC_Pawn_Wildlife_Parent_C_CanBeInteractedWithWhenTamed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bCanInteract_0 != nullptr)
		*bCanInteract_0 = Parms.bCanInteract_0;
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.ExecuteUbergraph_NPC_Pawn_Wildlife_Parent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Wildlife_Parent_C::ExecuteUbergraph_NPC_Pawn_Wildlife_Parent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "ExecuteUbergraph_NPC_Pawn_Wildlife_Parent");

	Params::NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.HideStatus
// (BlueprintCallable, BlueprintEvent)

void ANPC_Pawn_Wildlife_Parent_C::HideStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "HideStatus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.LinkAnimationLayers
// (BlueprintCallable, BlueprintEvent)

void ANPC_Pawn_Wildlife_Parent_C::LinkAnimationLayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "LinkAnimationLayers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.NPC AlertLevelChangedServer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_NPC_AlertLevel                     NPCAlertLevel                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Wildlife_Parent_C::NPC_AlertLevelChangedServer(Enum_NPC_AlertLevel NPCAlertLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "NPC AlertLevelChangedServer");

	Params::NPC_Pawn_Wildlife_Parent_C_NPC_AlertLevelChangedServer Parms{};

	Parms.NPCAlertLevel = NPCAlertLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.NPC CanBeInteractedWith
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CanInteract                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Wildlife_Parent_C::NPC_CanBeInteractedWith(bool* CanInteract)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "NPC CanBeInteractedWith");

	Params::NPC_Pawn_Wildlife_Parent_C_NPC_CanBeInteractedWith Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CanInteract != nullptr)
		*CanInteract = Parms.CanInteract;
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.NPC LeaderSet
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success_                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Leader                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EUnconvertReason                        UnconvertReason                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Wildlife_Parent_C::NPC_LeaderSet(bool Success_, class AActor* Leader, EUnconvertReason UnconvertReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "NPC LeaderSet");

	Params::NPC_Pawn_Wildlife_Parent_C_NPC_LeaderSet Parms{};

	Parms.Success_ = Success_;
	Parms.Leader = Leader;
	Parms.UnconvertReason = UnconvertReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.NPC PickupGrabbed_Destroyed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ActorGrabbed                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Wildlife_Parent_C::NPC_PickupGrabbed_Destroyed(class AActor* ActorGrabbed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "NPC PickupGrabbed_Destroyed");

	Params::NPC_Pawn_Wildlife_Parent_C_NPC_PickupGrabbed_Destroyed Parms{};

	Parms.ActorGrabbed = ActorGrabbed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.NPC UpdateHealthBarComponentVisibility
// (BlueprintCallable, BlueprintEvent)

void ANPC_Pawn_Wildlife_Parent_C::NPC_UpdateHealthBarComponentVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "NPC UpdateHealthBarComponentVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.NPCStatusWidget_UpdateKeepVisible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShouldKeepVisible                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Wildlife_Parent_C::NPCStatusWidget_UpdateKeepVisible(bool ShouldKeepVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "NPCStatusWidget_UpdateKeepVisible");

	Params::NPC_Pawn_Wildlife_Parent_C_NPCStatusWidget_UpdateKeepVisible Parms{};

	Parms.ShouldKeepVisible = ShouldKeepVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.On NPC PawnInteractedWith
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           AIPawn                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AFortPlayerPawn*                  InteractingPlayerPawn                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Wildlife_Parent_C::On_NPC_PawnInteractedWith(class AActor* AIPawn, class AFortPlayerPawn* InteractingPlayerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "On NPC PawnInteractedWith");

	Params::NPC_Pawn_Wildlife_Parent_C_On_NPC_PawnInteractedWith Parms{};

	Parms.AIPawn = AIPawn;
	Parms.InteractingPlayerPawn = InteractingPlayerPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.On Pawn Focused
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPawn*                        FocusedPawn                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Wildlife_Parent_C::On_Pawn_Focused(class AFortPawn* FocusedPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "On Pawn Focused");

	Params::NPC_Pawn_Wildlife_Parent_C_On_Pawn_Focused Parms{};

	Parms.FocusedPawn = FocusedPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.OnApplyEffectOptimization
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   NewBudgetValue                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Wildlife_Parent_C::OnApplyEffectOptimization(const int32 NewBudgetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "OnApplyEffectOptimization");

	Params::NPC_Pawn_Wildlife_Parent_C_OnApplyEffectOptimization Parms{};

	Parms.NewBudgetValue = NewBudgetValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.OnBeingControlledChanged
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bControlled                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Wildlife_Parent_C::OnBeingControlledChanged(bool bControlled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "OnBeingControlledChanged");

	Params::NPC_Pawn_Wildlife_Parent_C_OnBeingControlledChanged Parms{};

	Parms.bControlled = bControlled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.OnCustomizationsLoaded_BP
// (Event, Protected, BlueprintEvent)

void ANPC_Pawn_Wildlife_Parent_C::OnCustomizationsLoaded_BP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "OnCustomizationsLoaded_BP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.OnDamagePlayEffects
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          Momentum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AFortPawn*                        InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectContextHandle     EffectContext                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void ANPC_Pawn_Wildlife_Parent_C::OnDamagePlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "OnDamagePlayEffects");

	Params::NPC_Pawn_Wildlife_Parent_C_OnDamagePlayEffects Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = std::move(DamageTags);
	Parms.Momentum = std::move(Momentum);
	Parms.HitInfo = std::move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = std::move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.OnDeathPlayEffects
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          Momentum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AFortPawn*                        InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectContextHandle     EffectContext                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void ANPC_Pawn_Wildlife_Parent_C::OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "OnDeathPlayEffects");

	Params::NPC_Pawn_Wildlife_Parent_C_OnDeathPlayEffects Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = std::move(DamageTags);
	Parms.Momentum = std::move(Momentum);
	Parms.HitInfo = std::move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = std::move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.OnDeathServer
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          Momentum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectContextHandle     EffectContext                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void ANPC_Pawn_Wildlife_Parent_C::OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "OnDeathServer");

	Params::NPC_Pawn_Wildlife_Parent_C_OnDeathServer Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = std::move(DamageTags);
	Parms.Momentum = std::move(Momentum);
	Parms.HitInfo = std::move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = std::move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.OnLanded
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ANPC_Pawn_Wildlife_Parent_C::OnLanded(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "OnLanded");

	Params::NPC_Pawn_Wildlife_Parent_C_OnLanded Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.OnLandedMulticast
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ANPC_Pawn_Wildlife_Parent_C::OnLandedMulticast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "OnLandedMulticast");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.OnLoaded_9DC5FDA543FAF13BB29E95AA78B28A06
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ANPC_Pawn_Wildlife_Parent_C::OnLoaded_9DC5FDA543FAF13BB29E95AA78B28A06(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "OnLoaded_9DC5FDA543FAF13BB29E95AA78B28A06");

	Params::NPC_Pawn_Wildlife_Parent_C_OnLoaded_9DC5FDA543FAF13BB29E95AA78B28A06 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.OnOutOfConvertResistanceServer
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   ConvertDamageDone                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            SourceTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FGameplayEffectContextHandle     EffectContext                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class AController*                      EffectInstigator                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           EffectCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Wildlife_Parent_C::OnOutOfConvertResistanceServer(float ConvertDamageDone, const struct FGameplayTagContainer& SourceTags, const struct FGameplayEffectContextHandle& EffectContext, class AController* EffectInstigator, class AActor* EffectCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "OnOutOfConvertResistanceServer");

	Params::NPC_Pawn_Wildlife_Parent_C_OnOutOfConvertResistanceServer Parms{};

	Parms.ConvertDamageDone = ConvertDamageDone;
	Parms.SourceTags = std::move(SourceTags);
	Parms.EffectContext = std::move(EffectContext);
	Parms.EffectInstigator = EffectInstigator;
	Parms.EffectCauser = EffectCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.OnPawnHealthChanged_Event_0
// (BlueprintCallable, BlueprintEvent)

void ANPC_Pawn_Wildlife_Parent_C::OnPawnHealthChanged_Event_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "OnPawnHealthChanged_Event_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.OnRep_LeaderTeam
// (BlueprintCallable, BlueprintEvent)

void ANPC_Pawn_Wildlife_Parent_C::OnRep_LeaderTeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "OnRep_LeaderTeam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.OnSlidingStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bNewSlidingState                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Wildlife_Parent_C::OnSlidingStateChanged(bool bNewSlidingState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "OnSlidingStateChanged");

	Params::NPC_Pawn_Wildlife_Parent_C_OnSlidingStateChanged Parms{};

	Parms.bNewSlidingState = bNewSlidingState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.OnTamedMulticast
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ANPC_Pawn_Wildlife_Parent_C::OnTamedMulticast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "OnTamedMulticast");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.Play Sound Lib
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Event_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Wildlife_Parent_C::Play_Sound_Lib(const struct FGameplayTag& Event_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "Play Sound Lib");

	Params::NPC_Pawn_Wildlife_Parent_C_Play_Sound_Lib Parms{};

	Parms.Event_Name = std::move(Event_Name);

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.Play Water Splash at Water Surface
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortWaterBodyActor*              Water_Body                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Enter_Water_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Wildlife_Parent_C::Play_Water_Splash_at_Water_Surface(class AFortWaterBodyActor* Water_Body, bool Enter_Water_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "Play Water Splash at Water Surface");

	Params::NPC_Pawn_Wildlife_Parent_C_Play_Water_Splash_at_Water_Surface Parms{};

	Parms.Water_Body = Water_Body;
	Parms.Enter_Water_0 = Enter_Water_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.PlayAdditiveHitReacts
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Hit_Direction                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     Anim_Montage                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Wildlife_Parent_C::PlayAdditiveHitReacts(const struct FVector& Hit_Direction, class UAnimMontage* Anim_Montage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "PlayAdditiveHitReacts");

	Params::NPC_Pawn_Wildlife_Parent_C_PlayAdditiveHitReacts Parms{};

	Parms.Hit_Direction = std::move(Hit_Direction);
	Parms.Anim_Montage = Anim_Montage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.PlayStateChangeAudio
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_NPC_AlertLevel                     Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Wildlife_Parent_C::PlayStateChangeAudio(Enum_NPC_AlertLevel Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "PlayStateChangeAudio");

	Params::NPC_Pawn_Wildlife_Parent_C_PlayStateChangeAudio Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ANPC_Pawn_Wildlife_Parent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.RestoreConvertResistance
// (BlueprintCallable, BlueprintEvent)

void ANPC_Pawn_Wildlife_Parent_C::RestoreConvertResistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "RestoreConvertResistance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.SetTamingEnabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EnableTaming                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Wildlife_Parent_C::SetTamingEnabled(bool EnableTaming)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "SetTamingEnabled");

	Params::NPC_Pawn_Wildlife_Parent_C_SetTamingEnabled Parms{};

	Parms.EnableTaming = EnableTaming;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.TryShowHealthBar
// (Public, BlueprintCallable, BlueprintEvent)

void ANPC_Pawn_Wildlife_Parent_C::TryShowHealthBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "TryShowHealthBar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.UpdateTamingIndicator
// (Public, BlueprintCallable, BlueprintEvent)

void ANPC_Pawn_Wildlife_Parent_C::UpdateTamingIndicator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "UpdateTamingIndicator");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.BlueprintCanInteract
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AFortPawn*                        InteractingPawn                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EInteractionBeingAttempted              InteractionBeingAttempted                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ANPC_Pawn_Wildlife_Parent_C::BlueprintCanInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "BlueprintCanInteract");

	Params::NPC_Pawn_Wildlife_Parent_C_BlueprintCanInteract Parms{};

	Parms.InteractingPawn = InteractingPawn;
	Parms.InteractionBeingAttempted = InteractionBeingAttempted;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.IsValidAutoFireTarget
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           Attacker                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ANPC_Pawn_Wildlife_Parent_C::IsValidAutoFireTarget(const class AActor* Attacker) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Wildlife_Parent_C", "IsValidAutoFireTarget");

	Params::NPC_Pawn_Wildlife_Parent_C_IsValidAutoFireTarget Parms{};

	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

