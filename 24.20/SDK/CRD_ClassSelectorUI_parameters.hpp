#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CRD_ClassSelectorUI

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function CRD_ClassSelectorUI.CreativeClassSelectorButton.SetButtonText
// 0x0018 (0x0018 - 0x0000)
struct CreativeClassSelectorButton_SetButtonText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CreativeClassSelectorButton_SetButtonText) == 0x000008, "Wrong alignment on CreativeClassSelectorButton_SetButtonText");
static_assert(sizeof(CreativeClassSelectorButton_SetButtonText) == 0x000018, "Wrong size on CreativeClassSelectorButton_SetButtonText");
static_assert(offsetof(CreativeClassSelectorButton_SetButtonText, InText) == 0x000000, "Member 'CreativeClassSelectorButton_SetButtonText::InText' has a wrong offset!");

// Function CRD_ClassSelectorUI.ClassSelectorTeamTile.OnPlayerCountSet
// 0x0004 (0x0004 - 0x0000)
struct ClassSelectorTeamTile_OnPlayerCountSet final
{
public:
	int32                                         NewPlayerCount;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ClassSelectorTeamTile_OnPlayerCountSet) == 0x000004, "Wrong alignment on ClassSelectorTeamTile_OnPlayerCountSet");
static_assert(sizeof(ClassSelectorTeamTile_OnPlayerCountSet) == 0x000004, "Wrong size on ClassSelectorTeamTile_OnPlayerCountSet");
static_assert(offsetof(ClassSelectorTeamTile_OnPlayerCountSet, NewPlayerCount) == 0x000000, "Member 'ClassSelectorTeamTile_OnPlayerCountSet::NewPlayerCount' has a wrong offset!");

// Function CRD_ClassSelectorUI.ClassSelectorTeamTile.OnTeamColorIndexSet
// 0x0004 (0x0004 - 0x0000)
struct ClassSelectorTeamTile_OnTeamColorIndexSet final
{
public:
	int32                                         TeamColorIndex;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ClassSelectorTeamTile_OnTeamColorIndexSet) == 0x000004, "Wrong alignment on ClassSelectorTeamTile_OnTeamColorIndexSet");
static_assert(sizeof(ClassSelectorTeamTile_OnTeamColorIndexSet) == 0x000004, "Wrong size on ClassSelectorTeamTile_OnTeamColorIndexSet");
static_assert(offsetof(ClassSelectorTeamTile_OnTeamColorIndexSet, TeamColorIndex) == 0x000000, "Member 'ClassSelectorTeamTile_OnTeamColorIndexSet::TeamColorIndex' has a wrong offset!");

// Function CRD_ClassSelectorUI.ClassSelectorTeamTile.OnTeamIconSet
// 0x0050 (0x0050 - 0x0000)
struct ClassSelectorTeamTile_OnTeamIconSet final
{
public:
	struct FCreativeIconOption                    NewTeamIcon;                                       // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ClassSelectorTeamTile_OnTeamIconSet) == 0x000008, "Wrong alignment on ClassSelectorTeamTile_OnTeamIconSet");
static_assert(sizeof(ClassSelectorTeamTile_OnTeamIconSet) == 0x000050, "Wrong size on ClassSelectorTeamTile_OnTeamIconSet");
static_assert(offsetof(ClassSelectorTeamTile_OnTeamIconSet, NewTeamIcon) == 0x000000, "Member 'ClassSelectorTeamTile_OnTeamIconSet::NewTeamIcon' has a wrong offset!");

// Function CRD_ClassSelectorUI.ClassSelectorTeamTile.OnTeamSet
// 0x0090 (0x0090 - 0x0000)
struct ClassSelectorTeamTile_OnTeamSet final
{
public:
	struct FMinigameTeam                          NewTeamData;                                       // 0x0000(0x0090)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ClassSelectorTeamTile_OnTeamSet) == 0x000008, "Wrong alignment on ClassSelectorTeamTile_OnTeamSet");
static_assert(sizeof(ClassSelectorTeamTile_OnTeamSet) == 0x000090, "Wrong size on ClassSelectorTeamTile_OnTeamSet");
static_assert(offsetof(ClassSelectorTeamTile_OnTeamSet, NewTeamData) == 0x000000, "Member 'ClassSelectorTeamTile_OnTeamSet::NewTeamData' has a wrong offset!");

// Function CRD_ClassSelectorUI.CreativeClassEntry.OnBrowsingLoadout
// 0x0001 (0x0001 - 0x0000)
struct CreativeClassEntry_OnBrowsingLoadout final
{
public:
	bool                                          bBrowsingLoadout;                                  // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CreativeClassEntry_OnBrowsingLoadout) == 0x000001, "Wrong alignment on CreativeClassEntry_OnBrowsingLoadout");
static_assert(sizeof(CreativeClassEntry_OnBrowsingLoadout) == 0x000001, "Wrong size on CreativeClassEntry_OnBrowsingLoadout");
static_assert(offsetof(CreativeClassEntry_OnBrowsingLoadout, bBrowsingLoadout) == 0x000000, "Member 'CreativeClassEntry_OnBrowsingLoadout::bBrowsingLoadout' has a wrong offset!");

// Function CRD_ClassSelectorUI.CreativeClassEntry.OnClassEntryDataSet
// 0x0002 (0x0002 - 0x0000)
struct CreativeClassEntry_OnClassEntryDataSet final
{
public:
	bool                                          bIsCurrentClass;                                   // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPendingClass;                                   // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CreativeClassEntry_OnClassEntryDataSet) == 0x000001, "Wrong alignment on CreativeClassEntry_OnClassEntryDataSet");
static_assert(sizeof(CreativeClassEntry_OnClassEntryDataSet) == 0x000002, "Wrong size on CreativeClassEntry_OnClassEntryDataSet");
static_assert(offsetof(CreativeClassEntry_OnClassEntryDataSet, bIsCurrentClass) == 0x000000, "Member 'CreativeClassEntry_OnClassEntryDataSet::bIsCurrentClass' has a wrong offset!");
static_assert(offsetof(CreativeClassEntry_OnClassEntryDataSet, bIsPendingClass) == 0x000001, "Member 'CreativeClassEntry_OnClassEntryDataSet::bIsPendingClass' has a wrong offset!");

// Function CRD_ClassSelectorUI.CreativeClassSelector.HandleMinigameStateChanged
// 0x0010 (0x0010 - 0x0000)
struct CreativeClassSelector_HandleMinigameStateChanged final
{
public:
	class AFortMinigame*                          Minigame;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortMinigameState                            MinigameState;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CreativeClassSelector_HandleMinigameStateChanged) == 0x000008, "Wrong alignment on CreativeClassSelector_HandleMinigameStateChanged");
static_assert(sizeof(CreativeClassSelector_HandleMinigameStateChanged) == 0x000010, "Wrong size on CreativeClassSelector_HandleMinigameStateChanged");
static_assert(offsetof(CreativeClassSelector_HandleMinigameStateChanged, Minigame) == 0x000000, "Member 'CreativeClassSelector_HandleMinigameStateChanged::Minigame' has a wrong offset!");
static_assert(offsetof(CreativeClassSelector_HandleMinigameStateChanged, MinigameState) == 0x000008, "Member 'CreativeClassSelector_HandleMinigameStateChanged::MinigameState' has a wrong offset!");

// Function CRD_ClassSelectorUI.CreativeClassSelector.OnClassSelectionChanged
// 0x0030 (0x0030 - 0x0000)
struct CreativeClassSelector_OnClassSelectionChanged final
{
public:
	class FText                                   NewClassName;                                      // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   NewClassDescription;                               // 0x0018(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CreativeClassSelector_OnClassSelectionChanged) == 0x000008, "Wrong alignment on CreativeClassSelector_OnClassSelectionChanged");
static_assert(sizeof(CreativeClassSelector_OnClassSelectionChanged) == 0x000030, "Wrong size on CreativeClassSelector_OnClassSelectionChanged");
static_assert(offsetof(CreativeClassSelector_OnClassSelectionChanged, NewClassName) == 0x000000, "Member 'CreativeClassSelector_OnClassSelectionChanged::NewClassName' has a wrong offset!");
static_assert(offsetof(CreativeClassSelector_OnClassSelectionChanged, NewClassDescription) == 0x000018, "Member 'CreativeClassSelector_OnClassSelectionChanged::NewClassDescription' has a wrong offset!");

// Function CRD_ClassSelectorUI.CreativeClassSelector.OnClassSelectorUIPopulated
// 0x0001 (0x0001 - 0x0000)
struct CreativeClassSelector_OnClassSelectorUIPopulated final
{
public:
	bool                                          bHasValidData;                                     // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CreativeClassSelector_OnClassSelectorUIPopulated) == 0x000001, "Wrong alignment on CreativeClassSelector_OnClassSelectorUIPopulated");
static_assert(sizeof(CreativeClassSelector_OnClassSelectorUIPopulated) == 0x000001, "Wrong size on CreativeClassSelector_OnClassSelectorUIPopulated");
static_assert(offsetof(CreativeClassSelector_OnClassSelectorUIPopulated, bHasValidData) == 0x000000, "Member 'CreativeClassSelector_OnClassSelectorUIPopulated::bHasValidData' has a wrong offset!");

// Function CRD_ClassSelectorUI.CreativeClassSelector.OnLoadoutCommitted
// 0x0038 (0x0038 - 0x0000)
struct CreativeClassSelector_OnLoadoutCommitted final
{
public:
	class FText                                   NewClassName;                                      // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   NewTeamName;                                       // 0x0018(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bNewLoadout;                                       // 0x0030(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CreativeClassSelector_OnLoadoutCommitted) == 0x000008, "Wrong alignment on CreativeClassSelector_OnLoadoutCommitted");
static_assert(sizeof(CreativeClassSelector_OnLoadoutCommitted) == 0x000038, "Wrong size on CreativeClassSelector_OnLoadoutCommitted");
static_assert(offsetof(CreativeClassSelector_OnLoadoutCommitted, NewClassName) == 0x000000, "Member 'CreativeClassSelector_OnLoadoutCommitted::NewClassName' has a wrong offset!");
static_assert(offsetof(CreativeClassSelector_OnLoadoutCommitted, NewTeamName) == 0x000018, "Member 'CreativeClassSelector_OnLoadoutCommitted::NewTeamName' has a wrong offset!");
static_assert(offsetof(CreativeClassSelector_OnLoadoutCommitted, bNewLoadout) == 0x000030, "Member 'CreativeClassSelector_OnLoadoutCommitted::bNewLoadout' has a wrong offset!");

// Function CRD_ClassSelectorUI.CreativeClassSelector.OnTimerCountdown
// 0x0004 (0x0004 - 0x0000)
struct CreativeClassSelector_OnTimerCountdown final
{
public:
	int32                                         RemainingTime;                                     // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CreativeClassSelector_OnTimerCountdown) == 0x000004, "Wrong alignment on CreativeClassSelector_OnTimerCountdown");
static_assert(sizeof(CreativeClassSelector_OnTimerCountdown) == 0x000004, "Wrong size on CreativeClassSelector_OnTimerCountdown");
static_assert(offsetof(CreativeClassSelector_OnTimerCountdown, RemainingTime) == 0x000000, "Member 'CreativeClassSelector_OnTimerCountdown::RemainingTime' has a wrong offset!");

// Function CRD_ClassSelectorUI.CreativeClassSelector.GetFirstLoadoutItem
// 0x0008 (0x0008 - 0x0000)
struct CreativeClassSelector_GetFirstLoadoutItem final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CreativeClassSelector_GetFirstLoadoutItem) == 0x000008, "Wrong alignment on CreativeClassSelector_GetFirstLoadoutItem");
static_assert(sizeof(CreativeClassSelector_GetFirstLoadoutItem) == 0x000008, "Wrong size on CreativeClassSelector_GetFirstLoadoutItem");
static_assert(offsetof(CreativeClassSelector_GetFirstLoadoutItem, ReturnValue) == 0x000000, "Member 'CreativeClassSelector_GetFirstLoadoutItem::ReturnValue' has a wrong offset!");

// Function CRD_ClassSelectorUI.CreativeClassSelectorMapTab.SetTabName
// 0x0018 (0x0018 - 0x0000)
struct CreativeClassSelectorMapTab_SetTabName final
{
public:
	class FText                                   TabName;                                           // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CreativeClassSelectorMapTab_SetTabName) == 0x000008, "Wrong alignment on CreativeClassSelectorMapTab_SetTabName");
static_assert(sizeof(CreativeClassSelectorMapTab_SetTabName) == 0x000018, "Wrong size on CreativeClassSelectorMapTab_SetTabName");
static_assert(offsetof(CreativeClassSelectorMapTab_SetTabName, TabName) == 0x000000, "Member 'CreativeClassSelectorMapTab_SetTabName::TabName' has a wrong offset!");

}

