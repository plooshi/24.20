#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ACB_PlaySound_Tree

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ACB_PlaySound_Tree.ACB_PlaySound_Tree_C.ClusterSizeToTreeSize
// 0x0050 (0x0050 - 0x0000)
struct ACB_PlaySound_Tree_C_ClusterSizeToTreeSize final
{
public:
	int32                                         ClusterSize;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TreeSize;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ACB_PlaySound_Tree_C_ClusterSizeToTreeSize) == 0x000008, "Wrong alignment on ACB_PlaySound_Tree_C_ClusterSizeToTreeSize");
static_assert(sizeof(ACB_PlaySound_Tree_C_ClusterSizeToTreeSize) == 0x000050, "Wrong size on ACB_PlaySound_Tree_C_ClusterSizeToTreeSize");
static_assert(offsetof(ACB_PlaySound_Tree_C_ClusterSizeToTreeSize, ClusterSize) == 0x000000, "Member 'ACB_PlaySound_Tree_C_ClusterSizeToTreeSize::ClusterSize' has a wrong offset!");
static_assert(offsetof(ACB_PlaySound_Tree_C_ClusterSizeToTreeSize, TreeSize) == 0x000008, "Member 'ACB_PlaySound_Tree_C_ClusterSizeToTreeSize::TreeSize' has a wrong offset!");
static_assert(offsetof(ACB_PlaySound_Tree_C_ClusterSizeToTreeSize, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000010, "Member 'ACB_PlaySound_Tree_C_ClusterSizeToTreeSize::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACB_PlaySound_Tree_C_ClusterSizeToTreeSize, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000018, "Member 'ACB_PlaySound_Tree_C_ClusterSizeToTreeSize::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ACB_PlaySound_Tree_C_ClusterSizeToTreeSize, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000020, "Member 'ACB_PlaySound_Tree_C_ClusterSizeToTreeSize::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ACB_PlaySound_Tree_C_ClusterSizeToTreeSize, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'ACB_PlaySound_Tree_C_ClusterSizeToTreeSize::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACB_PlaySound_Tree_C_ClusterSizeToTreeSize, CallFunc_Clamp_ReturnValue) == 0x000030, "Member 'ACB_PlaySound_Tree_C_ClusterSizeToTreeSize::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACB_PlaySound_Tree_C_ClusterSizeToTreeSize, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x000038, "Member 'ACB_PlaySound_Tree_C_ClusterSizeToTreeSize::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ACB_PlaySound_Tree_C_ClusterSizeToTreeSize, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'ACB_PlaySound_Tree_C_ClusterSizeToTreeSize::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ACB_PlaySound_Tree_C_ClusterSizeToTreeSize, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000048, "Member 'ACB_PlaySound_Tree_C_ClusterSizeToTreeSize::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function ACB_PlaySound_Tree.ACB_PlaySound_Tree_C.ExecuteUbergraph_ACB_PlaySound_Tree
// 0x0148 (0x0148 - 0x0000)
struct ACB_PlaySound_Tree_C_ExecuteUbergraph_ACB_PlaySound_Tree final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_DynamicCast_AsSound_Base;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Position;                             // 0x0038(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0050(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0060(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_AdjustVolume_AdjustVolumeDuration_ImplicitCast; // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FadeOut_FadeOutDuration_ImplicitCast;     // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ACB_PlaySound_Tree_C_ExecuteUbergraph_ACB_PlaySound_Tree) == 0x000008, "Wrong alignment on ACB_PlaySound_Tree_C_ExecuteUbergraph_ACB_PlaySound_Tree");
static_assert(sizeof(ACB_PlaySound_Tree_C_ExecuteUbergraph_ACB_PlaySound_Tree) == 0x000148, "Wrong size on ACB_PlaySound_Tree_C_ExecuteUbergraph_ACB_PlaySound_Tree");
static_assert(offsetof(ACB_PlaySound_Tree_C_ExecuteUbergraph_ACB_PlaySound_Tree, EntryPoint) == 0x000000, "Member 'ACB_PlaySound_Tree_C_ExecuteUbergraph_ACB_PlaySound_Tree::EntryPoint' has a wrong offset!");
static_assert(offsetof(ACB_PlaySound_Tree_C_ExecuteUbergraph_ACB_PlaySound_Tree, K2Node_CustomEvent_Loaded) == 0x000008, "Member 'ACB_PlaySound_Tree_C_ExecuteUbergraph_ACB_PlaySound_Tree::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(ACB_PlaySound_Tree_C_ExecuteUbergraph_ACB_PlaySound_Tree, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ACB_PlaySound_Tree_C_ExecuteUbergraph_ACB_PlaySound_Tree::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACB_PlaySound_Tree_C_ExecuteUbergraph_ACB_PlaySound_Tree, Temp_object_Variable) == 0x000018, "Member 'ACB_PlaySound_Tree_C_ExecuteUbergraph_ACB_PlaySound_Tree::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ACB_PlaySound_Tree_C_ExecuteUbergraph_ACB_PlaySound_Tree, K2Node_DynamicCast_AsSound_Base) == 0x000020, "Member 'ACB_PlaySound_Tree_C_ExecuteUbergraph_ACB_PlaySound_Tree::K2Node_DynamicCast_AsSound_Base' has a wrong offset!");
static_assert(offsetof(ACB_PlaySound_Tree_C_ExecuteUbergraph_ACB_PlaySound_Tree, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'ACB_PlaySound_Tree_C_ExecuteUbergraph_ACB_PlaySound_Tree::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ACB_PlaySound_Tree_C_ExecuteUbergraph_ACB_PlaySound_Tree, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'ACB_PlaySound_Tree_C_ExecuteUbergraph_ACB_PlaySound_Tree::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ACB_PlaySound_Tree_C_ExecuteUbergraph_ACB_PlaySound_Tree, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x00002A, "Member 'ACB_PlaySound_Tree_C_ExecuteUbergraph_ACB_PlaySound_Tree::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACB_PlaySound_Tree_C_ExecuteUbergraph_ACB_PlaySound_Tree, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000030, "Member 'ACB_PlaySound_Tree_C_ExecuteUbergraph_ACB_PlaySound_Tree::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACB_PlaySound_Tree_C_ExecuteUbergraph_ACB_PlaySound_Tree, K2Node_Event_Position) == 0x000038, "Member 'ACB_PlaySound_Tree_C_ExecuteUbergraph_ACB_PlaySound_Tree::K2Node_Event_Position' has a wrong offset!");
static_assert(offsetof(ACB_PlaySound_Tree_C_ExecuteUbergraph_ACB_PlaySound_Tree, K2Node_CreateDelegate_OutputDelegate) == 0x000050, "Member 'ACB_PlaySound_Tree_C_ExecuteUbergraph_ACB_PlaySound_Tree::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ACB_PlaySound_Tree_C_ExecuteUbergraph_ACB_PlaySound_Tree, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000060, "Member 'ACB_PlaySound_Tree_C_ExecuteUbergraph_ACB_PlaySound_Tree::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ACB_PlaySound_Tree_C_ExecuteUbergraph_ACB_PlaySound_Tree, CallFunc_AdjustVolume_AdjustVolumeDuration_ImplicitCast) == 0x000140, "Member 'ACB_PlaySound_Tree_C_ExecuteUbergraph_ACB_PlaySound_Tree::CallFunc_AdjustVolume_AdjustVolumeDuration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ACB_PlaySound_Tree_C_ExecuteUbergraph_ACB_PlaySound_Tree, CallFunc_FadeOut_FadeOutDuration_ImplicitCast) == 0x000144, "Member 'ACB_PlaySound_Tree_C_ExecuteUbergraph_ACB_PlaySound_Tree::CallFunc_FadeOut_FadeOutDuration_ImplicitCast' has a wrong offset!");

// Function ACB_PlaySound_Tree.ACB_PlaySound_Tree_C.GetRandomOneshotTime
// 0x0020 (0x0020 - 0x0000)
struct ACB_PlaySound_Tree_C_GetRandomOneshotTime final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ACB_PlaySound_Tree_C_GetRandomOneshotTime) == 0x000008, "Wrong alignment on ACB_PlaySound_Tree_C_GetRandomOneshotTime");
static_assert(sizeof(ACB_PlaySound_Tree_C_GetRandomOneshotTime) == 0x000020, "Wrong size on ACB_PlaySound_Tree_C_GetRandomOneshotTime");
static_assert(offsetof(ACB_PlaySound_Tree_C_GetRandomOneshotTime, ReturnValue) == 0x000000, "Member 'ACB_PlaySound_Tree_C_GetRandomOneshotTime::ReturnValue' has a wrong offset!");
static_assert(offsetof(ACB_PlaySound_Tree_C_GetRandomOneshotTime, CallFunc_BreakVector2D_X) == 0x000008, "Member 'ACB_PlaySound_Tree_C_GetRandomOneshotTime::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(ACB_PlaySound_Tree_C_GetRandomOneshotTime, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'ACB_PlaySound_Tree_C_GetRandomOneshotTime::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(ACB_PlaySound_Tree_C_GetRandomOneshotTime, CallFunc_RandomFloatInRange_ReturnValue) == 0x000018, "Member 'ACB_PlaySound_Tree_C_GetRandomOneshotTime::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");

// Function ACB_PlaySound_Tree.ACB_PlaySound_Tree_C.OnLoaded_C8B80DC04C1A324F6D4AB5A27450C3D3
// 0x0008 (0x0008 - 0x0000)
struct ACB_PlaySound_Tree_C_OnLoaded_C8B80DC04C1A324F6D4AB5A27450C3D3 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ACB_PlaySound_Tree_C_OnLoaded_C8B80DC04C1A324F6D4AB5A27450C3D3) == 0x000008, "Wrong alignment on ACB_PlaySound_Tree_C_OnLoaded_C8B80DC04C1A324F6D4AB5A27450C3D3");
static_assert(sizeof(ACB_PlaySound_Tree_C_OnLoaded_C8B80DC04C1A324F6D4AB5A27450C3D3) == 0x000008, "Wrong size on ACB_PlaySound_Tree_C_OnLoaded_C8B80DC04C1A324F6D4AB5A27450C3D3");
static_assert(offsetof(ACB_PlaySound_Tree_C_OnLoaded_C8B80DC04C1A324F6D4AB5A27450C3D3, Loaded) == 0x000000, "Member 'ACB_PlaySound_Tree_C_OnLoaded_C8B80DC04C1A324F6D4AB5A27450C3D3::Loaded' has a wrong offset!");

// Function ACB_PlaySound_Tree.ACB_PlaySound_Tree_C.OnPositionUpdated
// 0x0018 (0x0018 - 0x0000)
struct ACB_PlaySound_Tree_C_OnPositionUpdated final
{
public:
	struct FVector                                Position_0;                                        // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ACB_PlaySound_Tree_C_OnPositionUpdated) == 0x000008, "Wrong alignment on ACB_PlaySound_Tree_C_OnPositionUpdated");
static_assert(sizeof(ACB_PlaySound_Tree_C_OnPositionUpdated) == 0x000018, "Wrong size on ACB_PlaySound_Tree_C_OnPositionUpdated");
static_assert(offsetof(ACB_PlaySound_Tree_C_OnPositionUpdated, Position_0) == 0x000000, "Member 'ACB_PlaySound_Tree_C_OnPositionUpdated::Position_0' has a wrong offset!");

// Function ACB_PlaySound_Tree.ACB_PlaySound_Tree_C.QueueRandomOneshot
// 0x0028 (0x0028 - 0x0000)
struct ACB_PlaySound_Tree_C_QueueRandomOneshot final
{
public:
	double                                        CallFunc_GetRandomOneshotTime_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ACB_PlaySound_Tree_C_QueueRandomOneshot) == 0x000008, "Wrong alignment on ACB_PlaySound_Tree_C_QueueRandomOneshot");
static_assert(sizeof(ACB_PlaySound_Tree_C_QueueRandomOneshot) == 0x000028, "Wrong size on ACB_PlaySound_Tree_C_QueueRandomOneshot");
static_assert(offsetof(ACB_PlaySound_Tree_C_QueueRandomOneshot, CallFunc_GetRandomOneshotTime_ReturnValue) == 0x000000, "Member 'ACB_PlaySound_Tree_C_QueueRandomOneshot::CallFunc_GetRandomOneshotTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACB_PlaySound_Tree_C_QueueRandomOneshot, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'ACB_PlaySound_Tree_C_QueueRandomOneshot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACB_PlaySound_Tree_C_QueueRandomOneshot, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'ACB_PlaySound_Tree_C_QueueRandomOneshot::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ACB_PlaySound_Tree_C_QueueRandomOneshot, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'ACB_PlaySound_Tree_C_QueueRandomOneshot::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACB_PlaySound_Tree_C_QueueRandomOneshot, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000020, "Member 'ACB_PlaySound_Tree_C_QueueRandomOneshot::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

}

