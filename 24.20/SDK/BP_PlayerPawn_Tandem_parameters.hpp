#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerPawn_Tandem

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Struct_NPC_HealthInfo_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerPawn_Tandem.BP_PlayerPawn_Tandem_C.ExecuteUbergraph_BP_PlayerPawn_Tandem
// 0x0250 (0x0250 - 0x0000)
struct BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bVisible)>                K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNPCStatusWidget_AIBoss_C*              K2Node_DynamicCast_AsNPCStatus_Widget_AIBoss;      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHealth_ReturnValue;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxHealth_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetShield_ReturnValue;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxShield_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_ReturnValue_1;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_NPC_HealthInfo                 K2Node_MakeStruct_Struct_NPC_HealthInfo;           // 0x0050(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_Event_DamageTags;                           // 0x0078(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum;                             // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x00B0(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              K2Node_Event_InstigatedBy;                         // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext;                        // 0x01A0(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_1;        // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNPCStatusWidget_AIBoss_C*              K2Node_DynamicCast_AsNPCStatus_Widget_AIBoss_1;    // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bVisible;                       // 0x01D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D5[0x3];                                      // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_2;        // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNPCStatusWidget_AIBoss_C*              K2Node_DynamicCast_AsNPCStatus_Widget_AIBoss_2;    // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EA[0x2];                                      // 0x01EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x01EC(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue;               // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue_1;             // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue_2;             // 0x01FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FD[0x3];                                      // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_3;        // 0x0200(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNPCStatusWidget_AIBoss_C*              K2Node_DynamicCast_AsNPCStatus_Widget_AIBoss_3;    // 0x0208(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_A_ImplicitCast;                // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_B_ImplicitCast;                // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MakeStruct_MaxHealth_6_7D7BEF7841B13FB96D2578989CF135BB_ImplicitCast; // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_A_ImplicitCast_1;              // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_B_ImplicitCast_1;              // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MakeStruct_MaxShield_9_F923E4444E2E476C56FB0E9D9D2F7846_ImplicitCast; // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem) == 0x000008, "Wrong alignment on BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem");
static_assert(sizeof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem) == 0x000250, "Wrong size on BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, EntryPoint) == 0x000000, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000018, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, K2Node_DynamicCast_AsNPCStatus_Widget_AIBoss) == 0x000020, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::K2Node_DynamicCast_AsNPCStatus_Widget_AIBoss' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, CallFunc_GetHealth_ReturnValue) == 0x00002C, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::CallFunc_GetHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, CallFunc_GetMaxHealth_ReturnValue) == 0x000030, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::CallFunc_GetMaxHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, CallFunc_GetShield_ReturnValue) == 0x000034, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::CallFunc_GetShield_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, CallFunc_SafeDivide_ReturnValue) == 0x000038, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, CallFunc_GetMaxShield_ReturnValue) == 0x000040, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::CallFunc_GetMaxShield_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, K2Node_Event_EndPlayReason) == 0x000044, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, CallFunc_SafeDivide_ReturnValue_1) == 0x000048, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::CallFunc_SafeDivide_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, K2Node_MakeStruct_Struct_NPC_HealthInfo) == 0x000050, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::K2Node_MakeStruct_Struct_NPC_HealthInfo' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, K2Node_Event_Damage) == 0x000070, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, K2Node_Event_DamageTags) == 0x000078, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::K2Node_Event_DamageTags' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, K2Node_Event_Momentum) == 0x000098, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::K2Node_Event_Momentum' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, K2Node_Event_HitInfo) == 0x0000B0, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, K2Node_Event_InstigatedBy) == 0x000190, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, K2Node_Event_DamageCauser) == 0x000198, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, K2Node_Event_EffectContext) == 0x0001A0, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::K2Node_Event_EffectContext' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, CallFunc_IsValid_ReturnValue_1) == 0x0001B8, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, CallFunc_GetUserWidgetObject_ReturnValue_1) == 0x0001C0, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::CallFunc_GetUserWidgetObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, K2Node_DynamicCast_AsNPCStatus_Widget_AIBoss_1) == 0x0001C8, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::K2Node_DynamicCast_AsNPCStatus_Widget_AIBoss_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, K2Node_DynamicCast_bSuccess_1) == 0x0001D0, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, CallFunc_IsVisible_ReturnValue) == 0x0001D1, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, CallFunc_IsValid_ReturnValue_2) == 0x0001D2, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, K2Node_CustomEvent_bVisible) == 0x0001D3, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::K2Node_CustomEvent_bVisible' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, CallFunc_IsValid_ReturnValue_3) == 0x0001D4, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, CallFunc_GetUserWidgetObject_ReturnValue_2) == 0x0001D8, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::CallFunc_GetUserWidgetObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, K2Node_DynamicCast_AsNPCStatus_Widget_AIBoss_2) == 0x0001E0, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::K2Node_DynamicCast_AsNPCStatus_Widget_AIBoss_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, K2Node_DynamicCast_bSuccess_2) == 0x0001E8, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0001E9, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, K2Node_CreateDelegate_OutputDelegate_1) == 0x0001EC, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, CallFunc_HasAuthority_ReturnValue) == 0x0001F8, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, CallFunc_GetValueAsBool_ReturnValue) == 0x0001F9, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::CallFunc_GetValueAsBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, CallFunc_GetValueAsBool_ReturnValue_1) == 0x0001FA, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::CallFunc_GetValueAsBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, CallFunc_GetValueAsBool_ReturnValue_2) == 0x0001FB, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::CallFunc_GetValueAsBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, CallFunc_IsValid_ReturnValue_4) == 0x0001FC, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, CallFunc_GetUserWidgetObject_ReturnValue_3) == 0x000200, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::CallFunc_GetUserWidgetObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, K2Node_DynamicCast_AsNPCStatus_Widget_AIBoss_3) == 0x000208, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::K2Node_DynamicCast_AsNPCStatus_Widget_AIBoss_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, K2Node_DynamicCast_bSuccess_3) == 0x000210, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, CallFunc_SafeDivide_A_ImplicitCast) == 0x000218, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::CallFunc_SafeDivide_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, CallFunc_SafeDivide_B_ImplicitCast) == 0x000220, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::CallFunc_SafeDivide_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, K2Node_MakeStruct_MaxHealth_6_7D7BEF7841B13FB96D2578989CF135BB_ImplicitCast) == 0x000228, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::K2Node_MakeStruct_MaxHealth_6_7D7BEF7841B13FB96D2578989CF135BB_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, CallFunc_SafeDivide_A_ImplicitCast_1) == 0x000230, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::CallFunc_SafeDivide_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, CallFunc_SafeDivide_B_ImplicitCast_1) == 0x000238, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::CallFunc_SafeDivide_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, K2Node_MakeStruct_MaxShield_9_F923E4444E2E476C56FB0E9D9D2F7846_ImplicitCast) == 0x000240, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::K2Node_MakeStruct_MaxShield_9_F923E4444E2E476C56FB0E9D9D2F7846_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem, CallFunc_Delay_Duration_ImplicitCast) == 0x000248, "Member 'BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");

// Function BP_PlayerPawn_Tandem.BP_PlayerPawn_Tandem_C.HandlePawnConverted
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerPawn_Tandem_C_HandlePawnConverted final
{
public:
	class AFortPawn*                              InstigatorPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              ConvertedPawn;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetActorTeam_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerPawn_Tandem_C_HandlePawnConverted) == 0x000008, "Wrong alignment on BP_PlayerPawn_Tandem_C_HandlePawnConverted");
static_assert(sizeof(BP_PlayerPawn_Tandem_C_HandlePawnConverted) == 0x000018, "Wrong size on BP_PlayerPawn_Tandem_C_HandlePawnConverted");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_HandlePawnConverted, InstigatorPawn) == 0x000000, "Member 'BP_PlayerPawn_Tandem_C_HandlePawnConverted::InstigatorPawn' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_HandlePawnConverted, ConvertedPawn) == 0x000008, "Member 'BP_PlayerPawn_Tandem_C_HandlePawnConverted::ConvertedPawn' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_HandlePawnConverted, CallFunc_GetActorTeam_ReturnValue) == 0x000010, "Member 'BP_PlayerPawn_Tandem_C_HandlePawnConverted::CallFunc_GetActorTeam_ReturnValue' has a wrong offset!");

// Function BP_PlayerPawn_Tandem.BP_PlayerPawn_Tandem_C.HandlePawnUnconverted
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerPawn_Tandem_C_HandlePawnUnconverted final
{
public:
	class AFortPawn*                              UnconvertedPawn;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerPawn_Tandem_C_HandlePawnUnconverted) == 0x000008, "Wrong alignment on BP_PlayerPawn_Tandem_C_HandlePawnUnconverted");
static_assert(sizeof(BP_PlayerPawn_Tandem_C_HandlePawnUnconverted) == 0x000008, "Wrong size on BP_PlayerPawn_Tandem_C_HandlePawnUnconverted");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_HandlePawnUnconverted, UnconvertedPawn) == 0x000000, "Member 'BP_PlayerPawn_Tandem_C_HandlePawnUnconverted::UnconvertedPawn' has a wrong offset!");

// Function BP_PlayerPawn_Tandem.BP_PlayerPawn_Tandem_C.OnDeathPlayEffects
// 0x0148 (0x0148 - 0x0000)
struct BP_PlayerPawn_Tandem_C_OnDeathPlayEffects final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0040(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              InstigatedBy;                                      // 0x0120(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0128(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x0130(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_PlayerPawn_Tandem_C_OnDeathPlayEffects) == 0x000008, "Wrong alignment on BP_PlayerPawn_Tandem_C_OnDeathPlayEffects");
static_assert(sizeof(BP_PlayerPawn_Tandem_C_OnDeathPlayEffects) == 0x000148, "Wrong size on BP_PlayerPawn_Tandem_C_OnDeathPlayEffects");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_OnDeathPlayEffects, Damage) == 0x000000, "Member 'BP_PlayerPawn_Tandem_C_OnDeathPlayEffects::Damage' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_OnDeathPlayEffects, DamageTags) == 0x000008, "Member 'BP_PlayerPawn_Tandem_C_OnDeathPlayEffects::DamageTags' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_OnDeathPlayEffects, Momentum) == 0x000028, "Member 'BP_PlayerPawn_Tandem_C_OnDeathPlayEffects::Momentum' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_OnDeathPlayEffects, HitInfo) == 0x000040, "Member 'BP_PlayerPawn_Tandem_C_OnDeathPlayEffects::HitInfo' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_OnDeathPlayEffects, InstigatedBy) == 0x000120, "Member 'BP_PlayerPawn_Tandem_C_OnDeathPlayEffects::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_OnDeathPlayEffects, DamageCauser) == 0x000128, "Member 'BP_PlayerPawn_Tandem_C_OnDeathPlayEffects::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_OnDeathPlayEffects, EffectContext) == 0x000130, "Member 'BP_PlayerPawn_Tandem_C_OnDeathPlayEffects::EffectContext' has a wrong offset!");

// Function BP_PlayerPawn_Tandem.BP_PlayerPawn_Tandem_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerPawn_Tandem_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerPawn_Tandem_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_PlayerPawn_Tandem_C_ReceiveEndPlay");
static_assert(sizeof(BP_PlayerPawn_Tandem_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_PlayerPawn_Tandem_C_ReceiveEndPlay");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_PlayerPawn_Tandem_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_PlayerPawn_Tandem.BP_PlayerPawn_Tandem_C.UpdateConvertIndicator
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerPawn_Tandem_C_UpdateConvertIndicator final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetFirstLocalFortPlayerController_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetActorTeam_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerPawn_Tandem_C_UpdateConvertIndicator) == 0x000008, "Wrong alignment on BP_PlayerPawn_Tandem_C_UpdateConvertIndicator");
static_assert(sizeof(BP_PlayerPawn_Tandem_C_UpdateConvertIndicator) == 0x000018, "Wrong size on BP_PlayerPawn_Tandem_C_UpdateConvertIndicator");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_UpdateConvertIndicator, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BP_PlayerPawn_Tandem_C_UpdateConvertIndicator::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_UpdateConvertIndicator, CallFunc_GetFirstLocalFortPlayerController_ReturnValue) == 0x000008, "Member 'BP_PlayerPawn_Tandem_C_UpdateConvertIndicator::CallFunc_GetFirstLocalFortPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_UpdateConvertIndicator, CallFunc_GetActorTeam_ReturnValue) == 0x000010, "Member 'BP_PlayerPawn_Tandem_C_UpdateConvertIndicator::CallFunc_GetActorTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_UpdateConvertIndicator, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'BP_PlayerPawn_Tandem_C_UpdateConvertIndicator::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_PlayerPawn_Tandem.BP_PlayerPawn_Tandem_C.UpdatePawnHealthHUD
// 0x0070 (0x0070 - 0x0000)
struct BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD final
{
public:
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNPCStatusWidget_AIBoss_C*              K2Node_DynamicCast_AsNPCStatus_Widget_AIBoss;      // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortPlayerController*>          CallFunc_GetLocalFortPlayerControllers_ReturnValue; // 0x0028(0x0010)(ReferenceParm)
	class AFortPlayerController*                  CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetDistanceBetweenActors_Distance;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD) == 0x000008, "Wrong alignment on BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD");
static_assert(sizeof(BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD) == 0x000070, "Wrong size on BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD, Temp_bool_True_if_break_was_hit_Variable) == 0x000000, "Member 'BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD, CallFunc_HasAuthority_ReturnValue) == 0x000009, "Member 'BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD, CallFunc_Not_PreBool_ReturnValue_1) == 0x00000A, "Member 'BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD, CallFunc_Not_PreBool_ReturnValue_2) == 0x00000B, "Member 'BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000010, "Member 'BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD, K2Node_DynamicCast_AsNPCStatus_Widget_AIBoss) == 0x000018, "Member 'BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD::K2Node_DynamicCast_AsNPCStatus_Widget_AIBoss' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD, CallFunc_GetLocalFortPlayerControllers_ReturnValue) == 0x000028, "Member 'BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD::CallFunc_GetLocalFortPlayerControllers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD, CallFunc_K2_GetPawn_ReturnValue) == 0x000048, "Member 'BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD, CallFunc_GetDistanceBetweenActors_Distance) == 0x000058, "Member 'BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD::CallFunc_GetDistanceBetweenActors_Distance' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000060, "Member 'BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD, CallFunc_Less_IntInt_ReturnValue) == 0x000061, "Member 'BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD, CallFunc_BooleanAND_ReturnValue) == 0x000062, "Member 'BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD, CallFunc_BooleanAND_ReturnValue_1) == 0x000063, "Member 'BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD, CallFunc_BooleanAND_ReturnValue_2) == 0x000064, "Member 'BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_PlayerPawn_Tandem_C_UpdatePawnHealthHUD::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerPawn_Tandem.BP_PlayerPawn_Tandem_C.WidgetVisibilityChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerPawn_Tandem_C_WidgetVisibilityChanged final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerPawn_Tandem_C_WidgetVisibilityChanged) == 0x000001, "Wrong alignment on BP_PlayerPawn_Tandem_C_WidgetVisibilityChanged");
static_assert(sizeof(BP_PlayerPawn_Tandem_C_WidgetVisibilityChanged) == 0x000001, "Wrong size on BP_PlayerPawn_Tandem_C_WidgetVisibilityChanged");
static_assert(offsetof(BP_PlayerPawn_Tandem_C_WidgetVisibilityChanged, bVisible) == 0x000000, "Member 'BP_PlayerPawn_Tandem_C_WidgetVisibilityChanged::bVisible' has a wrong offset!");

}

