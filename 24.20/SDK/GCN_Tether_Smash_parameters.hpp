#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCN_Tether_Smash

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GCN_Tether_Smash.GCN_Tether_Smash_C.OnBurst
// 0x0670 (0x0670 - 0x0000)
struct GCN_Tether_Smash_C_OnBurst final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       ParticleComponents;                                // 0x00D8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x00E8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class ULegacyCameraShake*                     BurstCameraShakeInstance;                          // 0x00F8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            BurstDecalInstance;                                // 0x0100(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0108(0x0010)(ConstParm, ReferenceParm)
	class UParticleSystemComponent*               CallFunc_Array_Get_Item;                           // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_AddWorldOffset_SweepHitResult;         // 0x0128(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0210(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0320(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0338(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0378(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0390(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0471(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0472(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_473[0x1];                                      // 0x0473(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C[0x4];                                      // 0x047C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0480(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0498(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x04B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x04C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x04E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x04E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x04F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x04FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0504(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50C[0x4];                                      // 0x050C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0510(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0528(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0540(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0558(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_1;       // 0x0570(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x0588(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UDecalComponent*                        CallFunc_SpawnDecalAtLocation_ReturnValue;         // 0x0668(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCN_Tether_Smash_C_OnBurst) == 0x000008, "Wrong alignment on GCN_Tether_Smash_C_OnBurst");
static_assert(sizeof(GCN_Tether_Smash_C_OnBurst) == 0x000670, "Wrong size on GCN_Tether_Smash_C_OnBurst");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, MyTarget) == 0x000000, "Member 'GCN_Tether_Smash_C_OnBurst::MyTarget' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, Parameters) == 0x000008, "Member 'GCN_Tether_Smash_C_OnBurst::Parameters' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, ParticleComponents) == 0x0000D8, "Member 'GCN_Tether_Smash_C_OnBurst::ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, AudioComponents) == 0x0000E8, "Member 'GCN_Tether_Smash_C_OnBurst::AudioComponents' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, BurstCameraShakeInstance) == 0x0000F8, "Member 'GCN_Tether_Smash_C_OnBurst::BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, BurstDecalInstance) == 0x000100, "Member 'GCN_Tether_Smash_C_OnBurst::BurstDecalInstance' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, Temp_object_Variable) == 0x000108, "Member 'GCN_Tether_Smash_C_OnBurst::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_Array_Get_Item) == 0x000118, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_K2_AddWorldOffset_SweepHitResult) == 0x000128, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_K2_AddWorldOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_Greater_IntInt_ReturnValue) == 0x000208, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000210, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_GetForwardVector_ReturnValue) == 0x0002F0, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000308, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000320, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, K2Node_MakeArray_Array) == 0x000338, "Member 'GCN_Tether_Smash_C_OnBurst::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_Add_VectorVector_ReturnValue) == 0x000348, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000360, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000378, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000390, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000470, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_BreakHitResult_bBlockingHit) == 0x000471, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_BreakHitResult_bInitialOverlap) == 0x000472, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_BreakHitResult_Time) == 0x000474, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_BreakHitResult_Distance) == 0x000478, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_BreakHitResult_Location) == 0x000480, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_BreakHitResult_ImpactPoint) == 0x000498, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_BreakHitResult_Normal) == 0x0004B0, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_BreakHitResult_ImpactNormal) == 0x0004C8, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_BreakHitResult_PhysMat) == 0x0004E0, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_BreakHitResult_HitActor) == 0x0004E8, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_BreakHitResult_HitComponent) == 0x0004F0, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_BreakHitResult_HitBoneName) == 0x0004F8, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_BreakHitResult_BoneName) == 0x0004FC, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_BreakHitResult_HitItem) == 0x000500, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_BreakHitResult_ElementIndex) == 0x000504, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_BreakHitResult_FaceIndex) == 0x000508, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_BreakHitResult_TraceStart) == 0x000510, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_BreakHitResult_TraceEnd) == 0x000528, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000540, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000558, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_Conv_VectorToRotator_ReturnValue_1) == 0x000570, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_Conv_VectorToRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x000588, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(GCN_Tether_Smash_C_OnBurst, CallFunc_SpawnDecalAtLocation_ReturnValue) == 0x000668, "Member 'GCN_Tether_Smash_C_OnBurst::CallFunc_SpawnDecalAtLocation_ReturnValue' has a wrong offset!");

}

