#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_AthenaMapMarkerBase

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function B_AthenaMapMarkerBase.B_AthenaMapMarkerBase_C.ExecuteUbergraph_B_AthenaMapMarkerBase
// 0x0278 (0x0278 - 0x0000)
struct B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortWorldMarkerData                   K2Node_Event_MarkerData;                           // 0x0010(0x0180)(ConstParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_13;                             // 0x01BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_14;                             // 0x01BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_15;                             // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortWorldMarkerType                          Temp_byte_Variable;                                // 0x01BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BE[0x2];                                      // 0x01BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x01F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Event_InColor;                              // 0x0204(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0214(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_232[0x6];                                      // 0x0232(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_1;                // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_2;                // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase) == 0x000008, "Wrong alignment on B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase");
static_assert(sizeof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase) == 0x000278, "Wrong size on B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, EntryPoint) == 0x000000, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, Temp_bool_Variable) == 0x000004, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, Temp_bool_Variable_1) == 0x000005, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, Temp_bool_Variable_2) == 0x000006, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, Temp_bool_Variable_3) == 0x000007, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, Temp_bool_Variable_4) == 0x000008, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, Temp_bool_Variable_5) == 0x000009, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, Temp_bool_Variable_6) == 0x00000A, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, Temp_bool_Variable_7) == 0x00000B, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, Temp_bool_Variable_8) == 0x00000C, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, Temp_bool_Variable_9) == 0x00000D, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, Temp_bool_Variable_10) == 0x00000E, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, Temp_bool_Variable_11) == 0x00000F, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, K2Node_Event_MarkerData) == 0x000010, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::K2Node_Event_MarkerData' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000190, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x0001A8, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001B8, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, Temp_bool_Variable_12) == 0x0001B9, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, Temp_bool_Variable_13) == 0x0001BA, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, Temp_bool_Variable_14) == 0x0001BB, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, Temp_bool_Variable_15) == 0x0001BC, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, Temp_byte_Variable) == 0x0001BD, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0001C0, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, K2Node_Select_Default) == 0x0001C8, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0001D0, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x0001E8, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x0001F0, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, CallFunc_IsValid_ReturnValue) == 0x000200, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, K2Node_Event_InColor) == 0x000204, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::K2Node_Event_InColor' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000214, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, CallFunc_Lerp_ReturnValue) == 0x000228, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000230, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, CallFunc_IsValid_ReturnValue_1) == 0x000231, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, CallFunc_Lerp_ReturnValue_1) == 0x000238, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, CallFunc_Lerp_ReturnValue_2) == 0x000240, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, CallFunc_Lerp_Alpha_ImplicitCast) == 0x000248, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000250, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, CallFunc_Lerp_Alpha_ImplicitCast_1) == 0x000258, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::CallFunc_Lerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000260, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, CallFunc_Lerp_Alpha_ImplicitCast_2) == 0x000268, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::CallFunc_Lerp_Alpha_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x000270, "Member 'B_AthenaMapMarkerBase_C_ExecuteUbergraph_B_AthenaMapMarkerBase::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");

// Function B_AthenaMapMarkerBase.B_AthenaMapMarkerBase_C.OnMarkerColorChanged
// 0x0010 (0x0010 - 0x0000)
struct B_AthenaMapMarkerBase_C_OnMarkerColorChanged final
{
public:
	struct FLinearColor                           InColor;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_AthenaMapMarkerBase_C_OnMarkerColorChanged) == 0x000004, "Wrong alignment on B_AthenaMapMarkerBase_C_OnMarkerColorChanged");
static_assert(sizeof(B_AthenaMapMarkerBase_C_OnMarkerColorChanged) == 0x000010, "Wrong size on B_AthenaMapMarkerBase_C_OnMarkerColorChanged");
static_assert(offsetof(B_AthenaMapMarkerBase_C_OnMarkerColorChanged, InColor) == 0x000000, "Member 'B_AthenaMapMarkerBase_C_OnMarkerColorChanged::InColor' has a wrong offset!");

// Function B_AthenaMapMarkerBase.B_AthenaMapMarkerBase_C.OnSetupMarker
// 0x0180 (0x0180 - 0x0000)
struct B_AthenaMapMarkerBase_C_OnSetupMarker final
{
public:
	struct FFortWorldMarkerData                   MarkerData_0;                                      // 0x0000(0x0180)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(B_AthenaMapMarkerBase_C_OnSetupMarker) == 0x000008, "Wrong alignment on B_AthenaMapMarkerBase_C_OnSetupMarker");
static_assert(sizeof(B_AthenaMapMarkerBase_C_OnSetupMarker) == 0x000180, "Wrong size on B_AthenaMapMarkerBase_C_OnSetupMarker");
static_assert(offsetof(B_AthenaMapMarkerBase_C_OnSetupMarker, MarkerData_0) == 0x000000, "Member 'B_AthenaMapMarkerBase_C_OnSetupMarker::MarkerData_0' has a wrong offset!");

// Function B_AthenaMapMarkerBase.B_AthenaMapMarkerBase_C.UserConstructionScript
// 0x0008 (0x0008 - 0x0000)
struct B_AthenaMapMarkerBase_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_AthenaMapMarkerBase_C_UserConstructionScript) == 0x000008, "Wrong alignment on B_AthenaMapMarkerBase_C_UserConstructionScript");
static_assert(sizeof(B_AthenaMapMarkerBase_C_UserConstructionScript) == 0x000008, "Wrong size on B_AthenaMapMarkerBase_C_UserConstructionScript");
static_assert(offsetof(B_AthenaMapMarkerBase_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'B_AthenaMapMarkerBase_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

}

