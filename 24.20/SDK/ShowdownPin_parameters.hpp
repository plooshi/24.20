#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ShowdownPin

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ShowdownPin.ShowdownPin_C.ChooseScoreToDisplay
// 0x0014 (0x0014 - 0x0000)
struct ShowdownPin_C_ChooseScoreToDisplay final
{
public:
	int32                                         ScoreToDisplay;                                    // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAlternativeScoreToDisplay_ReturnValue; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldUseAlternativeScore_ReturnValue;    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetScoreToDisplay_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ShowdownPin_C_ChooseScoreToDisplay) == 0x000004, "Wrong alignment on ShowdownPin_C_ChooseScoreToDisplay");
static_assert(sizeof(ShowdownPin_C_ChooseScoreToDisplay) == 0x000014, "Wrong size on ShowdownPin_C_ChooseScoreToDisplay");
static_assert(offsetof(ShowdownPin_C_ChooseScoreToDisplay, ScoreToDisplay) == 0x000000, "Member 'ShowdownPin_C_ChooseScoreToDisplay::ScoreToDisplay' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ChooseScoreToDisplay, CallFunc_GetAlternativeScoreToDisplay_ReturnValue) == 0x000004, "Member 'ShowdownPin_C_ChooseScoreToDisplay::CallFunc_GetAlternativeScoreToDisplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ChooseScoreToDisplay, CallFunc_ShouldUseAlternativeScore_ReturnValue) == 0x000008, "Member 'ShowdownPin_C_ChooseScoreToDisplay::CallFunc_ShouldUseAlternativeScore_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ChooseScoreToDisplay, CallFunc_GetScoreToDisplay_ReturnValue) == 0x00000C, "Member 'ShowdownPin_C_ChooseScoreToDisplay::CallFunc_GetScoreToDisplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ChooseScoreToDisplay, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'ShowdownPin_C_ChooseScoreToDisplay::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ChooseScoreToDisplay, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'ShowdownPin_C_ChooseScoreToDisplay::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ShowdownPin.ShowdownPin_C.EventFixPts
// 0x0004 (0x0004 - 0x0000)
struct ShowdownPin_C_EventFixPts final
{
public:
	int32                                         Points;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ShowdownPin_C_EventFixPts) == 0x000004, "Wrong alignment on ShowdownPin_C_EventFixPts");
static_assert(sizeof(ShowdownPin_C_EventFixPts) == 0x000004, "Wrong size on ShowdownPin_C_EventFixPts");
static_assert(offsetof(ShowdownPin_C_EventFixPts, Points) == 0x000000, "Member 'ShowdownPin_C_EventFixPts::Points' has a wrong offset!");

// Function ShowdownPin.ShowdownPin_C.EventSetTier
// 0x0004 (0x0004 - 0x0000)
struct ShowdownPin_C_EventSetTier final
{
public:
	int32                                         Score;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ShowdownPin_C_EventSetTier) == 0x000004, "Wrong alignment on ShowdownPin_C_EventSetTier");
static_assert(sizeof(ShowdownPin_C_EventSetTier) == 0x000004, "Wrong size on ShowdownPin_C_EventSetTier");
static_assert(offsetof(ShowdownPin_C_EventSetTier, Score) == 0x000000, "Member 'ShowdownPin_C_EventSetTier::Score' has a wrong offset!");

// Function ShowdownPin.ShowdownPin_C.ExecuteUbergraph_ShowdownPin
// 0x0208 (0x0208 - 0x0000)
struct ShowdownPin_C_ExecuteUbergraph_ShowdownPin final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_2;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_3;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Score;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0068(0x0018)()
	int32                                         K2Node_CustomEvent_Points;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0090(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F8(0x0018)()
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13A[0x2];                                      // 0x013A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_5;                               // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PauseAnimation_ReturnValue;               // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetStartTime_ReturnValue;                 // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PauseAnimation_ReturnValue_1;             // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTournamentPinUnlockScore_ReturnValue;  // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_2;                           // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19A[0x2];                                      // 0x019A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_3;                           // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_4;                           // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_5;                           // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_6;                           // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AD[0x3];                                      // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default_7;                           // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast;    // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_StartAtTime_ImplicitCast;   // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_StartAtTime_ImplicitCast_1; // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin) == 0x000008, "Wrong alignment on ShowdownPin_C_ExecuteUbergraph_ShowdownPin");
static_assert(sizeof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin) == 0x000208, "Wrong size on ShowdownPin_C_ExecuteUbergraph_ShowdownPin");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, EntryPoint) == 0x000000, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::EntryPoint' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, Temp_bool_Variable) == 0x000004, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, Temp_int_Variable) == 0x000008, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, Temp_bool_Variable_1) == 0x00000C, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, Temp_int_Variable_1) == 0x000010, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, Temp_bool_Variable_2) == 0x000014, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, Temp_int_Variable_2) == 0x000018, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, Temp_int_Variable_3) == 0x00001C, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, Temp_bool_Variable_3) == 0x000020, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, Temp_real_Variable) == 0x000028, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, Temp_bool_Variable_4) == 0x000030, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, Temp_byte_Variable) == 0x000031, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, Temp_byte_Variable_1) == 0x000032, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, Temp_object_Variable) == 0x000038, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, Temp_object_Variable_1) == 0x000040, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, Temp_object_Variable_2) == 0x000048, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, Temp_object_Variable_3) == 0x000050, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, K2Node_Event_IsDesignTime) == 0x000058, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, K2Node_CustomEvent_Score) == 0x00005C, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::K2Node_CustomEvent_Score' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000060, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, Temp_int_Variable_4) == 0x000064, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, CallFunc_Conv_IntToText_ReturnValue) == 0x000068, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, K2Node_CustomEvent_Points) == 0x000080, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::K2Node_CustomEvent_Points' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000088, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, K2Node_MakeStruct_FormatArgumentData) == 0x000090, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, K2Node_MakeArray_Array) == 0x0000E0, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, Temp_byte_Variable_2) == 0x0000F0, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, CallFunc_Format_ReturnValue) == 0x0000F8, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000110, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, CallFunc_MakeColor_ReturnValue) == 0x000118, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, Temp_byte_Variable_3) == 0x000128, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000130, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, Temp_bool_Variable_5) == 0x000138, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, K2Node_Select_Default) == 0x000139, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, Temp_int_Variable_5) == 0x00013C, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, CallFunc_PauseAnimation_ReturnValue) == 0x000140, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::CallFunc_PauseAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, CallFunc_GetStartTime_ReturnValue) == 0x000144, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::CallFunc_GetStartTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, CallFunc_PauseAnimation_ReturnValue_1) == 0x000148, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::CallFunc_PauseAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x00014C, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000150, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, CallFunc_PlayAnimation_ReturnValue) == 0x000158, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, CallFunc_GetEndTime_ReturnValue) == 0x000160, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, Temp_int_Variable_6) == 0x000164, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000168, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, K2Node_Select_Default_1) == 0x000170, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, CallFunc_PlayAnimation_ReturnValue_1) == 0x000178, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, Temp_bool_Variable_6) == 0x000180, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, CallFunc_GetTournamentPinUnlockScore_ReturnValue) == 0x000184, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::CallFunc_GetTournamentPinUnlockScore_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000188, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, K2Node_Select_Default_2) == 0x00018C, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000190, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000198, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000199, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, K2Node_Select_Default_3) == 0x00019C, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x0001A0, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, K2Node_Select_Default_4) == 0x0001A4, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, K2Node_Select_Default_5) == 0x0001A8, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, K2Node_Select_Default_6) == 0x0001AC, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, K2Node_Select_Default_7) == 0x0001B0, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x0001B8, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x0001C0, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x0001C8, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x0001D0, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast) == 0x0001D8, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0001E0, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, CallFunc_PlayAnimation_StartAtTime_ImplicitCast) == 0x0001E8, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::CallFunc_PlayAnimation_StartAtTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0001F0, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, CallFunc_PlayAnimation_StartAtTime_ImplicitCast_1) == 0x0001F8, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::CallFunc_PlayAnimation_StartAtTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_ExecuteUbergraph_ShowdownPin, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000200, "Member 'ShowdownPin_C_ExecuteUbergraph_ShowdownPin::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function ShowdownPin.ShowdownPin_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ShowdownPin_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ShowdownPin_C_PreConstruct) == 0x000001, "Wrong alignment on ShowdownPin_C_PreConstruct");
static_assert(sizeof(ShowdownPin_C_PreConstruct) == 0x000001, "Wrong size on ShowdownPin_C_PreConstruct");
static_assert(offsetof(ShowdownPin_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ShowdownPin_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ShowdownPin.ShowdownPin_C.Refresh
// 0x0080 (0x0080 - 0x0000)
struct ShowdownPin_C_Refresh final
{
public:
	EFortShowdownPinState                         PinState;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortShowdownPinState                         Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ChooseScoreToDisplay_ScoreToDisplay;      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetScoreToDisplay_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetShorthandQuantityWithLimitedDigits_ReturnValue; // 0x0018(0x0018)()
	class FText                                   CallFunc_GetShorthandQuantityWithLimitedDigits_ReturnValue_1; // 0x0030(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0048(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortShowdownPinState                         Temp_byte_Variable_1;                              // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             K2Node_Select_Default;                             // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_Select_Default_1;                           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EFortShowdownPinState                         CallFunc_GetEventPinState_ReturnValue;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortShowdownPinState                         CallFunc_GetTournamentBestPinState_ReturnValue;    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortShowdownPinState                         K2Node_Select_Default_2;                           // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ShowdownPin_C_Refresh) == 0x000008, "Wrong alignment on ShowdownPin_C_Refresh");
static_assert(sizeof(ShowdownPin_C_Refresh) == 0x000080, "Wrong size on ShowdownPin_C_Refresh");
static_assert(offsetof(ShowdownPin_C_Refresh, PinState) == 0x000000, "Member 'ShowdownPin_C_Refresh::PinState' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_Refresh, Temp_byte_Variable) == 0x000001, "Member 'ShowdownPin_C_Refresh::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_Refresh, CallFunc_ChooseScoreToDisplay_ScoreToDisplay) == 0x000004, "Member 'ShowdownPin_C_Refresh::CallFunc_ChooseScoreToDisplay_ScoreToDisplay' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_Refresh, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000008, "Member 'ShowdownPin_C_Refresh::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_Refresh, CallFunc_GetScoreToDisplay_ReturnValue) == 0x00000C, "Member 'ShowdownPin_C_Refresh::CallFunc_GetScoreToDisplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_Refresh, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000010, "Member 'ShowdownPin_C_Refresh::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_Refresh, CallFunc_GetShorthandQuantityWithLimitedDigits_ReturnValue) == 0x000018, "Member 'ShowdownPin_C_Refresh::CallFunc_GetShorthandQuantityWithLimitedDigits_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_Refresh, CallFunc_GetShorthandQuantityWithLimitedDigits_ReturnValue_1) == 0x000030, "Member 'ShowdownPin_C_Refresh::CallFunc_GetShorthandQuantityWithLimitedDigits_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_Refresh, CallFunc_Conv_IntToText_ReturnValue) == 0x000048, "Member 'ShowdownPin_C_Refresh::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_Refresh, Temp_bool_Variable) == 0x000060, "Member 'ShowdownPin_C_Refresh::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_Refresh, Temp_byte_Variable_1) == 0x000061, "Member 'ShowdownPin_C_Refresh::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_Refresh, K2Node_SwitchEnum_CmpSuccess) == 0x000062, "Member 'ShowdownPin_C_Refresh::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_Refresh, K2Node_Select_Default) == 0x000068, "Member 'ShowdownPin_C_Refresh::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_Refresh, K2Node_Select_Default_1) == 0x000070, "Member 'ShowdownPin_C_Refresh::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_Refresh, CallFunc_GetEventPinState_ReturnValue) == 0x000078, "Member 'ShowdownPin_C_Refresh::CallFunc_GetEventPinState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_Refresh, CallFunc_GetTournamentBestPinState_ReturnValue) == 0x000079, "Member 'ShowdownPin_C_Refresh::CallFunc_GetTournamentBestPinState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ShowdownPin_C_Refresh, K2Node_Select_Default_2) == 0x00007A, "Member 'ShowdownPin_C_Refresh::K2Node_Select_Default_2' has a wrong offset!");

}

