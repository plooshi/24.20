#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCNL_Jetpack_Hover_Lateral

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GCNL_Jetpack_Hover_Lateral.GCNL_Jetpack_Hover_Lateral_C
// 0x00E8 (0x0B88 - 0x0AA0)
class AGCNL_Jetpack_Hover_Lateral_C final : public AGameplayCueNotify_Jetpack_Hovering
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0AA0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          bJetpackAudioEnabled;                              // 0x0AA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA9[0x7];                                      // 0x0AA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             SoundOnStart;                                      // 0x0AB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundOnStop;                                       // 0x0AB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundLoopOnIdle;                                   // 0x0AC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundLoopOnAccel;                                  // 0x0AC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundLoopOnOutOfFuel;                              // 0x0AD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundOnFuelWarning;                                // 0x0AD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundOnOutOfFuel;                                  // 0x0AE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFirstJump;                                      // 0x0AE8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AE9[0x7];                                      // 0x0AE9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               GroundInteract;                                    // 0x0AF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class USkeletalMeshComponent>  Milo_Check;                                        // 0x0AF8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, InstancedReference, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 Milo_Backpack;                                     // 0x0B20(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FVector                                Milo_LightScale;                                   // 0x0B48(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        HoverEffect;                                       // 0x0B60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FName                                   AttachSocketName;                                  // 0x0B68(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B6C[0x4];                                      // 0x0B6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        P_GroundInteract;                                  // 0x0B70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UFXSystemComponent*                     HoverFXSystem;                                     // 0x0B78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFXSystemAsset*                         NS_Hover;                                          // 0x0B80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GCNL_Jetpack_Hover_Lateral(int32 EntryPoint);
	void K2_HandleGameplayCue(class AActor* MyTarget, EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	bool OnActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	bool OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void ReceiveDestroyed();
	void ResetFX();
	void SetJetpackAudioEnabled(bool Enabled);
	void TryToPlayGroundEffects();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GCNL_Jetpack_Hover_Lateral_C">();
	}
	static class AGCNL_Jetpack_Hover_Lateral_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGCNL_Jetpack_Hover_Lateral_C>();
	}
};
static_assert(alignof(AGCNL_Jetpack_Hover_Lateral_C) == 0x000008, "Wrong alignment on AGCNL_Jetpack_Hover_Lateral_C");
static_assert(sizeof(AGCNL_Jetpack_Hover_Lateral_C) == 0x000B88, "Wrong size on AGCNL_Jetpack_Hover_Lateral_C");
static_assert(offsetof(AGCNL_Jetpack_Hover_Lateral_C, UberGraphFrame) == 0x000AA0, "Member 'AGCNL_Jetpack_Hover_Lateral_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGCNL_Jetpack_Hover_Lateral_C, bJetpackAudioEnabled) == 0x000AA8, "Member 'AGCNL_Jetpack_Hover_Lateral_C::bJetpackAudioEnabled' has a wrong offset!");
static_assert(offsetof(AGCNL_Jetpack_Hover_Lateral_C, SoundOnStart) == 0x000AB0, "Member 'AGCNL_Jetpack_Hover_Lateral_C::SoundOnStart' has a wrong offset!");
static_assert(offsetof(AGCNL_Jetpack_Hover_Lateral_C, SoundOnStop) == 0x000AB8, "Member 'AGCNL_Jetpack_Hover_Lateral_C::SoundOnStop' has a wrong offset!");
static_assert(offsetof(AGCNL_Jetpack_Hover_Lateral_C, SoundLoopOnIdle) == 0x000AC0, "Member 'AGCNL_Jetpack_Hover_Lateral_C::SoundLoopOnIdle' has a wrong offset!");
static_assert(offsetof(AGCNL_Jetpack_Hover_Lateral_C, SoundLoopOnAccel) == 0x000AC8, "Member 'AGCNL_Jetpack_Hover_Lateral_C::SoundLoopOnAccel' has a wrong offset!");
static_assert(offsetof(AGCNL_Jetpack_Hover_Lateral_C, SoundLoopOnOutOfFuel) == 0x000AD0, "Member 'AGCNL_Jetpack_Hover_Lateral_C::SoundLoopOnOutOfFuel' has a wrong offset!");
static_assert(offsetof(AGCNL_Jetpack_Hover_Lateral_C, SoundOnFuelWarning) == 0x000AD8, "Member 'AGCNL_Jetpack_Hover_Lateral_C::SoundOnFuelWarning' has a wrong offset!");
static_assert(offsetof(AGCNL_Jetpack_Hover_Lateral_C, SoundOnOutOfFuel) == 0x000AE0, "Member 'AGCNL_Jetpack_Hover_Lateral_C::SoundOnOutOfFuel' has a wrong offset!");
static_assert(offsetof(AGCNL_Jetpack_Hover_Lateral_C, bIsFirstJump) == 0x000AE8, "Member 'AGCNL_Jetpack_Hover_Lateral_C::bIsFirstJump' has a wrong offset!");
static_assert(offsetof(AGCNL_Jetpack_Hover_Lateral_C, GroundInteract) == 0x000AF0, "Member 'AGCNL_Jetpack_Hover_Lateral_C::GroundInteract' has a wrong offset!");
static_assert(offsetof(AGCNL_Jetpack_Hover_Lateral_C, Milo_Check) == 0x000AF8, "Member 'AGCNL_Jetpack_Hover_Lateral_C::Milo_Check' has a wrong offset!");
static_assert(offsetof(AGCNL_Jetpack_Hover_Lateral_C, Milo_Backpack) == 0x000B20, "Member 'AGCNL_Jetpack_Hover_Lateral_C::Milo_Backpack' has a wrong offset!");
static_assert(offsetof(AGCNL_Jetpack_Hover_Lateral_C, Milo_LightScale) == 0x000B48, "Member 'AGCNL_Jetpack_Hover_Lateral_C::Milo_LightScale' has a wrong offset!");
static_assert(offsetof(AGCNL_Jetpack_Hover_Lateral_C, HoverEffect) == 0x000B60, "Member 'AGCNL_Jetpack_Hover_Lateral_C::HoverEffect' has a wrong offset!");
static_assert(offsetof(AGCNL_Jetpack_Hover_Lateral_C, AttachSocketName) == 0x000B68, "Member 'AGCNL_Jetpack_Hover_Lateral_C::AttachSocketName' has a wrong offset!");
static_assert(offsetof(AGCNL_Jetpack_Hover_Lateral_C, P_GroundInteract) == 0x000B70, "Member 'AGCNL_Jetpack_Hover_Lateral_C::P_GroundInteract' has a wrong offset!");
static_assert(offsetof(AGCNL_Jetpack_Hover_Lateral_C, HoverFXSystem) == 0x000B78, "Member 'AGCNL_Jetpack_Hover_Lateral_C::HoverFXSystem' has a wrong offset!");
static_assert(offsetof(AGCNL_Jetpack_Hover_Lateral_C, NS_Hover) == 0x000B80, "Member 'AGCNL_Jetpack_Hover_Lateral_C::NS_Hover' has a wrong offset!");

}

