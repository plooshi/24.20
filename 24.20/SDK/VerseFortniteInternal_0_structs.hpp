#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerseFortniteInternal_0

#include "Basic.hpp"

#include "EpicGamesTemporary_0_structs.hpp"


namespace SDK
{

// VerseEnum VerseFortniteInternal.Game_Player_player_status_type
// NumValues: 0x0008
enum class EGame_Player_player_status_type : uint8
{
	OnGround                                 = 0,
	Skydiving                                = 1,
	UsingGlider                              = 2,
	InVehicle                                = 3,
	Shooting                                 = 4,
	AimingDownSights                         = 5,
	InStasis                                 = 6,
	Game_Player_player_status_MAX            = 7,
};

// VerseEnum VerseFortniteInternal.Game_Player_PlayerAttribute
// NumValues: 0x0007
enum class EGame_Player_PlayerAttribute : uint8
{
	CurrentHealth                            = 0,
	CurrentShield                            = 1,
	InitialHealth                            = 2,
	InitialShield                            = 3,
	Damage                                   = 4,
	ShieldDamage                             = 5,
	Game_Player_MAX                          = 6,
};

// VerseEnum VerseFortniteInternal.Game_Player_PlayerAttributeOperation
// NumValues: 0x0007
enum class EGame_Player_PlayerAttributeOperation : uint8
{
	Add                                      = 0,
	Multiply                                 = 1,
	Divide                                   = 2,
	Override                                 = 3,
	SetMax                                   = 4,
	SetMin                                   = 5,
	Game_Player_MAX                          = 6,
};

// VerseEnum VerseFortniteInternal.Game_PlayerSettingState
// NumValues: 0x0004
enum class EGame_PlayerSettingState : uint8
{
	PlayerDefault                            = 0,
	PlayerAllow                              = 1,
	PlayerDisallow                           = 2,
	Game_MAX                                 = 3,
};

// VerseStruct VerseFortniteInternal.Game_Player_player_team
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FGame_Player_player_team final
{
public:
	uint8                                         Pad_0[0x4];                                        // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FGame_Player_player_team) == 0x000004, "Wrong alignment on FGame_Player_player_team");
static_assert(sizeof(FGame_Player_player_team) == 0x000004, "Wrong size on FGame_Player_player_team");

// VerseStruct VerseFortniteInternal.tuple_L_R
// 0x0001 (0x0001 - 0x0000)
struct VerseFortniteInternal_0::Ftuple_L_R final
{
public:
	uint8                                         _StructPaddingDummy;                               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseFortniteInternal_0::Ftuple_L_R) == 0x000001, "Wrong alignment on VerseFortniteInternal_0::Ftuple_L_R");
static_assert(sizeof(VerseFortniteInternal_0::Ftuple_L_R) == 0x000001, "Wrong size on VerseFortniteInternal_0::Ftuple_L_R");
static_assert(offsetof(VerseFortniteInternal_0::Ftuple_L_R, _StructPaddingDummy) == 0x000000, "Member 'VerseFortniteInternal_0::Ftuple_L_R::_StructPaddingDummy' has a wrong offset!");

// VerseStruct VerseFortniteInternal.tuple_Lany_Mability__component_R
// 0x0010 (0x0010 - 0x0000)
struct VerseFortniteInternal_0::Ftuple_Lany_Mability__component_R final
{
public:
	class UClass*                                 __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGame_Abilities_ability_component*      __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
};
static_assert(alignof(VerseFortniteInternal_0::Ftuple_Lany_Mability__component_R) == 0x000008, "Wrong alignment on VerseFortniteInternal_0::Ftuple_Lany_Mability__component_R");
static_assert(sizeof(VerseFortniteInternal_0::Ftuple_Lany_Mability__component_R) == 0x000010, "Wrong size on VerseFortniteInternal_0::Ftuple_Lany_Mability__component_R");
static_assert(offsetof(VerseFortniteInternal_0::Ftuple_Lany_Mability__component_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'VerseFortniteInternal_0::Ftuple_Lany_Mability__component_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(VerseFortniteInternal_0::Ftuple_Lany_Mability__component_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'VerseFortniteInternal_0::Ftuple_Lany_Mability__component_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// VerseStruct VerseFortniteInternal.tuple_Lcomponent_M_K_Kchar_R
// 0x0018 (0x0018 - 0x0000)
struct Ftuple_Lcomponent_M_K_Kchar_R final
{
public:
	class UEntityComponent*                       __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<FVerseStringProperty_>                 __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0010)(InstancedReference, ContainsInstancedReference)
};
static_assert(alignof(Ftuple_Lcomponent_M_K_Kchar_R) == 0x000008, "Wrong alignment on Ftuple_Lcomponent_M_K_Kchar_R");
static_assert(sizeof(Ftuple_Lcomponent_M_K_Kchar_R) == 0x000018, "Wrong size on Ftuple_Lcomponent_M_K_Kchar_R");
static_assert(offsetof(Ftuple_Lcomponent_M_K_Kchar_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lcomponent_M_K_Kchar_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lcomponent_M_K_Kchar_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Lcomponent_M_K_Kchar_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// VerseStruct VerseFortniteInternal.tuple_Lcomponent_Mcomponent_R
// 0x0010 (0x0010 - 0x0000)
struct Ftuple_Lcomponent_Mcomponent_R final
{
public:
	class UEntityComponent*                       __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UClass*                                 __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_Lcomponent_Mcomponent_R) == 0x000008, "Wrong alignment on Ftuple_Lcomponent_Mcomponent_R");
static_assert(sizeof(Ftuple_Lcomponent_Mcomponent_R) == 0x000010, "Wrong size on Ftuple_Lcomponent_Mcomponent_R");
static_assert(offsetof(Ftuple_Lcomponent_Mcomponent_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lcomponent_Mcomponent_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lcomponent_Mcomponent_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Lcomponent_Mcomponent_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// VerseStruct VerseFortniteInternal.tuple_Lcomponent_Mfort__item__definition_Mint_Mvector3_R
// 0x0030 (0x0030 - 0x0000)
struct Ftuple_Lcomponent_Mfort__item__definition_Mint_Mvector3_R final
{
public:
	class UEntityComponent*                       __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGame_fort_item_definition*             __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int64                                         __verse_0x932BF92E_Elem2;                          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSpatialMath_vector3                   __verse_0xF64C4596_Elem3;                          // 0x0018(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ftuple_Lcomponent_Mfort__item__definition_Mint_Mvector3_R) == 0x000008, "Wrong alignment on Ftuple_Lcomponent_Mfort__item__definition_Mint_Mvector3_R");
static_assert(sizeof(Ftuple_Lcomponent_Mfort__item__definition_Mint_Mvector3_R) == 0x000030, "Wrong size on Ftuple_Lcomponent_Mfort__item__definition_Mint_Mvector3_R");
static_assert(offsetof(Ftuple_Lcomponent_Mfort__item__definition_Mint_Mvector3_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lcomponent_Mfort__item__definition_Mint_Mvector3_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lcomponent_Mfort__item__definition_Mint_Mvector3_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Lcomponent_Mfort__item__definition_Mint_Mvector3_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(Ftuple_Lcomponent_Mfort__item__definition_Mint_Mvector3_R, __verse_0x932BF92E_Elem2) == 0x000010, "Member 'Ftuple_Lcomponent_Mfort__item__definition_Mint_Mvector3_R::__verse_0x932BF92E_Elem2' has a wrong offset!");
static_assert(offsetof(Ftuple_Lcomponent_Mfort__item__definition_Mint_Mvector3_R, __verse_0xF64C4596_Elem3) == 0x000018, "Member 'Ftuple_Lcomponent_Mfort__item__definition_Mint_Mvector3_R::__verse_0xF64C4596_Elem3' has a wrong offset!");

// VerseStruct VerseFortniteInternal.tuple_Lcomponent_Mlogic_R
// 0x0010 (0x0010 - 0x0000)
struct Ftuple_Lcomponent_Mlogic_R final
{
public:
	class UEntityComponent*                       __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	uint8                                         __verse_0x7D844C3C_Elem1 : 1;                      // 0x0008(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (InstancedReference, NoDestructor, HasGetValueTypeHash))
};
static_assert(alignof(Ftuple_Lcomponent_Mlogic_R) == 0x000008, "Wrong alignment on Ftuple_Lcomponent_Mlogic_R");
static_assert(sizeof(Ftuple_Lcomponent_Mlogic_R) == 0x000010, "Wrong size on Ftuple_Lcomponent_Mlogic_R");
static_assert(offsetof(Ftuple_Lcomponent_Mlogic_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lcomponent_Mlogic_R::__verse_0x18E3F084_Elem0' has a wrong offset!");

// VerseStruct VerseFortniteInternal.tuple_Lgameplay__effect__asset_Mfloat_R
// 0x0010 (0x0010 - 0x0000)
struct Ftuple_Lgameplay__effect__asset_Mfloat_R final
{
public:
	class UGame_Abilities_gameplay_effect_asset*  __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_Lgameplay__effect__asset_Mfloat_R) == 0x000008, "Wrong alignment on Ftuple_Lgameplay__effect__asset_Mfloat_R");
static_assert(sizeof(Ftuple_Lgameplay__effect__asset_Mfloat_R) == 0x000010, "Wrong size on Ftuple_Lgameplay__effect__asset_Mfloat_R");
static_assert(offsetof(Ftuple_Lgameplay__effect__asset_Mfloat_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lgameplay__effect__asset_Mfloat_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lgameplay__effect__asset_Mfloat_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Lgameplay__effect__asset_Mfloat_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// VerseStruct VerseFortniteInternal.tuple_Lint_Mint_R
// 0x0010 (0x0010 - 0x0000)
struct VerseFortniteInternal_0::Ftuple_Lint_Mint_R final
{
public:
	int64                                         __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseFortniteInternal_0::Ftuple_Lint_Mint_R) == 0x000008, "Wrong alignment on VerseFortniteInternal_0::Ftuple_Lint_Mint_R");
static_assert(sizeof(VerseFortniteInternal_0::Ftuple_Lint_Mint_R) == 0x000010, "Wrong size on VerseFortniteInternal_0::Ftuple_Lint_Mint_R");
static_assert(offsetof(VerseFortniteInternal_0::Ftuple_Lint_Mint_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'VerseFortniteInternal_0::Ftuple_Lint_Mint_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(VerseFortniteInternal_0::Ftuple_Lint_Mint_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'VerseFortniteInternal_0::Ftuple_Lint_Mint_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// VerseStruct VerseFortniteInternal.tuple_Litem__type_Mint_Mplayer__component_R
// 0x0018 (0x0018 - 0x0000)
struct Ftuple_Litem__type_Mint_Mplayer__component_R final
{
public:
	class UGame_Item_item_type*                   __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int64                                         __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USimulation_player_component*           __verse_0x932BF92E_Elem2;                          // 0x0010(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_Litem__type_Mint_Mplayer__component_R) == 0x000008, "Wrong alignment on Ftuple_Litem__type_Mint_Mplayer__component_R");
static_assert(sizeof(Ftuple_Litem__type_Mint_Mplayer__component_R) == 0x000018, "Wrong size on Ftuple_Litem__type_Mint_Mplayer__component_R");
static_assert(offsetof(Ftuple_Litem__type_Mint_Mplayer__component_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Litem__type_Mint_Mplayer__component_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Litem__type_Mint_Mplayer__component_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Litem__type_Mint_Mplayer__component_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(Ftuple_Litem__type_Mint_Mplayer__component_R, __verse_0x932BF92E_Elem2) == 0x000010, "Member 'Ftuple_Litem__type_Mint_Mplayer__component_R::__verse_0x932BF92E_Elem2' has a wrong offset!");

// VerseStruct VerseFortniteInternal.tuple_Lplayer__component_Mplayer__start__component_R
// 0x0010 (0x0010 - 0x0000)
struct Ftuple_Lplayer__component_Mplayer__start__component_R final
{
public:
	class USimulation_player_component*           __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGame_Player_player_start_component*    __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_Lplayer__component_Mplayer__start__component_R) == 0x000008, "Wrong alignment on Ftuple_Lplayer__component_Mplayer__start__component_R");
static_assert(sizeof(Ftuple_Lplayer__component_Mplayer__start__component_R) == 0x000010, "Wrong size on Ftuple_Lplayer__component_Mplayer__start__component_R");
static_assert(offsetof(Ftuple_Lplayer__component_Mplayer__start__component_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lplayer__component_Mplayer__start__component_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lplayer__component_Mplayer__start__component_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Lplayer__component_Mplayer__start__component_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// VerseStruct VerseFortniteInternal.tuple_Lplayer__component_Mplayer__status__type_R
// 0x0010 (0x0010 - 0x0000)
struct Ftuple_Lplayer__component_Mplayer__status__type_R final
{
public:
	class USimulation_player_component*           __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EGame_Player_player_status_type               __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0001)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_Lplayer__component_Mplayer__status__type_R) == 0x000008, "Wrong alignment on Ftuple_Lplayer__component_Mplayer__status__type_R");
static_assert(sizeof(Ftuple_Lplayer__component_Mplayer__status__type_R) == 0x000010, "Wrong size on Ftuple_Lplayer__component_Mplayer__status__type_R");
static_assert(offsetof(Ftuple_Lplayer__component_Mplayer__status__type_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lplayer__component_Mplayer__status__type_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lplayer__component_Mplayer__status__type_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Lplayer__component_Mplayer__status__type_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// VerseStruct VerseFortniteInternal.tuple_Lplayer__team_Mint_Mint_R
// 0x0018 (0x0018 - 0x0000)
struct Ftuple_Lplayer__team_Mint_Mint_R final
{
public:
	struct FGame_Player_player_team               __verse_0x18E3F084_Elem0;                          // 0x0000(0x0004)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         __verse_0x932BF92E_Elem2;                          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_Lplayer__team_Mint_Mint_R) == 0x000008, "Wrong alignment on Ftuple_Lplayer__team_Mint_Mint_R");
static_assert(sizeof(Ftuple_Lplayer__team_Mint_Mint_R) == 0x000018, "Wrong size on Ftuple_Lplayer__team_Mint_Mint_R");
static_assert(offsetof(Ftuple_Lplayer__team_Mint_Mint_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lplayer__team_Mint_Mint_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lplayer__team_Mint_Mint_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Lplayer__team_Mint_Mint_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(Ftuple_Lplayer__team_Mint_Mint_R, __verse_0x932BF92E_Elem2) == 0x000010, "Member 'Ftuple_Lplayer__team_Mint_Mint_R::__verse_0x932BF92E_Elem2' has a wrong offset!");

// VerseStruct VerseFortniteInternal.tuple_Lplayer__team_Mint_R
// 0x0010 (0x0010 - 0x0000)
struct Ftuple_Lplayer__team_Mint_R final
{
public:
	struct FGame_Player_player_team               __verse_0x18E3F084_Elem0;                          // 0x0000(0x0004)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_Lplayer__team_Mint_R) == 0x000008, "Wrong alignment on Ftuple_Lplayer__team_Mint_R");
static_assert(sizeof(Ftuple_Lplayer__team_Mint_R) == 0x000010, "Wrong size on Ftuple_Lplayer__team_Mint_R");
static_assert(offsetof(Ftuple_Lplayer__team_Mint_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lplayer__team_Mint_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lplayer__team_Mint_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Lplayer__team_Mint_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// VerseStruct VerseFortniteInternal.tuple_Lplayer__team_Mplayer__team_R
// 0x0008 (0x0008 - 0x0000)
struct Ftuple_Lplayer__team_Mplayer__team_R final
{
public:
	struct FGame_Player_player_team               __verse_0x18E3F084_Elem0;                          // 0x0000(0x0004)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FGame_Player_player_team               __verse_0x7D844C3C_Elem1;                          // 0x0004(0x0004)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ftuple_Lplayer__team_Mplayer__team_R) == 0x000004, "Wrong alignment on Ftuple_Lplayer__team_Mplayer__team_R");
static_assert(sizeof(Ftuple_Lplayer__team_Mplayer__team_R) == 0x000008, "Wrong size on Ftuple_Lplayer__team_Mplayer__team_R");
static_assert(offsetof(Ftuple_Lplayer__team_Mplayer__team_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lplayer__team_Mplayer__team_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lplayer__team_Mplayer__team_R, __verse_0x7D844C3C_Elem1) == 0x000004, "Member 'Ftuple_Lplayer__team_Mplayer__team_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// VerseStruct VerseFortniteInternal.tuple_Lplayer_M_Kchar_Mint_Mlogic_R
// 0x0028 (0x0028 - 0x0000)
struct Ftuple_Lplayer_M_Kchar_Mint_Mlogic_R final
{
public:
	class USimulation_player*                     __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FVerseStringProperty_                         __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0010)(InstancedReference, HasGetValueTypeHash)
	int64                                         __verse_0x932BF92E_Elem2;                          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         __verse_0xF64C4596_Elem3 : 1;                      // 0x0020(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (InstancedReference, NoDestructor, HasGetValueTypeHash))
};
static_assert(alignof(Ftuple_Lplayer_M_Kchar_Mint_Mlogic_R) == 0x000008, "Wrong alignment on Ftuple_Lplayer_M_Kchar_Mint_Mlogic_R");
static_assert(sizeof(Ftuple_Lplayer_M_Kchar_Mint_Mlogic_R) == 0x000028, "Wrong size on Ftuple_Lplayer_M_Kchar_Mint_Mlogic_R");
static_assert(offsetof(Ftuple_Lplayer_M_Kchar_Mint_Mlogic_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lplayer_M_Kchar_Mint_Mlogic_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lplayer_M_Kchar_Mint_Mlogic_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Lplayer_M_Kchar_Mint_Mlogic_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(Ftuple_Lplayer_M_Kchar_Mint_Mlogic_R, __verse_0x932BF92E_Elem2) == 0x000018, "Member 'Ftuple_Lplayer_M_Kchar_Mint_Mlogic_R::__verse_0x932BF92E_Elem2' has a wrong offset!");

// VerseStruct VerseFortniteInternal.tuple_Lplayer_M_Kchar_Mint_R
// 0x0020 (0x0020 - 0x0000)
struct Ftuple_Lplayer_M_Kchar_Mint_R final
{
public:
	class USimulation_player*                     __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FVerseStringProperty_                         __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0010)(InstancedReference, HasGetValueTypeHash)
	int64                                         __verse_0x932BF92E_Elem2;                          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_Lplayer_M_Kchar_Mint_R) == 0x000008, "Wrong alignment on Ftuple_Lplayer_M_Kchar_Mint_R");
static_assert(sizeof(Ftuple_Lplayer_M_Kchar_Mint_R) == 0x000020, "Wrong size on Ftuple_Lplayer_M_Kchar_Mint_R");
static_assert(offsetof(Ftuple_Lplayer_M_Kchar_Mint_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lplayer_M_Kchar_Mint_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lplayer_M_Kchar_Mint_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Lplayer_M_Kchar_Mint_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(Ftuple_Lplayer_M_Kchar_Mint_R, __verse_0x932BF92E_Elem2) == 0x000018, "Member 'Ftuple_Lplayer_M_Kchar_Mint_R::__verse_0x932BF92E_Elem2' has a wrong offset!");

// VerseStruct VerseFortniteInternal.tuple_Lplayer_Mfort__item__definition_Mint_Mlogic_R
// 0x0020 (0x0020 - 0x0000)
struct Ftuple_Lplayer_Mfort__item__definition_Mint_Mlogic_R final
{
public:
	class USimulation_player*                     __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGame_fort_item_definition*             __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int64                                         __verse_0x932BF92E_Elem2;                          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         __verse_0xF64C4596_Elem3 : 1;                      // 0x0018(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (InstancedReference, NoDestructor, HasGetValueTypeHash))
};
static_assert(alignof(Ftuple_Lplayer_Mfort__item__definition_Mint_Mlogic_R) == 0x000008, "Wrong alignment on Ftuple_Lplayer_Mfort__item__definition_Mint_Mlogic_R");
static_assert(sizeof(Ftuple_Lplayer_Mfort__item__definition_Mint_Mlogic_R) == 0x000020, "Wrong size on Ftuple_Lplayer_Mfort__item__definition_Mint_Mlogic_R");
static_assert(offsetof(Ftuple_Lplayer_Mfort__item__definition_Mint_Mlogic_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lplayer_Mfort__item__definition_Mint_Mlogic_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lplayer_Mfort__item__definition_Mint_Mlogic_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Lplayer_Mfort__item__definition_Mint_Mlogic_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(Ftuple_Lplayer_Mfort__item__definition_Mint_Mlogic_R, __verse_0x932BF92E_Elem2) == 0x000010, "Member 'Ftuple_Lplayer_Mfort__item__definition_Mint_Mlogic_R::__verse_0x932BF92E_Elem2' has a wrong offset!");

// VerseStruct VerseFortniteInternal.tuple_Lplayer_Mint_Mint_R
// 0x0018 (0x0018 - 0x0000)
struct Ftuple_Lplayer_Mint_Mint_R final
{
public:
	class USimulation_player*                     __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int64                                         __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         __verse_0x932BF92E_Elem2;                          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_Lplayer_Mint_Mint_R) == 0x000008, "Wrong alignment on Ftuple_Lplayer_Mint_Mint_R");
static_assert(sizeof(Ftuple_Lplayer_Mint_Mint_R) == 0x000018, "Wrong size on Ftuple_Lplayer_Mint_Mint_R");
static_assert(offsetof(Ftuple_Lplayer_Mint_Mint_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lplayer_Mint_Mint_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lplayer_Mint_Mint_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Lplayer_Mint_Mint_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(Ftuple_Lplayer_Mint_Mint_R, __verse_0x932BF92E_Elem2) == 0x000010, "Member 'Ftuple_Lplayer_Mint_Mint_R::__verse_0x932BF92E_Elem2' has a wrong offset!");

// VerseStruct VerseFortniteInternal.tuple_Lplayer_Mint_R
// 0x0010 (0x0010 - 0x0000)
struct Ftuple_Lplayer_Mint_R final
{
public:
	class USimulation_player*                     __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int64                                         __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_Lplayer_Mint_R) == 0x000008, "Wrong alignment on Ftuple_Lplayer_Mint_R");
static_assert(sizeof(Ftuple_Lplayer_Mint_R) == 0x000010, "Wrong size on Ftuple_Lplayer_Mint_R");
static_assert(offsetof(Ftuple_Lplayer_Mint_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lplayer_Mint_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lplayer_Mint_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Lplayer_Mint_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// VerseStruct VerseFortniteInternal.tuple_Lplayer_Mlogic_Mlogic_Mlogic_R
// 0x0010 (0x0010 - 0x0000)
struct Ftuple_Lplayer_Mlogic_Mlogic_Mlogic_R final
{
public:
	class USimulation_player*                     __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	uint8                                         __verse_0x7D844C3C_Elem1 : 1;                      // 0x0008(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (InstancedReference, NoDestructor, HasGetValueTypeHash))
	uint8                                         BitPad_8_1 : 7;                                    // 0x0008(0x0001)(Fixing Bit-Field Size For New Byte [ Dumper-7 ])
	uint8                                         __verse_0x932BF92E_Elem2 : 1;                      // 0x0009(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (InstancedReference, NoDestructor, HasGetValueTypeHash))
	uint8                                         BitPad_9_1 : 7;                                    // 0x0009(0x0001)(Fixing Bit-Field Size For New Byte [ Dumper-7 ])
	uint8                                         __verse_0xF64C4596_Elem3 : 1;                      // 0x000A(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (InstancedReference, NoDestructor, HasGetValueTypeHash))
};
static_assert(alignof(Ftuple_Lplayer_Mlogic_Mlogic_Mlogic_R) == 0x000008, "Wrong alignment on Ftuple_Lplayer_Mlogic_Mlogic_Mlogic_R");
static_assert(sizeof(Ftuple_Lplayer_Mlogic_Mlogic_Mlogic_R) == 0x000010, "Wrong size on Ftuple_Lplayer_Mlogic_Mlogic_Mlogic_R");
static_assert(offsetof(Ftuple_Lplayer_Mlogic_Mlogic_Mlogic_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lplayer_Mlogic_Mlogic_Mlogic_R::__verse_0x18E3F084_Elem0' has a wrong offset!");

// VerseStruct VerseFortniteInternal.tuple_Lplayer_Mlogic_R
// 0x0010 (0x0010 - 0x0000)
struct Ftuple_Lplayer_Mlogic_R final
{
public:
	class USimulation_player*                     __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	uint8                                         __verse_0x7D844C3C_Elem1 : 1;                      // 0x0008(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (InstancedReference, NoDestructor, HasGetValueTypeHash))
};
static_assert(alignof(Ftuple_Lplayer_Mlogic_R) == 0x000008, "Wrong alignment on Ftuple_Lplayer_Mlogic_R");
static_assert(sizeof(Ftuple_Lplayer_Mlogic_R) == 0x000010, "Wrong size on Ftuple_Lplayer_Mlogic_R");
static_assert(offsetof(Ftuple_Lplayer_Mlogic_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lplayer_Mlogic_R::__verse_0x18E3F084_Elem0' has a wrong offset!");

// VerseStruct VerseFortniteInternal.tuple_Lplayer_Mplayer__team_R
// 0x0010 (0x0010 - 0x0000)
struct Ftuple_Lplayer_Mplayer__team_R final
{
public:
	class USimulation_player*                     __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FGame_Player_player_team               __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0004)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ftuple_Lplayer_Mplayer__team_R) == 0x000008, "Wrong alignment on Ftuple_Lplayer_Mplayer__team_R");
static_assert(sizeof(Ftuple_Lplayer_Mplayer__team_R) == 0x000010, "Wrong size on Ftuple_Lplayer_Mplayer__team_R");
static_assert(offsetof(Ftuple_Lplayer_Mplayer__team_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lplayer_Mplayer__team_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lplayer_Mplayer__team_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Lplayer_Mplayer__team_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// VerseStruct VerseFortniteInternal.tuple_Lplayer_Mplayer_R
// 0x0010 (0x0010 - 0x0000)
struct Ftuple_Lplayer_Mplayer_R final
{
public:
	class USimulation_player*                     __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USimulation_player*                     __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_Lplayer_Mplayer_R) == 0x000008, "Wrong alignment on Ftuple_Lplayer_Mplayer_R");
static_assert(sizeof(Ftuple_Lplayer_Mplayer_R) == 0x000010, "Wrong size on Ftuple_Lplayer_Mplayer_R");
static_assert(offsetof(Ftuple_Lplayer_Mplayer_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lplayer_Mplayer_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lplayer_Mplayer_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Lplayer_Mplayer_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// VerseStruct VerseFortniteInternal.tuple_Lplayer_MPlayerAttribute_Mfloat_R
// 0x0018 (0x0018 - 0x0000)
struct Ftuple_Lplayer_MPlayerAttribute_Mfloat_R final
{
public:
	class USimulation_player*                     __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EGame_Player_PlayerAttribute                  __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0001)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        __verse_0x932BF92E_Elem2;                          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_Lplayer_MPlayerAttribute_Mfloat_R) == 0x000008, "Wrong alignment on Ftuple_Lplayer_MPlayerAttribute_Mfloat_R");
static_assert(sizeof(Ftuple_Lplayer_MPlayerAttribute_Mfloat_R) == 0x000018, "Wrong size on Ftuple_Lplayer_MPlayerAttribute_Mfloat_R");
static_assert(offsetof(Ftuple_Lplayer_MPlayerAttribute_Mfloat_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lplayer_MPlayerAttribute_Mfloat_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lplayer_MPlayerAttribute_Mfloat_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Lplayer_MPlayerAttribute_Mfloat_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(Ftuple_Lplayer_MPlayerAttribute_Mfloat_R, __verse_0x932BF92E_Elem2) == 0x000010, "Member 'Ftuple_Lplayer_MPlayerAttribute_Mfloat_R::__verse_0x932BF92E_Elem2' has a wrong offset!");

// VerseStruct VerseFortniteInternal.tuple_Lplayer_MPlayerAttribute_MPlayerAttributeOperation_Mfloat_R
// 0x0018 (0x0018 - 0x0000)
struct Ftuple_Lplayer_MPlayerAttribute_MPlayerAttributeOperation_Mfloat_R final
{
public:
	class USimulation_player*                     __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EGame_Player_PlayerAttribute                  __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0001)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGame_Player_PlayerAttributeOperation         __verse_0x932BF92E_Elem2;                          // 0x0009(0x0001)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        __verse_0xF64C4596_Elem3;                          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_Lplayer_MPlayerAttribute_MPlayerAttributeOperation_Mfloat_R) == 0x000008, "Wrong alignment on Ftuple_Lplayer_MPlayerAttribute_MPlayerAttributeOperation_Mfloat_R");
static_assert(sizeof(Ftuple_Lplayer_MPlayerAttribute_MPlayerAttributeOperation_Mfloat_R) == 0x000018, "Wrong size on Ftuple_Lplayer_MPlayerAttribute_MPlayerAttributeOperation_Mfloat_R");
static_assert(offsetof(Ftuple_Lplayer_MPlayerAttribute_MPlayerAttributeOperation_Mfloat_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lplayer_MPlayerAttribute_MPlayerAttributeOperation_Mfloat_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lplayer_MPlayerAttribute_MPlayerAttributeOperation_Mfloat_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Lplayer_MPlayerAttribute_MPlayerAttributeOperation_Mfloat_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(Ftuple_Lplayer_MPlayerAttribute_MPlayerAttributeOperation_Mfloat_R, __verse_0x932BF92E_Elem2) == 0x000009, "Member 'Ftuple_Lplayer_MPlayerAttribute_MPlayerAttributeOperation_Mfloat_R::__verse_0x932BF92E_Elem2' has a wrong offset!");
static_assert(offsetof(Ftuple_Lplayer_MPlayerAttribute_MPlayerAttributeOperation_Mfloat_R, __verse_0xF64C4596_Elem3) == 0x000010, "Member 'Ftuple_Lplayer_MPlayerAttribute_MPlayerAttributeOperation_Mfloat_R::__verse_0xF64C4596_Elem3' has a wrong offset!");

// VerseStruct VerseFortniteInternal.tuple_Lplayer_MPlayerAttribute_R
// 0x0010 (0x0010 - 0x0000)
struct Ftuple_Lplayer_MPlayerAttribute_R final
{
public:
	class USimulation_player*                     __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EGame_Player_PlayerAttribute                  __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0001)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_Lplayer_MPlayerAttribute_R) == 0x000008, "Wrong alignment on Ftuple_Lplayer_MPlayerAttribute_R");
static_assert(sizeof(Ftuple_Lplayer_MPlayerAttribute_R) == 0x000010, "Wrong size on Ftuple_Lplayer_MPlayerAttribute_R");
static_assert(offsetof(Ftuple_Lplayer_MPlayerAttribute_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lplayer_MPlayerAttribute_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lplayer_MPlayerAttribute_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Lplayer_MPlayerAttribute_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// VerseStruct VerseFortniteInternal.tuple_Lvector3_M_Qplayer__component_R
// 0x0020 (0x0020 - 0x0000)
struct Ftuple_Lvector3_M_Qplayer__component_R final
{
public:
	struct FSpatialMath_vector3                   __verse_0x18E3F084_Elem0;                          // 0x0000(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	FOptionProperty_                              __verse_0x7D844C3C_Elem1;                          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_Lvector3_M_Qplayer__component_R) == 0x000008, "Wrong alignment on Ftuple_Lvector3_M_Qplayer__component_R");
static_assert(sizeof(Ftuple_Lvector3_M_Qplayer__component_R) == 0x000020, "Wrong size on Ftuple_Lvector3_M_Qplayer__component_R");
static_assert(offsetof(Ftuple_Lvector3_M_Qplayer__component_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lvector3_M_Qplayer__component_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lvector3_M_Qplayer__component_R, __verse_0x7D844C3C_Elem1) == 0x000018, "Member 'Ftuple_Lvector3_M_Qplayer__component_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

}

