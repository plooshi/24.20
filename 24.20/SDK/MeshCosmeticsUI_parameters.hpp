#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MeshCosmeticsUI

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function MeshCosmeticsUI.FortVariantRedirectorTile.HandleBoundaryNavigation
// 0x0010 (0x0010 - 0x0000)
struct FortVariantRedirectorTile_HandleBoundaryNavigation final
{
public:
	EUINavigation                                 InNavigation;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVariantRedirectorTile_HandleBoundaryNavigation) == 0x000008, "Wrong alignment on FortVariantRedirectorTile_HandleBoundaryNavigation");
static_assert(sizeof(FortVariantRedirectorTile_HandleBoundaryNavigation) == 0x000010, "Wrong size on FortVariantRedirectorTile_HandleBoundaryNavigation");
static_assert(offsetof(FortVariantRedirectorTile_HandleBoundaryNavigation, InNavigation) == 0x000000, "Member 'FortVariantRedirectorTile_HandleBoundaryNavigation::InNavigation' has a wrong offset!");
static_assert(offsetof(FortVariantRedirectorTile_HandleBoundaryNavigation, ReturnValue) == 0x000008, "Member 'FortVariantRedirectorTile_HandleBoundaryNavigation::ReturnValue' has a wrong offset!");

// Function MeshCosmeticsUI.FortVariantSprayCustomizer.BP_SetChannelSlotIcon
// 0x0028 (0x0028 - 0x0000)
struct FortVariantSprayCustomizer_BP_SetChannelSlotIcon final
{
public:
	TSoftObjectPtr<class UObject>                 ChannelSlotIcon;                                   // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVariantSprayCustomizer_BP_SetChannelSlotIcon) == 0x000008, "Wrong alignment on FortVariantSprayCustomizer_BP_SetChannelSlotIcon");
static_assert(sizeof(FortVariantSprayCustomizer_BP_SetChannelSlotIcon) == 0x000028, "Wrong size on FortVariantSprayCustomizer_BP_SetChannelSlotIcon");
static_assert(offsetof(FortVariantSprayCustomizer_BP_SetChannelSlotIcon, ChannelSlotIcon) == 0x000000, "Member 'FortVariantSprayCustomizer_BP_SetChannelSlotIcon::ChannelSlotIcon' has a wrong offset!");

// Function MeshCosmeticsUI.FortVariantSprayCustomizer.BP_SetVariantEditorMode
// 0x0001 (0x0001 - 0x0000)
struct FortVariantSprayCustomizer_BP_SetVariantEditorMode final
{
public:
	bool                                          bIsLockerMode;                                     // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVariantSprayCustomizer_BP_SetVariantEditorMode) == 0x000001, "Wrong alignment on FortVariantSprayCustomizer_BP_SetVariantEditorMode");
static_assert(sizeof(FortVariantSprayCustomizer_BP_SetVariantEditorMode) == 0x000001, "Wrong size on FortVariantSprayCustomizer_BP_SetVariantEditorMode");
static_assert(offsetof(FortVariantSprayCustomizer_BP_SetVariantEditorMode, bIsLockerMode) == 0x000000, "Member 'FortVariantSprayCustomizer_BP_SetVariantEditorMode::bIsLockerMode' has a wrong offset!");

// Function MeshCosmeticsUI.FortVariantSprayCustomizerSetting.BP_OnChangeValue
// 0x0008 (0x0008 - 0x0000)
struct FortVariantSprayCustomizerSetting_BP_OnChangeValue final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NormalizedValue;                                   // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVariantSprayCustomizerSetting_BP_OnChangeValue) == 0x000004, "Wrong alignment on FortVariantSprayCustomizerSetting_BP_OnChangeValue");
static_assert(sizeof(FortVariantSprayCustomizerSetting_BP_OnChangeValue) == 0x000008, "Wrong size on FortVariantSprayCustomizerSetting_BP_OnChangeValue");
static_assert(offsetof(FortVariantSprayCustomizerSetting_BP_OnChangeValue, Value) == 0x000000, "Member 'FortVariantSprayCustomizerSetting_BP_OnChangeValue::Value' has a wrong offset!");
static_assert(offsetof(FortVariantSprayCustomizerSetting_BP_OnChangeValue, NormalizedValue) == 0x000004, "Member 'FortVariantSprayCustomizerSetting_BP_OnChangeValue::NormalizedValue' has a wrong offset!");

// Function MeshCosmeticsUI.FortVariantSprayCustomizerSetting.BP_OnSetConstraints
// 0x0010 (0x0010 - 0x0000)
struct FortVariantSprayCustomizerSetting_BP_OnSetConstraints final
{
public:
	struct FFloatRange                            Constraints;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVariantSprayCustomizerSetting_BP_OnSetConstraints) == 0x000004, "Wrong alignment on FortVariantSprayCustomizerSetting_BP_OnSetConstraints");
static_assert(sizeof(FortVariantSprayCustomizerSetting_BP_OnSetConstraints) == 0x000010, "Wrong size on FortVariantSprayCustomizerSetting_BP_OnSetConstraints");
static_assert(offsetof(FortVariantSprayCustomizerSetting_BP_OnSetConstraints, Constraints) == 0x000000, "Member 'FortVariantSprayCustomizerSetting_BP_OnSetConstraints::Constraints' has a wrong offset!");

// Function MeshCosmeticsUI.FortVariantSprayCustomizerSetting.HandleSliderValueChanged
// 0x0004 (0x0004 - 0x0000)
struct FortVariantSprayCustomizerSetting_HandleSliderValueChanged final
{
public:
	float                                         NormalizedValue;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVariantSprayCustomizerSetting_HandleSliderValueChanged) == 0x000004, "Wrong alignment on FortVariantSprayCustomizerSetting_HandleSliderValueChanged");
static_assert(sizeof(FortVariantSprayCustomizerSetting_HandleSliderValueChanged) == 0x000004, "Wrong size on FortVariantSprayCustomizerSetting_HandleSliderValueChanged");
static_assert(offsetof(FortVariantSprayCustomizerSetting_HandleSliderValueChanged, NormalizedValue) == 0x000000, "Member 'FortVariantSprayCustomizerSetting_HandleSliderValueChanged::NormalizedValue' has a wrong offset!");

}

