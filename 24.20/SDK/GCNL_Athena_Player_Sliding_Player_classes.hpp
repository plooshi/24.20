#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCNL_Athena_Player_Sliding_Player

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GCNL_Athena_Player_Sliding_Player.GCNL_Athena_Player_Sliding_Player_C
// 0x0078 (0x0A68 - 0x09F0)
class AGCNL_Athena_Player_Sliding_Player_C final : public AFortGameplayCueNotifyLoop_Sliding
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x09F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFortCollisionAudioComponent*           FortCollisionAudio;                                // 0x09F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          bUpdateAudioParams;                                // 0x0A00(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A01[0x7];                                      // 0x0A01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        VelocityLengthAudioParam;                          // 0x0A08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ZVelocityAudioParam;                               // 0x0A10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             StopSlideSound;                                    // 0x0A18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Stop_Slide_Audio;                                  // 0x0A20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           SlidingFailsafeTimerHandle;                        // 0x0A28(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             StartSlideSound;                                   // 0x0A30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UFortMovementComp_Character*            Cached_Movement_ComponentRef;                      // 0x0A38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFXSystemComponent*                     Dust_FX;                                           // 0x0A40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsGraceFalling;                                   // 0x0A48(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A49[0x7];                                      // 0x0A49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           SpeedLineTimerHandle;                              // 0x0A50(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         SurfaceTypeInt;                                    // 0x0A58(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5C[0x4];                                      // 0x0A5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           SlideAudioTimerHandle;                             // 0x0A60(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void CheckSurfaceType(class AFortPawn* Pawn, int32* SurfaceTypeInt_0);
	void ExecuteUbergraph_GCNL_Athena_Player_Sliding_Player(int32 EntryPoint);
	void On_Target_Pawn_Actor_Hit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnLoopingStartGeneric(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UFXSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents);
	void OnRemovalGeneric(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UFXSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents, class ULegacyCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance);
	void ResetAudioData();
	void ResumeSlidingAudio();
	void Sliding_Failsafe_Check();
	void StartSlideAudio();
	void Stop_Sliding_Audio();
	void StopSlideAudio();
	void ToggleLoopingSoundIndicator(bool bEnableSoundIndicator);
	void Update_Speed_Line();
	void UpdateSlideAudio();
	void UpdateSoundComponentParameters(class AFortPlayerPawn* PlayerPawn_0, class UAudioComponent* AudioComponent);
	void UpdateSurfaceType();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GCNL_Athena_Player_Sliding_Player_C">();
	}
	static class AGCNL_Athena_Player_Sliding_Player_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGCNL_Athena_Player_Sliding_Player_C>();
	}
};
static_assert(alignof(AGCNL_Athena_Player_Sliding_Player_C) == 0x000008, "Wrong alignment on AGCNL_Athena_Player_Sliding_Player_C");
static_assert(sizeof(AGCNL_Athena_Player_Sliding_Player_C) == 0x000A68, "Wrong size on AGCNL_Athena_Player_Sliding_Player_C");
static_assert(offsetof(AGCNL_Athena_Player_Sliding_Player_C, UberGraphFrame) == 0x0009F0, "Member 'AGCNL_Athena_Player_Sliding_Player_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Player_Sliding_Player_C, FortCollisionAudio) == 0x0009F8, "Member 'AGCNL_Athena_Player_Sliding_Player_C::FortCollisionAudio' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Player_Sliding_Player_C, bUpdateAudioParams) == 0x000A00, "Member 'AGCNL_Athena_Player_Sliding_Player_C::bUpdateAudioParams' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Player_Sliding_Player_C, VelocityLengthAudioParam) == 0x000A08, "Member 'AGCNL_Athena_Player_Sliding_Player_C::VelocityLengthAudioParam' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Player_Sliding_Player_C, ZVelocityAudioParam) == 0x000A10, "Member 'AGCNL_Athena_Player_Sliding_Player_C::ZVelocityAudioParam' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Player_Sliding_Player_C, StopSlideSound) == 0x000A18, "Member 'AGCNL_Athena_Player_Sliding_Player_C::StopSlideSound' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Player_Sliding_Player_C, Stop_Slide_Audio) == 0x000A20, "Member 'AGCNL_Athena_Player_Sliding_Player_C::Stop_Slide_Audio' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Player_Sliding_Player_C, SlidingFailsafeTimerHandle) == 0x000A28, "Member 'AGCNL_Athena_Player_Sliding_Player_C::SlidingFailsafeTimerHandle' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Player_Sliding_Player_C, StartSlideSound) == 0x000A30, "Member 'AGCNL_Athena_Player_Sliding_Player_C::StartSlideSound' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Player_Sliding_Player_C, Cached_Movement_ComponentRef) == 0x000A38, "Member 'AGCNL_Athena_Player_Sliding_Player_C::Cached_Movement_ComponentRef' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Player_Sliding_Player_C, Dust_FX) == 0x000A40, "Member 'AGCNL_Athena_Player_Sliding_Player_C::Dust_FX' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Player_Sliding_Player_C, bIsGraceFalling) == 0x000A48, "Member 'AGCNL_Athena_Player_Sliding_Player_C::bIsGraceFalling' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Player_Sliding_Player_C, SpeedLineTimerHandle) == 0x000A50, "Member 'AGCNL_Athena_Player_Sliding_Player_C::SpeedLineTimerHandle' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Player_Sliding_Player_C, SurfaceTypeInt) == 0x000A58, "Member 'AGCNL_Athena_Player_Sliding_Player_C::SurfaceTypeInt' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Player_Sliding_Player_C, SlideAudioTimerHandle) == 0x000A60, "Member 'AGCNL_Athena_Player_Sliding_Player_C::SlideAudioTimerHandle' has a wrong offset!");

}

