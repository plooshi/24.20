#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Verse

#include "Basic.hpp"

#include "Verse_structs.hpp"
#include "VerseNative_structs.hpp"


namespace SDK::Params
{

// Function Verse.Verse_cancelable._L_2fVerse_2eorg_2fVerse_2fcancelable_N_RCancel
// 0x0001 (0x0001 - 0x0000)
struct Verse_cancelable__L_2fVerse_2eorg_2fVerse_2fcancelable_N_RCancel final
{
public:
	struct Verse::Ftuple_L_R                      __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
};
static_assert(alignof(Verse_cancelable__L_2fVerse_2eorg_2fVerse_2fcancelable_N_RCancel) == 0x000001, "Wrong alignment on Verse_cancelable__L_2fVerse_2eorg_2fVerse_2fcancelable_N_RCancel");
static_assert(sizeof(Verse_cancelable__L_2fVerse_2eorg_2fVerse_2fcancelable_N_RCancel) == 0x000001, "Wrong size on Verse_cancelable__L_2fVerse_2eorg_2fVerse_2fcancelable_N_RCancel");
static_assert(offsetof(Verse_cancelable__L_2fVerse_2eorg_2fVerse_2fcancelable_N_RCancel, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse_cancelable__L_2fVerse_2eorg_2fVerse_2fcancelable_N_RCancel::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function Verse.Verse_localizable_string._L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R
// 0x0048 (0x0048 - 0x0000)
struct Verse_localizable_string__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R final
{
public:
	struct FVerse_locale                          __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseStringProperty_                         RetVal;                                            // 0x0008(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
	FVerseFunctionProperty_                       _Callee_0;                                         // 0x0018(0x0010)(HasGetValueTypeHash)
	struct Ftuple_L_Kchar_M_QWhere_Nlocale_R      _ExprResult_1;                                     // 0x0028(0x0018)(HasGetValueTypeHash)
	FOptionProperty_                              _ExprResult_2;                                     // 0x0040(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Verse_localizable_string__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R) == 0x000008, "Wrong alignment on Verse_localizable_string__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R");
static_assert(sizeof(Verse_localizable_string__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R) == 0x000048, "Wrong size on Verse_localizable_string__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R");
static_assert(offsetof(Verse_localizable_string__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse_localizable_string__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse_localizable_string__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R, RetVal) == 0x000008, "Member 'Verse_localizable_string__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R::RetVal' has a wrong offset!");
static_assert(offsetof(Verse_localizable_string__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R, _Callee_0) == 0x000018, "Member 'Verse_localizable_string__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R::_Callee_0' has a wrong offset!");
static_assert(offsetof(Verse_localizable_string__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R, _ExprResult_1) == 0x000028, "Member 'Verse_localizable_string__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R::_ExprResult_1' has a wrong offset!");
static_assert(offsetof(Verse_localizable_string__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R, _ExprResult_2) == 0x000040, "Member 'Verse_localizable_string__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R::_ExprResult_2' has a wrong offset!");

// Function Verse.Colors._L_2fVerse_2eorg_2fColors_N_RMakeColorFromHex_L_N_Kchar_R
// 0x0028 (0x0028 - 0x0000)
struct Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromHex_L_N_Kchar_R final
{
public:
	FVerseStringProperty_                         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	struct FColors_color                          RetVal;                                            // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromHex_L_N_Kchar_R) == 0x000008, "Wrong alignment on Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromHex_L_N_Kchar_R");
static_assert(sizeof(Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromHex_L_N_Kchar_R) == 0x000028, "Wrong size on Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromHex_L_N_Kchar_R");
static_assert(offsetof(Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromHex_L_N_Kchar_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromHex_L_N_Kchar_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromHex_L_N_Kchar_R, RetVal) == 0x000010, "Member 'Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromHex_L_N_Kchar_R::RetVal' has a wrong offset!");

// Function Verse.Colors._L_2fVerse_2eorg_2fColors_N_RMakeColorFromHSV_L_Nfloat_M_Nfloat_M_Nfloat_R
// 0x0030 (0x0030 - 0x0000)
struct Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromHSV_L_Nfloat_M_Nfloat_M_Nfloat_R final
{
public:
	struct Verse::Ftuple_Lfloat_Mfloat_Mfloat_R   __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0018)(Parm, HasGetValueTypeHash)
	struct FColors_color                          RetVal;                                            // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromHSV_L_Nfloat_M_Nfloat_M_Nfloat_R) == 0x000008, "Wrong alignment on Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromHSV_L_Nfloat_M_Nfloat_M_Nfloat_R");
static_assert(sizeof(Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromHSV_L_Nfloat_M_Nfloat_M_Nfloat_R) == 0x000030, "Wrong size on Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromHSV_L_Nfloat_M_Nfloat_M_Nfloat_R");
static_assert(offsetof(Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromHSV_L_Nfloat_M_Nfloat_M_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromHSV_L_Nfloat_M_Nfloat_M_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromHSV_L_Nfloat_M_Nfloat_M_Nfloat_R, RetVal) == 0x000018, "Member 'Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromHSV_L_Nfloat_M_Nfloat_M_Nfloat_R::RetVal' has a wrong offset!");

// Function Verse.Colors._L_2fVerse_2eorg_2fColors_N_RMakeColorFromSRGB_L_Nfloat_M_Nfloat_M_Nfloat_R
// 0x0030 (0x0030 - 0x0000)
struct Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromSRGB_L_Nfloat_M_Nfloat_M_Nfloat_R final
{
public:
	struct Verse::Ftuple_Lfloat_Mfloat_Mfloat_R   __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0018)(Parm, HasGetValueTypeHash)
	struct FColors_color                          RetVal;                                            // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromSRGB_L_Nfloat_M_Nfloat_M_Nfloat_R) == 0x000008, "Wrong alignment on Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromSRGB_L_Nfloat_M_Nfloat_M_Nfloat_R");
static_assert(sizeof(Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromSRGB_L_Nfloat_M_Nfloat_M_Nfloat_R) == 0x000030, "Wrong size on Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromSRGB_L_Nfloat_M_Nfloat_M_Nfloat_R");
static_assert(offsetof(Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromSRGB_L_Nfloat_M_Nfloat_M_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromSRGB_L_Nfloat_M_Nfloat_M_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromSRGB_L_Nfloat_M_Nfloat_M_Nfloat_R, RetVal) == 0x000018, "Member 'Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromSRGB_L_Nfloat_M_Nfloat_M_Nfloat_R::RetVal' has a wrong offset!");

// Function Verse.Colors._L_2fVerse_2eorg_2fColors_N_RMakeColorFromSRGBValues_L_Nint_M_Nint_M_Nint_R
// 0x0030 (0x0030 - 0x0000)
struct Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromSRGBValues_L_Nint_M_Nint_M_Nint_R final
{
public:
	struct Ftuple_Lint_Mint_Mint_R                __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0018)(Parm, HasGetValueTypeHash)
	struct FColors_color                          RetVal;                                            // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromSRGBValues_L_Nint_M_Nint_M_Nint_R) == 0x000008, "Wrong alignment on Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromSRGBValues_L_Nint_M_Nint_M_Nint_R");
static_assert(sizeof(Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromSRGBValues_L_Nint_M_Nint_M_Nint_R) == 0x000030, "Wrong size on Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromSRGBValues_L_Nint_M_Nint_M_Nint_R");
static_assert(offsetof(Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromSRGBValues_L_Nint_M_Nint_M_Nint_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromSRGBValues_L_Nint_M_Nint_M_Nint_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromSRGBValues_L_Nint_M_Nint_M_Nint_R, RetVal) == 0x000018, "Member 'Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromSRGBValues_L_Nint_M_Nint_M_Nint_R::RetVal' has a wrong offset!");

// Function Verse.Colors._L_2fVerse_2eorg_2fColors_N_RMakeColorFromTemperature_L_Nfloat_R
// 0x0020 (0x0020 - 0x0000)
struct Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromTemperature_L_Nfloat_R final
{
public:
	double                                        __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColors_color                          RetVal;                                            // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromTemperature_L_Nfloat_R) == 0x000008, "Wrong alignment on Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromTemperature_L_Nfloat_R");
static_assert(sizeof(Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromTemperature_L_Nfloat_R) == 0x000020, "Wrong size on Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromTemperature_L_Nfloat_R");
static_assert(offsetof(Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromTemperature_L_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromTemperature_L_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromTemperature_L_Nfloat_R, RetVal) == 0x000008, "Member 'Colors__L_2fVerse_2eorg_2fColors_N_RMakeColorFromTemperature_L_Nfloat_R::RetVal' has a wrong offset!");

// Function Verse.Colors._L_2fVerse_2eorg_2fColors_N_RMakeHSVFromColor_L_Ncolor_R
// 0x0030 (0x0030 - 0x0000)
struct Colors__L_2fVerse_2eorg_2fColors_N_RMakeHSVFromColor_L_Ncolor_R final
{
public:
	struct FColors_color                          __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct Verse::Ftuple_Lfloat_Mfloat_Mfloat_R   RetVal;                                            // 0x0018(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(Colors__L_2fVerse_2eorg_2fColors_N_RMakeHSVFromColor_L_Ncolor_R) == 0x000008, "Wrong alignment on Colors__L_2fVerse_2eorg_2fColors_N_RMakeHSVFromColor_L_Ncolor_R");
static_assert(sizeof(Colors__L_2fVerse_2eorg_2fColors_N_RMakeHSVFromColor_L_Ncolor_R) == 0x000030, "Wrong size on Colors__L_2fVerse_2eorg_2fColors_N_RMakeHSVFromColor_L_Ncolor_R");
static_assert(offsetof(Colors__L_2fVerse_2eorg_2fColors_N_RMakeHSVFromColor_L_Ncolor_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Colors__L_2fVerse_2eorg_2fColors_N_RMakeHSVFromColor_L_Ncolor_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Colors__L_2fVerse_2eorg_2fColors_N_RMakeHSVFromColor_L_Ncolor_R, RetVal) == 0x000018, "Member 'Colors__L_2fVerse_2eorg_2fColors_N_RMakeHSVFromColor_L_Ncolor_R::RetVal' has a wrong offset!");

// Function Verse.Colors._L_2fVerse_2eorg_2fColors_N_RMakeSRGBFromColor_L_Ncolor_R
// 0x0030 (0x0030 - 0x0000)
struct Colors__L_2fVerse_2eorg_2fColors_N_RMakeSRGBFromColor_L_Ncolor_R final
{
public:
	struct FColors_color                          __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct Verse::Ftuple_Lfloat_Mfloat_Mfloat_R   RetVal;                                            // 0x0018(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(Colors__L_2fVerse_2eorg_2fColors_N_RMakeSRGBFromColor_L_Ncolor_R) == 0x000008, "Wrong alignment on Colors__L_2fVerse_2eorg_2fColors_N_RMakeSRGBFromColor_L_Ncolor_R");
static_assert(sizeof(Colors__L_2fVerse_2eorg_2fColors_N_RMakeSRGBFromColor_L_Ncolor_R) == 0x000030, "Wrong size on Colors__L_2fVerse_2eorg_2fColors_N_RMakeSRGBFromColor_L_Ncolor_R");
static_assert(offsetof(Colors__L_2fVerse_2eorg_2fColors_N_RMakeSRGBFromColor_L_Ncolor_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Colors__L_2fVerse_2eorg_2fColors_N_RMakeSRGBFromColor_L_Ncolor_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Colors__L_2fVerse_2eorg_2fColors_N_RMakeSRGBFromColor_L_Ncolor_R, RetVal) == 0x000018, "Member 'Colors__L_2fVerse_2eorg_2fColors_N_RMakeSRGBFromColor_L_Ncolor_R::RetVal' has a wrong offset!");

// Function Verse.Colors._L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Ncolor_M_Ncolor_R
// 0x0048 (0x0048 - 0x0000)
struct Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Ncolor_M_Ncolor_R final
{
public:
	struct Ftuple_Lcolor_Mcolor_R                 __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0030)(Parm, HasGetValueTypeHash)
	struct FColors_color                          RetVal;                                            // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Ncolor_M_Ncolor_R) == 0x000008, "Wrong alignment on Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Ncolor_M_Ncolor_R");
static_assert(sizeof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Ncolor_M_Ncolor_R) == 0x000048, "Wrong size on Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Ncolor_M_Ncolor_R");
static_assert(offsetof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Ncolor_M_Ncolor_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Ncolor_M_Ncolor_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Ncolor_M_Ncolor_R, RetVal) == 0x000030, "Member 'Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Ncolor_M_Ncolor_R::RetVal' has a wrong offset!");

// Function Verse.Colors._L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Ncolor_M_Nfloat_R
// 0x0038 (0x0038 - 0x0000)
struct Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Ncolor_M_Nfloat_R final
{
public:
	struct Ftuple_Lcolor_Mfloat_R                 __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0020)(Parm, HasGetValueTypeHash)
	struct FColors_color                          RetVal;                                            // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Ncolor_M_Nfloat_R) == 0x000008, "Wrong alignment on Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Ncolor_M_Nfloat_R");
static_assert(sizeof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Ncolor_M_Nfloat_R) == 0x000038, "Wrong size on Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Ncolor_M_Nfloat_R");
static_assert(offsetof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Ncolor_M_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Ncolor_M_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Ncolor_M_Nfloat_R, RetVal) == 0x000020, "Member 'Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Ncolor_M_Nfloat_R::RetVal' has a wrong offset!");

// Function Verse.Colors._L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Ncolor_M_Nint_R
// 0x0038 (0x0038 - 0x0000)
struct Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Ncolor_M_Nint_R final
{
public:
	struct Ftuple_Lcolor_Mint_R                   __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0020)(Parm, HasGetValueTypeHash)
	struct FColors_color                          RetVal;                                            // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Ncolor_M_Nint_R) == 0x000008, "Wrong alignment on Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Ncolor_M_Nint_R");
static_assert(sizeof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Ncolor_M_Nint_R) == 0x000038, "Wrong size on Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Ncolor_M_Nint_R");
static_assert(offsetof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Ncolor_M_Nint_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Ncolor_M_Nint_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Ncolor_M_Nint_R, RetVal) == 0x000020, "Member 'Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Ncolor_M_Nint_R::RetVal' has a wrong offset!");

// Function Verse.Colors._L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Nfloat_M_Ncolor_R
// 0x0038 (0x0038 - 0x0000)
struct Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Nfloat_M_Ncolor_R final
{
public:
	struct Ftuple_Lfloat_Mcolor_R                 __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0020)(Parm, HasGetValueTypeHash)
	struct FColors_color                          RetVal;                                            // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Nfloat_M_Ncolor_R) == 0x000008, "Wrong alignment on Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Nfloat_M_Ncolor_R");
static_assert(sizeof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Nfloat_M_Ncolor_R) == 0x000038, "Wrong size on Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Nfloat_M_Ncolor_R");
static_assert(offsetof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Nfloat_M_Ncolor_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Nfloat_M_Ncolor_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Nfloat_M_Ncolor_R, RetVal) == 0x000020, "Member 'Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Nfloat_M_Ncolor_R::RetVal' has a wrong offset!");

// Function Verse.Colors._L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Nint_M_Ncolor_R
// 0x0038 (0x0038 - 0x0000)
struct Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Nint_M_Ncolor_R final
{
public:
	struct Ftuple_Lint_Mcolor_R                   __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0020)(Parm, HasGetValueTypeHash)
	struct FColors_color                          RetVal;                                            // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Nint_M_Ncolor_R) == 0x000008, "Wrong alignment on Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Nint_M_Ncolor_R");
static_assert(sizeof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Nint_M_Ncolor_R) == 0x000038, "Wrong size on Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Nint_M_Ncolor_R");
static_assert(offsetof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Nint_M_Ncolor_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Nint_M_Ncolor_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Nint_M_Ncolor_R, RetVal) == 0x000020, "Member 'Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Nint_M_Ncolor_R::RetVal' has a wrong offset!");

// Function Verse.Colors._L_2fVerse_2eorg_2fColors_N_Roperator_U_2b_U_L_Ncolor_M_Ncolor_R
// 0x0048 (0x0048 - 0x0000)
struct Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2b_U_L_Ncolor_M_Ncolor_R final
{
public:
	struct Ftuple_Lcolor_Mcolor_R                 __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0030)(Parm, HasGetValueTypeHash)
	struct FColors_color                          RetVal;                                            // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2b_U_L_Ncolor_M_Ncolor_R) == 0x000008, "Wrong alignment on Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2b_U_L_Ncolor_M_Ncolor_R");
static_assert(sizeof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2b_U_L_Ncolor_M_Ncolor_R) == 0x000048, "Wrong size on Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2b_U_L_Ncolor_M_Ncolor_R");
static_assert(offsetof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2b_U_L_Ncolor_M_Ncolor_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2b_U_L_Ncolor_M_Ncolor_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2b_U_L_Ncolor_M_Ncolor_R, RetVal) == 0x000030, "Member 'Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2b_U_L_Ncolor_M_Ncolor_R::RetVal' has a wrong offset!");

// Function Verse.Colors._L_2fVerse_2eorg_2fColors_N_Roperator_U_2d_U_L_Ncolor_M_Ncolor_R
// 0x0048 (0x0048 - 0x0000)
struct Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2d_U_L_Ncolor_M_Ncolor_R final
{
public:
	struct Ftuple_Lcolor_Mcolor_R                 __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0030)(Parm, HasGetValueTypeHash)
	struct FColors_color                          RetVal;                                            // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2d_U_L_Ncolor_M_Ncolor_R) == 0x000008, "Wrong alignment on Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2d_U_L_Ncolor_M_Ncolor_R");
static_assert(sizeof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2d_U_L_Ncolor_M_Ncolor_R) == 0x000048, "Wrong size on Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2d_U_L_Ncolor_M_Ncolor_R");
static_assert(offsetof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2d_U_L_Ncolor_M_Ncolor_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2d_U_L_Ncolor_M_Ncolor_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2d_U_L_Ncolor_M_Ncolor_R, RetVal) == 0x000030, "Member 'Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2d_U_L_Ncolor_M_Ncolor_R::RetVal' has a wrong offset!");

// Function Verse.Colors._L_2fVerse_2eorg_2fColors_N_Roperator_U_2f_U_L_Ncolor_M_Nfloat_R
// 0x0040 (0x0040 - 0x0000)
struct Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2f_U_L_Ncolor_M_Nfloat_R final
{
public:
	struct Ftuple_Lcolor_Mfloat_R                 __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0020)(Parm, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0020(0x0019)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2f_U_L_Ncolor_M_Nfloat_R) == 0x000008, "Wrong alignment on Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2f_U_L_Ncolor_M_Nfloat_R");
static_assert(sizeof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2f_U_L_Ncolor_M_Nfloat_R) == 0x000040, "Wrong size on Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2f_U_L_Ncolor_M_Nfloat_R");
static_assert(offsetof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2f_U_L_Ncolor_M_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2f_U_L_Ncolor_M_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2f_U_L_Ncolor_M_Nfloat_R, RetVal) == 0x000020, "Member 'Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2f_U_L_Ncolor_M_Nfloat_R::RetVal' has a wrong offset!");

// Function Verse.Colors._L_2fVerse_2eorg_2fColors_N_Roperator_U_2f_U_L_Ncolor_M_Nint_R
// 0x0040 (0x0040 - 0x0000)
struct Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2f_U_L_Ncolor_M_Nint_R final
{
public:
	struct Ftuple_Lcolor_Mint_R                   __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0020)(Parm, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0020(0x0019)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2f_U_L_Ncolor_M_Nint_R) == 0x000008, "Wrong alignment on Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2f_U_L_Ncolor_M_Nint_R");
static_assert(sizeof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2f_U_L_Ncolor_M_Nint_R) == 0x000040, "Wrong size on Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2f_U_L_Ncolor_M_Nint_R");
static_assert(offsetof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2f_U_L_Ncolor_M_Nint_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2f_U_L_Ncolor_M_Nint_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2f_U_L_Ncolor_M_Nint_R, RetVal) == 0x000020, "Member 'Colors__L_2fVerse_2eorg_2fColors_N_Roperator_U_2f_U_L_Ncolor_M_Nint_R::RetVal' has a wrong offset!");

// Function Verse.Colors.Colors_color$Factory
// 0x0018 (0x0018 - 0x0000)
struct Colors_Colors_color_Factory final
{
public:
	struct FColors_color                          RetVal;                                            // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Colors_Colors_color_Factory) == 0x000008, "Wrong alignment on Colors_Colors_color_Factory");
static_assert(sizeof(Colors_Colors_color_Factory) == 0x000018, "Wrong size on Colors_Colors_color_Factory");
static_assert(offsetof(Colors_Colors_color_Factory, RetVal) == 0x000000, "Member 'Colors_Colors_color_Factory::RetVal' has a wrong offset!");

// Function Verse.Colors_NamedColors.$InitCDO
// 0x2028 (0x2028 - 0x0000)
struct Colors_NamedColors__InitCDO final
{
public:
	struct FColors_color                          _ExprResultStack_0;                                // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_1;                                         // 0x0018(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_2;                                     // 0x0028(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_3;                                // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_4;                                         // 0x0050(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_5;                                     // 0x0060(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_6;                                // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_7;                                         // 0x0088(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_8;                                     // 0x0098(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_9;                                // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_10;                                        // 0x00C0(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_11;                                    // 0x00D0(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_12;                               // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_13;                                        // 0x00F8(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_14;                                    // 0x0108(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_15;                               // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_16;                                        // 0x0130(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_17;                                    // 0x0140(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_18;                               // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_19;                                        // 0x0168(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_20;                                    // 0x0178(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_21;                               // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_22;                                        // 0x01A0(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_23;                                    // 0x01B0(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_24;                               // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_25;                                        // 0x01D8(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_26;                                    // 0x01E8(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_27;                               // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_28;                                        // 0x0210(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_29;                                    // 0x0220(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_30;                               // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_31;                                        // 0x0248(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_32;                                    // 0x0258(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_33;                               // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_34;                                        // 0x0280(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_35;                                    // 0x0290(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_36;                               // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_37;                                        // 0x02B8(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_38;                                    // 0x02C8(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_39;                               // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_40;                                        // 0x02F0(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_41;                                    // 0x0300(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_42;                               // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_43;                                        // 0x0328(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_44;                                    // 0x0338(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_45;                               // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_46;                                        // 0x0360(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_47;                                    // 0x0370(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_48;                               // 0x0380(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_49;                                        // 0x0398(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_50;                                    // 0x03A8(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_51;                               // 0x03B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_52;                                        // 0x03D0(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_53;                                    // 0x03E0(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_54;                               // 0x03F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_55;                                        // 0x0408(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_56;                                    // 0x0418(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_57;                               // 0x0428(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_58;                                        // 0x0440(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_59;                                    // 0x0450(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_60;                               // 0x0460(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_61;                                        // 0x0478(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_62;                                    // 0x0488(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_63;                               // 0x0498(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_64;                                        // 0x04B0(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_65;                                    // 0x04C0(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_66;                               // 0x04D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_67;                                        // 0x04E8(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_68;                                    // 0x04F8(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_69;                               // 0x0508(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_70;                                        // 0x0520(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_71;                                    // 0x0530(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_72;                               // 0x0540(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_73;                                        // 0x0558(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_74;                                    // 0x0568(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_75;                               // 0x0578(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_76;                                        // 0x0590(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_77;                                    // 0x05A0(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_78;                               // 0x05B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_79;                                        // 0x05C8(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_80;                                    // 0x05D8(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_81;                               // 0x05E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_82;                                        // 0x0600(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_83;                                    // 0x0610(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_84;                               // 0x0620(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_85;                                        // 0x0638(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_86;                                    // 0x0648(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_87;                               // 0x0658(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_88;                                        // 0x0670(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_89;                                    // 0x0680(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_90;                               // 0x0690(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_91;                                        // 0x06A8(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_92;                                    // 0x06B8(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_93;                               // 0x06C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_94;                                        // 0x06E0(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_95;                                    // 0x06F0(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_96;                               // 0x0700(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_97;                                        // 0x0718(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_98;                                    // 0x0728(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_99;                               // 0x0738(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_100;                                       // 0x0750(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_101;                                   // 0x0760(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_102;                              // 0x0770(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_103;                                       // 0x0788(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_104;                                   // 0x0798(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_105;                              // 0x07A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_106;                                       // 0x07C0(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_107;                                   // 0x07D0(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_108;                              // 0x07E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_109;                                       // 0x07F8(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_110;                                   // 0x0808(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_111;                              // 0x0818(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_112;                                       // 0x0830(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_113;                                   // 0x0840(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_114;                              // 0x0850(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_115;                                       // 0x0868(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_116;                                   // 0x0878(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_117;                              // 0x0888(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_118;                                       // 0x08A0(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_119;                                   // 0x08B0(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_120;                              // 0x08C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_121;                                       // 0x08D8(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_122;                                   // 0x08E8(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_123;                              // 0x08F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_124;                                       // 0x0910(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_125;                                   // 0x0920(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_126;                              // 0x0930(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_127;                                       // 0x0948(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_128;                                   // 0x0958(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_129;                              // 0x0968(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_130;                                       // 0x0980(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_131;                                   // 0x0990(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_132;                              // 0x09A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_133;                                       // 0x09B8(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_134;                                   // 0x09C8(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_135;                              // 0x09D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_136;                                       // 0x09F0(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_137;                                   // 0x0A00(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_138;                              // 0x0A10(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_139;                                       // 0x0A28(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_140;                                   // 0x0A38(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_141;                              // 0x0A48(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_142;                                       // 0x0A60(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_143;                                   // 0x0A70(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_144;                              // 0x0A80(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_145;                                       // 0x0A98(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_146;                                   // 0x0AA8(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_147;                              // 0x0AB8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_148;                                       // 0x0AD0(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_149;                                   // 0x0AE0(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_150;                              // 0x0AF0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_151;                                       // 0x0B08(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_152;                                   // 0x0B18(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_153;                              // 0x0B28(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_154;                                       // 0x0B40(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_155;                                   // 0x0B50(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_156;                              // 0x0B60(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_157;                                       // 0x0B78(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_158;                                   // 0x0B88(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_159;                              // 0x0B98(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_160;                                       // 0x0BB0(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_161;                                   // 0x0BC0(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_162;                              // 0x0BD0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_163;                                       // 0x0BE8(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_164;                                   // 0x0BF8(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_165;                              // 0x0C08(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_166;                                       // 0x0C20(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_167;                                   // 0x0C30(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_168;                              // 0x0C40(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_169;                                       // 0x0C58(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_170;                                   // 0x0C68(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_171;                              // 0x0C78(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_172;                                       // 0x0C90(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_173;                                   // 0x0CA0(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_174;                              // 0x0CB0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_175;                                       // 0x0CC8(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_176;                                   // 0x0CD8(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_177;                              // 0x0CE8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_178;                                       // 0x0D00(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_179;                                   // 0x0D10(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_180;                              // 0x0D20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_181;                                       // 0x0D38(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_182;                                   // 0x0D48(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_183;                              // 0x0D58(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_184;                                       // 0x0D70(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_185;                                   // 0x0D80(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_186;                              // 0x0D90(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_187;                                       // 0x0DA8(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_188;                                   // 0x0DB8(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_189;                              // 0x0DC8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_190;                                       // 0x0DE0(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_191;                                   // 0x0DF0(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_192;                              // 0x0E00(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_193;                                       // 0x0E18(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_194;                                   // 0x0E28(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_195;                              // 0x0E38(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_196;                                       // 0x0E50(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_197;                                   // 0x0E60(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_198;                              // 0x0E70(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_199;                                       // 0x0E88(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_200;                                   // 0x0E98(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_201;                              // 0x0EA8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_202;                                       // 0x0EC0(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_203;                                   // 0x0ED0(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_204;                              // 0x0EE0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_205;                                       // 0x0EF8(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_206;                                   // 0x0F08(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_207;                              // 0x0F18(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_208;                                       // 0x0F30(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_209;                                   // 0x0F40(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_210;                              // 0x0F50(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_211;                                       // 0x0F68(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_212;                                   // 0x0F78(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_213;                              // 0x0F88(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_214;                                       // 0x0FA0(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_215;                                   // 0x0FB0(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_216;                              // 0x0FC0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_217;                                       // 0x0FD8(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_218;                                   // 0x0FE8(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_219;                              // 0x0FF8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_220;                                       // 0x1010(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_221;                                   // 0x1020(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_222;                              // 0x1030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_223;                                       // 0x1048(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_224;                                   // 0x1058(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_225;                              // 0x1068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_226;                                       // 0x1080(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_227;                                   // 0x1090(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_228;                              // 0x10A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_229;                                       // 0x10B8(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_230;                                   // 0x10C8(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_231;                              // 0x10D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_232;                                       // 0x10F0(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_233;                                   // 0x1100(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_234;                              // 0x1110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_235;                                       // 0x1128(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_236;                                   // 0x1138(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_237;                              // 0x1148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_238;                                       // 0x1160(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_239;                                   // 0x1170(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_240;                              // 0x1180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_241;                                       // 0x1198(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_242;                                   // 0x11A8(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_243;                              // 0x11B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_244;                                       // 0x11D0(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_245;                                   // 0x11E0(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_246;                              // 0x11F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_247;                                       // 0x1208(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_248;                                   // 0x1218(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_249;                              // 0x1228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_250;                                       // 0x1240(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_251;                                   // 0x1250(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_252;                              // 0x1260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_253;                                       // 0x1278(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_254;                                   // 0x1288(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_255;                              // 0x1298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_256;                                       // 0x12B0(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_257;                                   // 0x12C0(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_258;                              // 0x12D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_259;                                       // 0x12E8(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_260;                                   // 0x12F8(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_261;                              // 0x1308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_262;                                       // 0x1320(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_263;                                   // 0x1330(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_264;                              // 0x1340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_265;                                       // 0x1358(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_266;                                   // 0x1368(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_267;                              // 0x1378(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_268;                                       // 0x1390(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_269;                                   // 0x13A0(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_270;                              // 0x13B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_271;                                       // 0x13C8(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_272;                                   // 0x13D8(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_273;                              // 0x13E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_274;                                       // 0x1400(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_275;                                   // 0x1410(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_276;                              // 0x1420(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_277;                                       // 0x1438(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_278;                                   // 0x1448(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_279;                              // 0x1458(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_280;                                       // 0x1470(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_281;                                   // 0x1480(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_282;                              // 0x1490(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_283;                                       // 0x14A8(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_284;                                   // 0x14B8(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_285;                              // 0x14C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_286;                                       // 0x14E0(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_287;                                   // 0x14F0(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_288;                              // 0x1500(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_289;                                       // 0x1518(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_290;                                   // 0x1528(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_291;                              // 0x1538(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_292;                                       // 0x1550(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_293;                                   // 0x1560(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_294;                              // 0x1570(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_295;                                       // 0x1588(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_296;                                   // 0x1598(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_297;                              // 0x15A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_298;                                       // 0x15C0(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_299;                                   // 0x15D0(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_300;                              // 0x15E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_301;                                       // 0x15F8(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_302;                                   // 0x1608(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_303;                              // 0x1618(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_304;                                       // 0x1630(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_305;                                   // 0x1640(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_306;                              // 0x1650(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_307;                                       // 0x1668(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_308;                                   // 0x1678(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_309;                              // 0x1688(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_310;                                       // 0x16A0(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_311;                                   // 0x16B0(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_312;                              // 0x16C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_313;                                       // 0x16D8(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_314;                                   // 0x16E8(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_315;                              // 0x16F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_316;                                       // 0x1710(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_317;                                   // 0x1720(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_318;                              // 0x1730(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_319;                                       // 0x1748(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_320;                                   // 0x1758(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_321;                              // 0x1768(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_322;                                       // 0x1780(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_323;                                   // 0x1790(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_324;                              // 0x17A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_325;                                       // 0x17B8(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_326;                                   // 0x17C8(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_327;                              // 0x17D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_328;                                       // 0x17F0(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_329;                                   // 0x1800(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_330;                              // 0x1810(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_331;                                       // 0x1828(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_332;                                   // 0x1838(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_333;                              // 0x1848(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_334;                                       // 0x1860(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_335;                                   // 0x1870(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_336;                              // 0x1880(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_337;                                       // 0x1898(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_338;                                   // 0x18A8(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_339;                              // 0x18B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_340;                                       // 0x18D0(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_341;                                   // 0x18E0(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_342;                              // 0x18F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_343;                                       // 0x1908(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_344;                                   // 0x1918(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_345;                              // 0x1928(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_346;                                       // 0x1940(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_347;                                   // 0x1950(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_348;                              // 0x1960(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_349;                                       // 0x1978(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_350;                                   // 0x1988(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_351;                              // 0x1998(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_352;                                       // 0x19B0(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_353;                                   // 0x19C0(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_354;                              // 0x19D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_355;                                       // 0x19E8(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_356;                                   // 0x19F8(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_357;                              // 0x1A08(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_358;                                       // 0x1A20(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_359;                                   // 0x1A30(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_360;                              // 0x1A40(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_361;                                       // 0x1A58(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_362;                                   // 0x1A68(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_363;                              // 0x1A78(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_364;                                       // 0x1A90(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_365;                                   // 0x1AA0(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_366;                              // 0x1AB0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_367;                                       // 0x1AC8(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_368;                                   // 0x1AD8(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_369;                              // 0x1AE8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_370;                                       // 0x1B00(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_371;                                   // 0x1B10(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_372;                              // 0x1B20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_373;                                       // 0x1B38(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_374;                                   // 0x1B48(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_375;                              // 0x1B58(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_376;                                       // 0x1B70(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_377;                                   // 0x1B80(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_378;                              // 0x1B90(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_379;                                       // 0x1BA8(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_380;                                   // 0x1BB8(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_381;                              // 0x1BC8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_382;                                       // 0x1BE0(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_383;                                   // 0x1BF0(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_384;                              // 0x1C00(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_385;                                       // 0x1C18(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_386;                                   // 0x1C28(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_387;                              // 0x1C38(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_388;                                       // 0x1C50(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_389;                                   // 0x1C60(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_390;                              // 0x1C70(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_391;                                       // 0x1C88(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_392;                                   // 0x1C98(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_393;                              // 0x1CA8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_394;                                       // 0x1CC0(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_395;                                   // 0x1CD0(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_396;                              // 0x1CE0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_397;                                       // 0x1CF8(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_398;                                   // 0x1D08(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_399;                              // 0x1D18(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_400;                                       // 0x1D30(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_401;                                   // 0x1D40(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_402;                              // 0x1D50(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_403;                                       // 0x1D68(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_404;                                   // 0x1D78(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_405;                              // 0x1D88(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_406;                                       // 0x1DA0(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_407;                                   // 0x1DB0(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_408;                              // 0x1DC0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_409;                                       // 0x1DD8(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_410;                                   // 0x1DE8(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_411;                              // 0x1DF8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_412;                                       // 0x1E10(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_413;                                   // 0x1E20(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_414;                              // 0x1E30(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_415;                                       // 0x1E48(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_416;                                   // 0x1E58(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_417;                              // 0x1E68(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_418;                                       // 0x1E80(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_419;                                   // 0x1E90(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_420;                              // 0x1EA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_421;                                       // 0x1EB8(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_422;                                   // 0x1EC8(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_423;                              // 0x1ED8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_424;                                       // 0x1EF0(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_425;                                   // 0x1F00(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_426;                              // 0x1F10(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_427;                                       // 0x1F28(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_428;                                   // 0x1F38(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_429;                              // 0x1F48(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_430;                                       // 0x1F60(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_431;                                   // 0x1F70(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_432;                              // 0x1F80(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_433;                                       // 0x1F98(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_434;                                   // 0x1FA8(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_435;                              // 0x1FB8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_436;                                       // 0x1FD0(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_437;                                   // 0x1FE0(0x0010)(HasGetValueTypeHash)
	struct FColors_color                          _ExprResultStack_438;                              // 0x1FF0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	FVerseFunctionProperty_                       _Callee_439;                                       // 0x2008(0x0010)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_440;                                   // 0x2018(0x0010)(HasGetValueTypeHash)
};
static_assert(alignof(Colors_NamedColors__InitCDO) == 0x000008, "Wrong alignment on Colors_NamedColors__InitCDO");
static_assert(sizeof(Colors_NamedColors__InitCDO) == 0x002028, "Wrong size on Colors_NamedColors__InitCDO");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_0) == 0x000000, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_0' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_1) == 0x000018, "Member 'Colors_NamedColors__InitCDO::_Callee_1' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_2) == 0x000028, "Member 'Colors_NamedColors__InitCDO::_ExprResult_2' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_3) == 0x000038, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_3' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_4) == 0x000050, "Member 'Colors_NamedColors__InitCDO::_Callee_4' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_5) == 0x000060, "Member 'Colors_NamedColors__InitCDO::_ExprResult_5' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_6) == 0x000070, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_6' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_7) == 0x000088, "Member 'Colors_NamedColors__InitCDO::_Callee_7' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_8) == 0x000098, "Member 'Colors_NamedColors__InitCDO::_ExprResult_8' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_9) == 0x0000A8, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_9' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_10) == 0x0000C0, "Member 'Colors_NamedColors__InitCDO::_Callee_10' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_11) == 0x0000D0, "Member 'Colors_NamedColors__InitCDO::_ExprResult_11' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_12) == 0x0000E0, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_12' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_13) == 0x0000F8, "Member 'Colors_NamedColors__InitCDO::_Callee_13' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_14) == 0x000108, "Member 'Colors_NamedColors__InitCDO::_ExprResult_14' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_15) == 0x000118, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_15' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_16) == 0x000130, "Member 'Colors_NamedColors__InitCDO::_Callee_16' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_17) == 0x000140, "Member 'Colors_NamedColors__InitCDO::_ExprResult_17' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_18) == 0x000150, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_18' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_19) == 0x000168, "Member 'Colors_NamedColors__InitCDO::_Callee_19' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_20) == 0x000178, "Member 'Colors_NamedColors__InitCDO::_ExprResult_20' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_21) == 0x000188, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_21' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_22) == 0x0001A0, "Member 'Colors_NamedColors__InitCDO::_Callee_22' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_23) == 0x0001B0, "Member 'Colors_NamedColors__InitCDO::_ExprResult_23' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_24) == 0x0001C0, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_24' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_25) == 0x0001D8, "Member 'Colors_NamedColors__InitCDO::_Callee_25' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_26) == 0x0001E8, "Member 'Colors_NamedColors__InitCDO::_ExprResult_26' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_27) == 0x0001F8, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_27' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_28) == 0x000210, "Member 'Colors_NamedColors__InitCDO::_Callee_28' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_29) == 0x000220, "Member 'Colors_NamedColors__InitCDO::_ExprResult_29' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_30) == 0x000230, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_30' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_31) == 0x000248, "Member 'Colors_NamedColors__InitCDO::_Callee_31' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_32) == 0x000258, "Member 'Colors_NamedColors__InitCDO::_ExprResult_32' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_33) == 0x000268, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_33' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_34) == 0x000280, "Member 'Colors_NamedColors__InitCDO::_Callee_34' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_35) == 0x000290, "Member 'Colors_NamedColors__InitCDO::_ExprResult_35' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_36) == 0x0002A0, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_36' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_37) == 0x0002B8, "Member 'Colors_NamedColors__InitCDO::_Callee_37' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_38) == 0x0002C8, "Member 'Colors_NamedColors__InitCDO::_ExprResult_38' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_39) == 0x0002D8, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_39' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_40) == 0x0002F0, "Member 'Colors_NamedColors__InitCDO::_Callee_40' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_41) == 0x000300, "Member 'Colors_NamedColors__InitCDO::_ExprResult_41' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_42) == 0x000310, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_42' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_43) == 0x000328, "Member 'Colors_NamedColors__InitCDO::_Callee_43' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_44) == 0x000338, "Member 'Colors_NamedColors__InitCDO::_ExprResult_44' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_45) == 0x000348, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_45' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_46) == 0x000360, "Member 'Colors_NamedColors__InitCDO::_Callee_46' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_47) == 0x000370, "Member 'Colors_NamedColors__InitCDO::_ExprResult_47' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_48) == 0x000380, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_48' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_49) == 0x000398, "Member 'Colors_NamedColors__InitCDO::_Callee_49' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_50) == 0x0003A8, "Member 'Colors_NamedColors__InitCDO::_ExprResult_50' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_51) == 0x0003B8, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_51' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_52) == 0x0003D0, "Member 'Colors_NamedColors__InitCDO::_Callee_52' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_53) == 0x0003E0, "Member 'Colors_NamedColors__InitCDO::_ExprResult_53' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_54) == 0x0003F0, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_54' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_55) == 0x000408, "Member 'Colors_NamedColors__InitCDO::_Callee_55' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_56) == 0x000418, "Member 'Colors_NamedColors__InitCDO::_ExprResult_56' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_57) == 0x000428, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_57' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_58) == 0x000440, "Member 'Colors_NamedColors__InitCDO::_Callee_58' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_59) == 0x000450, "Member 'Colors_NamedColors__InitCDO::_ExprResult_59' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_60) == 0x000460, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_60' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_61) == 0x000478, "Member 'Colors_NamedColors__InitCDO::_Callee_61' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_62) == 0x000488, "Member 'Colors_NamedColors__InitCDO::_ExprResult_62' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_63) == 0x000498, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_63' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_64) == 0x0004B0, "Member 'Colors_NamedColors__InitCDO::_Callee_64' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_65) == 0x0004C0, "Member 'Colors_NamedColors__InitCDO::_ExprResult_65' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_66) == 0x0004D0, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_66' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_67) == 0x0004E8, "Member 'Colors_NamedColors__InitCDO::_Callee_67' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_68) == 0x0004F8, "Member 'Colors_NamedColors__InitCDO::_ExprResult_68' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_69) == 0x000508, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_69' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_70) == 0x000520, "Member 'Colors_NamedColors__InitCDO::_Callee_70' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_71) == 0x000530, "Member 'Colors_NamedColors__InitCDO::_ExprResult_71' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_72) == 0x000540, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_72' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_73) == 0x000558, "Member 'Colors_NamedColors__InitCDO::_Callee_73' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_74) == 0x000568, "Member 'Colors_NamedColors__InitCDO::_ExprResult_74' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_75) == 0x000578, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_75' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_76) == 0x000590, "Member 'Colors_NamedColors__InitCDO::_Callee_76' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_77) == 0x0005A0, "Member 'Colors_NamedColors__InitCDO::_ExprResult_77' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_78) == 0x0005B0, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_78' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_79) == 0x0005C8, "Member 'Colors_NamedColors__InitCDO::_Callee_79' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_80) == 0x0005D8, "Member 'Colors_NamedColors__InitCDO::_ExprResult_80' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_81) == 0x0005E8, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_81' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_82) == 0x000600, "Member 'Colors_NamedColors__InitCDO::_Callee_82' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_83) == 0x000610, "Member 'Colors_NamedColors__InitCDO::_ExprResult_83' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_84) == 0x000620, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_84' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_85) == 0x000638, "Member 'Colors_NamedColors__InitCDO::_Callee_85' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_86) == 0x000648, "Member 'Colors_NamedColors__InitCDO::_ExprResult_86' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_87) == 0x000658, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_87' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_88) == 0x000670, "Member 'Colors_NamedColors__InitCDO::_Callee_88' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_89) == 0x000680, "Member 'Colors_NamedColors__InitCDO::_ExprResult_89' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_90) == 0x000690, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_90' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_91) == 0x0006A8, "Member 'Colors_NamedColors__InitCDO::_Callee_91' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_92) == 0x0006B8, "Member 'Colors_NamedColors__InitCDO::_ExprResult_92' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_93) == 0x0006C8, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_93' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_94) == 0x0006E0, "Member 'Colors_NamedColors__InitCDO::_Callee_94' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_95) == 0x0006F0, "Member 'Colors_NamedColors__InitCDO::_ExprResult_95' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_96) == 0x000700, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_96' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_97) == 0x000718, "Member 'Colors_NamedColors__InitCDO::_Callee_97' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_98) == 0x000728, "Member 'Colors_NamedColors__InitCDO::_ExprResult_98' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_99) == 0x000738, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_99' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_100) == 0x000750, "Member 'Colors_NamedColors__InitCDO::_Callee_100' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_101) == 0x000760, "Member 'Colors_NamedColors__InitCDO::_ExprResult_101' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_102) == 0x000770, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_102' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_103) == 0x000788, "Member 'Colors_NamedColors__InitCDO::_Callee_103' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_104) == 0x000798, "Member 'Colors_NamedColors__InitCDO::_ExprResult_104' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_105) == 0x0007A8, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_105' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_106) == 0x0007C0, "Member 'Colors_NamedColors__InitCDO::_Callee_106' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_107) == 0x0007D0, "Member 'Colors_NamedColors__InitCDO::_ExprResult_107' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_108) == 0x0007E0, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_108' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_109) == 0x0007F8, "Member 'Colors_NamedColors__InitCDO::_Callee_109' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_110) == 0x000808, "Member 'Colors_NamedColors__InitCDO::_ExprResult_110' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_111) == 0x000818, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_111' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_112) == 0x000830, "Member 'Colors_NamedColors__InitCDO::_Callee_112' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_113) == 0x000840, "Member 'Colors_NamedColors__InitCDO::_ExprResult_113' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_114) == 0x000850, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_114' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_115) == 0x000868, "Member 'Colors_NamedColors__InitCDO::_Callee_115' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_116) == 0x000878, "Member 'Colors_NamedColors__InitCDO::_ExprResult_116' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_117) == 0x000888, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_117' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_118) == 0x0008A0, "Member 'Colors_NamedColors__InitCDO::_Callee_118' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_119) == 0x0008B0, "Member 'Colors_NamedColors__InitCDO::_ExprResult_119' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_120) == 0x0008C0, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_120' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_121) == 0x0008D8, "Member 'Colors_NamedColors__InitCDO::_Callee_121' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_122) == 0x0008E8, "Member 'Colors_NamedColors__InitCDO::_ExprResult_122' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_123) == 0x0008F8, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_123' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_124) == 0x000910, "Member 'Colors_NamedColors__InitCDO::_Callee_124' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_125) == 0x000920, "Member 'Colors_NamedColors__InitCDO::_ExprResult_125' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_126) == 0x000930, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_126' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_127) == 0x000948, "Member 'Colors_NamedColors__InitCDO::_Callee_127' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_128) == 0x000958, "Member 'Colors_NamedColors__InitCDO::_ExprResult_128' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_129) == 0x000968, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_129' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_130) == 0x000980, "Member 'Colors_NamedColors__InitCDO::_Callee_130' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_131) == 0x000990, "Member 'Colors_NamedColors__InitCDO::_ExprResult_131' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_132) == 0x0009A0, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_132' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_133) == 0x0009B8, "Member 'Colors_NamedColors__InitCDO::_Callee_133' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_134) == 0x0009C8, "Member 'Colors_NamedColors__InitCDO::_ExprResult_134' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_135) == 0x0009D8, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_135' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_136) == 0x0009F0, "Member 'Colors_NamedColors__InitCDO::_Callee_136' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_137) == 0x000A00, "Member 'Colors_NamedColors__InitCDO::_ExprResult_137' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_138) == 0x000A10, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_138' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_139) == 0x000A28, "Member 'Colors_NamedColors__InitCDO::_Callee_139' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_140) == 0x000A38, "Member 'Colors_NamedColors__InitCDO::_ExprResult_140' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_141) == 0x000A48, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_141' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_142) == 0x000A60, "Member 'Colors_NamedColors__InitCDO::_Callee_142' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_143) == 0x000A70, "Member 'Colors_NamedColors__InitCDO::_ExprResult_143' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_144) == 0x000A80, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_144' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_145) == 0x000A98, "Member 'Colors_NamedColors__InitCDO::_Callee_145' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_146) == 0x000AA8, "Member 'Colors_NamedColors__InitCDO::_ExprResult_146' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_147) == 0x000AB8, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_147' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_148) == 0x000AD0, "Member 'Colors_NamedColors__InitCDO::_Callee_148' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_149) == 0x000AE0, "Member 'Colors_NamedColors__InitCDO::_ExprResult_149' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_150) == 0x000AF0, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_150' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_151) == 0x000B08, "Member 'Colors_NamedColors__InitCDO::_Callee_151' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_152) == 0x000B18, "Member 'Colors_NamedColors__InitCDO::_ExprResult_152' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_153) == 0x000B28, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_153' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_154) == 0x000B40, "Member 'Colors_NamedColors__InitCDO::_Callee_154' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_155) == 0x000B50, "Member 'Colors_NamedColors__InitCDO::_ExprResult_155' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_156) == 0x000B60, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_156' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_157) == 0x000B78, "Member 'Colors_NamedColors__InitCDO::_Callee_157' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_158) == 0x000B88, "Member 'Colors_NamedColors__InitCDO::_ExprResult_158' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_159) == 0x000B98, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_159' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_160) == 0x000BB0, "Member 'Colors_NamedColors__InitCDO::_Callee_160' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_161) == 0x000BC0, "Member 'Colors_NamedColors__InitCDO::_ExprResult_161' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_162) == 0x000BD0, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_162' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_163) == 0x000BE8, "Member 'Colors_NamedColors__InitCDO::_Callee_163' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_164) == 0x000BF8, "Member 'Colors_NamedColors__InitCDO::_ExprResult_164' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_165) == 0x000C08, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_165' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_166) == 0x000C20, "Member 'Colors_NamedColors__InitCDO::_Callee_166' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_167) == 0x000C30, "Member 'Colors_NamedColors__InitCDO::_ExprResult_167' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_168) == 0x000C40, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_168' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_169) == 0x000C58, "Member 'Colors_NamedColors__InitCDO::_Callee_169' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_170) == 0x000C68, "Member 'Colors_NamedColors__InitCDO::_ExprResult_170' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_171) == 0x000C78, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_171' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_172) == 0x000C90, "Member 'Colors_NamedColors__InitCDO::_Callee_172' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_173) == 0x000CA0, "Member 'Colors_NamedColors__InitCDO::_ExprResult_173' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_174) == 0x000CB0, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_174' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_175) == 0x000CC8, "Member 'Colors_NamedColors__InitCDO::_Callee_175' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_176) == 0x000CD8, "Member 'Colors_NamedColors__InitCDO::_ExprResult_176' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_177) == 0x000CE8, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_177' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_178) == 0x000D00, "Member 'Colors_NamedColors__InitCDO::_Callee_178' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_179) == 0x000D10, "Member 'Colors_NamedColors__InitCDO::_ExprResult_179' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_180) == 0x000D20, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_180' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_181) == 0x000D38, "Member 'Colors_NamedColors__InitCDO::_Callee_181' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_182) == 0x000D48, "Member 'Colors_NamedColors__InitCDO::_ExprResult_182' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_183) == 0x000D58, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_183' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_184) == 0x000D70, "Member 'Colors_NamedColors__InitCDO::_Callee_184' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_185) == 0x000D80, "Member 'Colors_NamedColors__InitCDO::_ExprResult_185' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_186) == 0x000D90, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_186' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_187) == 0x000DA8, "Member 'Colors_NamedColors__InitCDO::_Callee_187' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_188) == 0x000DB8, "Member 'Colors_NamedColors__InitCDO::_ExprResult_188' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_189) == 0x000DC8, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_189' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_190) == 0x000DE0, "Member 'Colors_NamedColors__InitCDO::_Callee_190' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_191) == 0x000DF0, "Member 'Colors_NamedColors__InitCDO::_ExprResult_191' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_192) == 0x000E00, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_192' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_193) == 0x000E18, "Member 'Colors_NamedColors__InitCDO::_Callee_193' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_194) == 0x000E28, "Member 'Colors_NamedColors__InitCDO::_ExprResult_194' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_195) == 0x000E38, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_195' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_196) == 0x000E50, "Member 'Colors_NamedColors__InitCDO::_Callee_196' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_197) == 0x000E60, "Member 'Colors_NamedColors__InitCDO::_ExprResult_197' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_198) == 0x000E70, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_198' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_199) == 0x000E88, "Member 'Colors_NamedColors__InitCDO::_Callee_199' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_200) == 0x000E98, "Member 'Colors_NamedColors__InitCDO::_ExprResult_200' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_201) == 0x000EA8, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_201' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_202) == 0x000EC0, "Member 'Colors_NamedColors__InitCDO::_Callee_202' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_203) == 0x000ED0, "Member 'Colors_NamedColors__InitCDO::_ExprResult_203' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_204) == 0x000EE0, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_204' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_205) == 0x000EF8, "Member 'Colors_NamedColors__InitCDO::_Callee_205' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_206) == 0x000F08, "Member 'Colors_NamedColors__InitCDO::_ExprResult_206' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_207) == 0x000F18, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_207' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_208) == 0x000F30, "Member 'Colors_NamedColors__InitCDO::_Callee_208' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_209) == 0x000F40, "Member 'Colors_NamedColors__InitCDO::_ExprResult_209' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_210) == 0x000F50, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_210' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_211) == 0x000F68, "Member 'Colors_NamedColors__InitCDO::_Callee_211' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_212) == 0x000F78, "Member 'Colors_NamedColors__InitCDO::_ExprResult_212' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_213) == 0x000F88, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_213' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_214) == 0x000FA0, "Member 'Colors_NamedColors__InitCDO::_Callee_214' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_215) == 0x000FB0, "Member 'Colors_NamedColors__InitCDO::_ExprResult_215' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_216) == 0x000FC0, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_216' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_217) == 0x000FD8, "Member 'Colors_NamedColors__InitCDO::_Callee_217' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_218) == 0x000FE8, "Member 'Colors_NamedColors__InitCDO::_ExprResult_218' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_219) == 0x000FF8, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_219' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_220) == 0x001010, "Member 'Colors_NamedColors__InitCDO::_Callee_220' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_221) == 0x001020, "Member 'Colors_NamedColors__InitCDO::_ExprResult_221' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_222) == 0x001030, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_222' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_223) == 0x001048, "Member 'Colors_NamedColors__InitCDO::_Callee_223' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_224) == 0x001058, "Member 'Colors_NamedColors__InitCDO::_ExprResult_224' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_225) == 0x001068, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_225' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_226) == 0x001080, "Member 'Colors_NamedColors__InitCDO::_Callee_226' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_227) == 0x001090, "Member 'Colors_NamedColors__InitCDO::_ExprResult_227' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_228) == 0x0010A0, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_228' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_229) == 0x0010B8, "Member 'Colors_NamedColors__InitCDO::_Callee_229' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_230) == 0x0010C8, "Member 'Colors_NamedColors__InitCDO::_ExprResult_230' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_231) == 0x0010D8, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_231' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_232) == 0x0010F0, "Member 'Colors_NamedColors__InitCDO::_Callee_232' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_233) == 0x001100, "Member 'Colors_NamedColors__InitCDO::_ExprResult_233' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_234) == 0x001110, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_234' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_235) == 0x001128, "Member 'Colors_NamedColors__InitCDO::_Callee_235' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_236) == 0x001138, "Member 'Colors_NamedColors__InitCDO::_ExprResult_236' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_237) == 0x001148, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_237' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_238) == 0x001160, "Member 'Colors_NamedColors__InitCDO::_Callee_238' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_239) == 0x001170, "Member 'Colors_NamedColors__InitCDO::_ExprResult_239' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_240) == 0x001180, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_240' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_241) == 0x001198, "Member 'Colors_NamedColors__InitCDO::_Callee_241' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_242) == 0x0011A8, "Member 'Colors_NamedColors__InitCDO::_ExprResult_242' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_243) == 0x0011B8, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_243' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_244) == 0x0011D0, "Member 'Colors_NamedColors__InitCDO::_Callee_244' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_245) == 0x0011E0, "Member 'Colors_NamedColors__InitCDO::_ExprResult_245' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_246) == 0x0011F0, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_246' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_247) == 0x001208, "Member 'Colors_NamedColors__InitCDO::_Callee_247' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_248) == 0x001218, "Member 'Colors_NamedColors__InitCDO::_ExprResult_248' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_249) == 0x001228, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_249' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_250) == 0x001240, "Member 'Colors_NamedColors__InitCDO::_Callee_250' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_251) == 0x001250, "Member 'Colors_NamedColors__InitCDO::_ExprResult_251' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_252) == 0x001260, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_252' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_253) == 0x001278, "Member 'Colors_NamedColors__InitCDO::_Callee_253' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_254) == 0x001288, "Member 'Colors_NamedColors__InitCDO::_ExprResult_254' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_255) == 0x001298, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_255' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_256) == 0x0012B0, "Member 'Colors_NamedColors__InitCDO::_Callee_256' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_257) == 0x0012C0, "Member 'Colors_NamedColors__InitCDO::_ExprResult_257' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_258) == 0x0012D0, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_258' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_259) == 0x0012E8, "Member 'Colors_NamedColors__InitCDO::_Callee_259' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_260) == 0x0012F8, "Member 'Colors_NamedColors__InitCDO::_ExprResult_260' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_261) == 0x001308, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_261' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_262) == 0x001320, "Member 'Colors_NamedColors__InitCDO::_Callee_262' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_263) == 0x001330, "Member 'Colors_NamedColors__InitCDO::_ExprResult_263' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_264) == 0x001340, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_264' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_265) == 0x001358, "Member 'Colors_NamedColors__InitCDO::_Callee_265' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_266) == 0x001368, "Member 'Colors_NamedColors__InitCDO::_ExprResult_266' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_267) == 0x001378, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_267' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_268) == 0x001390, "Member 'Colors_NamedColors__InitCDO::_Callee_268' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_269) == 0x0013A0, "Member 'Colors_NamedColors__InitCDO::_ExprResult_269' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_270) == 0x0013B0, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_270' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_271) == 0x0013C8, "Member 'Colors_NamedColors__InitCDO::_Callee_271' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_272) == 0x0013D8, "Member 'Colors_NamedColors__InitCDO::_ExprResult_272' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_273) == 0x0013E8, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_273' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_274) == 0x001400, "Member 'Colors_NamedColors__InitCDO::_Callee_274' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_275) == 0x001410, "Member 'Colors_NamedColors__InitCDO::_ExprResult_275' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_276) == 0x001420, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_276' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_277) == 0x001438, "Member 'Colors_NamedColors__InitCDO::_Callee_277' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_278) == 0x001448, "Member 'Colors_NamedColors__InitCDO::_ExprResult_278' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_279) == 0x001458, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_279' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_280) == 0x001470, "Member 'Colors_NamedColors__InitCDO::_Callee_280' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_281) == 0x001480, "Member 'Colors_NamedColors__InitCDO::_ExprResult_281' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_282) == 0x001490, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_282' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_283) == 0x0014A8, "Member 'Colors_NamedColors__InitCDO::_Callee_283' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_284) == 0x0014B8, "Member 'Colors_NamedColors__InitCDO::_ExprResult_284' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_285) == 0x0014C8, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_285' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_286) == 0x0014E0, "Member 'Colors_NamedColors__InitCDO::_Callee_286' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_287) == 0x0014F0, "Member 'Colors_NamedColors__InitCDO::_ExprResult_287' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_288) == 0x001500, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_288' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_289) == 0x001518, "Member 'Colors_NamedColors__InitCDO::_Callee_289' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_290) == 0x001528, "Member 'Colors_NamedColors__InitCDO::_ExprResult_290' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_291) == 0x001538, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_291' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_292) == 0x001550, "Member 'Colors_NamedColors__InitCDO::_Callee_292' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_293) == 0x001560, "Member 'Colors_NamedColors__InitCDO::_ExprResult_293' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_294) == 0x001570, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_294' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_295) == 0x001588, "Member 'Colors_NamedColors__InitCDO::_Callee_295' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_296) == 0x001598, "Member 'Colors_NamedColors__InitCDO::_ExprResult_296' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_297) == 0x0015A8, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_297' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_298) == 0x0015C0, "Member 'Colors_NamedColors__InitCDO::_Callee_298' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_299) == 0x0015D0, "Member 'Colors_NamedColors__InitCDO::_ExprResult_299' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_300) == 0x0015E0, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_300' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_301) == 0x0015F8, "Member 'Colors_NamedColors__InitCDO::_Callee_301' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_302) == 0x001608, "Member 'Colors_NamedColors__InitCDO::_ExprResult_302' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_303) == 0x001618, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_303' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_304) == 0x001630, "Member 'Colors_NamedColors__InitCDO::_Callee_304' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_305) == 0x001640, "Member 'Colors_NamedColors__InitCDO::_ExprResult_305' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_306) == 0x001650, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_306' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_307) == 0x001668, "Member 'Colors_NamedColors__InitCDO::_Callee_307' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_308) == 0x001678, "Member 'Colors_NamedColors__InitCDO::_ExprResult_308' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_309) == 0x001688, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_309' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_310) == 0x0016A0, "Member 'Colors_NamedColors__InitCDO::_Callee_310' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_311) == 0x0016B0, "Member 'Colors_NamedColors__InitCDO::_ExprResult_311' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_312) == 0x0016C0, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_312' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_313) == 0x0016D8, "Member 'Colors_NamedColors__InitCDO::_Callee_313' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_314) == 0x0016E8, "Member 'Colors_NamedColors__InitCDO::_ExprResult_314' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_315) == 0x0016F8, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_315' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_316) == 0x001710, "Member 'Colors_NamedColors__InitCDO::_Callee_316' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_317) == 0x001720, "Member 'Colors_NamedColors__InitCDO::_ExprResult_317' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_318) == 0x001730, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_318' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_319) == 0x001748, "Member 'Colors_NamedColors__InitCDO::_Callee_319' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_320) == 0x001758, "Member 'Colors_NamedColors__InitCDO::_ExprResult_320' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_321) == 0x001768, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_321' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_322) == 0x001780, "Member 'Colors_NamedColors__InitCDO::_Callee_322' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_323) == 0x001790, "Member 'Colors_NamedColors__InitCDO::_ExprResult_323' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_324) == 0x0017A0, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_324' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_325) == 0x0017B8, "Member 'Colors_NamedColors__InitCDO::_Callee_325' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_326) == 0x0017C8, "Member 'Colors_NamedColors__InitCDO::_ExprResult_326' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_327) == 0x0017D8, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_327' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_328) == 0x0017F0, "Member 'Colors_NamedColors__InitCDO::_Callee_328' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_329) == 0x001800, "Member 'Colors_NamedColors__InitCDO::_ExprResult_329' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_330) == 0x001810, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_330' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_331) == 0x001828, "Member 'Colors_NamedColors__InitCDO::_Callee_331' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_332) == 0x001838, "Member 'Colors_NamedColors__InitCDO::_ExprResult_332' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_333) == 0x001848, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_333' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_334) == 0x001860, "Member 'Colors_NamedColors__InitCDO::_Callee_334' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_335) == 0x001870, "Member 'Colors_NamedColors__InitCDO::_ExprResult_335' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_336) == 0x001880, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_336' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_337) == 0x001898, "Member 'Colors_NamedColors__InitCDO::_Callee_337' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_338) == 0x0018A8, "Member 'Colors_NamedColors__InitCDO::_ExprResult_338' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_339) == 0x0018B8, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_339' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_340) == 0x0018D0, "Member 'Colors_NamedColors__InitCDO::_Callee_340' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_341) == 0x0018E0, "Member 'Colors_NamedColors__InitCDO::_ExprResult_341' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_342) == 0x0018F0, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_342' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_343) == 0x001908, "Member 'Colors_NamedColors__InitCDO::_Callee_343' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_344) == 0x001918, "Member 'Colors_NamedColors__InitCDO::_ExprResult_344' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_345) == 0x001928, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_345' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_346) == 0x001940, "Member 'Colors_NamedColors__InitCDO::_Callee_346' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_347) == 0x001950, "Member 'Colors_NamedColors__InitCDO::_ExprResult_347' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_348) == 0x001960, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_348' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_349) == 0x001978, "Member 'Colors_NamedColors__InitCDO::_Callee_349' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_350) == 0x001988, "Member 'Colors_NamedColors__InitCDO::_ExprResult_350' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_351) == 0x001998, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_351' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_352) == 0x0019B0, "Member 'Colors_NamedColors__InitCDO::_Callee_352' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_353) == 0x0019C0, "Member 'Colors_NamedColors__InitCDO::_ExprResult_353' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_354) == 0x0019D0, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_354' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_355) == 0x0019E8, "Member 'Colors_NamedColors__InitCDO::_Callee_355' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_356) == 0x0019F8, "Member 'Colors_NamedColors__InitCDO::_ExprResult_356' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_357) == 0x001A08, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_357' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_358) == 0x001A20, "Member 'Colors_NamedColors__InitCDO::_Callee_358' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_359) == 0x001A30, "Member 'Colors_NamedColors__InitCDO::_ExprResult_359' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_360) == 0x001A40, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_360' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_361) == 0x001A58, "Member 'Colors_NamedColors__InitCDO::_Callee_361' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_362) == 0x001A68, "Member 'Colors_NamedColors__InitCDO::_ExprResult_362' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_363) == 0x001A78, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_363' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_364) == 0x001A90, "Member 'Colors_NamedColors__InitCDO::_Callee_364' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_365) == 0x001AA0, "Member 'Colors_NamedColors__InitCDO::_ExprResult_365' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_366) == 0x001AB0, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_366' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_367) == 0x001AC8, "Member 'Colors_NamedColors__InitCDO::_Callee_367' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_368) == 0x001AD8, "Member 'Colors_NamedColors__InitCDO::_ExprResult_368' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_369) == 0x001AE8, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_369' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_370) == 0x001B00, "Member 'Colors_NamedColors__InitCDO::_Callee_370' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_371) == 0x001B10, "Member 'Colors_NamedColors__InitCDO::_ExprResult_371' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_372) == 0x001B20, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_372' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_373) == 0x001B38, "Member 'Colors_NamedColors__InitCDO::_Callee_373' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_374) == 0x001B48, "Member 'Colors_NamedColors__InitCDO::_ExprResult_374' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_375) == 0x001B58, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_375' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_376) == 0x001B70, "Member 'Colors_NamedColors__InitCDO::_Callee_376' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_377) == 0x001B80, "Member 'Colors_NamedColors__InitCDO::_ExprResult_377' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_378) == 0x001B90, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_378' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_379) == 0x001BA8, "Member 'Colors_NamedColors__InitCDO::_Callee_379' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_380) == 0x001BB8, "Member 'Colors_NamedColors__InitCDO::_ExprResult_380' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_381) == 0x001BC8, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_381' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_382) == 0x001BE0, "Member 'Colors_NamedColors__InitCDO::_Callee_382' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_383) == 0x001BF0, "Member 'Colors_NamedColors__InitCDO::_ExprResult_383' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_384) == 0x001C00, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_384' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_385) == 0x001C18, "Member 'Colors_NamedColors__InitCDO::_Callee_385' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_386) == 0x001C28, "Member 'Colors_NamedColors__InitCDO::_ExprResult_386' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_387) == 0x001C38, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_387' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_388) == 0x001C50, "Member 'Colors_NamedColors__InitCDO::_Callee_388' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_389) == 0x001C60, "Member 'Colors_NamedColors__InitCDO::_ExprResult_389' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_390) == 0x001C70, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_390' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_391) == 0x001C88, "Member 'Colors_NamedColors__InitCDO::_Callee_391' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_392) == 0x001C98, "Member 'Colors_NamedColors__InitCDO::_ExprResult_392' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_393) == 0x001CA8, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_393' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_394) == 0x001CC0, "Member 'Colors_NamedColors__InitCDO::_Callee_394' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_395) == 0x001CD0, "Member 'Colors_NamedColors__InitCDO::_ExprResult_395' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_396) == 0x001CE0, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_396' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_397) == 0x001CF8, "Member 'Colors_NamedColors__InitCDO::_Callee_397' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_398) == 0x001D08, "Member 'Colors_NamedColors__InitCDO::_ExprResult_398' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_399) == 0x001D18, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_399' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_400) == 0x001D30, "Member 'Colors_NamedColors__InitCDO::_Callee_400' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_401) == 0x001D40, "Member 'Colors_NamedColors__InitCDO::_ExprResult_401' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_402) == 0x001D50, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_402' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_403) == 0x001D68, "Member 'Colors_NamedColors__InitCDO::_Callee_403' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_404) == 0x001D78, "Member 'Colors_NamedColors__InitCDO::_ExprResult_404' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_405) == 0x001D88, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_405' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_406) == 0x001DA0, "Member 'Colors_NamedColors__InitCDO::_Callee_406' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_407) == 0x001DB0, "Member 'Colors_NamedColors__InitCDO::_ExprResult_407' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_408) == 0x001DC0, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_408' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_409) == 0x001DD8, "Member 'Colors_NamedColors__InitCDO::_Callee_409' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_410) == 0x001DE8, "Member 'Colors_NamedColors__InitCDO::_ExprResult_410' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_411) == 0x001DF8, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_411' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_412) == 0x001E10, "Member 'Colors_NamedColors__InitCDO::_Callee_412' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_413) == 0x001E20, "Member 'Colors_NamedColors__InitCDO::_ExprResult_413' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_414) == 0x001E30, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_414' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_415) == 0x001E48, "Member 'Colors_NamedColors__InitCDO::_Callee_415' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_416) == 0x001E58, "Member 'Colors_NamedColors__InitCDO::_ExprResult_416' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_417) == 0x001E68, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_417' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_418) == 0x001E80, "Member 'Colors_NamedColors__InitCDO::_Callee_418' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_419) == 0x001E90, "Member 'Colors_NamedColors__InitCDO::_ExprResult_419' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_420) == 0x001EA0, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_420' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_421) == 0x001EB8, "Member 'Colors_NamedColors__InitCDO::_Callee_421' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_422) == 0x001EC8, "Member 'Colors_NamedColors__InitCDO::_ExprResult_422' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_423) == 0x001ED8, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_423' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_424) == 0x001EF0, "Member 'Colors_NamedColors__InitCDO::_Callee_424' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_425) == 0x001F00, "Member 'Colors_NamedColors__InitCDO::_ExprResult_425' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_426) == 0x001F10, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_426' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_427) == 0x001F28, "Member 'Colors_NamedColors__InitCDO::_Callee_427' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_428) == 0x001F38, "Member 'Colors_NamedColors__InitCDO::_ExprResult_428' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_429) == 0x001F48, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_429' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_430) == 0x001F60, "Member 'Colors_NamedColors__InitCDO::_Callee_430' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_431) == 0x001F70, "Member 'Colors_NamedColors__InitCDO::_ExprResult_431' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_432) == 0x001F80, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_432' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_433) == 0x001F98, "Member 'Colors_NamedColors__InitCDO::_Callee_433' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_434) == 0x001FA8, "Member 'Colors_NamedColors__InitCDO::_ExprResult_434' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_435) == 0x001FB8, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_435' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_436) == 0x001FD0, "Member 'Colors_NamedColors__InitCDO::_Callee_436' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_437) == 0x001FE0, "Member 'Colors_NamedColors__InitCDO::_ExprResult_437' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResultStack_438) == 0x001FF0, "Member 'Colors_NamedColors__InitCDO::_ExprResultStack_438' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _Callee_439) == 0x002008, "Member 'Colors_NamedColors__InitCDO::_Callee_439' has a wrong offset!");
static_assert(offsetof(Colors_NamedColors__InitCDO, _ExprResult_440) == 0x002018, "Member 'Colors_NamedColors__InitCDO::_ExprResult_440' has a wrong offset!");

// Function Verse.Random._L_2fVerse_2eorg_2fRandom_N_RGetRandomFloat_L_Nfloat_M_Nfloat_R
// 0x0018 (0x0018 - 0x0000)
struct Random__L_2fVerse_2eorg_2fRandom_N_RGetRandomFloat_L_Nfloat_M_Nfloat_R final
{
public:
	struct Verse::Ftuple_Lfloat_Mfloat_R          __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	double                                        RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random__L_2fVerse_2eorg_2fRandom_N_RGetRandomFloat_L_Nfloat_M_Nfloat_R) == 0x000008, "Wrong alignment on Random__L_2fVerse_2eorg_2fRandom_N_RGetRandomFloat_L_Nfloat_M_Nfloat_R");
static_assert(sizeof(Random__L_2fVerse_2eorg_2fRandom_N_RGetRandomFloat_L_Nfloat_M_Nfloat_R) == 0x000018, "Wrong size on Random__L_2fVerse_2eorg_2fRandom_N_RGetRandomFloat_L_Nfloat_M_Nfloat_R");
static_assert(offsetof(Random__L_2fVerse_2eorg_2fRandom_N_RGetRandomFloat_L_Nfloat_M_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Random__L_2fVerse_2eorg_2fRandom_N_RGetRandomFloat_L_Nfloat_M_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Random__L_2fVerse_2eorg_2fRandom_N_RGetRandomFloat_L_Nfloat_M_Nfloat_R, RetVal) == 0x000010, "Member 'Random__L_2fVerse_2eorg_2fRandom_N_RGetRandomFloat_L_Nfloat_M_Nfloat_R::RetVal' has a wrong offset!");

// Function Verse.Random._L_2fVerse_2eorg_2fRandom_N_RGetRandomInt_L_Nint_M_Nint_R
// 0x0018 (0x0018 - 0x0000)
struct Random__L_2fVerse_2eorg_2fRandom_N_RGetRandomInt_L_Nint_M_Nint_R final
{
public:
	struct Verse::Ftuple_Lint_Mint_R              __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	int64                                         RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random__L_2fVerse_2eorg_2fRandom_N_RGetRandomInt_L_Nint_M_Nint_R) == 0x000008, "Wrong alignment on Random__L_2fVerse_2eorg_2fRandom_N_RGetRandomInt_L_Nint_M_Nint_R");
static_assert(sizeof(Random__L_2fVerse_2eorg_2fRandom_N_RGetRandomInt_L_Nint_M_Nint_R) == 0x000018, "Wrong size on Random__L_2fVerse_2eorg_2fRandom_N_RGetRandomInt_L_Nint_M_Nint_R");
static_assert(offsetof(Random__L_2fVerse_2eorg_2fRandom_N_RGetRandomInt_L_Nint_M_Nint_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Random__L_2fVerse_2eorg_2fRandom_N_RGetRandomInt_L_Nint_M_Nint_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Random__L_2fVerse_2eorg_2fRandom_N_RGetRandomInt_L_Nint_M_Nint_R, RetVal) == 0x000010, "Member 'Random__L_2fVerse_2eorg_2fRandom_N_RGetRandomInt_L_Nint_M_Nint_R::RetVal' has a wrong offset!");

// Function Verse.Random._L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R
// 0x00F8 (0x00F8 - 0x0000)
struct Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R final
{
public:
	TArray<FVerseDynamicProperty_>                __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, ContainsInstancedReference)
	TArray<FVerseDynamicProperty_>                RetVal;                                            // 0x0010(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	int64                                         __verse_0x5B0C19A9_Length_1;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<FVerseDynamicProperty_>                __verse_0x00000000__2;                             // 0x0028(0x0010)(ContainsInstancedReference)
	TArray<FVerseDynamicProperty_>                __verse_0x95D09D0E_Result_1;                       // 0x0038(0x0010)(ContainsInstancedReference)
	struct FVerseIntRange                         _ForIterable_0;                                    // 0x0048(0x0010)(NoDestructor)
	int64                                         __verse_0x95676A67_i_5;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         __verse_0x7BC8DF75_j_7;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FVerseFunctionProperty_                       _Callee_1;                                         // 0x0068(0x0010)(HasGetValueTypeHash)
	struct Verse::Ftuple_Lint_Mint_R              _ExprResult_2;                                     // 0x0078(0x0010)(HasGetValueTypeHash)
	FVerseDynamicProperty_                        __verse_0x58C1F360_Temp_8;                         // 0x0088(0x0010)(HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_3;                                // 0x0098(0x0011)(HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FReferenceProperty_                           _ExprResultStack_4;                                // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FVerseDynamicProperty_                        _ExprResultStack_5;                                // 0x00C0(0x0010)(HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_6;                                // 0x00D0(0x0011)(HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FReferenceProperty_                           _ExprResultStack_7;                                // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R) == 0x000008, "Wrong alignment on Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R");
static_assert(sizeof(Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R) == 0x0000F8, "Wrong size on Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R");
static_assert(offsetof(Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R, RetVal) == 0x000010, "Member 'Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R::RetVal' has a wrong offset!");
static_assert(offsetof(Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R, __verse_0x5B0C19A9_Length_1) == 0x000020, "Member 'Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R::__verse_0x5B0C19A9_Length_1' has a wrong offset!");
static_assert(offsetof(Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R, __verse_0x00000000__2) == 0x000028, "Member 'Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R::__verse_0x00000000__2' has a wrong offset!");
static_assert(offsetof(Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R, __verse_0x95D09D0E_Result_1) == 0x000038, "Member 'Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R::__verse_0x95D09D0E_Result_1' has a wrong offset!");
static_assert(offsetof(Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R, _ForIterable_0) == 0x000048, "Member 'Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R::_ForIterable_0' has a wrong offset!");
static_assert(offsetof(Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R, __verse_0x95676A67_i_5) == 0x000058, "Member 'Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R::__verse_0x95676A67_i_5' has a wrong offset!");
static_assert(offsetof(Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R, __verse_0x7BC8DF75_j_7) == 0x000060, "Member 'Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R::__verse_0x7BC8DF75_j_7' has a wrong offset!");
static_assert(offsetof(Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R, _Callee_1) == 0x000068, "Member 'Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R::_Callee_1' has a wrong offset!");
static_assert(offsetof(Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R, _ExprResult_2) == 0x000078, "Member 'Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R::_ExprResult_2' has a wrong offset!");
static_assert(offsetof(Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R, __verse_0x58C1F360_Temp_8) == 0x000088, "Member 'Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R::__verse_0x58C1F360_Temp_8' has a wrong offset!");
static_assert(offsetof(Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R, _ExprResultStack_3) == 0x000098, "Member 'Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R::_ExprResultStack_3' has a wrong offset!");
static_assert(offsetof(Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R, _ExprResultStack_4) == 0x0000B0, "Member 'Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R::_ExprResultStack_4' has a wrong offset!");
static_assert(offsetof(Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R, _ExprResultStack_5) == 0x0000C0, "Member 'Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R::_ExprResultStack_5' has a wrong offset!");
static_assert(offsetof(Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R, _ExprResultStack_6) == 0x0000D0, "Member 'Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R::_ExprResultStack_6' has a wrong offset!");
static_assert(offsetof(Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R, _ExprResultStack_7) == 0x0000E8, "Member 'Random__L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R::_ExprResultStack_7' has a wrong offset!");

// Function Verse.Verse_disposable._L_2fVerse_2eorg_2fVerse_2fdisposable_N_RDispose
// 0x0001 (0x0001 - 0x0000)
struct Verse_disposable__L_2fVerse_2eorg_2fVerse_2fdisposable_N_RDispose final
{
public:
	struct Verse::Ftuple_L_R                      __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
};
static_assert(alignof(Verse_disposable__L_2fVerse_2eorg_2fVerse_2fdisposable_N_RDispose) == 0x000001, "Wrong alignment on Verse_disposable__L_2fVerse_2eorg_2fVerse_2fdisposable_N_RDispose");
static_assert(sizeof(Verse_disposable__L_2fVerse_2eorg_2fVerse_2fdisposable_N_RDispose) == 0x000001, "Wrong size on Verse_disposable__L_2fVerse_2eorg_2fVerse_2fdisposable_N_RDispose");
static_assert(offsetof(Verse_disposable__L_2fVerse_2eorg_2fVerse_2fdisposable_N_RDispose, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse_disposable__L_2fVerse_2eorg_2fVerse_2fdisposable_N_RDispose::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function Verse.task_Verse_event$Await.Update
// 0x0008 (0x0008 - 0x0000)
struct task_Verse_event_Await_Update final
{
public:
	int64                                         RetVal;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(task_Verse_event_Await_Update) == 0x000008, "Wrong alignment on task_Verse_event_Await_Update");
static_assert(sizeof(task_Verse_event_Await_Update) == 0x000008, "Wrong size on task_Verse_event_Await_Update");
static_assert(offsetof(task_Verse_event_Await_Update, RetVal) == 0x000000, "Member 'task_Verse_event_Await_Update::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RArcCos_L_Nfloat_R
// 0x0010 (0x0010 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RArcCos_L_Nfloat_R final
{
public:
	double                                        __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RArcCos_L_Nfloat_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RArcCos_L_Nfloat_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RArcCos_L_Nfloat_R) == 0x000010, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RArcCos_L_Nfloat_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RArcCos_L_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RArcCos_L_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RArcCos_L_Nfloat_R, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RArcCos_L_Nfloat_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RArCosh_L_Nfloat_R
// 0x0010 (0x0010 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RArCosh_L_Nfloat_R final
{
public:
	double                                        __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RArCosh_L_Nfloat_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RArCosh_L_Nfloat_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RArCosh_L_Nfloat_R) == 0x000010, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RArCosh_L_Nfloat_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RArCosh_L_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RArCosh_L_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RArCosh_L_Nfloat_R, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RArCosh_L_Nfloat_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RArcSin_L_Nfloat_R
// 0x0010 (0x0010 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RArcSin_L_Nfloat_R final
{
public:
	double                                        __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RArcSin_L_Nfloat_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RArcSin_L_Nfloat_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RArcSin_L_Nfloat_R) == 0x000010, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RArcSin_L_Nfloat_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RArcSin_L_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RArcSin_L_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RArcSin_L_Nfloat_R, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RArcSin_L_Nfloat_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RArcTan_L_Nfloat_M_Nfloat_R
// 0x0018 (0x0018 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RArcTan_L_Nfloat_M_Nfloat_R final
{
public:
	struct Verse::Ftuple_Lfloat_Mfloat_R          __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	double                                        RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RArcTan_L_Nfloat_M_Nfloat_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RArcTan_L_Nfloat_M_Nfloat_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RArcTan_L_Nfloat_M_Nfloat_R) == 0x000018, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RArcTan_L_Nfloat_M_Nfloat_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RArcTan_L_Nfloat_M_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RArcTan_L_Nfloat_M_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RArcTan_L_Nfloat_M_Nfloat_R, RetVal) == 0x000010, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RArcTan_L_Nfloat_M_Nfloat_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RArcTan_L_Nfloat_R
// 0x0010 (0x0010 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RArcTan_L_Nfloat_R final
{
public:
	double                                        __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RArcTan_L_Nfloat_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RArcTan_L_Nfloat_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RArcTan_L_Nfloat_R) == 0x000010, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RArcTan_L_Nfloat_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RArcTan_L_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RArcTan_L_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RArcTan_L_Nfloat_R, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RArcTan_L_Nfloat_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RArSinh_L_Nfloat_R
// 0x0010 (0x0010 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RArSinh_L_Nfloat_R final
{
public:
	double                                        __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RArSinh_L_Nfloat_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RArSinh_L_Nfloat_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RArSinh_L_Nfloat_R) == 0x000010, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RArSinh_L_Nfloat_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RArSinh_L_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RArSinh_L_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RArSinh_L_Nfloat_R, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RArSinh_L_Nfloat_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RArTanh_L_Nfloat_R
// 0x0010 (0x0010 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RArTanh_L_Nfloat_R final
{
public:
	double                                        __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RArTanh_L_Nfloat_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RArTanh_L_Nfloat_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RArTanh_L_Nfloat_R) == 0x000010, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RArTanh_L_Nfloat_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RArTanh_L_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RArTanh_L_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RArTanh_L_Nfloat_R, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RArTanh_L_Nfloat_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RCeil_L_Nfloat_R
// 0x0018 (0x0018 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RCeil_L_Nfloat_R final
{
public:
	double                                        __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0008(0x0009)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RCeil_L_Nfloat_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RCeil_L_Nfloat_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RCeil_L_Nfloat_R) == 0x000018, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RCeil_L_Nfloat_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RCeil_L_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RCeil_L_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RCeil_L_Nfloat_R, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RCeil_L_Nfloat_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nfloat_M_Nfloat_M_Nfloat_R
// 0x00B8 (0x00B8 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nfloat_M_Nfloat_M_Nfloat_R final
{
public:
	struct Verse::Ftuple_Lfloat_Mfloat_Mfloat_R   __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0018)(Parm, HasGetValueTypeHash)
	double                                        RetVal;                                            // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __verse_0x9EEF5578_Lo_1;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FVerseFunctionProperty_                       _Callee_0;                                         // 0x0028(0x0010)(HasGetValueTypeHash)
	struct Verse::Ftuple_Lfloat_Mfloat_R          _ExprResult_1;                                     // 0x0038(0x0010)(HasGetValueTypeHash)
	double                                        __verse_0xB8BE74D9_Hi_1;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FVerseFunctionProperty_                       _Callee_2;                                         // 0x0050(0x0010)(HasGetValueTypeHash)
	struct Verse::Ftuple_Lfloat_Mfloat_R          _ExprResult_3;                                     // 0x0060(0x0010)(HasGetValueTypeHash)
	FVerseFunctionProperty_                       _Callee_4;                                         // 0x0070(0x0010)(HasGetValueTypeHash)
	struct Verse::Ftuple_Lfloat_Mfloat_R          _ExprResult_5;                                     // 0x0080(0x0010)(HasGetValueTypeHash)
	double                                        _ExprResultStack_6;                                // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FVerseFunctionProperty_                       _Callee_7;                                         // 0x0098(0x0010)(HasGetValueTypeHash)
	struct Verse::Ftuple_Lfloat_Mfloat_R          _ExprResult_8;                                     // 0x00A8(0x0010)(HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nfloat_M_Nfloat_M_Nfloat_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nfloat_M_Nfloat_M_Nfloat_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nfloat_M_Nfloat_M_Nfloat_R) == 0x0000B8, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nfloat_M_Nfloat_M_Nfloat_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nfloat_M_Nfloat_M_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nfloat_M_Nfloat_M_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nfloat_M_Nfloat_M_Nfloat_R, RetVal) == 0x000018, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nfloat_M_Nfloat_M_Nfloat_R::RetVal' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nfloat_M_Nfloat_M_Nfloat_R, __verse_0x9EEF5578_Lo_1) == 0x000020, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nfloat_M_Nfloat_M_Nfloat_R::__verse_0x9EEF5578_Lo_1' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nfloat_M_Nfloat_M_Nfloat_R, _Callee_0) == 0x000028, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nfloat_M_Nfloat_M_Nfloat_R::_Callee_0' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nfloat_M_Nfloat_M_Nfloat_R, _ExprResult_1) == 0x000038, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nfloat_M_Nfloat_M_Nfloat_R::_ExprResult_1' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nfloat_M_Nfloat_M_Nfloat_R, __verse_0xB8BE74D9_Hi_1) == 0x000048, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nfloat_M_Nfloat_M_Nfloat_R::__verse_0xB8BE74D9_Hi_1' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nfloat_M_Nfloat_M_Nfloat_R, _Callee_2) == 0x000050, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nfloat_M_Nfloat_M_Nfloat_R::_Callee_2' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nfloat_M_Nfloat_M_Nfloat_R, _ExprResult_3) == 0x000060, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nfloat_M_Nfloat_M_Nfloat_R::_ExprResult_3' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nfloat_M_Nfloat_M_Nfloat_R, _Callee_4) == 0x000070, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nfloat_M_Nfloat_M_Nfloat_R::_Callee_4' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nfloat_M_Nfloat_M_Nfloat_R, _ExprResult_5) == 0x000080, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nfloat_M_Nfloat_M_Nfloat_R::_ExprResult_5' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nfloat_M_Nfloat_M_Nfloat_R, _ExprResultStack_6) == 0x000090, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nfloat_M_Nfloat_M_Nfloat_R::_ExprResultStack_6' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nfloat_M_Nfloat_M_Nfloat_R, _Callee_7) == 0x000098, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nfloat_M_Nfloat_M_Nfloat_R::_Callee_7' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nfloat_M_Nfloat_M_Nfloat_R, _ExprResult_8) == 0x0000A8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nfloat_M_Nfloat_M_Nfloat_R::_ExprResult_8' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nint_M_Nint_M_Nint_R
// 0x0020 (0x0020 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nint_M_Nint_M_Nint_R final
{
public:
	struct Ftuple_Lint_Mint_Mint_R                __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0018)(Parm, HasGetValueTypeHash)
	int64                                         RetVal;                                            // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nint_M_Nint_M_Nint_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nint_M_Nint_M_Nint_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nint_M_Nint_M_Nint_R) == 0x000020, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nint_M_Nint_M_Nint_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nint_M_Nint_M_Nint_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nint_M_Nint_M_Nint_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nint_M_Nint_M_Nint_R, RetVal) == 0x000018, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nint_M_Nint_M_Nint_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R
// 0x0580 (0x0580 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R final
{
public:
	TArray<TArray<FVerseDynamicProperty_>>        __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, ContainsInstancedReference)
	TArray<FVerseDynamicProperty_>                RetVal;                                            // 0x0010(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	FVerseDynamicProperty_                        InvokeResultDummy_0;                               // 0x0020(0x0010)(HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_1;                                // 0x0030(0x0011)(HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseDynamicProperty_                        _ExprResult_2;                                     // 0x0048(0x0010)(HasGetValueTypeHash)
	int64                                         _ExprResult_3;                                     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TArray<FVerseDynamicProperty_>>        __verse_0x00000000__2;                             // 0x0060(0x0010)(ContainsInstancedReference)
	FVerseDynamicProperty_                        _ExprResult_4;                                     // 0x0070(0x0010)(HasGetValueTypeHash)
	TArray<FVerseDynamicProperty_>                __verse_0x95D09D0E_Result_1;                       // 0x0080(0x0010)(ContainsInstancedReference)
	FOptionProperty_                              _ExprResultStack_5;                                // 0x0090(0x0011)(ContainsInstancedReference)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseDynamicProperty_                        InvokeResultDummy_6;                               // 0x00A8(0x0010)(HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_7;                                // 0x00B8(0x0011)(HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseDynamicProperty_                        _ExprResult_8;                                     // 0x00D0(0x0010)(HasGetValueTypeHash)
	int64                                         _ExprResult_9;                                     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TArray<FVerseDynamicProperty_>>        __verse_0x00000000__4;                             // 0x00E8(0x0010)(ContainsInstancedReference)
	FVerseDynamicProperty_                        _ExprResult_10;                                    // 0x00F8(0x0010)(HasGetValueTypeHash)
	TArray<FVerseDynamicProperty_>                __verse_0xBBE53E70_A0_3;                           // 0x0108(0x0010)(ContainsInstancedReference)
	FOptionProperty_                              _ExprResultStack_11;                               // 0x0118(0x0011)(ContainsInstancedReference)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<FVerseDynamicProperty_>                __verse_0xDE8282C8_A1_3;                           // 0x0130(0x0010)(ContainsInstancedReference)
	FOptionProperty_                              _ExprResultStack_12;                               // 0x0140(0x0011)(ContainsInstancedReference)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseDynamicProperty_                        InvokeResultDummy_13;                              // 0x0158(0x0010)(HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_14;                               // 0x0168(0x0011)(HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseDynamicProperty_                        _ExprResult_15;                                    // 0x0180(0x0010)(HasGetValueTypeHash)
	int64                                         _ExprResult_16;                                    // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TArray<FVerseDynamicProperty_>>        __verse_0x00000000__6;                             // 0x0198(0x0010)(ContainsInstancedReference)
	FVerseDynamicProperty_                        _ExprResult_17;                                    // 0x01A8(0x0010)(HasGetValueTypeHash)
	TArray<FVerseDynamicProperty_>                __verse_0xBBE53E70_A0_5;                           // 0x01B8(0x0010)(ContainsInstancedReference)
	FOptionProperty_                              _ExprResultStack_18;                               // 0x01C8(0x0011)(ContainsInstancedReference)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<FVerseDynamicProperty_>                __verse_0xDE8282C8_A1_5;                           // 0x01E0(0x0010)(ContainsInstancedReference)
	FOptionProperty_                              _ExprResultStack_19;                               // 0x01F0(0x0011)(ContainsInstancedReference)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<FVerseDynamicProperty_>                __verse_0x302D37DA_A2_5;                           // 0x0208(0x0010)(ContainsInstancedReference)
	FOptionProperty_                              _ExprResultStack_20;                               // 0x0218(0x0011)(ContainsInstancedReference)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<FVerseDynamicProperty_>                _ExprResultStack_21;                               // 0x0230(0x0010)(ContainsInstancedReference)
	FOptionProperty_                              _ExprResultStack_22;                               // 0x0240(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         _ExprResult_23;                                    // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TArray<FVerseDynamicProperty_>>        __verse_0x00000000__8;                             // 0x0258(0x0010)(ContainsInstancedReference)
	int64                                         __verse_0x06CC5305_Midpoint_7;                     // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_24;                               // 0x0270(0x0011)(NoDestructor)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         _ExprResult_25;                                    // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TArray<FVerseDynamicProperty_>>        __verse_0x00000000__9;                             // 0x0290(0x0010)(ContainsInstancedReference)
	TArray<TArray<FVerseDynamicProperty_>>        __verse_0xBBE53E70_A0_7;                           // 0x02A0(0x0010)(ContainsInstancedReference)
	TArray<FVerseDynamicProperty_>                __verse_0xFFC68BC5_Array_10;                       // 0x02B0(0x0010)(ContainsInstancedReference)
	FOptionProperty_                              _ExprResultStack_26;                               // 0x02C0(0x0011)(ContainsInstancedReference)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseFunctionProperty_                       _Callee_27;                                        // 0x02D8(0x0010)(HasGetValueTypeHash)
	struct Ftuple_L_Kany_Mtuple_L_R_Mtuple_Lint_Mint_R_R _ExprResult_28;                                    // 0x02E8(0x0028)(HasGetValueTypeHash)
	TArray<FVerseDynamicProperty_>                _ExprResult_29;                                    // 0x0310(0x0010)(ContainsInstancedReference)
	TArray<TArray<FVerseDynamicProperty_>>        __verse_0xFFC68BC5_Array_11;                       // 0x0320(0x0010)(ContainsInstancedReference)
	TArray<FVerseDynamicProperty_>                _ForResult_30;                                     // 0x0330(0x0010)(ContainsInstancedReference)
	int64                                         _ForIndex_31;                                      // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         _ForLength_32;                                     // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<FVerseDynamicProperty_>                __verse_0xFB88B569_Item_13;                        // 0x0350(0x0010)(ContainsInstancedReference)
	FVerseDynamicProperty_                        _ExprResult_33;                                    // 0x0360(0x0010)(HasGetValueTypeHash)
	struct Verse::Ftuple_L_R                      _ExprResult_34;                                    // 0x0370(0x0001)(HasGetValueTypeHash)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct Ftuple_Ltype_7b0_7d_Mint_R             _ExprResult_35;                                    // 0x0378(0x0010)(HasGetValueTypeHash)
	TArray<TArray<FVerseDynamicProperty_>>        _ForResult_36;                                     // 0x0388(0x0010)(ContainsInstancedReference)
	int64                                         _ForIndex_37;                                      // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         _ForLength_38;                                     // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FVerseDynamicProperty_                        __verse_0xFB88B569_Item_15;                        // 0x03A8(0x0010)(HasGetValueTypeHash)
	TArray<FVerseDynamicProperty_>                _ExprResult_39;                                    // 0x03B8(0x0010)(ContainsInstancedReference)
	TArray<TArray<FVerseDynamicProperty_>>        __verse_0xDE8282C8_A1_7;                           // 0x03C8(0x0010)(ContainsInstancedReference)
	TArray<FVerseDynamicProperty_>                __verse_0xFFC68BC5_Array_16;                       // 0x03D8(0x0010)(ContainsInstancedReference)
	FOptionProperty_                              _ExprResultStack_40;                               // 0x03E8(0x0011)(ContainsInstancedReference)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseFunctionProperty_                       _Callee_41;                                        // 0x0400(0x0010)(HasGetValueTypeHash)
	struct Ftuple_L_Kany_Mtuple_L_R_Mtuple_Lint_Mint_R_R _ExprResult_42;                                    // 0x0410(0x0028)(HasGetValueTypeHash)
	TArray<FVerseDynamicProperty_>                _ExprResult_43;                                    // 0x0438(0x0010)(ContainsInstancedReference)
	TArray<TArray<FVerseDynamicProperty_>>        __verse_0xFFC68BC5_Array_17;                       // 0x0448(0x0010)(ContainsInstancedReference)
	TArray<FVerseDynamicProperty_>                _ForResult_44;                                     // 0x0458(0x0010)(ContainsInstancedReference)
	int64                                         _ForIndex_45;                                      // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         _ForLength_46;                                     // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<FVerseDynamicProperty_>                __verse_0xFB88B569_Item_19;                        // 0x0478(0x0010)(ContainsInstancedReference)
	FVerseDynamicProperty_                        _ExprResult_47;                                    // 0x0488(0x0010)(HasGetValueTypeHash)
	struct Verse::Ftuple_L_R                      _ExprResult_48;                                    // 0x0498(0x0001)(HasGetValueTypeHash)
	uint8                                         Pad_499[0x7];                                      // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct Verse::Ftuple_Lint_Mint_R              _ExprResult_49;                                    // 0x04A0(0x0010)(HasGetValueTypeHash)
	int64                                         _ExprResult_50;                                    // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TArray<FVerseDynamicProperty_>>        __verse_0x00000000__20;                            // 0x04B8(0x0010)(ContainsInstancedReference)
	TArray<TArray<FVerseDynamicProperty_>>        _ForResult_51;                                     // 0x04C8(0x0010)(ContainsInstancedReference)
	int64                                         _ForIndex_52;                                      // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         _ForLength_53;                                     // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FVerseDynamicProperty_                        __verse_0xFB88B569_Item_22;                        // 0x04E8(0x0010)(HasGetValueTypeHash)
	TArray<FVerseDynamicProperty_>                _ExprResult_54;                                    // 0x04F8(0x0010)(ContainsInstancedReference)
	TArray<FVerseDynamicProperty_>                _ExprResultStack_55;                               // 0x0508(0x0010)(ContainsInstancedReference)
	FVerseFunctionProperty_                       _Callee_56;                                        // 0x0518(0x0010)(HasGetValueTypeHash)
	TArray<FVerseDynamicProperty_>                _ExprResultStack_57;                               // 0x0528(0x0010)(ContainsInstancedReference)
	FVerseFunctionProperty_                       _Callee_58;                                        // 0x0538(0x0010)(HasGetValueTypeHash)
	TArray<EVerseFalse>                           __verse_0xFFC68BC5_Array_23;                       // 0x0548(0x0010)(ContainsInstancedReference)
	TArray<FVerseDynamicProperty_>                _ForResult_59;                                     // 0x0558(0x0010)(ContainsInstancedReference)
	int64                                         _ForIndex_60;                                      // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         _ForLength_61;                                     // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerseFalse                                   __verse_0xFB88B569_Item_26;                        // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         _ExprResult_62 : 1;                                // 0x0579(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash))
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R) == 0x000580, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, RetVal) == 0x000010, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::RetVal' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, InvokeResultDummy_0) == 0x000020, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::InvokeResultDummy_0' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResultStack_1) == 0x000030, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResultStack_1' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResult_2) == 0x000048, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResult_2' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResult_3) == 0x000058, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResult_3' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, __verse_0x00000000__2) == 0x000060, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::__verse_0x00000000__2' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResult_4) == 0x000070, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResult_4' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, __verse_0x95D09D0E_Result_1) == 0x000080, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::__verse_0x95D09D0E_Result_1' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResultStack_5) == 0x000090, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResultStack_5' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, InvokeResultDummy_6) == 0x0000A8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::InvokeResultDummy_6' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResultStack_7) == 0x0000B8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResultStack_7' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResult_8) == 0x0000D0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResult_8' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResult_9) == 0x0000E0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResult_9' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, __verse_0x00000000__4) == 0x0000E8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::__verse_0x00000000__4' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResult_10) == 0x0000F8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResult_10' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, __verse_0xBBE53E70_A0_3) == 0x000108, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::__verse_0xBBE53E70_A0_3' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResultStack_11) == 0x000118, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResultStack_11' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, __verse_0xDE8282C8_A1_3) == 0x000130, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::__verse_0xDE8282C8_A1_3' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResultStack_12) == 0x000140, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResultStack_12' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, InvokeResultDummy_13) == 0x000158, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::InvokeResultDummy_13' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResultStack_14) == 0x000168, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResultStack_14' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResult_15) == 0x000180, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResult_15' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResult_16) == 0x000190, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResult_16' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, __verse_0x00000000__6) == 0x000198, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::__verse_0x00000000__6' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResult_17) == 0x0001A8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResult_17' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, __verse_0xBBE53E70_A0_5) == 0x0001B8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::__verse_0xBBE53E70_A0_5' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResultStack_18) == 0x0001C8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResultStack_18' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, __verse_0xDE8282C8_A1_5) == 0x0001E0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::__verse_0xDE8282C8_A1_5' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResultStack_19) == 0x0001F0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResultStack_19' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, __verse_0x302D37DA_A2_5) == 0x000208, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::__verse_0x302D37DA_A2_5' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResultStack_20) == 0x000218, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResultStack_20' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResultStack_21) == 0x000230, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResultStack_21' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResultStack_22) == 0x000240, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResultStack_22' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResult_23) == 0x000250, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResult_23' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, __verse_0x00000000__8) == 0x000258, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::__verse_0x00000000__8' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, __verse_0x06CC5305_Midpoint_7) == 0x000268, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::__verse_0x06CC5305_Midpoint_7' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResultStack_24) == 0x000270, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResultStack_24' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResult_25) == 0x000288, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResult_25' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, __verse_0x00000000__9) == 0x000290, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::__verse_0x00000000__9' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, __verse_0xBBE53E70_A0_7) == 0x0002A0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::__verse_0xBBE53E70_A0_7' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, __verse_0xFFC68BC5_Array_10) == 0x0002B0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::__verse_0xFFC68BC5_Array_10' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResultStack_26) == 0x0002C0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResultStack_26' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _Callee_27) == 0x0002D8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_Callee_27' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResult_28) == 0x0002E8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResult_28' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResult_29) == 0x000310, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResult_29' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, __verse_0xFFC68BC5_Array_11) == 0x000320, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::__verse_0xFFC68BC5_Array_11' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ForResult_30) == 0x000330, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ForResult_30' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ForIndex_31) == 0x000340, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ForIndex_31' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ForLength_32) == 0x000348, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ForLength_32' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, __verse_0xFB88B569_Item_13) == 0x000350, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::__verse_0xFB88B569_Item_13' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResult_33) == 0x000360, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResult_33' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResult_34) == 0x000370, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResult_34' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResult_35) == 0x000378, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResult_35' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ForResult_36) == 0x000388, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ForResult_36' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ForIndex_37) == 0x000398, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ForIndex_37' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ForLength_38) == 0x0003A0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ForLength_38' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, __verse_0xFB88B569_Item_15) == 0x0003A8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::__verse_0xFB88B569_Item_15' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResult_39) == 0x0003B8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResult_39' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, __verse_0xDE8282C8_A1_7) == 0x0003C8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::__verse_0xDE8282C8_A1_7' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, __verse_0xFFC68BC5_Array_16) == 0x0003D8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::__verse_0xFFC68BC5_Array_16' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResultStack_40) == 0x0003E8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResultStack_40' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _Callee_41) == 0x000400, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_Callee_41' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResult_42) == 0x000410, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResult_42' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResult_43) == 0x000438, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResult_43' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, __verse_0xFFC68BC5_Array_17) == 0x000448, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::__verse_0xFFC68BC5_Array_17' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ForResult_44) == 0x000458, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ForResult_44' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ForIndex_45) == 0x000468, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ForIndex_45' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ForLength_46) == 0x000470, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ForLength_46' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, __verse_0xFB88B569_Item_19) == 0x000478, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::__verse_0xFB88B569_Item_19' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResult_47) == 0x000488, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResult_47' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResult_48) == 0x000498, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResult_48' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResult_49) == 0x0004A0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResult_49' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResult_50) == 0x0004B0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResult_50' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, __verse_0x00000000__20) == 0x0004B8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::__verse_0x00000000__20' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ForResult_51) == 0x0004C8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ForResult_51' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ForIndex_52) == 0x0004D8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ForIndex_52' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ForLength_53) == 0x0004E0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ForLength_53' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, __verse_0xFB88B569_Item_22) == 0x0004E8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::__verse_0xFB88B569_Item_22' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResult_54) == 0x0004F8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResult_54' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResultStack_55) == 0x000508, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResultStack_55' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _Callee_56) == 0x000518, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_Callee_56' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ExprResultStack_57) == 0x000528, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ExprResultStack_57' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _Callee_58) == 0x000538, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_Callee_58' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, __verse_0xFFC68BC5_Array_23) == 0x000548, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::__verse_0xFFC68BC5_Array_23' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ForResult_59) == 0x000558, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ForResult_59' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ForIndex_60) == 0x000568, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ForIndex_60' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, _ForLength_61) == 0x000570, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::_ForLength_61' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R, __verse_0xFB88B569_Item_26) == 0x000578, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R::__verse_0xFB88B569_Item_26' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RCos_L_Nfloat_R
// 0x0010 (0x0010 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RCos_L_Nfloat_R final
{
public:
	double                                        __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RCos_L_Nfloat_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RCos_L_Nfloat_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RCos_L_Nfloat_R) == 0x000010, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RCos_L_Nfloat_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RCos_L_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RCos_L_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RCos_L_Nfloat_R, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RCos_L_Nfloat_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RCosh_L_Nfloat_R
// 0x0010 (0x0010 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RCosh_L_Nfloat_R final
{
public:
	double                                        __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RCosh_L_Nfloat_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RCosh_L_Nfloat_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RCosh_L_Nfloat_R) == 0x000010, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RCosh_L_Nfloat_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RCosh_L_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RCosh_L_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RCosh_L_Nfloat_R, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RCosh_L_Nfloat_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RErr_L_N_Kchar_R
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) Verse__L_2fVerse_2eorg_2fVerse_N_RErr_L_N_Kchar_R final
{
public:
	FVerseStringProperty_                         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	EVerseFalse                                   RetVal;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RErr_L_N_Kchar_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RErr_L_N_Kchar_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RErr_L_N_Kchar_R) == 0x000018, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RErr_L_N_Kchar_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RErr_L_N_Kchar_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RErr_L_N_Kchar_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RErr_L_N_Kchar_R, RetVal) == 0x000010, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RErr_L_N_Kchar_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_Revent
// 0x0020 (0x0020 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_Revent final
{
public:
	struct Verse::Ftuple_L_R                      __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 RetVal;                                            // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FVerseFunctionProperty_                       _Callee_0;                                         // 0x0010(0x0010)(HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_Revent) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_Revent");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_Revent) == 0x000020, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_Revent");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Revent, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Revent::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Revent, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Revent::RetVal' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Revent, _Callee_0) == 0x000010, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Revent::_Callee_0' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_Revent_L_Nany_R
// 0x0010 (0x0010 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_Revent_L_Nany_R final
{
public:
	class UClass*                                 __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(ExportObject, Parm, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UClass*                                 RetVal;                                            // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_Revent_L_Nany_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_Revent_L_Nany_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_Revent_L_Nany_R) == 0x000010, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_Revent_L_Nany_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Revent_L_Nany_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Revent_L_Nany_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Revent_L_Nany_R, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Revent_L_Nany_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RExp_L_Nfloat_R
// 0x0010 (0x0010 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RExp_L_Nfloat_R final
{
public:
	double                                        __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RExp_L_Nfloat_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RExp_L_Nfloat_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RExp_L_Nfloat_R) == 0x000010, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RExp_L_Nfloat_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RExp_L_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RExp_L_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RExp_L_Nfloat_R, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RExp_L_Nfloat_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RFloor_L_Nfloat_R
// 0x0018 (0x0018 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RFloor_L_Nfloat_R final
{
public:
	double                                        __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0008(0x0009)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RFloor_L_Nfloat_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RFloor_L_Nfloat_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RFloor_L_Nfloat_R) == 0x000018, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RFloor_L_Nfloat_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RFloor_L_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RFloor_L_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RFloor_L_Nfloat_R, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RFloor_L_Nfloat_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RInt_L_Nfloat_R
// 0x0018 (0x0018 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RInt_L_Nfloat_R final
{
public:
	double                                        __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0008(0x0009)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RInt_L_Nfloat_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RInt_L_Nfloat_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RInt_L_Nfloat_R) == 0x000018, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RInt_L_Nfloat_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RInt_L_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RInt_L_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RInt_L_Nfloat_R, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RInt_L_Nfloat_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RIsAlmostEqual_L_Nfloat_M_Nfloat_M_Nfloat_R
// 0x0030 (0x0030 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RIsAlmostEqual_L_Nfloat_M_Nfloat_M_Nfloat_R final
{
public:
	struct Verse::Ftuple_Lfloat_Mfloat_Mfloat_R   __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0018)(Parm, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0018(0x0002)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         _ExprResult_0 : 1;                                 // 0x001A(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	FOptionProperty_                              _ExprResultStack_1;                                // 0x0020(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RIsAlmostEqual_L_Nfloat_M_Nfloat_M_Nfloat_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RIsAlmostEqual_L_Nfloat_M_Nfloat_M_Nfloat_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RIsAlmostEqual_L_Nfloat_M_Nfloat_M_Nfloat_R) == 0x000030, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RIsAlmostEqual_L_Nfloat_M_Nfloat_M_Nfloat_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RIsAlmostEqual_L_Nfloat_M_Nfloat_M_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RIsAlmostEqual_L_Nfloat_M_Nfloat_M_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RIsAlmostEqual_L_Nfloat_M_Nfloat_M_Nfloat_R, RetVal) == 0x000018, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RIsAlmostEqual_L_Nfloat_M_Nfloat_M_Nfloat_R::RetVal' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RIsAlmostEqual_L_Nfloat_M_Nfloat_M_Nfloat_R, _ExprResultStack_1) == 0x000020, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RIsAlmostEqual_L_Nfloat_M_Nfloat_M_Nfloat_R::_ExprResultStack_1' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RJoin_L_N_K_Kchar_M_N_Kchar_R
// 0x0030 (0x0030 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RJoin_L_N_K_Kchar_M_N_Kchar_R final
{
public:
	struct Ftuple_L_K_Kchar_M_Kchar_R             __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0020)(Parm, HasGetValueTypeHash)
	FVerseStringProperty_                         RetVal;                                            // 0x0020(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RJoin_L_N_K_Kchar_M_N_Kchar_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RJoin_L_N_K_Kchar_M_N_Kchar_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RJoin_L_N_K_Kchar_M_N_Kchar_R) == 0x000030, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RJoin_L_N_K_Kchar_M_N_Kchar_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RJoin_L_N_K_Kchar_M_N_Kchar_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RJoin_L_N_K_Kchar_M_N_Kchar_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RJoin_L_N_K_Kchar_M_N_Kchar_R, RetVal) == 0x000020, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RJoin_L_N_K_Kchar_M_N_Kchar_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RLerp_L_Nfloat_M_Nfloat_M_Nfloat_R
// 0x0020 (0x0020 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RLerp_L_Nfloat_M_Nfloat_M_Nfloat_R final
{
public:
	struct Verse::Ftuple_Lfloat_Mfloat_Mfloat_R   __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0018)(Parm, HasGetValueTypeHash)
	double                                        RetVal;                                            // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RLerp_L_Nfloat_M_Nfloat_M_Nfloat_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RLerp_L_Nfloat_M_Nfloat_M_Nfloat_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RLerp_L_Nfloat_M_Nfloat_M_Nfloat_R) == 0x000020, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RLerp_L_Nfloat_M_Nfloat_M_Nfloat_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLerp_L_Nfloat_M_Nfloat_M_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLerp_L_Nfloat_M_Nfloat_M_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLerp_L_Nfloat_M_Nfloat_M_Nfloat_R, RetVal) == 0x000018, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLerp_L_Nfloat_M_Nfloat_M_Nfloat_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_Rlistenable
// 0x0020 (0x0020 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_Rlistenable final
{
public:
	struct Verse::Ftuple_L_R                      __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 RetVal;                                            // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FVerseFunctionProperty_                       _Callee_0;                                         // 0x0010(0x0010)(HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_Rlistenable) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_Rlistenable");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_Rlistenable) == 0x000020, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_Rlistenable");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Rlistenable, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Rlistenable::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Rlistenable, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Rlistenable::RetVal' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Rlistenable, _Callee_0) == 0x000010, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Rlistenable::_Callee_0' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_Rlistenable_L_Nany_R
// 0x0010 (0x0010 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_Rlistenable_L_Nany_R final
{
public:
	class UClass*                                 __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(ExportObject, Parm, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UClass*                                 RetVal;                                            // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_Rlistenable_L_Nany_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_Rlistenable_L_Nany_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_Rlistenable_L_Nany_R) == 0x000010, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_Rlistenable_L_Nany_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Rlistenable_L_Nany_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Rlistenable_L_Nany_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Rlistenable_L_Nany_R, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Rlistenable_L_Nany_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RLn_L_Nfloat_R
// 0x0010 (0x0010 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RLn_L_Nfloat_R final
{
public:
	double                                        __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RLn_L_Nfloat_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RLn_L_Nfloat_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RLn_L_Nfloat_R) == 0x000010, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RLn_L_Nfloat_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLn_L_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLn_L_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLn_L_Nfloat_R, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLn_L_Nfloat_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RLocalize_L_N_Kchar_M_Nlocale_R
// 0x0028 (0x0028 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_N_Kchar_M_Nlocale_R final
{
public:
	struct Ftuple_L_Kchar_M_QWhere_Nlocale_R      __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0018)(Parm, HasGetValueTypeHash)
	FVerseStringProperty_                         RetVal;                                            // 0x0018(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_N_Kchar_M_Nlocale_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_N_Kchar_M_Nlocale_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_N_Kchar_M_Nlocale_R) == 0x000028, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_N_Kchar_M_Nlocale_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_N_Kchar_M_Nlocale_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_N_Kchar_M_Nlocale_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_N_Kchar_M_Nlocale_R, RetVal) == 0x000018, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_N_Kchar_M_Nlocale_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nfloat_M_Nlocale_R
// 0x0030 (0x0030 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nfloat_M_Nlocale_R final
{
public:
	struct Ftuple_Lfloat_M_QWhere_Nlocale_R       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	FVerseStringProperty_                         RetVal;                                            // 0x0010(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
	FVerseFunctionProperty_                       _Callee_0;                                         // 0x0020(0x0010)(HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nfloat_M_Nlocale_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nfloat_M_Nlocale_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nfloat_M_Nlocale_R) == 0x000030, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nfloat_M_Nlocale_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nfloat_M_Nlocale_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nfloat_M_Nlocale_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nfloat_M_Nlocale_R, RetVal) == 0x000010, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nfloat_M_Nlocale_R::RetVal' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nfloat_M_Nlocale_R, _Callee_0) == 0x000020, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nfloat_M_Nlocale_R::_Callee_0' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nint_M_Nlocale_R
// 0x0030 (0x0030 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nint_M_Nlocale_R final
{
public:
	struct Ftuple_Lint_M_QWhere_Nlocale_R         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	FVerseStringProperty_                         RetVal;                                            // 0x0010(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
	FVerseFunctionProperty_                       _Callee_0;                                         // 0x0020(0x0010)(HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nint_M_Nlocale_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nint_M_Nlocale_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nint_M_Nlocale_R) == 0x000030, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nint_M_Nlocale_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nint_M_Nlocale_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nint_M_Nlocale_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nint_M_Nlocale_R, RetVal) == 0x000010, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nint_M_Nlocale_R::RetVal' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nint_M_Nlocale_R, _Callee_0) == 0x000020, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nint_M_Nlocale_R::_Callee_0' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R
// 0x0140 (0x0140 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R final
{
public:
	class UVerse_message*                         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(ExportObject, Parm, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FVerseStringProperty_                         RetVal;                                            // 0x0008(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
	struct FVerse_locale                          __verse_0x21AE8123_Where_1;                        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct Verse::Ftuple_L_Kchar_M_Kchar_R> __verse_0x85420AD2_Substitutions_1;                // 0x0020(0x0010)(ContainsInstancedReference)
	TArray<struct Verse::Ftuple_L_Kchar_M_Kchar_R> _ForResult_0;                                      // 0x0030(0x0010)(ContainsInstancedReference)
	TMap<FVerseStringProperty_, class UObject*>   _ForIterable_1;                                    // 0x0040(0x0050)(ContainsInstancedReference)
	int64                                         _ForIndex_2;                                       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FVerseStringProperty_                         __verse_0x38D9A616_Name_4;                         // 0x0098(0x0010)(HasGetValueTypeHash)
	class UObject*                                __verse_0x78264860_LocalizableValue_4;             // 0x00A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct Verse::Ftuple_L_Kchar_M_Kchar_R        _ExprResult_3;                                     // 0x00B0(0x0020)(HasGetValueTypeHash)
	FVerseStringProperty_                         _ExprResult_4;                                     // 0x00D0(0x0010)(HasGetValueTypeHash)
	class UObject*                                __verse_0x00000000__7;                             // 0x00E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FVerseFunctionProperty_                       _Callee_5;                                         // 0x00E8(0x0010)(HasGetValueTypeHash)
	FVerseFunctionProperty_                       _Callee_6;                                         // 0x00F8(0x0010)(HasGetValueTypeHash)
	struct Ftuple_L_Kchar_M_Kchar_M_Ktuple_L_Kchar_M_Kchar_R_Mlocale_R _ExprResult_7;                                     // 0x0108(0x0038)(HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R) == 0x000140, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R::RetVal' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R, __verse_0x21AE8123_Where_1) == 0x000018, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R::__verse_0x21AE8123_Where_1' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R, __verse_0x85420AD2_Substitutions_1) == 0x000020, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R::__verse_0x85420AD2_Substitutions_1' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R, _ForResult_0) == 0x000030, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R::_ForResult_0' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R, _ForIterable_1) == 0x000040, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R::_ForIterable_1' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R, _ForIndex_2) == 0x000090, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R::_ForIndex_2' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R, __verse_0x38D9A616_Name_4) == 0x000098, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R::__verse_0x38D9A616_Name_4' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R, __verse_0x78264860_LocalizableValue_4) == 0x0000A8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R::__verse_0x78264860_LocalizableValue_4' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R, _ExprResult_3) == 0x0000B0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R::_ExprResult_3' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R, _ExprResult_4) == 0x0000D0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R::_ExprResult_4' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R, __verse_0x00000000__7) == 0x0000E0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R::__verse_0x00000000__7' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R, _Callee_5) == 0x0000E8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R::_Callee_5' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R, _Callee_6) == 0x0000F8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R::_Callee_6' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R, _ExprResult_7) == 0x000108, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R::_ExprResult_7' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RLocalizeInternal_L_N_Kchar_M_N_Kchar_M_N_Ktuple_L_Kchar_M_Kchar_R_M_Nlocale_R
// 0x0048 (0x0048 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RLocalizeInternal_L_N_Kchar_M_N_Kchar_M_N_Ktuple_L_Kchar_M_Kchar_R_M_Nlocale_R final
{
public:
	struct Ftuple_L_Kchar_M_Kchar_M_Ktuple_L_Kchar_M_Kchar_R_Mlocale_R __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0038)(Parm, HasGetValueTypeHash)
	FVerseStringProperty_                         RetVal;                                            // 0x0038(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalizeInternal_L_N_Kchar_M_N_Kchar_M_N_Ktuple_L_Kchar_M_Kchar_R_M_Nlocale_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RLocalizeInternal_L_N_Kchar_M_N_Kchar_M_N_Ktuple_L_Kchar_M_Kchar_R_M_Nlocale_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalizeInternal_L_N_Kchar_M_N_Kchar_M_N_Ktuple_L_Kchar_M_Kchar_R_M_Nlocale_R) == 0x000048, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RLocalizeInternal_L_N_Kchar_M_N_Kchar_M_N_Ktuple_L_Kchar_M_Kchar_R_M_Nlocale_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalizeInternal_L_N_Kchar_M_N_Kchar_M_N_Ktuple_L_Kchar_M_Kchar_R_M_Nlocale_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLocalizeInternal_L_N_Kchar_M_N_Kchar_M_N_Ktuple_L_Kchar_M_Kchar_R_M_Nlocale_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLocalizeInternal_L_N_Kchar_M_N_Kchar_M_N_Ktuple_L_Kchar_M_Kchar_R_M_Nlocale_R, RetVal) == 0x000038, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLocalizeInternal_L_N_Kchar_M_N_Kchar_M_N_Ktuple_L_Kchar_M_Kchar_R_M_Nlocale_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RLog_L_Nfloat_M_Nfloat_R
// 0x0048 (0x0048 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RLog_L_Nfloat_M_Nfloat_R final
{
public:
	struct Verse::Ftuple_Lfloat_Mfloat_R          __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	double                                        RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        _ExprResultStack_0;                                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FVerseFunctionProperty_                       _Callee_1;                                         // 0x0020(0x0010)(HasGetValueTypeHash)
	double                                        _ExprResultStack_2;                                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FVerseFunctionProperty_                       _Callee_3;                                         // 0x0038(0x0010)(HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RLog_L_Nfloat_M_Nfloat_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RLog_L_Nfloat_M_Nfloat_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RLog_L_Nfloat_M_Nfloat_R) == 0x000048, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RLog_L_Nfloat_M_Nfloat_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLog_L_Nfloat_M_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLog_L_Nfloat_M_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLog_L_Nfloat_M_Nfloat_R, RetVal) == 0x000010, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLog_L_Nfloat_M_Nfloat_R::RetVal' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLog_L_Nfloat_M_Nfloat_R, _ExprResultStack_0) == 0x000018, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLog_L_Nfloat_M_Nfloat_R::_ExprResultStack_0' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLog_L_Nfloat_M_Nfloat_R, _Callee_1) == 0x000020, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLog_L_Nfloat_M_Nfloat_R::_Callee_1' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLog_L_Nfloat_M_Nfloat_R, _ExprResultStack_2) == 0x000030, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLog_L_Nfloat_M_Nfloat_R::_ExprResultStack_2' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RLog_L_Nfloat_M_Nfloat_R, _Callee_3) == 0x000038, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RLog_L_Nfloat_M_Nfloat_R::_Callee_3' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_N_Kchar_R
// 0x0020 (0x0020 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_N_Kchar_R final
{
public:
	FVerseStringProperty_                         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	class UVerse_localizable_string*              RetVal;                                            // 0x0010(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	uint64                                        _InstancingGraph_0;                                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_N_Kchar_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_N_Kchar_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_N_Kchar_R) == 0x000020, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_N_Kchar_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_N_Kchar_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_N_Kchar_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_N_Kchar_R, RetVal) == 0x000010, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_N_Kchar_R::RetVal' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_N_Kchar_R, _InstancingGraph_0) == 0x000018, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_N_Kchar_R::_InstancingGraph_0' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_Nfloat_R
// 0x0018 (0x0018 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_Nfloat_R final
{
public:
	double                                        __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerse_localizable_float*               RetVal;                                            // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	uint64                                        _InstancingGraph_0;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_Nfloat_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_Nfloat_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_Nfloat_R) == 0x000018, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_Nfloat_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_Nfloat_R, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_Nfloat_R::RetVal' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_Nfloat_R, _InstancingGraph_0) == 0x000010, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_Nfloat_R::_InstancingGraph_0' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_Nint_R
// 0x0018 (0x0018 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_Nint_R final
{
public:
	int64                                         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerse_localizable_int*                 RetVal;                                            // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	uint64                                        _InstancingGraph_0;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_Nint_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_Nint_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_Nint_R) == 0x000018, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_Nint_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_Nint_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_Nint_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_Nint_R, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_Nint_R::RetVal' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_Nint_R, _InstancingGraph_0) == 0x000010, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_Nint_R::_InstancingGraph_0' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RMakeMessageInternal_L_N_Kchar_M_N_Kchar_M_N_5b_Kchar_5dlocalizable__value_R
// 0x0078 (0x0078 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RMakeMessageInternal_L_N_Kchar_M_N_Kchar_M_N_5b_Kchar_5dlocalizable__value_R final
{
public:
	struct Verse::Ftuple_L_Kchar_M_Kchar_M_5b_Kchar_5dlocalizable__value_R __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0070)(Parm, HasGetValueTypeHash)
	class UVerse_message*                         RetVal;                                            // 0x0070(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RMakeMessageInternal_L_N_Kchar_M_N_Kchar_M_N_5b_Kchar_5dlocalizable__value_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RMakeMessageInternal_L_N_Kchar_M_N_Kchar_M_N_5b_Kchar_5dlocalizable__value_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RMakeMessageInternal_L_N_Kchar_M_N_Kchar_M_N_5b_Kchar_5dlocalizable__value_R) == 0x000078, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RMakeMessageInternal_L_N_Kchar_M_N_Kchar_M_N_5b_Kchar_5dlocalizable__value_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RMakeMessageInternal_L_N_Kchar_M_N_Kchar_M_N_5b_Kchar_5dlocalizable__value_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RMakeMessageInternal_L_N_Kchar_M_N_Kchar_M_N_5b_Kchar_5dlocalizable__value_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RMakeMessageInternal_L_N_Kchar_M_N_Kchar_M_N_5b_Kchar_5dlocalizable__value_R, RetVal) == 0x000070, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RMakeMessageInternal_L_N_Kchar_M_N_Kchar_M_N_5b_Kchar_5dlocalizable__value_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RMax_L_Nfloat_M_Nfloat_R
// 0x0070 (0x0070 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RMax_L_Nfloat_M_Nfloat_R final
{
public:
	struct Verse::Ftuple_Lfloat_Mfloat_R          __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	double                                        RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_0;                                // 0x0018(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseDynamicProperty_                        _ExprResultStack_1;                                // 0x0028(0x0010)(HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_2;                                // 0x0038(0x0011)(HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseDynamicProperty_                        _ExprResult_3;                                     // 0x0050(0x0010)(HasGetValueTypeHash)
	FVerseDynamicProperty_                        _ExprResult_4;                                     // 0x0060(0x0010)(HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RMax_L_Nfloat_M_Nfloat_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RMax_L_Nfloat_M_Nfloat_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RMax_L_Nfloat_M_Nfloat_R) == 0x000070, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RMax_L_Nfloat_M_Nfloat_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RMax_L_Nfloat_M_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RMax_L_Nfloat_M_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RMax_L_Nfloat_M_Nfloat_R, RetVal) == 0x000010, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RMax_L_Nfloat_M_Nfloat_R::RetVal' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RMax_L_Nfloat_M_Nfloat_R, _ExprResultStack_0) == 0x000018, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RMax_L_Nfloat_M_Nfloat_R::_ExprResultStack_0' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RMax_L_Nfloat_M_Nfloat_R, _ExprResultStack_1) == 0x000028, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RMax_L_Nfloat_M_Nfloat_R::_ExprResultStack_1' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RMax_L_Nfloat_M_Nfloat_R, _ExprResultStack_2) == 0x000038, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RMax_L_Nfloat_M_Nfloat_R::_ExprResultStack_2' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RMax_L_Nfloat_M_Nfloat_R, _ExprResult_3) == 0x000050, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RMax_L_Nfloat_M_Nfloat_R::_ExprResult_3' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RMax_L_Nfloat_M_Nfloat_R, _ExprResult_4) == 0x000060, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RMax_L_Nfloat_M_Nfloat_R::_ExprResult_4' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RMax_L_Nint_M_Nint_R
// 0x0028 (0x0028 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RMax_L_Nint_M_Nint_R final
{
public:
	struct Verse::Ftuple_Lint_Mint_R              __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	int64                                         RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_0;                                // 0x0018(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RMax_L_Nint_M_Nint_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RMax_L_Nint_M_Nint_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RMax_L_Nint_M_Nint_R) == 0x000028, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RMax_L_Nint_M_Nint_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RMax_L_Nint_M_Nint_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RMax_L_Nint_M_Nint_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RMax_L_Nint_M_Nint_R, RetVal) == 0x000010, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RMax_L_Nint_M_Nint_R::RetVal' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RMax_L_Nint_M_Nint_R, _ExprResultStack_0) == 0x000018, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RMax_L_Nint_M_Nint_R::_ExprResultStack_0' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RMin_L_Nfloat_M_Nfloat_R
// 0x0070 (0x0070 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RMin_L_Nfloat_M_Nfloat_R final
{
public:
	struct Verse::Ftuple_Lfloat_Mfloat_R          __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	double                                        RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_0;                                // 0x0018(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseDynamicProperty_                        _ExprResultStack_1;                                // 0x0028(0x0010)(HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_2;                                // 0x0038(0x0011)(HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseDynamicProperty_                        _ExprResult_3;                                     // 0x0050(0x0010)(HasGetValueTypeHash)
	FVerseDynamicProperty_                        _ExprResult_4;                                     // 0x0060(0x0010)(HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RMin_L_Nfloat_M_Nfloat_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RMin_L_Nfloat_M_Nfloat_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RMin_L_Nfloat_M_Nfloat_R) == 0x000070, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RMin_L_Nfloat_M_Nfloat_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RMin_L_Nfloat_M_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RMin_L_Nfloat_M_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RMin_L_Nfloat_M_Nfloat_R, RetVal) == 0x000010, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RMin_L_Nfloat_M_Nfloat_R::RetVal' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RMin_L_Nfloat_M_Nfloat_R, _ExprResultStack_0) == 0x000018, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RMin_L_Nfloat_M_Nfloat_R::_ExprResultStack_0' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RMin_L_Nfloat_M_Nfloat_R, _ExprResultStack_1) == 0x000028, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RMin_L_Nfloat_M_Nfloat_R::_ExprResultStack_1' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RMin_L_Nfloat_M_Nfloat_R, _ExprResultStack_2) == 0x000038, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RMin_L_Nfloat_M_Nfloat_R::_ExprResultStack_2' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RMin_L_Nfloat_M_Nfloat_R, _ExprResult_3) == 0x000050, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RMin_L_Nfloat_M_Nfloat_R::_ExprResult_3' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RMin_L_Nfloat_M_Nfloat_R, _ExprResult_4) == 0x000060, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RMin_L_Nfloat_M_Nfloat_R::_ExprResult_4' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RMin_L_Nint_M_Nint_R
// 0x0028 (0x0028 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RMin_L_Nint_M_Nint_R final
{
public:
	struct Verse::Ftuple_Lint_Mint_R              __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	int64                                         RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_0;                                // 0x0018(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RMin_L_Nint_M_Nint_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RMin_L_Nint_M_Nint_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RMin_L_Nint_M_Nint_R) == 0x000028, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RMin_L_Nint_M_Nint_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RMin_L_Nint_M_Nint_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RMin_L_Nint_M_Nint_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RMin_L_Nint_M_Nint_R, RetVal) == 0x000010, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RMin_L_Nint_M_Nint_R::RetVal' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RMin_L_Nint_M_Nint_R, _ExprResultStack_0) == 0x000018, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RMin_L_Nint_M_Nint_R::_ExprResultStack_0' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RMod_L_Nint_M_Nint_R
// 0x0020 (0x0020 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RMod_L_Nint_M_Nint_R final
{
public:
	struct Verse::Ftuple_Lint_Mint_R              __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0010(0x0009)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RMod_L_Nint_M_Nint_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RMod_L_Nint_M_Nint_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RMod_L_Nint_M_Nint_R) == 0x000020, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RMod_L_Nint_M_Nint_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RMod_L_Nint_M_Nint_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RMod_L_Nint_M_Nint_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RMod_L_Nint_M_Nint_R, RetVal) == 0x000010, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RMod_L_Nint_M_Nint_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eFind_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R
// 0x00D0 (0x00D0 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eFind_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R final
{
public:
	struct Ftuple_L_Kany_Mtuple_L_R_Many_R        __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0028)(Parm, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0028(0x0009)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         _ExprResult_0;                                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int64>                                 __verse_0x982D8E7C_Results_1;                      // 0x0040(0x0010)(ContainsInstancedReference)
	TArray<int64>                                 _ForResult_1;                                      // 0x0050(0x0010)(ContainsInstancedReference)
	TArray<FVerseDynamicProperty_>                _ForIterable_2;                                    // 0x0060(0x0010)(ContainsInstancedReference)
	int64                                         __verse_0x98DC86C6_Index_4;                        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         _ForLength_3;                                      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FVerseDynamicProperty_                        __verse_0x68EE242C_Element_4;                      // 0x0080(0x0010)(HasGetValueTypeHash)
	FVerseDynamicProperty_                        InvokeResultDummy_4;                               // 0x0090(0x0010)(HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_5;                                // 0x00A0(0x0011)(HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         _ExprResult_6;                                     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_7;                                // 0x00C0(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eFind_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eFind_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eFind_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R) == 0x0000D0, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eFind_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eFind_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eFind_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eFind_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, RetVal) == 0x000028, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eFind_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::RetVal' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eFind_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, _ExprResult_0) == 0x000038, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eFind_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::_ExprResult_0' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eFind_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, __verse_0x982D8E7C_Results_1) == 0x000040, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eFind_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::__verse_0x982D8E7C_Results_1' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eFind_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, _ForResult_1) == 0x000050, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eFind_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::_ForResult_1' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eFind_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, _ForIterable_2) == 0x000060, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eFind_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::_ForIterable_2' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eFind_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, __verse_0x98DC86C6_Index_4) == 0x000070, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eFind_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::__verse_0x98DC86C6_Index_4' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eFind_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, _ForLength_3) == 0x000078, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eFind_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::_ForLength_3' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eFind_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, __verse_0x68EE242C_Element_4) == 0x000080, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eFind_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::__verse_0x68EE242C_Element_4' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eFind_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, InvokeResultDummy_4) == 0x000090, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eFind_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::InvokeResultDummy_4' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eFind_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, _ExprResultStack_5) == 0x0000A0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eFind_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::_ExprResultStack_5' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eFind_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, _ExprResult_6) == 0x0000B8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eFind_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::_ExprResult_6' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eFind_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, _ExprResultStack_7) == 0x0000C0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eFind_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::_ExprResultStack_7' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R
// 0x0178 (0x0178 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R final
{
public:
	struct Ftuple_L_Kany_Mtuple_L_R_Mtuple_Lint_M_Kany_R_R __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0030)(Parm, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0030(0x0011)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<FVerseDynamicProperty_>                _ExprResult_0;                                     // 0x0048(0x0010)(ContainsInstancedReference)
	FOptionProperty_                              _ExprResultStack_1;                                // 0x0058(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FOptionProperty_                              _ExprResultStack_2;                                // 0x0068(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         _ExprResult_3;                                     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<FVerseDynamicProperty_>                __verse_0x00000000__2;                             // 0x0080(0x0010)(ContainsInstancedReference)
	TArray<FVerseDynamicProperty_>                _ExprResultStack_4;                                // 0x0090(0x0010)(ContainsInstancedReference)
	TArray<FVerseDynamicProperty_>                _ExprResultStack_5;                                // 0x00A0(0x0010)(ContainsInstancedReference)
	FOptionProperty_                              _ExprResultStack_6;                                // 0x00B0(0x0011)(ContainsInstancedReference)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseFunctionProperty_                       _Callee_7;                                         // 0x00C8(0x0010)(HasGetValueTypeHash)
	struct Ftuple_L_Kany_Mtuple_L_R_Mtuple_Ltype_7b0_7d_Mint_R_R _ExprResult_8;                                     // 0x00D8(0x0028)(HasGetValueTypeHash)
	struct Verse::Ftuple_L_R                      _ExprResult_9;                                     // 0x0100(0x0001)(HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct Ftuple_Ltype_7b0_7d_Mint_R             _ExprResult_10;                                    // 0x0108(0x0010)(HasGetValueTypeHash)
	TArray<FVerseDynamicProperty_>                _ExprResultStack_11;                               // 0x0118(0x0010)(ContainsInstancedReference)
	FOptionProperty_                              _ExprResultStack_12;                               // 0x0128(0x0011)(ContainsInstancedReference)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseFunctionProperty_                       _Callee_13;                                        // 0x0140(0x0010)(HasGetValueTypeHash)
	struct Ftuple_L_Kany_Mtuple_L_R_Mint_R        _ExprResult_14;                                    // 0x0150(0x0020)(HasGetValueTypeHash)
	struct Verse::Ftuple_L_R                      _ExprResult_15;                                    // 0x0170(0x0001)(HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R) == 0x000178, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R, RetVal) == 0x000030, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R::RetVal' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R, _ExprResult_0) == 0x000048, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R::_ExprResult_0' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R, _ExprResultStack_1) == 0x000058, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R::_ExprResultStack_1' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R, _ExprResultStack_2) == 0x000068, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R::_ExprResultStack_2' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R, _ExprResult_3) == 0x000078, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R::_ExprResult_3' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R, __verse_0x00000000__2) == 0x000080, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R::__verse_0x00000000__2' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R, _ExprResultStack_4) == 0x000090, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R::_ExprResultStack_4' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R, _ExprResultStack_5) == 0x0000A0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R::_ExprResultStack_5' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R, _ExprResultStack_6) == 0x0000B0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R::_ExprResultStack_6' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R, _Callee_7) == 0x0000C8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R::_Callee_7' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R, _ExprResult_8) == 0x0000D8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R::_ExprResult_8' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R, _ExprResult_9) == 0x000100, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R::_ExprResult_9' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R, _ExprResult_10) == 0x000108, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R::_ExprResult_10' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R, _ExprResultStack_11) == 0x000118, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R::_ExprResultStack_11' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R, _ExprResultStack_12) == 0x000128, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R::_ExprResultStack_12' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R, _Callee_13) == 0x000140, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R::_Callee_13' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R, _ExprResult_14) == 0x000150, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R::_ExprResult_14' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R, _ExprResult_15) == 0x000170, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R::_ExprResult_15' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eIsAlmostZero_U_L_Nfloat_M_Ntuple_L_R_M_Nfloat_R
// 0x0030 (0x0030 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eIsAlmostZero_U_L_Nfloat_M_Ntuple_L_R_M_Nfloat_R final
{
public:
	struct Ftuple_Lfloat_Mtuple_L_R_Mfloat_R      __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0018)(Parm, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0018(0x0002)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         _ExprResult_0 : 1;                                 // 0x001A(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	FOptionProperty_                              _ExprResultStack_1;                                // 0x0020(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eIsAlmostZero_U_L_Nfloat_M_Ntuple_L_R_M_Nfloat_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eIsAlmostZero_U_L_Nfloat_M_Ntuple_L_R_M_Nfloat_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eIsAlmostZero_U_L_Nfloat_M_Ntuple_L_R_M_Nfloat_R) == 0x000030, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eIsAlmostZero_U_L_Nfloat_M_Ntuple_L_R_M_Nfloat_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eIsAlmostZero_U_L_Nfloat_M_Ntuple_L_R_M_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eIsAlmostZero_U_L_Nfloat_M_Ntuple_L_R_M_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eIsAlmostZero_U_L_Nfloat_M_Ntuple_L_R_M_Nfloat_R, RetVal) == 0x000018, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eIsAlmostZero_U_L_Nfloat_M_Ntuple_L_R_M_Nfloat_R::RetVal' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eIsAlmostZero_U_L_Nfloat_M_Ntuple_L_R_M_Nfloat_R, _ExprResultStack_1) == 0x000020, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eIsAlmostZero_U_L_Nfloat_M_Ntuple_L_R_M_Nfloat_R::_ExprResultStack_1' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eIsFinite_U_L_Nfloat_M_Ntuple_L_R_R
// 0x0048 (0x0048 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eIsFinite_U_L_Nfloat_M_Ntuple_L_R_R final
{
public:
	struct Verse::Ftuple_Lfloat_Mtuple_L_R_Mtuple_L_R_R __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0010(0x0009)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerseFalse                                   _ExprResult_0;                                     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        _ExprResult_1;                                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_2;                                // 0x0028(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FOptionProperty_                              _ExprResultStack_3;                                // 0x0038(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eIsFinite_U_L_Nfloat_M_Ntuple_L_R_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eIsFinite_U_L_Nfloat_M_Ntuple_L_R_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eIsFinite_U_L_Nfloat_M_Ntuple_L_R_R) == 0x000048, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eIsFinite_U_L_Nfloat_M_Ntuple_L_R_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eIsFinite_U_L_Nfloat_M_Ntuple_L_R_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eIsFinite_U_L_Nfloat_M_Ntuple_L_R_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eIsFinite_U_L_Nfloat_M_Ntuple_L_R_R, RetVal) == 0x000010, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eIsFinite_U_L_Nfloat_M_Ntuple_L_R_R::RetVal' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eIsFinite_U_L_Nfloat_M_Ntuple_L_R_R, _ExprResult_0) == 0x000019, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eIsFinite_U_L_Nfloat_M_Ntuple_L_R_R::_ExprResult_0' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eIsFinite_U_L_Nfloat_M_Ntuple_L_R_R, _ExprResult_1) == 0x000020, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eIsFinite_U_L_Nfloat_M_Ntuple_L_R_R::_ExprResult_1' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eIsFinite_U_L_Nfloat_M_Ntuple_L_R_R, _ExprResultStack_2) == 0x000028, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eIsFinite_U_L_Nfloat_M_Ntuple_L_R_R::_ExprResultStack_2' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eIsFinite_U_L_Nfloat_M_Ntuple_L_R_R, _ExprResultStack_3) == 0x000038, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eIsFinite_U_L_Nfloat_M_Ntuple_L_R_R::_ExprResultStack_3' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R
// 0x0108 (0x0108 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R final
{
public:
	struct Ftuple_L_Kany_Mtuple_L_R_Mtuple_Lint_Mint_R_R __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0028)(Parm, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0028(0x0011)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<FVerseDynamicProperty_>                _ExprResult_0;                                     // 0x0040(0x0010)(ContainsInstancedReference)
	FOptionProperty_                              _ExprResultStack_1;                                // 0x0050(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FOptionProperty_                              _ExprResultStack_2;                                // 0x0060(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FOptionProperty_                              _ExprResultStack_3;                                // 0x0070(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         _ExprResult_4;                                     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<FVerseDynamicProperty_>                __verse_0x00000000__2;                             // 0x0088(0x0010)(ContainsInstancedReference)
	TArray<FVerseDynamicProperty_>                _ForResult_5;                                      // 0x0098(0x0010)(ContainsInstancedReference)
	TArray<FVerseDynamicProperty_>                _ForIterable_6;                                    // 0x00A8(0x0010)(ContainsInstancedReference)
	int64                                         __verse_0x98DC86C6_Index_5;                        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         _ForLength_7;                                      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FVerseDynamicProperty_                        __verse_0x68EE242C_Element_5;                      // 0x00C8(0x0010)(HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_8;                                // 0x00D8(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FOptionProperty_                              _ExprResultStack_9;                                // 0x00E8(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseDynamicProperty_                        _ExprResult_10;                                    // 0x00F8(0x0010)(HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R) == 0x000108, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R, RetVal) == 0x000028, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R::RetVal' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R, _ExprResult_0) == 0x000040, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R::_ExprResult_0' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R, _ExprResultStack_1) == 0x000050, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R::_ExprResultStack_1' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R, _ExprResultStack_2) == 0x000060, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R::_ExprResultStack_2' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R, _ExprResultStack_3) == 0x000070, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R::_ExprResultStack_3' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R, _ExprResult_4) == 0x000080, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R::_ExprResult_4' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R, __verse_0x00000000__2) == 0x000088, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R::__verse_0x00000000__2' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R, _ForResult_5) == 0x000098, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R::_ForResult_5' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R, _ForIterable_6) == 0x0000A8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R::_ForIterable_6' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R, __verse_0x98DC86C6_Index_5) == 0x0000B8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R::__verse_0x98DC86C6_Index_5' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R, _ForLength_7) == 0x0000C0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R::_ForLength_7' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R, __verse_0x68EE242C_Element_5) == 0x0000C8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R::__verse_0x68EE242C_Element_5' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R, _ExprResultStack_8) == 0x0000D8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R::_ExprResultStack_8' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R, _ExprResultStack_9) == 0x0000E8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R::_ExprResultStack_9' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R, _ExprResult_10) == 0x0000F8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R::_ExprResult_10' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R
// 0x00B0 (0x00B0 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R final
{
public:
	struct Ftuple_L_Kany_Mtuple_L_R_Many_R        __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0028)(Parm, HasGetValueTypeHash)
	TArray<FVerseDynamicProperty_>                RetVal;                                            // 0x0028(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	TArray<FVerseDynamicProperty_>                _ForResult_0;                                      // 0x0038(0x0010)(ContainsInstancedReference)
	TArray<FVerseDynamicProperty_>                _ForIterable_1;                                    // 0x0048(0x0010)(ContainsInstancedReference)
	int64                                         _ForIndex_2;                                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         _ForLength_3;                                      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FVerseDynamicProperty_                        __verse_0x6D6B7666_InputElement_3;                 // 0x0068(0x0010)(HasGetValueTypeHash)
	FVerseDynamicProperty_                        InvokeResultDummy_4;                               // 0x0078(0x0010)(HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_5;                                // 0x0088(0x0011)(HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseDynamicProperty_                        _ExprResult_6;                                     // 0x00A0(0x0010)(HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R) == 0x0000B0, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, RetVal) == 0x000028, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::RetVal' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, _ForResult_0) == 0x000038, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::_ForResult_0' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, _ForIterable_1) == 0x000048, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::_ForIterable_1' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, _ForIndex_2) == 0x000058, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::_ForIndex_2' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, _ForLength_3) == 0x000060, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::_ForLength_3' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, __verse_0x6D6B7666_InputElement_3) == 0x000068, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::__verse_0x6D6B7666_InputElement_3' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, InvokeResultDummy_4) == 0x000078, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::InvokeResultDummy_4' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, _ExprResultStack_5) == 0x000088, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::_ExprResultStack_5' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, _ExprResult_6) == 0x0000A0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::_ExprResult_6' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R
// 0x0100 (0x0100 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R final
{
public:
	struct Ftuple_L_Kany_Mtuple_L_R_Mint_R        __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0020)(Parm, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0020(0x0011)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<FVerseDynamicProperty_>                _ExprResult_0;                                     // 0x0038(0x0010)(ContainsInstancedReference)
	FOptionProperty_                              _ExprResultStack_1;                                // 0x0048(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FOptionProperty_                              _ExprResultStack_2;                                // 0x0058(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         _ExprResult_3;                                     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<FVerseDynamicProperty_>                __verse_0x00000000__2;                             // 0x0070(0x0010)(ContainsInstancedReference)
	TArray<FVerseDynamicProperty_>                _ForResult_4;                                      // 0x0080(0x0010)(ContainsInstancedReference)
	struct FVerseIntRange                         _ForIterable_5;                                    // 0x0090(0x0010)(NoDestructor)
	int64                                         _ExprResult_6;                                     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<FVerseDynamicProperty_>                __verse_0x00000000__5;                             // 0x00A8(0x0010)(ContainsInstancedReference)
	int64                                         __verse_0x720ECD68_OutputIndex_6;                  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FVerseDynamicProperty_                        _ExprResult_7;                                     // 0x00C0(0x0010)(HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_8;                                // 0x00D0(0x0011)(HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         _ExprResult_9;                                     // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_10;                               // 0x00F0(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R) == 0x000100, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R, RetVal) == 0x000020, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R::RetVal' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R, _ExprResult_0) == 0x000038, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R::_ExprResult_0' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R, _ExprResultStack_1) == 0x000048, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R::_ExprResultStack_1' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R, _ExprResultStack_2) == 0x000058, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R::_ExprResultStack_2' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R, _ExprResult_3) == 0x000068, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R::_ExprResult_3' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R, __verse_0x00000000__2) == 0x000070, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R::__verse_0x00000000__2' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R, _ForResult_4) == 0x000080, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R::_ForResult_4' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R, _ForIterable_5) == 0x000090, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R::_ForIterable_5' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R, _ExprResult_6) == 0x0000A0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R::_ExprResult_6' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R, __verse_0x00000000__5) == 0x0000A8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R::__verse_0x00000000__5' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R, __verse_0x720ECD68_OutputIndex_6) == 0x0000B8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R::__verse_0x720ECD68_OutputIndex_6' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R, _ExprResult_7) == 0x0000C0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R::_ExprResult_7' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R, _ExprResultStack_8) == 0x0000D0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R::_ExprResultStack_8' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R, _ExprResult_9) == 0x0000E8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R::_ExprResult_9' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R, _ExprResultStack_10) == 0x0000F0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R::_ExprResultStack_10' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R
// 0x0130 (0x0130 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R final
{
public:
	struct Ftuple_L_Kany_Mtuple_L_R_Many_R        __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0028)(Parm, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0028(0x0011)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<FVerseDynamicProperty_>                _ExprResult_0;                                     // 0x0040(0x0010)(ContainsInstancedReference)
	TArray<int64>                                 __verse_0x35C8B160_Indices_1;                      // 0x0050(0x0010)(ContainsInstancedReference)
	TArray<int64>                                 _ForResult_1;                                      // 0x0060(0x0010)(ContainsInstancedReference)
	TArray<FVerseDynamicProperty_>                _ForIterable_2;                                    // 0x0070(0x0010)(ContainsInstancedReference)
	int64                                         __verse_0x98DC86C6_Index_4;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         _ForLength_3;                                      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FVerseDynamicProperty_                        __verse_0x68EE242C_Element_4;                      // 0x0090(0x0010)(HasGetValueTypeHash)
	FVerseDynamicProperty_                        InvokeResultDummy_4;                               // 0x00A0(0x0010)(HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_5;                                // 0x00B0(0x0011)(HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         _ExprResult_6;                                     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_7;                                // 0x00D0(0x0011)(ContainsInstancedReference)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseFunctionProperty_                       _Callee_8;                                         // 0x00E8(0x0010)(HasGetValueTypeHash)
	struct Ftuple_L_Kany_Mtuple_L_R_Mint_R        _ExprResult_9;                                     // 0x00F8(0x0020)(HasGetValueTypeHash)
	struct Verse::Ftuple_L_R                      _ExprResult_10;                                    // 0x0118(0x0001)(HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FOptionProperty_                              _ExprResultStack_11;                               // 0x0120(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R) == 0x000130, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, RetVal) == 0x000028, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::RetVal' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, _ExprResult_0) == 0x000040, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::_ExprResult_0' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, __verse_0x35C8B160_Indices_1) == 0x000050, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::__verse_0x35C8B160_Indices_1' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, _ForResult_1) == 0x000060, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::_ForResult_1' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, _ForIterable_2) == 0x000070, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::_ForIterable_2' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, __verse_0x98DC86C6_Index_4) == 0x000080, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::__verse_0x98DC86C6_Index_4' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, _ForLength_3) == 0x000088, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::_ForLength_3' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, __verse_0x68EE242C_Element_4) == 0x000090, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::__verse_0x68EE242C_Element_4' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, InvokeResultDummy_4) == 0x0000A0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::InvokeResultDummy_4' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, _ExprResultStack_5) == 0x0000B0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::_ExprResultStack_5' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, _ExprResult_6) == 0x0000C8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::_ExprResult_6' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, _ExprResultStack_7) == 0x0000D0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::_ExprResultStack_7' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, _Callee_8) == 0x0000E8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::_Callee_8' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, _ExprResult_9) == 0x0000F8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::_ExprResult_9' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, _ExprResult_10) == 0x000118, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::_ExprResult_10' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R, _ExprResultStack_11) == 0x000120, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R::_ExprResultStack_11' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R
// 0x02E0 (0x02E0 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R final
{
public:
	struct Ftuple_L_Kany_Mtuple_L_R_Mtuple_L_Kany_M_Kany_R_R __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0038)(Parm, HasGetValueTypeHash)
	TArray<FVerseDynamicProperty_>                RetVal;                                            // 0x0038(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	int64                                         __verse_0x5B0C19A9_Length_1;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<FVerseDynamicProperty_>                __verse_0x00000000__2;                             // 0x0050(0x0010)(ContainsInstancedReference)
	int64                                         __verse_0xC86D91E0_ToReplaceLength_1;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<FVerseDynamicProperty_>                __verse_0x00000000__3;                             // 0x0068(0x0010)(ContainsInstancedReference)
	FVerseDynamicProperty_                        InvokeResultDummy_0;                               // 0x0078(0x0010)(HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_1;                                // 0x0088(0x0011)(HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseDynamicProperty_                        _ExprResult_2;                                     // 0x00A0(0x0010)(HasGetValueTypeHash)
	FVerseDynamicProperty_                        _ExprResult_3;                                     // 0x00B0(0x0010)(HasGetValueTypeHash)
	TArray<FVerseDynamicProperty_>                __verse_0x95D09D0E_Result_1;                       // 0x00C0(0x0010)(ContainsInstancedReference)
	TArray<EVerseFalse>                           __verse_0xFFC68BC5_Array_6;                        // 0x00D0(0x0010)(ContainsInstancedReference)
	TArray<FVerseDynamicProperty_>                _ForResult_4;                                      // 0x00E0(0x0010)(ContainsInstancedReference)
	int64                                         _ForIndex_5;                                       // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         _ForLength_6;                                      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerseFalse                                   __verse_0xFB88B569_Item_8;                         // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         _ExprResult_7 : 1;                                 // 0x0101(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         __verse_0xABC858C7_I_1;                            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         __verse_0x60194205_SliceBeginIndex_1;              // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_8;                                // 0x0118(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<FVerseDynamicProperty_>                InvokeResultDummy_9;                               // 0x0128(0x0010)(ContainsInstancedReference)
	TArray<FVerseDynamicProperty_>                _ExprResultStack_10;                               // 0x0138(0x0010)(ContainsInstancedReference)
	FOptionProperty_                              _ExprResultStack_11;                               // 0x0148(0x0011)(ContainsInstancedReference)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseFunctionProperty_                       _Callee_12;                                        // 0x0160(0x0010)(HasGetValueTypeHash)
	struct Ftuple_L_Kany_Mtuple_L_R_Mtuple_Lint_Mint_R_R _ExprResult_13;                                    // 0x0170(0x0028)(HasGetValueTypeHash)
	struct Verse::Ftuple_L_R                      _ExprResult_14;                                    // 0x0198(0x0001)(HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct Verse::Ftuple_Lint_Mint_R              _ExprResult_15;                                    // 0x01A0(0x0010)(HasGetValueTypeHash)
	uint8                                         __verse_0x8F8294E0_Matches_10 : 1;                 // 0x01B0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         __verse_0x4567EDD5_J_10;                           // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_16;                               // 0x01C0(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseDynamicProperty_                        InvokeResultDummy_17;                              // 0x01D0(0x0010)(HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_18;                               // 0x01E0(0x0011)(HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseDynamicProperty_                        _ExprResultStack_19;                               // 0x01F8(0x0010)(HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_20;                               // 0x0208(0x0011)(HasGetValueTypeHash)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseDynamicProperty_                        _ExprResultStack_21;                               // 0x0220(0x0010)(HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_22;                               // 0x0230(0x0011)(HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_23;                               // 0x0241(0x0002)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_243[0x5];                                      // 0x0243(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<FVerseDynamicProperty_>                InvokeResultDummy_24;                              // 0x0248(0x0010)(ContainsInstancedReference)
	TArray<FVerseDynamicProperty_>                _ExprResultStack_25;                               // 0x0258(0x0010)(ContainsInstancedReference)
	TArray<FVerseDynamicProperty_>                _ExprResultStack_26;                               // 0x0268(0x0010)(ContainsInstancedReference)
	FOptionProperty_                              _ExprResultStack_27;                               // 0x0278(0x0011)(ContainsInstancedReference)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseFunctionProperty_                       _Callee_28;                                        // 0x0290(0x0010)(HasGetValueTypeHash)
	struct Ftuple_L_Kany_Mtuple_L_R_Mtuple_Lint_Mint_R_R _ExprResult_29;                                    // 0x02A0(0x0028)(HasGetValueTypeHash)
	struct Verse::Ftuple_L_R                      _ExprResult_30;                                    // 0x02C8(0x0001)(HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct Verse::Ftuple_Lint_Mint_R              _ExprResult_31;                                    // 0x02D0(0x0010)(HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R) == 0x0002E0, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, RetVal) == 0x000038, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::RetVal' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, __verse_0x5B0C19A9_Length_1) == 0x000048, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::__verse_0x5B0C19A9_Length_1' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, __verse_0x00000000__2) == 0x000050, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::__verse_0x00000000__2' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, __verse_0xC86D91E0_ToReplaceLength_1) == 0x000060, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::__verse_0xC86D91E0_ToReplaceLength_1' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, __verse_0x00000000__3) == 0x000068, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::__verse_0x00000000__3' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, InvokeResultDummy_0) == 0x000078, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::InvokeResultDummy_0' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, _ExprResultStack_1) == 0x000088, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::_ExprResultStack_1' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, _ExprResult_2) == 0x0000A0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::_ExprResult_2' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, _ExprResult_3) == 0x0000B0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::_ExprResult_3' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, __verse_0x95D09D0E_Result_1) == 0x0000C0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::__verse_0x95D09D0E_Result_1' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, __verse_0xFFC68BC5_Array_6) == 0x0000D0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::__verse_0xFFC68BC5_Array_6' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, _ForResult_4) == 0x0000E0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::_ForResult_4' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, _ForIndex_5) == 0x0000F0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::_ForIndex_5' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, _ForLength_6) == 0x0000F8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::_ForLength_6' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, __verse_0xFB88B569_Item_8) == 0x000100, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::__verse_0xFB88B569_Item_8' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, __verse_0xABC858C7_I_1) == 0x000108, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::__verse_0xABC858C7_I_1' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, __verse_0x60194205_SliceBeginIndex_1) == 0x000110, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::__verse_0x60194205_SliceBeginIndex_1' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, _ExprResultStack_8) == 0x000118, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::_ExprResultStack_8' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, InvokeResultDummy_9) == 0x000128, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::InvokeResultDummy_9' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, _ExprResultStack_10) == 0x000138, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::_ExprResultStack_10' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, _ExprResultStack_11) == 0x000148, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::_ExprResultStack_11' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, _Callee_12) == 0x000160, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::_Callee_12' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, _ExprResult_13) == 0x000170, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::_ExprResult_13' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, _ExprResult_14) == 0x000198, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::_ExprResult_14' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, _ExprResult_15) == 0x0001A0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::_ExprResult_15' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, __verse_0x4567EDD5_J_10) == 0x0001B8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::__verse_0x4567EDD5_J_10' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, _ExprResultStack_16) == 0x0001C0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::_ExprResultStack_16' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, InvokeResultDummy_17) == 0x0001D0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::InvokeResultDummy_17' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, _ExprResultStack_18) == 0x0001E0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::_ExprResultStack_18' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, _ExprResultStack_19) == 0x0001F8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::_ExprResultStack_19' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, _ExprResultStack_20) == 0x000208, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::_ExprResultStack_20' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, _ExprResultStack_21) == 0x000220, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::_ExprResultStack_21' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, _ExprResultStack_22) == 0x000230, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::_ExprResultStack_22' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, _ExprResultStack_23) == 0x000241, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::_ExprResultStack_23' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, InvokeResultDummy_24) == 0x000248, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::InvokeResultDummy_24' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, _ExprResultStack_25) == 0x000258, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::_ExprResultStack_25' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, _ExprResultStack_26) == 0x000268, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::_ExprResultStack_26' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, _ExprResultStack_27) == 0x000278, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::_ExprResultStack_27' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, _Callee_28) == 0x000290, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::_Callee_28' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, _ExprResult_29) == 0x0002A0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::_ExprResult_29' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, _ExprResult_30) == 0x0002C8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::_ExprResult_30' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R, _ExprResult_31) == 0x0002D0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R::_ExprResult_31' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R
// 0x00C0 (0x00C0 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R final
{
public:
	struct Ftuple_L_Kany_Mtuple_L_R_Mtuple_Lany_Many_R_R __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0038)(Parm, HasGetValueTypeHash)
	TArray<FVerseDynamicProperty_>                RetVal;                                            // 0x0038(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	TArray<FVerseDynamicProperty_>                _ForResult_0;                                      // 0x0048(0x0010)(ContainsInstancedReference)
	TArray<FVerseDynamicProperty_>                _ForIterable_1;                                    // 0x0058(0x0010)(ContainsInstancedReference)
	int64                                         _ForIndex_2;                                       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         _ForLength_3;                                      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FVerseDynamicProperty_                        __verse_0x6D6B7666_InputElement_3;                 // 0x0078(0x0010)(HasGetValueTypeHash)
	FVerseDynamicProperty_                        _ExprResult_4;                                     // 0x0088(0x0010)(HasGetValueTypeHash)
	FVerseDynamicProperty_                        InvokeResultDummy_5;                               // 0x0098(0x0010)(HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_6;                                // 0x00A8(0x0011)(HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R) == 0x0000C0, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R, RetVal) == 0x000038, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R::RetVal' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R, _ForResult_0) == 0x000048, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R::_ForResult_0' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R, _ForIterable_1) == 0x000058, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R::_ForIterable_1' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R, _ForIndex_2) == 0x000068, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R::_ForIndex_2' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R, _ForLength_3) == 0x000070, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R::_ForLength_3' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R, __verse_0x6D6B7666_InputElement_3) == 0x000078, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R::__verse_0x6D6B7666_InputElement_3' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R, _ExprResult_4) == 0x000088, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R::_ExprResult_4' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R, InvokeResultDummy_5) == 0x000098, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R::InvokeResultDummy_5' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R, _ExprResultStack_6) == 0x0000A8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R::_ExprResultStack_6' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R
// 0x0128 (0x0128 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R final
{
public:
	struct Ftuple_L_Kany_Mtuple_L_R_Mtuple_Lint_Many_R_R __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0030)(Parm, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0030(0x0011)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<FVerseDynamicProperty_>                _ExprResult_0;                                     // 0x0048(0x0010)(ContainsInstancedReference)
	FOptionProperty_                              _ExprResultStack_1;                                // 0x0058(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FOptionProperty_                              _ExprResultStack_2;                                // 0x0068(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         _ExprResult_3;                                     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<FVerseDynamicProperty_>                __verse_0x00000000__2;                             // 0x0080(0x0010)(ContainsInstancedReference)
	TArray<FVerseDynamicProperty_>                _ForResult_4;                                      // 0x0090(0x0010)(ContainsInstancedReference)
	TArray<FVerseDynamicProperty_>                _ForIterable_5;                                    // 0x00A0(0x0010)(ContainsInstancedReference)
	int64                                         __verse_0x98DC86C6_Index_5;                        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         _ForLength_6;                                      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FVerseDynamicProperty_                        __verse_0x6D6B7666_InputElement_5;                 // 0x00C0(0x0010)(HasGetValueTypeHash)
	FVerseDynamicProperty_                        _ExprResult_7;                                     // 0x00D0(0x0010)(HasGetValueTypeHash)
	FVerseDynamicProperty_                        InvokeResultDummy_8;                               // 0x00E0(0x0010)(HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_9;                                // 0x00F0(0x0011)(HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseDynamicProperty_                        _ExprResult_10;                                    // 0x0108(0x0010)(HasGetValueTypeHash)
	FVerseDynamicProperty_                        _ExprResult_11;                                    // 0x0118(0x0010)(HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R) == 0x000128, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R, RetVal) == 0x000030, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R::RetVal' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R, _ExprResult_0) == 0x000048, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R::_ExprResult_0' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R, _ExprResultStack_1) == 0x000058, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R::_ExprResultStack_1' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R, _ExprResultStack_2) == 0x000068, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R::_ExprResultStack_2' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R, _ExprResult_3) == 0x000078, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R::_ExprResult_3' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R, __verse_0x00000000__2) == 0x000080, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R::__verse_0x00000000__2' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R, _ForResult_4) == 0x000090, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R::_ForResult_4' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R, _ForIterable_5) == 0x0000A0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R::_ForIterable_5' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R, __verse_0x98DC86C6_Index_5) == 0x0000B0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R::__verse_0x98DC86C6_Index_5' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R, _ForLength_6) == 0x0000B8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R::_ForLength_6' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R, __verse_0x6D6B7666_InputElement_5) == 0x0000C0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R::__verse_0x6D6B7666_InputElement_5' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R, _ExprResult_7) == 0x0000D0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R::_ExprResult_7' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R, InvokeResultDummy_8) == 0x0000E0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R::InvokeResultDummy_8' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R, _ExprResultStack_9) == 0x0000F0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R::_ExprResultStack_9' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R, _ExprResult_10) == 0x000108, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R::_ExprResult_10' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R, _ExprResult_11) == 0x000118, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R::_ExprResult_11' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R
// 0x0168 (0x0168 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R final
{
public:
	struct Ftuple_L_Kany_Mtuple_L_R_Mtuple_Lany_Many_R_R __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0038)(Parm, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0038(0x0011)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<FVerseDynamicProperty_>                _ExprResult_0;                                     // 0x0050(0x0010)(ContainsInstancedReference)
	TArray<int64>                                 __verse_0x35C8B160_Indices_1;                      // 0x0060(0x0010)(ContainsInstancedReference)
	TArray<int64>                                 _ForResult_1;                                      // 0x0070(0x0010)(ContainsInstancedReference)
	TArray<FVerseDynamicProperty_>                _ForIterable_2;                                    // 0x0080(0x0010)(ContainsInstancedReference)
	int64                                         __verse_0x98DC86C6_Index_4;                        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         _ForLength_3;                                      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FVerseDynamicProperty_                        __verse_0x68EE242C_Element_4;                      // 0x00A0(0x0010)(HasGetValueTypeHash)
	FVerseDynamicProperty_                        InvokeResultDummy_4;                               // 0x00B0(0x0010)(HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_5;                                // 0x00C0(0x0011)(HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         _ExprResult_6;                                     // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_7;                                // 0x00E0(0x0011)(ContainsInstancedReference)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseFunctionProperty_                       _Callee_8;                                         // 0x00F8(0x0010)(HasGetValueTypeHash)
	struct Ftuple_L_Kany_Mtuple_L_R_Mtuple_Lint_Many_R_R _ExprResult_9;                                     // 0x0108(0x0030)(HasGetValueTypeHash)
	struct Verse::Ftuple_L_R                      _ExprResult_10;                                    // 0x0138(0x0001)(HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct Verse::Ftuple_Lint_Many_R              _ExprResult_11;                                    // 0x0140(0x0018)(HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_12;                               // 0x0158(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R) == 0x000168, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R, RetVal) == 0x000038, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R::RetVal' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R, _ExprResult_0) == 0x000050, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R::_ExprResult_0' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R, __verse_0x35C8B160_Indices_1) == 0x000060, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R::__verse_0x35C8B160_Indices_1' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R, _ForResult_1) == 0x000070, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R::_ForResult_1' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R, _ForIterable_2) == 0x000080, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R::_ForIterable_2' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R, __verse_0x98DC86C6_Index_4) == 0x000090, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R::__verse_0x98DC86C6_Index_4' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R, _ForLength_3) == 0x000098, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R::_ForLength_3' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R, __verse_0x68EE242C_Element_4) == 0x0000A0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R::__verse_0x68EE242C_Element_4' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R, InvokeResultDummy_4) == 0x0000B0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R::InvokeResultDummy_4' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R, _ExprResultStack_5) == 0x0000C0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R::_ExprResultStack_5' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R, _ExprResult_6) == 0x0000D8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R::_ExprResult_6' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R, _ExprResultStack_7) == 0x0000E0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R::_ExprResultStack_7' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R, _Callee_8) == 0x0000F8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R::_Callee_8' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R, _ExprResult_9) == 0x000108, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R::_ExprResult_9' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R, _ExprResult_10) == 0x000138, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R::_ExprResult_10' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R, _ExprResult_11) == 0x000140, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R::_ExprResult_11' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R, _ExprResultStack_12) == 0x000158, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R::_ExprResultStack_12' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R
// 0x00E8 (0x00E8 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R final
{
public:
	struct Ftuple_L_Kany_Mtuple_L_R_Mint_R        __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0020)(Parm, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0020(0x0011)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<FVerseDynamicProperty_>                _ExprResult_0;                                     // 0x0038(0x0010)(ContainsInstancedReference)
	FOptionProperty_                              _ExprResultStack_1;                                // 0x0048(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FOptionProperty_                              _ExprResultStack_2;                                // 0x0058(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         _ExprResult_3;                                     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<FVerseDynamicProperty_>                __verse_0x00000000__2;                             // 0x0070(0x0010)(ContainsInstancedReference)
	TArray<FVerseDynamicProperty_>                _ForResult_4;                                      // 0x0080(0x0010)(ContainsInstancedReference)
	struct FVerseIntRange                         _ForIterable_5;                                    // 0x0090(0x0010)(NoDestructor)
	int64                                         _ExprResult_6;                                     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<FVerseDynamicProperty_>                __verse_0x00000000__5;                             // 0x00A8(0x0010)(ContainsInstancedReference)
	int64                                         __verse_0x98DC86C6_Index_6;                        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FVerseDynamicProperty_                        _ExprResult_7;                                     // 0x00C0(0x0010)(HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_8;                                // 0x00D0(0x0011)(HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R) == 0x0000E8, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R, RetVal) == 0x000020, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R::RetVal' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R, _ExprResult_0) == 0x000038, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R::_ExprResult_0' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R, _ExprResultStack_1) == 0x000048, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R::_ExprResultStack_1' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R, _ExprResultStack_2) == 0x000058, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R::_ExprResultStack_2' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R, _ExprResult_3) == 0x000068, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R::_ExprResult_3' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R, __verse_0x00000000__2) == 0x000070, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R::__verse_0x00000000__2' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R, _ForResult_4) == 0x000080, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R::_ForResult_4' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R, _ForIterable_5) == 0x000090, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R::_ForIterable_5' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R, _ExprResult_6) == 0x0000A0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R::_ExprResult_6' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R, __verse_0x00000000__5) == 0x0000A8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R::__verse_0x00000000__5' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R, __verse_0x98DC86C6_Index_6) == 0x0000B8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R::__verse_0x98DC86C6_Index_6' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R, _ExprResult_7) == 0x0000C0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R::_ExprResult_7' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R, _ExprResultStack_8) == 0x0000D0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R::_ExprResultStack_8' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R
// 0x00E8 (0x00E8 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R final
{
public:
	struct Ftuple_L_Kany_Mtuple_L_R_Mtuple_Lint_Mint_R_R __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0028)(Parm, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0028(0x0011)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<FVerseDynamicProperty_>                _ExprResult_0;                                     // 0x0040(0x0010)(ContainsInstancedReference)
	FOptionProperty_                              _ExprResultStack_1;                                // 0x0050(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FOptionProperty_                              _ExprResultStack_2;                                // 0x0060(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FOptionProperty_                              _ExprResultStack_3;                                // 0x0070(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         _ExprResult_4;                                     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<FVerseDynamicProperty_>                __verse_0x00000000__2;                             // 0x0088(0x0010)(ContainsInstancedReference)
	TArray<FVerseDynamicProperty_>                _ForResult_5;                                      // 0x0098(0x0010)(ContainsInstancedReference)
	struct FVerseIntRange                         _ForIterable_6;                                    // 0x00A8(0x0010)(NoDestructor)
	int64                                         __verse_0x98DC86C6_Index_5;                        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FVerseDynamicProperty_                        _ExprResult_7;                                     // 0x00C0(0x0010)(HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_8;                                // 0x00D0(0x0011)(HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R) == 0x0000E8, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R, RetVal) == 0x000028, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R::RetVal' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R, _ExprResult_0) == 0x000040, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R::_ExprResult_0' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R, _ExprResultStack_1) == 0x000050, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R::_ExprResultStack_1' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R, _ExprResultStack_2) == 0x000060, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R::_ExprResultStack_2' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R, _ExprResultStack_3) == 0x000070, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R::_ExprResultStack_3' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R, _ExprResult_4) == 0x000080, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R::_ExprResult_4' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R, __verse_0x00000000__2) == 0x000088, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R::__verse_0x00000000__2' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R, _ForResult_5) == 0x000098, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R::_ForResult_5' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R, _ForIterable_6) == 0x0000A8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R::_ForIterable_6' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R, __verse_0x98DC86C6_Index_5) == 0x0000B8, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R::__verse_0x98DC86C6_Index_5' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R, _ExprResult_7) == 0x0000C0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R::_ExprResult_7' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R, _ExprResultStack_8) == 0x0000D0, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R::_ExprResultStack_8' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RPow_L_Nfloat_M_Nfloat_R
// 0x0018 (0x0018 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RPow_L_Nfloat_M_Nfloat_R final
{
public:
	struct Verse::Ftuple_Lfloat_Mfloat_R          __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	double                                        RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RPow_L_Nfloat_M_Nfloat_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RPow_L_Nfloat_M_Nfloat_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RPow_L_Nfloat_M_Nfloat_R) == 0x000018, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RPow_L_Nfloat_M_Nfloat_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RPow_L_Nfloat_M_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RPow_L_Nfloat_M_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RPow_L_Nfloat_M_Nfloat_R, RetVal) == 0x000010, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RPow_L_Nfloat_M_Nfloat_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RPrint_L_N_Kchar_M_Nfloat_M_Ncolor_R
// 0x0040 (0x0040 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RPrint_L_N_Kchar_M_Nfloat_M_Ncolor_R final
{
public:
	struct Verse::Ftuple_L_Kchar_M_QDuration_Nfloat_20_3d_20_2e_2e_2e_M_QColor_Ncolor_20_3d_20_2e_2e_2e_R __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0040)(Parm, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RPrint_L_N_Kchar_M_Nfloat_M_Ncolor_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RPrint_L_N_Kchar_M_Nfloat_M_Ncolor_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RPrint_L_N_Kchar_M_Nfloat_M_Ncolor_R) == 0x000040, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RPrint_L_N_Kchar_M_Nfloat_M_Ncolor_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RPrint_L_N_Kchar_M_Nfloat_M_Ncolor_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RPrint_L_N_Kchar_M_Nfloat_M_Ncolor_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RQuotient_L_Nint_M_Nint_R
// 0x0020 (0x0020 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RQuotient_L_Nint_M_Nint_R final
{
public:
	struct Verse::Ftuple_Lint_Mint_R              __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0010(0x0009)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RQuotient_L_Nint_M_Nint_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RQuotient_L_Nint_M_Nint_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RQuotient_L_Nint_M_Nint_R) == 0x000020, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RQuotient_L_Nint_M_Nint_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RQuotient_L_Nint_M_Nint_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RQuotient_L_Nint_M_Nint_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RQuotient_L_Nint_M_Nint_R, RetVal) == 0x000010, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RQuotient_L_Nint_M_Nint_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RRound_L_Nfloat_R
// 0x0018 (0x0018 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RRound_L_Nfloat_R final
{
public:
	double                                        __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0008(0x0009)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RRound_L_Nfloat_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RRound_L_Nfloat_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RRound_L_Nfloat_R) == 0x000018, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RRound_L_Nfloat_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RRound_L_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RRound_L_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RRound_L_Nfloat_R, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RRound_L_Nfloat_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nfloat_R
// 0x0078 (0x0078 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nfloat_R final
{
public:
	double                                        __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FVerseDynamicProperty_                        InvokeResultDummy_0;                               // 0x0010(0x0010)(HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_1;                                // 0x0020(0x0011)(HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseDynamicProperty_                        _ExprResult_2;                                     // 0x0038(0x0010)(HasGetValueTypeHash)
	FVerseDynamicProperty_                        _ExprResult_3;                                     // 0x0048(0x0010)(HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_4;                                // 0x0058(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FOptionProperty_                              _ExprResultStack_5;                                // 0x0068(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nfloat_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nfloat_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nfloat_R) == 0x000078, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nfloat_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nfloat_R, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nfloat_R::RetVal' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nfloat_R, InvokeResultDummy_0) == 0x000010, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nfloat_R::InvokeResultDummy_0' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nfloat_R, _ExprResultStack_1) == 0x000020, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nfloat_R::_ExprResultStack_1' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nfloat_R, _ExprResult_2) == 0x000038, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nfloat_R::_ExprResult_2' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nfloat_R, _ExprResult_3) == 0x000048, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nfloat_R::_ExprResult_3' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nfloat_R, _ExprResultStack_4) == 0x000058, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nfloat_R::_ExprResultStack_4' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nfloat_R, _ExprResultStack_5) == 0x000068, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nfloat_R::_ExprResultStack_5' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nint_R
// 0x0030 (0x0030 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nint_R final
{
public:
	int64                                         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FOptionProperty_                              _ExprResultStack_0;                                // 0x0010(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FOptionProperty_                              _ExprResultStack_1;                                // 0x0020(0x0009)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nint_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nint_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nint_R) == 0x000030, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nint_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nint_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nint_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nint_R, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nint_R::RetVal' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nint_R, _ExprResultStack_0) == 0x000010, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nint_R::_ExprResultStack_0' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nint_R, _ExprResultStack_1) == 0x000020, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nint_R::_ExprResultStack_1' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_Rsignalable_L_Nany_R
// 0x0010 (0x0010 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_Rsignalable_L_Nany_R final
{
public:
	class UClass*                                 __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(ExportObject, Parm, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UClass*                                 RetVal;                                            // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_Rsignalable_L_Nany_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_Rsignalable_L_Nany_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_Rsignalable_L_Nany_R) == 0x000010, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_Rsignalable_L_Nany_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Rsignalable_L_Nany_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Rsignalable_L_Nany_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Rsignalable_L_Nany_R, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Rsignalable_L_Nany_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RSin_L_Nfloat_R
// 0x0010 (0x0010 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RSin_L_Nfloat_R final
{
public:
	double                                        __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RSin_L_Nfloat_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RSin_L_Nfloat_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RSin_L_Nfloat_R) == 0x000010, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RSin_L_Nfloat_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RSin_L_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RSin_L_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RSin_L_Nfloat_R, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RSin_L_Nfloat_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RSinh_L_Nfloat_R
// 0x0010 (0x0010 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RSinh_L_Nfloat_R final
{
public:
	double                                        __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RSinh_L_Nfloat_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RSinh_L_Nfloat_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RSinh_L_Nfloat_R) == 0x000010, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RSinh_L_Nfloat_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RSinh_L_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RSinh_L_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RSinh_L_Nfloat_R, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RSinh_L_Nfloat_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RSqrt_L_Nfloat_R
// 0x0010 (0x0010 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RSqrt_L_Nfloat_R final
{
public:
	double                                        __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RSqrt_L_Nfloat_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RSqrt_L_Nfloat_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RSqrt_L_Nfloat_R) == 0x000010, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RSqrt_L_Nfloat_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RSqrt_L_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RSqrt_L_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RSqrt_L_Nfloat_R, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RSqrt_L_Nfloat_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_Rsubscribable
// 0x0020 (0x0020 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_Rsubscribable final
{
public:
	struct Verse::Ftuple_L_R                      __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 RetVal;                                            // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FVerseFunctionProperty_                       _Callee_0;                                         // 0x0010(0x0010)(HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_Rsubscribable) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_Rsubscribable");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_Rsubscribable) == 0x000020, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_Rsubscribable");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Rsubscribable, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Rsubscribable::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Rsubscribable, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Rsubscribable::RetVal' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Rsubscribable, _Callee_0) == 0x000010, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Rsubscribable::_Callee_0' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_Rsubscribable_L_Nany_R
// 0x0010 (0x0010 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_Rsubscribable_L_Nany_R final
{
public:
	class UClass*                                 __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(ExportObject, Parm, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UClass*                                 RetVal;                                            // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_Rsubscribable_L_Nany_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_Rsubscribable_L_Nany_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_Rsubscribable_L_Nany_R) == 0x000010, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_Rsubscribable_L_Nany_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Rsubscribable_L_Nany_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Rsubscribable_L_Nany_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_Rsubscribable_L_Nany_R, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_Rsubscribable_L_Nany_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RTan_L_Nfloat_R
// 0x0010 (0x0010 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RTan_L_Nfloat_R final
{
public:
	double                                        __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RTan_L_Nfloat_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RTan_L_Nfloat_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RTan_L_Nfloat_R) == 0x000010, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RTan_L_Nfloat_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RTan_L_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RTan_L_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RTan_L_Nfloat_R, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RTan_L_Nfloat_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RTanh_L_Nfloat_R
// 0x0010 (0x0010 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RTanh_L_Nfloat_R final
{
public:
	double                                        __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RTanh_L_Nfloat_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RTanh_L_Nfloat_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RTanh_L_Nfloat_R) == 0x000010, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RTanh_L_Nfloat_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RTanh_L_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RTanh_L_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RTanh_L_Nfloat_R, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RTanh_L_Nfloat_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RToString_L_N_Kchar_R
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_N_Kchar_R final
{
public:
	FVerseStringProperty_                         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	FVerseStringProperty_                         RetVal;                                            // 0x0010(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_N_Kchar_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_N_Kchar_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_N_Kchar_R) == 0x000020, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_N_Kchar_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_N_Kchar_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_N_Kchar_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_N_Kchar_R, RetVal) == 0x000010, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_N_Kchar_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RToString_L_Nchar32_R
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nchar32_R final
{
public:
	int32                                         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseStringProperty_                         RetVal;                                            // 0x0008(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nchar32_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nchar32_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nchar32_R) == 0x000018, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nchar32_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nchar32_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nchar32_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nchar32_R, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nchar32_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RToString_L_Nchar_R
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nchar_R final
{
public:
	uint8                                         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseStringProperty_                         RetVal;                                            // 0x0008(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nchar_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nchar_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nchar_R) == 0x000018, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nchar_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nchar_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nchar_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nchar_R, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nchar_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RToString_L_Nfloat_R
// 0x0018 (0x0018 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nfloat_R final
{
public:
	double                                        __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FVerseStringProperty_                         RetVal;                                            // 0x0008(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nfloat_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nfloat_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nfloat_R) == 0x000018, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nfloat_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nfloat_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nfloat_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nfloat_R, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nfloat_R::RetVal' has a wrong offset!");

// Function Verse.Verse._L_2fVerse_2eorg_2fVerse_N_RToString_L_Nint_R
// 0x0018 (0x0018 - 0x0000)
struct Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nint_R final
{
public:
	int64                                         __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FVerseStringProperty_                         RetVal;                                            // 0x0008(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nint_R) == 0x000008, "Wrong alignment on Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nint_R");
static_assert(sizeof(Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nint_R) == 0x000018, "Wrong size on Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nint_R");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nint_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nint_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nint_R, RetVal) == 0x000008, "Member 'Verse__L_2fVerse_2eorg_2fVerse_N_RToString_L_Nint_R::RetVal' has a wrong offset!");

// Function Verse.Verse.Verse_locale$Factory
// 0x0001 (0x0001 - 0x0000)
struct Verse_Verse_locale_Factory final
{
public:
	struct FVerse_locale                          RetVal;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Verse_Verse_locale_Factory) == 0x000001, "Wrong alignment on Verse_Verse_locale_Factory");
static_assert(sizeof(Verse_Verse_locale_Factory) == 0x000001, "Wrong size on Verse_Verse_locale_Factory");
static_assert(offsetof(Verse_Verse_locale_Factory, RetVal) == 0x000000, "Member 'Verse_Verse_locale_Factory::RetVal' has a wrong offset!");

// Function Verse.Verse_event._L_2fVerse_2eorg_2fVerse_2fevent_2fevent_Lt_R_N_RGetAwaitCount
// 0x0010 (0x0010 - 0x0000)
struct Verse_event__L_2fVerse_2eorg_2fVerse_2fevent_2fevent_Lt_R_N_RGetAwaitCount final
{
public:
	struct Verse::Ftuple_L_R                      __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse_event__L_2fVerse_2eorg_2fVerse_2fevent_2fevent_Lt_R_N_RGetAwaitCount) == 0x000008, "Wrong alignment on Verse_event__L_2fVerse_2eorg_2fVerse_2fevent_2fevent_Lt_R_N_RGetAwaitCount");
static_assert(sizeof(Verse_event__L_2fVerse_2eorg_2fVerse_2fevent_2fevent_Lt_R_N_RGetAwaitCount) == 0x000010, "Wrong size on Verse_event__L_2fVerse_2eorg_2fVerse_2fevent_2fevent_Lt_R_N_RGetAwaitCount");
static_assert(offsetof(Verse_event__L_2fVerse_2eorg_2fVerse_2fevent_2fevent_Lt_R_N_RGetAwaitCount, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse_event__L_2fVerse_2eorg_2fVerse_2fevent_2fevent_Lt_R_N_RGetAwaitCount::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse_event__L_2fVerse_2eorg_2fVerse_2fevent_2fevent_Lt_R_N_RGetAwaitCount, RetVal) == 0x000008, "Member 'Verse_event__L_2fVerse_2eorg_2fVerse_2fevent_2fevent_Lt_R_N_RGetAwaitCount::RetVal' has a wrong offset!");

// Function Verse.Verse_event._L_2fVerse_2eorg_2fVerse_2fsignalable_2fsignalable_Lpayload_R_N_RSignal_L_Npayload_R
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) Verse_event__L_2fVerse_2eorg_2fVerse_2fsignalable_2fsignalable_Lpayload_R_N_RSignal_L_Npayload_R final
{
public:
	FVerseDynamicProperty_                        __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
};
static_assert(alignof(Verse_event__L_2fVerse_2eorg_2fVerse_2fsignalable_2fsignalable_Lpayload_R_N_RSignal_L_Npayload_R) == 0x000008, "Wrong alignment on Verse_event__L_2fVerse_2eorg_2fVerse_2fsignalable_2fsignalable_Lpayload_R_N_RSignal_L_Npayload_R");
static_assert(sizeof(Verse_event__L_2fVerse_2eorg_2fVerse_2fsignalable_2fsignalable_Lpayload_R_N_RSignal_L_Npayload_R) == 0x000010, "Wrong size on Verse_event__L_2fVerse_2eorg_2fVerse_2fsignalable_2fsignalable_Lpayload_R_N_RSignal_L_Npayload_R");
static_assert(offsetof(Verse_event__L_2fVerse_2eorg_2fVerse_2fsignalable_2fsignalable_Lpayload_R_N_RSignal_L_Npayload_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse_event__L_2fVerse_2eorg_2fVerse_2fsignalable_2fsignalable_Lpayload_R_N_RSignal_L_Npayload_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function Verse.Verse_event.Await
// 0x0028 (0x0028 - 0x0000)
struct Verse_event_Await final
{
public:
	class UConcurrency_task*                      __verse_0xC1E81372_CallingTask;                    // 0x0000(0x0008)(ExportObject, Parm, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int64                                         __verse_0xA3A00DDB_CallerResumeState;              // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         __verse_0x2AC0E4D8_CallerCancelState;              // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct Verse::Ftuple_L_R                      __verse_0xB2CDDD72_Argument;                       // 0x0018(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UConcurrency_task*                      RetVal;                                            // 0x0020(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
};
static_assert(alignof(Verse_event_Await) == 0x000008, "Wrong alignment on Verse_event_Await");
static_assert(sizeof(Verse_event_Await) == 0x000028, "Wrong size on Verse_event_Await");
static_assert(offsetof(Verse_event_Await, __verse_0xC1E81372_CallingTask) == 0x000000, "Member 'Verse_event_Await::__verse_0xC1E81372_CallingTask' has a wrong offset!");
static_assert(offsetof(Verse_event_Await, __verse_0xA3A00DDB_CallerResumeState) == 0x000008, "Member 'Verse_event_Await::__verse_0xA3A00DDB_CallerResumeState' has a wrong offset!");
static_assert(offsetof(Verse_event_Await, __verse_0x2AC0E4D8_CallerCancelState) == 0x000010, "Member 'Verse_event_Await::__verse_0x2AC0E4D8_CallerCancelState' has a wrong offset!");
static_assert(offsetof(Verse_event_Await, __verse_0xB2CDDD72_Argument) == 0x000018, "Member 'Verse_event_Await::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse_event_Await, RetVal) == 0x000020, "Member 'Verse_event_Await::RetVal' has a wrong offset!");

// Function Verse.Verse_invalidatable._L_2fVerse_2eorg_2fVerse_2finvalidatable_N_RIsValid
// 0x0003 (0x0003 - 0x0000)
struct Verse_invalidatable__L_2fVerse_2eorg_2fVerse_2finvalidatable_N_RIsValid final
{
public:
	struct Verse::Ftuple_L_R                      __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, HasGetValueTypeHash)
	FOptionProperty_                              RetVal;                                            // 0x0001(0x0002)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Verse_invalidatable__L_2fVerse_2eorg_2fVerse_2finvalidatable_N_RIsValid) == 0x000001, "Wrong alignment on Verse_invalidatable__L_2fVerse_2eorg_2fVerse_2finvalidatable_N_RIsValid");
static_assert(sizeof(Verse_invalidatable__L_2fVerse_2eorg_2fVerse_2finvalidatable_N_RIsValid) == 0x000003, "Wrong size on Verse_invalidatable__L_2fVerse_2eorg_2fVerse_2finvalidatable_N_RIsValid");
static_assert(offsetof(Verse_invalidatable__L_2fVerse_2eorg_2fVerse_2finvalidatable_N_RIsValid, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse_invalidatable__L_2fVerse_2eorg_2fVerse_2finvalidatable_N_RIsValid::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse_invalidatable__L_2fVerse_2eorg_2fVerse_2finvalidatable_N_RIsValid, RetVal) == 0x000001, "Member 'Verse_invalidatable__L_2fVerse_2eorg_2fVerse_2finvalidatable_N_RIsValid::RetVal' has a wrong offset!");

// Function Verse.Verse_localizable_float._L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R
// 0x0040 (0x0040 - 0x0000)
struct Verse_localizable_float__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R final
{
public:
	struct FVerse_locale                          __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseStringProperty_                         RetVal;                                            // 0x0008(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
	FVerseFunctionProperty_                       _Callee_0;                                         // 0x0018(0x0010)(HasGetValueTypeHash)
	struct Ftuple_Lfloat_M_QWhere_Nlocale_R       _ExprResult_1;                                     // 0x0028(0x0010)(HasGetValueTypeHash)
	FOptionProperty_                              _ExprResult_2;                                     // 0x0038(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Verse_localizable_float__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R) == 0x000008, "Wrong alignment on Verse_localizable_float__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R");
static_assert(sizeof(Verse_localizable_float__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R) == 0x000040, "Wrong size on Verse_localizable_float__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R");
static_assert(offsetof(Verse_localizable_float__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse_localizable_float__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse_localizable_float__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R, RetVal) == 0x000008, "Member 'Verse_localizable_float__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R::RetVal' has a wrong offset!");
static_assert(offsetof(Verse_localizable_float__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R, _Callee_0) == 0x000018, "Member 'Verse_localizable_float__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R::_Callee_0' has a wrong offset!");
static_assert(offsetof(Verse_localizable_float__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R, _ExprResult_1) == 0x000028, "Member 'Verse_localizable_float__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R::_ExprResult_1' has a wrong offset!");
static_assert(offsetof(Verse_localizable_float__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R, _ExprResult_2) == 0x000038, "Member 'Verse_localizable_float__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R::_ExprResult_2' has a wrong offset!");

// Function Verse.Verse_localizable_int._L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R
// 0x0040 (0x0040 - 0x0000)
struct Verse_localizable_int__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R final
{
public:
	struct FVerse_locale                          __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseStringProperty_                         RetVal;                                            // 0x0008(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
	FVerseFunctionProperty_                       _Callee_0;                                         // 0x0018(0x0010)(HasGetValueTypeHash)
	struct Ftuple_Lint_M_QWhere_Nlocale_R         _ExprResult_1;                                     // 0x0028(0x0010)(HasGetValueTypeHash)
	FOptionProperty_                              _ExprResult_2;                                     // 0x0038(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Verse_localizable_int__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R) == 0x000008, "Wrong alignment on Verse_localizable_int__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R");
static_assert(sizeof(Verse_localizable_int__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R) == 0x000040, "Wrong size on Verse_localizable_int__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R");
static_assert(offsetof(Verse_localizable_int__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse_localizable_int__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse_localizable_int__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R, RetVal) == 0x000008, "Member 'Verse_localizable_int__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R::RetVal' has a wrong offset!");
static_assert(offsetof(Verse_localizable_int__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R, _Callee_0) == 0x000018, "Member 'Verse_localizable_int__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R::_Callee_0' has a wrong offset!");
static_assert(offsetof(Verse_localizable_int__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R, _ExprResult_1) == 0x000028, "Member 'Verse_localizable_int__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R::_ExprResult_1' has a wrong offset!");
static_assert(offsetof(Verse_localizable_int__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R, _ExprResult_2) == 0x000038, "Member 'Verse_localizable_int__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R::_ExprResult_2' has a wrong offset!");

// Function Verse.Verse_localizable_value._L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) Verse_localizable_value__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R final
{
public:
	struct FVerse_locale                          __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseStringProperty_                         RetVal;                                            // 0x0008(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(Verse_localizable_value__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R) == 0x000008, "Wrong alignment on Verse_localizable_value__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R");
static_assert(sizeof(Verse_localizable_value__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R) == 0x000018, "Wrong size on Verse_localizable_value__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R");
static_assert(offsetof(Verse_localizable_value__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse_localizable_value__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse_localizable_value__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R, RetVal) == 0x000008, "Member 'Verse_localizable_value__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R::RetVal' has a wrong offset!");

// Function Verse.Verse_signalable._L_2fVerse_2eorg_2fVerse_2fsignalable_2fsignalable_Lpayload_R_N_RSignal_L_Npayload_R
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) Verse_signalable__L_2fVerse_2eorg_2fVerse_2fsignalable_2fsignalable_Lpayload_R_N_RSignal_L_Npayload_R final
{
public:
	FVerseDynamicProperty_                        __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
};
static_assert(alignof(Verse_signalable__L_2fVerse_2eorg_2fVerse_2fsignalable_2fsignalable_Lpayload_R_N_RSignal_L_Npayload_R) == 0x000008, "Wrong alignment on Verse_signalable__L_2fVerse_2eorg_2fVerse_2fsignalable_2fsignalable_Lpayload_R_N_RSignal_L_Npayload_R");
static_assert(sizeof(Verse_signalable__L_2fVerse_2eorg_2fVerse_2fsignalable_2fsignalable_Lpayload_R_N_RSignal_L_Npayload_R) == 0x000010, "Wrong size on Verse_signalable__L_2fVerse_2eorg_2fVerse_2fsignalable_2fsignalable_Lpayload_R_N_RSignal_L_Npayload_R");
static_assert(offsetof(Verse_signalable__L_2fVerse_2eorg_2fVerse_2fsignalable_2fsignalable_Lpayload_R_N_RSignal_L_Npayload_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse_signalable__L_2fVerse_2eorg_2fVerse_2fsignalable_2fsignalable_Lpayload_R_N_RSignal_L_Npayload_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");

// Function Verse.Verse_subscribable._L_2fVerse_2eorg_2fVerse_2fsubscribable_2fsubscribable_Lt_R_N_RSubscribe_L_Nt_Tvoid_R
// 0x0018 (0x0018 - 0x0000)
struct Verse_subscribable__L_2fVerse_2eorg_2fVerse_2fsubscribable_2fsubscribable_Lt_R_N_RSubscribe_L_Nt_Tvoid_R final
{
public:
	FVerseFunctionProperty_                       __verse_0xB2CDDD72_Argument;                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	class UObject*                                RetVal;                                            // 0x0010(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
};
static_assert(alignof(Verse_subscribable__L_2fVerse_2eorg_2fVerse_2fsubscribable_2fsubscribable_Lt_R_N_RSubscribe_L_Nt_Tvoid_R) == 0x000008, "Wrong alignment on Verse_subscribable__L_2fVerse_2eorg_2fVerse_2fsubscribable_2fsubscribable_Lt_R_N_RSubscribe_L_Nt_Tvoid_R");
static_assert(sizeof(Verse_subscribable__L_2fVerse_2eorg_2fVerse_2fsubscribable_2fsubscribable_Lt_R_N_RSubscribe_L_Nt_Tvoid_R) == 0x000018, "Wrong size on Verse_subscribable__L_2fVerse_2eorg_2fVerse_2fsubscribable_2fsubscribable_Lt_R_N_RSubscribe_L_Nt_Tvoid_R");
static_assert(offsetof(Verse_subscribable__L_2fVerse_2eorg_2fVerse_2fsubscribable_2fsubscribable_Lt_R_N_RSubscribe_L_Nt_Tvoid_R, __verse_0xB2CDDD72_Argument) == 0x000000, "Member 'Verse_subscribable__L_2fVerse_2eorg_2fVerse_2fsubscribable_2fsubscribable_Lt_R_N_RSubscribe_L_Nt_Tvoid_R::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Verse_subscribable__L_2fVerse_2eorg_2fVerse_2fsubscribable_2fsubscribable_Lt_R_N_RSubscribe_L_Nt_Tvoid_R, RetVal) == 0x000010, "Member 'Verse_subscribable__L_2fVerse_2eorg_2fVerse_2fsubscribable_2fsubscribable_Lt_R_N_RSubscribe_L_Nt_Tvoid_R::RetVal' has a wrong offset!");

}

