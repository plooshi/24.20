#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_Tethered

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Athena_Tethered.GA_Athena_Tethered_C
// 0x0090 (0x0BB8 - 0x0B28)
class UGA_Athena_Tethered_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B28(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FActiveGameplayEffectHandle            GE_TetheredHandle;                                 // 0x0B30(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        OwningFortPlayerPawn;                              // 0x0B38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        maxSpeedToPlayGCN;                                 // 0x0B40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GCTagPlayerLand;                                   // 0x0B48(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4C[0x4];                                      // 0x0B4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 StructureDamageGE;                                 // 0x0B50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SmashGC;                                           // 0x0B58(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5C[0x4];                                      // 0x0B5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         BreakStructuresOnTetherEnabled;                    // 0x0B60(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         BreakStructuresOnTetherRange;                      // 0x0B88(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           Event_FishingForceEnd;                             // 0x0BB0(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BreakBuildingsAtPlayerInDirectionOfTether();
	void BreakNearbyStructures(const struct FVector& ForwardVector, double OffsetForward);
	void ExecuteUbergraph_GA_Athena_Tethered(int32 EntryPoint);
	void K2_ActivateAbility();
	void K2_OnEndAbility(bool bWasCancelled);
	void MovementModeChangedDelegate_Event_0(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Athena_Tethered_C">();
	}
	static class UGA_Athena_Tethered_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Athena_Tethered_C>();
	}
};
static_assert(alignof(UGA_Athena_Tethered_C) == 0x000008, "Wrong alignment on UGA_Athena_Tethered_C");
static_assert(sizeof(UGA_Athena_Tethered_C) == 0x000BB8, "Wrong size on UGA_Athena_Tethered_C");
static_assert(offsetof(UGA_Athena_Tethered_C, UberGraphFrame) == 0x000B28, "Member 'UGA_Athena_Tethered_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Tethered_C, GE_TetheredHandle) == 0x000B30, "Member 'UGA_Athena_Tethered_C::GE_TetheredHandle' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Tethered_C, OwningFortPlayerPawn) == 0x000B38, "Member 'UGA_Athena_Tethered_C::OwningFortPlayerPawn' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Tethered_C, maxSpeedToPlayGCN) == 0x000B40, "Member 'UGA_Athena_Tethered_C::maxSpeedToPlayGCN' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Tethered_C, GCTagPlayerLand) == 0x000B48, "Member 'UGA_Athena_Tethered_C::GCTagPlayerLand' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Tethered_C, StructureDamageGE) == 0x000B50, "Member 'UGA_Athena_Tethered_C::StructureDamageGE' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Tethered_C, SmashGC) == 0x000B58, "Member 'UGA_Athena_Tethered_C::SmashGC' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Tethered_C, BreakStructuresOnTetherEnabled) == 0x000B60, "Member 'UGA_Athena_Tethered_C::BreakStructuresOnTetherEnabled' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Tethered_C, BreakStructuresOnTetherRange) == 0x000B88, "Member 'UGA_Athena_Tethered_C::BreakStructuresOnTetherRange' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Tethered_C, Event_FishingForceEnd) == 0x000BB0, "Member 'UGA_Athena_Tethered_C::Event_FishingForceEnd' has a wrong offset!");

}

