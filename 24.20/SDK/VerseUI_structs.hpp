#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerseUI

#include "Basic.hpp"

#include "EpicGamesTemporary_0_structs.hpp"


namespace SDK
{

// VerseEnum VerseUI.UI_horizontal_alignment
// NumValues: 0x0005
enum class EUI_horizontal_alignment : uint8
{
	Center                                   = 0,
	Left                                     = 1,
	Right                                    = 2,
	Fill                                     = 3,
	UI_horizontal_MAX                        = 4,
};

// VerseEnum VerseUI.UI_image_tile
// NumValues: 0x0005
enum class EUI_image_tile : uint8
{
	Stretch                                  = 0,
	Tile                                     = 1,
	TileHorizontalStretchVertical            = 2,
	StretchHorizontalTileVertical            = 3,
	UI_image_MAX                             = 4,
};

// VerseEnum VerseUI.UI_orientation
// NumValues: 0x0003
enum class EUI_orientation : uint8
{
	Horizontal                               = 0,
	Vertical                                 = 1,
	UI_MAX                                   = 2,
};

// VerseEnum VerseUI.UI_text_justification
// NumValues: 0x0004
enum class EUI_text_justification : uint8
{
	Left                                     = 0,
	Center                                   = 1,
	Right                                    = 2,
	UI_text_MAX                              = 3,
};

// VerseEnum VerseUI.UI_text_overflow_policy
// NumValues: 0x0003
enum class EUI_text_overflow_policy : uint8
{
	Clip                                     = 0,
	Ellipsis                                 = 1,
	UI_text_overflow_MAX                     = 2,
};

// VerseEnum VerseUI.UI_ui_input_mode
// NumValues: 0x0003
enum class EUI_ui_input_mode : uint8
{
	None                                     = 0,
	All                                      = 1,
	UI_ui_input_MAX                          = 2,
};

// VerseEnum VerseUI.UI_vertical_alignment
// NumValues: 0x0005
enum class EUI_vertical_alignment : uint8
{
	Center                                   = 0,
	Top                                      = 1,
	Bottom                                   = 2,
	Fill                                     = 3,
	UI_vertical_MAX                          = 4,
};

// VerseEnum VerseUI.UI_widget_visibility
// NumValues: 0x0004
enum class EUI_widget_visibility : uint8
{
	Visible                                  = 0,
	Collapsed                                = 1,
	Hidden                                   = 2,
	UI_widget_MAX                            = 3,
};

// VerseStruct VerseUI.tuple_L_Kchar_M_Kchar_M_5b_Kchar_5dlocalizable__value_R
// 0x0070 (0x0070 - 0x0000)
struct VerseUI::Ftuple_L_Kchar_M_Kchar_M_5b_Kchar_5dlocalizable__value_R final
{
public:
	FVerseStringProperty_                         __verse_0x18E3F084_Elem0;                          // 0x0000(0x0010)(InstancedReference, HasGetValueTypeHash)
	FVerseStringProperty_                         __verse_0x7D844C3C_Elem1;                          // 0x0010(0x0010)(InstancedReference, HasGetValueTypeHash)
	TMap<FVerseStringProperty_, class UObject*>   __verse_0x932BF92E_Elem2;                          // 0x0020(0x0050)(InstancedReference, ContainsInstancedReference)
};
static_assert(alignof(VerseUI::Ftuple_L_Kchar_M_Kchar_M_5b_Kchar_5dlocalizable__value_R) == 0x000008, "Wrong alignment on VerseUI::Ftuple_L_Kchar_M_Kchar_M_5b_Kchar_5dlocalizable__value_R");
static_assert(sizeof(VerseUI::Ftuple_L_Kchar_M_Kchar_M_5b_Kchar_5dlocalizable__value_R) == 0x000070, "Wrong size on VerseUI::Ftuple_L_Kchar_M_Kchar_M_5b_Kchar_5dlocalizable__value_R");
static_assert(offsetof(VerseUI::Ftuple_L_Kchar_M_Kchar_M_5b_Kchar_5dlocalizable__value_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'VerseUI::Ftuple_L_Kchar_M_Kchar_M_5b_Kchar_5dlocalizable__value_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(VerseUI::Ftuple_L_Kchar_M_Kchar_M_5b_Kchar_5dlocalizable__value_R, __verse_0x7D844C3C_Elem1) == 0x000010, "Member 'VerseUI::Ftuple_L_Kchar_M_Kchar_M_5b_Kchar_5dlocalizable__value_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(VerseUI::Ftuple_L_Kchar_M_Kchar_M_5b_Kchar_5dlocalizable__value_R, __verse_0x932BF92E_Elem2) == 0x000020, "Member 'VerseUI::Ftuple_L_Kchar_M_Kchar_M_5b_Kchar_5dlocalizable__value_R::__verse_0x932BF92E_Elem2' has a wrong offset!");

// VerseStruct VerseUI.tuple_L_R
// 0x0001 (0x0001 - 0x0000)
struct VerseUI::Ftuple_L_R final
{
public:
	uint8                                         _StructPaddingDummy;                               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseUI::Ftuple_L_R) == 0x000001, "Wrong alignment on VerseUI::Ftuple_L_R");
static_assert(sizeof(VerseUI::Ftuple_L_R) == 0x000001, "Wrong size on VerseUI::Ftuple_L_R");
static_assert(offsetof(VerseUI::Ftuple_L_R, _StructPaddingDummy) == 0x000000, "Member 'VerseUI::Ftuple_L_R::_StructPaddingDummy' has a wrong offset!");

// VerseStruct VerseUI.UI_player_ui_slot
// 0x0010 (0x0010 - 0x0000)
struct FUI_player_ui_slot final
{
public:
	int64                                         __verse_0xEB688892_ZOrder;                         // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUI_ui_input_mode                             __verse_0xF0FC54F2_InputMode;                      // 0x0008(0x0001)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FUI_player_ui_slot) == 0x000008, "Wrong alignment on FUI_player_ui_slot");
static_assert(sizeof(FUI_player_ui_slot) == 0x000010, "Wrong size on FUI_player_ui_slot");
static_assert(offsetof(FUI_player_ui_slot, __verse_0xEB688892_ZOrder) == 0x000000, "Member 'FUI_player_ui_slot::__verse_0xEB688892_ZOrder' has a wrong offset!");
static_assert(offsetof(FUI_player_ui_slot, __verse_0xF0FC54F2_InputMode) == 0x000008, "Member 'FUI_player_ui_slot::__verse_0xF0FC54F2_InputMode' has a wrong offset!");

// VerseStruct VerseUI.tuple_Lwidget_Mplayer__ui__slot_R
// 0x0018 (0x0018 - 0x0000)
struct Ftuple_Lwidget_Mplayer__ui__slot_R final
{
public:
	class UUI_widget*                             __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FUI_player_ui_slot                     __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0010)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ftuple_Lwidget_Mplayer__ui__slot_R) == 0x000008, "Wrong alignment on Ftuple_Lwidget_Mplayer__ui__slot_R");
static_assert(sizeof(Ftuple_Lwidget_Mplayer__ui__slot_R) == 0x000018, "Wrong size on Ftuple_Lwidget_Mplayer__ui__slot_R");
static_assert(offsetof(Ftuple_Lwidget_Mplayer__ui__slot_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lwidget_Mplayer__ui__slot_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lwidget_Mplayer__ui__slot_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Lwidget_Mplayer__ui__slot_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// VerseStruct VerseUI.tuple_Lwidget_Mvector2_M_QSize_Nvector2_20_3d_20_2e_2e_2e_M_QZOrder_Ntype_7b__X_Nint_20where_200_20_3c_3d_20__X_M_20__X_20_3c_3d_202147483647_7d_20_3d_20_2e_2e_2e_M_QAlignment_Nvector2_20_3d_20_2e_2e_2e_R
// 0x0058 (0x0058 - 0x0000)
struct Ftuple_Lwidget_Mvector2_M_QSize_Nvector2_20_3d_20_2e_2e_2e_M_QZOrder_Ntype_7b__X_Nint_20where_200_20_3c_3d_20__X_M_20__X_20_3c_3d_202147483647_7d_20_3d_20_2e_2e_2e_M_QAlignment_Nvector2_20_3d_20_2e_2e_2e_R final
{
public:
	class UUI_widget*                             __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSpatialMath_vector2                   __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0010)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	FOptionProperty_                              __verse_0x932BF92E_Elem2;                          // 0x0018(0x0011)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FOptionProperty_                              __verse_0xF64C4596_Elem3;                          // 0x0030(0x0009)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FOptionProperty_                              __verse_0x4F74920B_Elem4;                          // 0x0040(0x0011)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Ftuple_Lwidget_Mvector2_M_QSize_Nvector2_20_3d_20_2e_2e_2e_M_QZOrder_Ntype_7b__X_Nint_20where_200_20_3c_3d_20__X_M_20__X_20_3c_3d_202147483647_7d_20_3d_20_2e_2e_2e_M_QAlignment_Nvector2_20_3d_20_2e_2e_2e_R) == 0x000008, "Wrong alignment on Ftuple_Lwidget_Mvector2_M_QSize_Nvector2_20_3d_20_2e_2e_2e_M_QZOrder_Ntype_7b__X_Nint_20where_200_20_3c_3d_20__X_M_20__X_20_3c_3d_202147483647_7d_20_3d_20_2e_2e_2e_M_QAlignment_Nvector2_20_3d_20_2e_2e_2e_R");
static_assert(sizeof(Ftuple_Lwidget_Mvector2_M_QSize_Nvector2_20_3d_20_2e_2e_2e_M_QZOrder_Ntype_7b__X_Nint_20where_200_20_3c_3d_20__X_M_20__X_20_3c_3d_202147483647_7d_20_3d_20_2e_2e_2e_M_QAlignment_Nvector2_20_3d_20_2e_2e_2e_R) == 0x000058, "Wrong size on Ftuple_Lwidget_Mvector2_M_QSize_Nvector2_20_3d_20_2e_2e_2e_M_QZOrder_Ntype_7b__X_Nint_20where_200_20_3c_3d_20__X_M_20__X_20_3c_3d_202147483647_7d_20_3d_20_2e_2e_2e_M_QAlignment_Nvector2_20_3d_20_2e_2e_2e_R");
static_assert(offsetof(Ftuple_Lwidget_Mvector2_M_QSize_Nvector2_20_3d_20_2e_2e_2e_M_QZOrder_Ntype_7b__X_Nint_20where_200_20_3c_3d_20__X_M_20__X_20_3c_3d_202147483647_7d_20_3d_20_2e_2e_2e_M_QAlignment_Nvector2_20_3d_20_2e_2e_2e_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lwidget_Mvector2_M_QSize_Nvector2_20_3d_20_2e_2e_2e_M_QZOrder_Ntype_7b__X_Nint_20where_200_20_3c_3d_20__X_M_20__X_20_3c_3d_202147483647_7d_20_3d_20_2e_2e_2e_M_QAlignment_Nvector2_20_3d_20_2e_2e_2e_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lwidget_Mvector2_M_QSize_Nvector2_20_3d_20_2e_2e_2e_M_QZOrder_Ntype_7b__X_Nint_20where_200_20_3c_3d_20__X_M_20__X_20_3c_3d_202147483647_7d_20_3d_20_2e_2e_2e_M_QAlignment_Nvector2_20_3d_20_2e_2e_2e_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'Ftuple_Lwidget_Mvector2_M_QSize_Nvector2_20_3d_20_2e_2e_2e_M_QZOrder_Ntype_7b__X_Nint_20where_200_20_3c_3d_20__X_M_20__X_20_3c_3d_202147483647_7d_20_3d_20_2e_2e_2e_M_QAlignment_Nvector2_20_3d_20_2e_2e_2e_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(Ftuple_Lwidget_Mvector2_M_QSize_Nvector2_20_3d_20_2e_2e_2e_M_QZOrder_Ntype_7b__X_Nint_20where_200_20_3c_3d_20__X_M_20__X_20_3c_3d_202147483647_7d_20_3d_20_2e_2e_2e_M_QAlignment_Nvector2_20_3d_20_2e_2e_2e_R, __verse_0x932BF92E_Elem2) == 0x000018, "Member 'Ftuple_Lwidget_Mvector2_M_QSize_Nvector2_20_3d_20_2e_2e_2e_M_QZOrder_Ntype_7b__X_Nint_20where_200_20_3c_3d_20__X_M_20__X_20_3c_3d_202147483647_7d_20_3d_20_2e_2e_2e_M_QAlignment_Nvector2_20_3d_20_2e_2e_2e_R::__verse_0x932BF92E_Elem2' has a wrong offset!");
static_assert(offsetof(Ftuple_Lwidget_Mvector2_M_QSize_Nvector2_20_3d_20_2e_2e_2e_M_QZOrder_Ntype_7b__X_Nint_20where_200_20_3c_3d_20__X_M_20__X_20_3c_3d_202147483647_7d_20_3d_20_2e_2e_2e_M_QAlignment_Nvector2_20_3d_20_2e_2e_2e_R, __verse_0xF64C4596_Elem3) == 0x000030, "Member 'Ftuple_Lwidget_Mvector2_M_QSize_Nvector2_20_3d_20_2e_2e_2e_M_QZOrder_Ntype_7b__X_Nint_20where_200_20_3c_3d_20__X_M_20__X_20_3c_3d_202147483647_7d_20_3d_20_2e_2e_2e_M_QAlignment_Nvector2_20_3d_20_2e_2e_2e_R::__verse_0xF64C4596_Elem3' has a wrong offset!");
static_assert(offsetof(Ftuple_Lwidget_Mvector2_M_QSize_Nvector2_20_3d_20_2e_2e_2e_M_QZOrder_Ntype_7b__X_Nint_20where_200_20_3c_3d_20__X_M_20__X_20_3c_3d_202147483647_7d_20_3d_20_2e_2e_2e_M_QAlignment_Nvector2_20_3d_20_2e_2e_2e_R, __verse_0x4F74920B_Elem4) == 0x000040, "Member 'Ftuple_Lwidget_Mvector2_M_QSize_Nvector2_20_3d_20_2e_2e_2e_M_QZOrder_Ntype_7b__X_Nint_20where_200_20_3c_3d_20__X_M_20__X_20_3c_3d_202147483647_7d_20_3d_20_2e_2e_2e_M_QAlignment_Nvector2_20_3d_20_2e_2e_2e_R::__verse_0x4F74920B_Elem4' has a wrong offset!");

// VerseStruct VerseUI.UI_anchors
// 0x0020 (0x0020 - 0x0000)
struct FUI_anchors final
{
public:
	struct FSpatialMath_vector2                   __verse_0x91692725_Minimum;                        // 0x0000(0x0010)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FSpatialMath_vector2                   __verse_0xDF63CF93_Maximum;                        // 0x0010(0x0010)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FUI_anchors) == 0x000008, "Wrong alignment on FUI_anchors");
static_assert(sizeof(FUI_anchors) == 0x000020, "Wrong size on FUI_anchors");
static_assert(offsetof(FUI_anchors, __verse_0x91692725_Minimum) == 0x000000, "Member 'FUI_anchors::__verse_0x91692725_Minimum' has a wrong offset!");
static_assert(offsetof(FUI_anchors, __verse_0xDF63CF93_Maximum) == 0x000010, "Member 'FUI_anchors::__verse_0xDF63CF93_Maximum' has a wrong offset!");

// VerseStruct VerseUI.UI_margin
// 0x0020 (0x0020 - 0x0000)
struct FUI_margin final
{
public:
	double                                        __verse_0x88EBCF27_Left;                           // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __verse_0x97B55C26_Top;                            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __verse_0x296C864F_Right;                          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __verse_0x7AA421E3_Bottom;                         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FUI_margin) == 0x000008, "Wrong alignment on FUI_margin");
static_assert(sizeof(FUI_margin) == 0x000020, "Wrong size on FUI_margin");
static_assert(offsetof(FUI_margin, __verse_0x88EBCF27_Left) == 0x000000, "Member 'FUI_margin::__verse_0x88EBCF27_Left' has a wrong offset!");
static_assert(offsetof(FUI_margin, __verse_0x97B55C26_Top) == 0x000008, "Member 'FUI_margin::__verse_0x97B55C26_Top' has a wrong offset!");
static_assert(offsetof(FUI_margin, __verse_0x296C864F_Right) == 0x000010, "Member 'FUI_margin::__verse_0x296C864F_Right' has a wrong offset!");
static_assert(offsetof(FUI_margin, __verse_0x7AA421E3_Bottom) == 0x000018, "Member 'FUI_margin::__verse_0x7AA421E3_Bottom' has a wrong offset!");

// VerseStruct VerseUI.UI_button_slot
// 0x0030 (0x0030 - 0x0000)
struct FUI_button_slot final
{
public:
	class UUI_widget*                             __verse_0xA5B83AD1_Widget;                         // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EUI_horizontal_alignment                      __verse_0xF13651F1_HorizontalAlignment;            // 0x0008(0x0001)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUI_vertical_alignment                        __verse_0xA83057DE_VerticalAlignment;              // 0x0009(0x0001)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUI_margin                             __verse_0x7F718DF5_Padding;                        // 0x0010(0x0020)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FUI_button_slot) == 0x000008, "Wrong alignment on FUI_button_slot");
static_assert(sizeof(FUI_button_slot) == 0x000030, "Wrong size on FUI_button_slot");
static_assert(offsetof(FUI_button_slot, __verse_0xA5B83AD1_Widget) == 0x000000, "Member 'FUI_button_slot::__verse_0xA5B83AD1_Widget' has a wrong offset!");
static_assert(offsetof(FUI_button_slot, __verse_0xF13651F1_HorizontalAlignment) == 0x000008, "Member 'FUI_button_slot::__verse_0xF13651F1_HorizontalAlignment' has a wrong offset!");
static_assert(offsetof(FUI_button_slot, __verse_0xA83057DE_VerticalAlignment) == 0x000009, "Member 'FUI_button_slot::__verse_0xA83057DE_VerticalAlignment' has a wrong offset!");
static_assert(offsetof(FUI_button_slot, __verse_0x7F718DF5_Padding) == 0x000010, "Member 'FUI_button_slot::__verse_0x7F718DF5_Padding' has a wrong offset!");

// VerseStruct VerseUI.UI_canvas_slot
// 0x0068 (0x0068 - 0x0000)
struct FUI_canvas_slot final
{
public:
	struct FUI_anchors                            __verse_0x6C624651_Anchors;                        // 0x0000(0x0020)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FUI_margin                             __verse_0xAE9C7630_Offsets;                        // 0x0020(0x0020)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	uint8                                         __verse_0x270727B9_SizeToContent : 1;              // 0x0040(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (InstancedReference, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpatialMath_vector2                   __verse_0xE9839A38_Alignment;                      // 0x0048(0x0010)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	int64                                         __verse_0xEB688892_ZOrder;                         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_widget*                             __verse_0xA5B83AD1_Widget;                         // 0x0060(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
};
static_assert(alignof(FUI_canvas_slot) == 0x000008, "Wrong alignment on FUI_canvas_slot");
static_assert(sizeof(FUI_canvas_slot) == 0x000068, "Wrong size on FUI_canvas_slot");
static_assert(offsetof(FUI_canvas_slot, __verse_0x6C624651_Anchors) == 0x000000, "Member 'FUI_canvas_slot::__verse_0x6C624651_Anchors' has a wrong offset!");
static_assert(offsetof(FUI_canvas_slot, __verse_0xAE9C7630_Offsets) == 0x000020, "Member 'FUI_canvas_slot::__verse_0xAE9C7630_Offsets' has a wrong offset!");
static_assert(offsetof(FUI_canvas_slot, __verse_0xE9839A38_Alignment) == 0x000048, "Member 'FUI_canvas_slot::__verse_0xE9839A38_Alignment' has a wrong offset!");
static_assert(offsetof(FUI_canvas_slot, __verse_0xEB688892_ZOrder) == 0x000058, "Member 'FUI_canvas_slot::__verse_0xEB688892_ZOrder' has a wrong offset!");
static_assert(offsetof(FUI_canvas_slot, __verse_0xA5B83AD1_Widget) == 0x000060, "Member 'FUI_canvas_slot::__verse_0xA5B83AD1_Widget' has a wrong offset!");

// VerseStruct VerseUI.UI_overlay_slot
// 0x0030 (0x0030 - 0x0000)
struct FUI_overlay_slot final
{
public:
	class UUI_widget*                             __verse_0xA5B83AD1_Widget;                         // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EUI_horizontal_alignment                      __verse_0xF13651F1_HorizontalAlignment;            // 0x0008(0x0001)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUI_vertical_alignment                        __verse_0xA83057DE_VerticalAlignment;              // 0x0009(0x0001)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUI_margin                             __verse_0x7F718DF5_Padding;                        // 0x0010(0x0020)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FUI_overlay_slot) == 0x000008, "Wrong alignment on FUI_overlay_slot");
static_assert(sizeof(FUI_overlay_slot) == 0x000030, "Wrong size on FUI_overlay_slot");
static_assert(offsetof(FUI_overlay_slot, __verse_0xA5B83AD1_Widget) == 0x000000, "Member 'FUI_overlay_slot::__verse_0xA5B83AD1_Widget' has a wrong offset!");
static_assert(offsetof(FUI_overlay_slot, __verse_0xF13651F1_HorizontalAlignment) == 0x000008, "Member 'FUI_overlay_slot::__verse_0xF13651F1_HorizontalAlignment' has a wrong offset!");
static_assert(offsetof(FUI_overlay_slot, __verse_0xA83057DE_VerticalAlignment) == 0x000009, "Member 'FUI_overlay_slot::__verse_0xA83057DE_VerticalAlignment' has a wrong offset!");
static_assert(offsetof(FUI_overlay_slot, __verse_0x7F718DF5_Padding) == 0x000010, "Member 'FUI_overlay_slot::__verse_0x7F718DF5_Padding' has a wrong offset!");

// VerseStruct VerseUI.UI_stack_box_slot
// 0x0040 (0x0040 - 0x0000)
struct FUI_stack_box_slot final
{
public:
	class UUI_widget*                             __verse_0xA5B83AD1_Widget;                         // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EUI_horizontal_alignment                      __verse_0xF13651F1_HorizontalAlignment;            // 0x0008(0x0001)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUI_vertical_alignment                        __verse_0xA83057DE_VerticalAlignment;              // 0x0009(0x0001)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUI_margin                             __verse_0x7F718DF5_Padding;                        // 0x0010(0x0020)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	FOptionProperty_                              __verse_0x3F3ECCC9_Distribution;                   // 0x0030(0x0009)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FUI_stack_box_slot) == 0x000008, "Wrong alignment on FUI_stack_box_slot");
static_assert(sizeof(FUI_stack_box_slot) == 0x000040, "Wrong size on FUI_stack_box_slot");
static_assert(offsetof(FUI_stack_box_slot, __verse_0xA5B83AD1_Widget) == 0x000000, "Member 'FUI_stack_box_slot::__verse_0xA5B83AD1_Widget' has a wrong offset!");
static_assert(offsetof(FUI_stack_box_slot, __verse_0xF13651F1_HorizontalAlignment) == 0x000008, "Member 'FUI_stack_box_slot::__verse_0xF13651F1_HorizontalAlignment' has a wrong offset!");
static_assert(offsetof(FUI_stack_box_slot, __verse_0xA83057DE_VerticalAlignment) == 0x000009, "Member 'FUI_stack_box_slot::__verse_0xA83057DE_VerticalAlignment' has a wrong offset!");
static_assert(offsetof(FUI_stack_box_slot, __verse_0x7F718DF5_Padding) == 0x000010, "Member 'FUI_stack_box_slot::__verse_0x7F718DF5_Padding' has a wrong offset!");
static_assert(offsetof(FUI_stack_box_slot, __verse_0x3F3ECCC9_Distribution) == 0x000030, "Member 'FUI_stack_box_slot::__verse_0x3F3ECCC9_Distribution' has a wrong offset!");

// VerseStruct VerseUI.UI_user_widget_slot
// 0x0018 (0x0018 - 0x0000)
struct FUI_user_widget_slot final
{
public:
	class UUI_widget*                             __verse_0xA5B83AD1_Widget;                         // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FVerseStringProperty_                         __verse_0x38D9A616_Name;                           // 0x0008(0x0010)(InstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(FUI_user_widget_slot) == 0x000008, "Wrong alignment on FUI_user_widget_slot");
static_assert(sizeof(FUI_user_widget_slot) == 0x000018, "Wrong size on FUI_user_widget_slot");
static_assert(offsetof(FUI_user_widget_slot, __verse_0xA5B83AD1_Widget) == 0x000000, "Member 'FUI_user_widget_slot::__verse_0xA5B83AD1_Widget' has a wrong offset!");
static_assert(offsetof(FUI_user_widget_slot, __verse_0x38D9A616_Name) == 0x000008, "Member 'FUI_user_widget_slot::__verse_0x38D9A616_Name' has a wrong offset!");

// VerseStruct VerseUI.UI_widget_message
// 0x0010 (0x0010 - 0x0000)
struct FUI_widget_message final
{
public:
	class USimulation_player*                     __verse_0xE5E3B371_Player;                         // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_widget*                             __verse_0xB1B721CE_Source;                         // 0x0008(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
};
static_assert(alignof(FUI_widget_message) == 0x000008, "Wrong alignment on FUI_widget_message");
static_assert(sizeof(FUI_widget_message) == 0x000010, "Wrong size on FUI_widget_message");
static_assert(offsetof(FUI_widget_message, __verse_0xE5E3B371_Player) == 0x000000, "Member 'FUI_widget_message::__verse_0xE5E3B371_Player' has a wrong offset!");
static_assert(offsetof(FUI_widget_message, __verse_0xB1B721CE_Source) == 0x000008, "Member 'FUI_widget_message::__verse_0xB1B721CE_Source' has a wrong offset!");

}

