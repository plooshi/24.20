#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ToastWidget_New

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ToastWidget_New.ToastWidget_New_C
// 0x0070 (0x0328 - 0x02B8)
class UToastWidget_New_C final : public UFortToastWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Outro_New;                                         // 0x02C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Intro;                                             // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCommonBorder*                          B_NotificationImage;                               // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          B_NotificationImageExtended;                       // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          CommonBorder_MainWidget;                           // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   DescriptionRichText;                               // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortLazyImage*                         NotificationImage;                                 // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      OpenButton;                                        // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   TitleRichText;                                     // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnFinishedToast;                                   // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FTimerHandle                           AnimationDelayTimer;                               // 0x0318(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bActionTaken;                                      // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__OpenButton_K2Node_ComponentBoundEvent_5_CommonButtonClicked__DelegateSignature(class UCommonButtonLegacy* Button);
	void Construct();
	void Destruct();
	void ExecuteUbergraph_ToastWidget_New(int32 EntryPoint);
	ESlateVisibility GetOpenButtonVisibility();
	void HandleIntroFinished();
	void HandleOutroFinished();
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void OnNotificationSet(class UFortUINotification* Notification);
	void OnNotificationUpdated(class UFortUINotification* Notification);
	void OnPlayOpenAnimation();
	void PlayOutro();
	void SetImage();
	void SetupAnimBindings(bool Unbind);
	void StartIntro();
	void UpdateToast(class UFortUINotification* Notification);

	float GetDisplayTime(bool* bOutDisplayTimeOverridden) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ToastWidget_New_C">();
	}
	static class UToastWidget_New_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UToastWidget_New_C>();
	}
};
static_assert(alignof(UToastWidget_New_C) == 0x000008, "Wrong alignment on UToastWidget_New_C");
static_assert(sizeof(UToastWidget_New_C) == 0x000328, "Wrong size on UToastWidget_New_C");
static_assert(offsetof(UToastWidget_New_C, UberGraphFrame) == 0x0002B8, "Member 'UToastWidget_New_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UToastWidget_New_C, Outro_New) == 0x0002C0, "Member 'UToastWidget_New_C::Outro_New' has a wrong offset!");
static_assert(offsetof(UToastWidget_New_C, Intro) == 0x0002C8, "Member 'UToastWidget_New_C::Intro' has a wrong offset!");
static_assert(offsetof(UToastWidget_New_C, B_NotificationImage) == 0x0002D0, "Member 'UToastWidget_New_C::B_NotificationImage' has a wrong offset!");
static_assert(offsetof(UToastWidget_New_C, B_NotificationImageExtended) == 0x0002D8, "Member 'UToastWidget_New_C::B_NotificationImageExtended' has a wrong offset!");
static_assert(offsetof(UToastWidget_New_C, CommonBorder_MainWidget) == 0x0002E0, "Member 'UToastWidget_New_C::CommonBorder_MainWidget' has a wrong offset!");
static_assert(offsetof(UToastWidget_New_C, DescriptionRichText) == 0x0002E8, "Member 'UToastWidget_New_C::DescriptionRichText' has a wrong offset!");
static_assert(offsetof(UToastWidget_New_C, NotificationImage) == 0x0002F0, "Member 'UToastWidget_New_C::NotificationImage' has a wrong offset!");
static_assert(offsetof(UToastWidget_New_C, OpenButton) == 0x0002F8, "Member 'UToastWidget_New_C::OpenButton' has a wrong offset!");
static_assert(offsetof(UToastWidget_New_C, TitleRichText) == 0x000300, "Member 'UToastWidget_New_C::TitleRichText' has a wrong offset!");
static_assert(offsetof(UToastWidget_New_C, OnFinishedToast) == 0x000308, "Member 'UToastWidget_New_C::OnFinishedToast' has a wrong offset!");
static_assert(offsetof(UToastWidget_New_C, AnimationDelayTimer) == 0x000318, "Member 'UToastWidget_New_C::AnimationDelayTimer' has a wrong offset!");
static_assert(offsetof(UToastWidget_New_C, bActionTaken) == 0x000320, "Member 'UToastWidget_New_C::bActionTaken' has a wrong offset!");

}

