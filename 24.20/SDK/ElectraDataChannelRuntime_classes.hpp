#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ElectraDataChannelRuntime

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// Class ElectraDataChannelRuntime.ElectraDataChannelPlayer
// 0x0030 (0x02B8 - 0x0288)
class AElectraDataChannelPlayer final : public AActor
{
public:
	TMulticastInlineDelegate<void(const class FString& FailureReason)> OnTerminalError;                                   // 0x0288(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_298[0x20];                                     // 0x0298(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void EndPlayback();
	void PlayFromFile(const class FString& InFilename);
	void PlayFromMediaPlayer(class UMediaPlayer* InMediaPlayer);
	void PlayFromStateStreamServer(const class FString& InStatePlaylistURL);
	void UseTimeFromMediaPlayer(class UMediaPlayer* InMediaPlayer);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ElectraDataChannelPlayer">();
	}
	static class AElectraDataChannelPlayer* GetDefaultObj()
	{
		return GetDefaultObjImpl<AElectraDataChannelPlayer>();
	}
};
static_assert(alignof(AElectraDataChannelPlayer) == 0x000008, "Wrong alignment on AElectraDataChannelPlayer");
static_assert(sizeof(AElectraDataChannelPlayer) == 0x0002B8, "Wrong size on AElectraDataChannelPlayer");
static_assert(offsetof(AElectraDataChannelPlayer, OnTerminalError) == 0x000288, "Member 'AElectraDataChannelPlayer::OnTerminalError' has a wrong offset!");

// Class ElectraDataChannelRuntime.ElectraDataChannelRecorder
// 0x0038 (0x02C0 - 0x0288)
class AElectraDataChannelRecorder final : public AActor
{
public:
	uint8                                         Pad_288[0x38];                                     // 0x0288(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void EndRecording();
	void RecordToFile(const class FString& InFilename);
	void StartRecording();
	void UseTimeFromMediaPlayer(class UMediaPlayer* InMediaPlayer);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ElectraDataChannelRecorder">();
	}
	static class AElectraDataChannelRecorder* GetDefaultObj()
	{
		return GetDefaultObjImpl<AElectraDataChannelRecorder>();
	}
};
static_assert(alignof(AElectraDataChannelRecorder) == 0x000008, "Wrong alignment on AElectraDataChannelRecorder");
static_assert(sizeof(AElectraDataChannelRecorder) == 0x0002C0, "Wrong size on AElectraDataChannelRecorder");

// Class ElectraDataChannelRuntime.ElectraDataChannelTarget
// 0x0078 (0x0300 - 0x0288)
class AElectraDataChannelTarget : public AActor
{
public:
	uint8                                         Pad_288[0x78];                                     // 0x0288(0x0078)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetTargetAlias(const class FString& InAlias);

	class FString GetTargetAlias() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ElectraDataChannelTarget">();
	}
	static class AElectraDataChannelTarget* GetDefaultObj()
	{
		return GetDefaultObjImpl<AElectraDataChannelTarget>();
	}
};
static_assert(alignof(AElectraDataChannelTarget) == 0x000008, "Wrong alignment on AElectraDataChannelTarget");
static_assert(sizeof(AElectraDataChannelTarget) == 0x000300, "Wrong size on AElectraDataChannelTarget");

}

