#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TournamentDetails

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass TournamentDetails.TournamentDetails_C
// 0x0218 (0x0948 - 0x0730)
class UTournamentDetails_C final : public UFortTournamentDetailsPage
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0730(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HidePosterFade;                                    // 0x0738(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CollapseLeaderboardSummary;                        // 0x0740(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FullScreenContent;                                 // 0x0748(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Intro;                                             // 0x0750(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BlurPoster;                                        // 0x0758(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BlurBG;                                            // 0x0760(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowEventWindowDetails;                            // 0x0768(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowDetails;                                       // 0x0770(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PosterFlip;                                        // 0x0778(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBackgroundBlur*                        BackgroundBlur_Background;                         // 0x0780(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBackgroundBlur*                        BackgroundBlur_PosterLayer;                        // 0x0788(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEventsSimpleButton_C*                  Button_Back;                                       // 0x0790(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      Button_EnableMFA;                                  // 0x0798(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCloseButton_C*                         CloseButton;                                       // 0x07A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          CommonBorder_BGText;                               // 0x07A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          CommonBorder_ScoringBG;                            // 0x07B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          CommonBorder_ScoringTitleBG;                       // 0x07B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CommonTextBlock_TournamentDescription;             // 0x07C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CommonTextBlock_TournamentSubtitle;                // 0x07C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CommonTextBlock_UnlockCriteria;                    // 0x07D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcherLegacy*            CommonWidgetSwitcher_DetailsButtons;               // 0x07D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcherLegacy*            CommonWidgetSwitcher_FullScreenSwitch;             // 0x07E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcherLegacy*            CommonWidgetSwitcher_WindowsDetails;               // 0x07E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEventsSimpleButton_C*                  DetailsPanelButton;                                // 0x07F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcherLegacy*            DetailsSwitcher;                                   // 0x07F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEventLeaderboardScreen_C*              EventLeaderboardScreen;                            // 0x0800(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEventLeaderboardSummary_C*             EventLeaderboardSummary;                           // 0x0808(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             EventsScrollBox;                                   // 0x0810(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_PosterFade;                                  // 0x0818(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       MFA_WarningText;                                   // 0x0820(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           MFAContainer;                                      // 0x0828(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverviewPanel;                                     // 0x0830(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEventsSimpleButton_C*                  OverviewPanelButton;                               // 0x0838(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_BGText;                                // 0x0840(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_TimeCallout;                           // 0x0848(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         RichTextBlock_TournamentTimeCallout1;              // 0x0850(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              SafeZone_0;                                        // 0x0858(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              SafeZone_1;                                        // 0x0860(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox_DetailAndRules;                          // 0x0868(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEventsSimpleButton_C*                  SeriesPointLeaderboardButton;                      // 0x0870(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UShowdownEventTile_C*                   ShowdownEventTile;                                 // 0x0878(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UShowdownEventTile_C*                   ShowdownEventTile_0;                               // 0x0880(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UShowdownEventTile_C*                   ShowdownEventTile_1;                               // 0x0888(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UShowdownEventTile_C*                   ShowdownEventTile_2;                               // 0x0890(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UShowdownTournamentDetailsScoringRule_C* ShowdownTournamentDetailsScoringRule;              // 0x0898(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UShowdownTournamentDetailsScoringRule_C* ShowdownTournamentDetailsScoringRule_C_3;          // 0x08A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_PinUnlockScore;                               // 0x08A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTournamentEventWindowDetails_C*        TournamentEventWindowDetails;                      // 0x08B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TournamentMatchType;                               // 0x08B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTournamentPayoutModal_C*               TournamentPayoutModal;                             // 0x08C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UShowdownTournamentPosterBack_C*        TournamentPosterBack;                              // 0x08C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UShowdownTournamentPosterFront_C*       TournamentPosterFront;                             // 0x08D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TournamentRoundText;                               // 0x08D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TournamentSubTitleBackground;                      // 0x08E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTournamentLiveGames_C*                 TournamentWatchList;                               // 0x08E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUniformGridPanel*                      UniformGridPanel_TournamentScoringRules;           // 0x08F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         UnlockPinContent;                                  // 0x08F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          EventWindowDetailsShown;                           // 0x0900(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TournamentDetailsShown;                            // 0x0901(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_902[0x6];                                      // 0x0902(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              BackActionSelected;                                // 0x0908(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UWidget*                                firstActiveEvent;                                  // 0x0918(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                lastFocusedEvent;                                  // 0x0920(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          isCenteringScrollBox;                              // 0x0928(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LeaderboardisCollapsed;                            // 0x0929(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92A[0x6];                                      // 0x092A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DefaultTournamentIdForScoringRules;                // 0x0930(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class ULeaderboardListViewWrapper_C*          LeaderboardListViewWrapper;                        // 0x0940(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void AnimTransition(bool In, class UWidgetAnimation* Animation, double PlaySpeed);
	void BndEvt__BackButton2_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature(class UCommonButtonLegacy* Button);
	void BndEvt__Button_EnableMFA_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature(class UCommonButtonLegacy* Button);
	void BndEvt__CloseButton_K2Node_ComponentBoundEvent_6_CommonButtonClicked__DelegateSignature(class UCommonButtonLegacy* Button);
	void BndEvt__DetailsPanelButton2_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature(class UCommonButtonLegacy* Button);
	void BndEvt__OverviewPanelButton2_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature(class UCommonButtonLegacy* Button);
	void BndEvt__TournamentDetails_FloatingLeaderboardButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature(class UCommonButtonLegacy* Button);
	void CloseEventWindowDetails();
	void CloseTournamentDetails();
	void Construct();
	void CreateScoringWidgets(const class FString& TournamentSeriesId, const class FString& TournamentId);
	void EventBackoutLiveGames();
	void EventCenterEventWindow(class UWidget* Widget);
	void EventCloseLeaderboard();
	void EventclosePayout();
	void EventDeselectWindows(class UWidget* SelectedWidget);
	void EventFullScreenAnimOutFinished();
	void EventShowWindowDetails(class UCommonButtonLegacy* Button);
	void EventStartCentering();
	void EventStopCentering();
	void EventToggleFullScreenContent(bool In);
	void EventViewFullLeaderboard(const class FString& TournamentId, const class FString& EventId);
	void EventViewLiveGames();
	void EventViewPayout(const class FString& EventWindowId, const class FString& EventId);
	void ExecuteUbergraph_TournamentDetails(int32 EntryPoint);
	void Handle_Back(bool* PassThrough);
	void Is_Scoring_Rule_Valid(const struct FFortShowdownScoringRuleInfo& ScoringRuleInfo, bool* IsValid);
	void No_payouts();
	void OnActivateScreen();
	void OnHandleBack(bool* bResult);
	void OnInitialized();
	void Refresh();
	void RefreshDataBP();
	void RefreshDetailsPanel();
	void RefreshEvents();
	void RefreshOverviewPanel();
	void RefreshScoringRules();
	void RefreshViolators();
	void RemoveInvalidScoringRules(TArray<struct FFortShowdownScoringRuleInfo>& UnfilteredScoringRules, TArray<struct FFortShowdownScoringRuleInfo>* FilteredScoringRules);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void UpdateDefaultTournamentEvent(TArray<class FString>& TournamentEvents);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TournamentDetails_C">();
	}
	static class UTournamentDetails_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTournamentDetails_C>();
	}
};
static_assert(alignof(UTournamentDetails_C) == 0x000008, "Wrong alignment on UTournamentDetails_C");
static_assert(sizeof(UTournamentDetails_C) == 0x000948, "Wrong size on UTournamentDetails_C");
static_assert(offsetof(UTournamentDetails_C, UberGraphFrame) == 0x000730, "Member 'UTournamentDetails_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, HidePosterFade) == 0x000738, "Member 'UTournamentDetails_C::HidePosterFade' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, CollapseLeaderboardSummary) == 0x000740, "Member 'UTournamentDetails_C::CollapseLeaderboardSummary' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, FullScreenContent) == 0x000748, "Member 'UTournamentDetails_C::FullScreenContent' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, Intro) == 0x000750, "Member 'UTournamentDetails_C::Intro' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, BlurPoster) == 0x000758, "Member 'UTournamentDetails_C::BlurPoster' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, BlurBG) == 0x000760, "Member 'UTournamentDetails_C::BlurBG' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, ShowEventWindowDetails) == 0x000768, "Member 'UTournamentDetails_C::ShowEventWindowDetails' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, ShowDetails) == 0x000770, "Member 'UTournamentDetails_C::ShowDetails' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, PosterFlip) == 0x000778, "Member 'UTournamentDetails_C::PosterFlip' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, BackgroundBlur_Background) == 0x000780, "Member 'UTournamentDetails_C::BackgroundBlur_Background' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, BackgroundBlur_PosterLayer) == 0x000788, "Member 'UTournamentDetails_C::BackgroundBlur_PosterLayer' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, Button_Back) == 0x000790, "Member 'UTournamentDetails_C::Button_Back' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, Button_EnableMFA) == 0x000798, "Member 'UTournamentDetails_C::Button_EnableMFA' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, CloseButton) == 0x0007A0, "Member 'UTournamentDetails_C::CloseButton' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, CommonBorder_BGText) == 0x0007A8, "Member 'UTournamentDetails_C::CommonBorder_BGText' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, CommonBorder_ScoringBG) == 0x0007B0, "Member 'UTournamentDetails_C::CommonBorder_ScoringBG' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, CommonBorder_ScoringTitleBG) == 0x0007B8, "Member 'UTournamentDetails_C::CommonBorder_ScoringTitleBG' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, CommonTextBlock_TournamentDescription) == 0x0007C0, "Member 'UTournamentDetails_C::CommonTextBlock_TournamentDescription' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, CommonTextBlock_TournamentSubtitle) == 0x0007C8, "Member 'UTournamentDetails_C::CommonTextBlock_TournamentSubtitle' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, CommonTextBlock_UnlockCriteria) == 0x0007D0, "Member 'UTournamentDetails_C::CommonTextBlock_UnlockCriteria' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, CommonWidgetSwitcher_DetailsButtons) == 0x0007D8, "Member 'UTournamentDetails_C::CommonWidgetSwitcher_DetailsButtons' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, CommonWidgetSwitcher_FullScreenSwitch) == 0x0007E0, "Member 'UTournamentDetails_C::CommonWidgetSwitcher_FullScreenSwitch' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, CommonWidgetSwitcher_WindowsDetails) == 0x0007E8, "Member 'UTournamentDetails_C::CommonWidgetSwitcher_WindowsDetails' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, DetailsPanelButton) == 0x0007F0, "Member 'UTournamentDetails_C::DetailsPanelButton' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, DetailsSwitcher) == 0x0007F8, "Member 'UTournamentDetails_C::DetailsSwitcher' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, EventLeaderboardScreen) == 0x000800, "Member 'UTournamentDetails_C::EventLeaderboardScreen' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, EventLeaderboardSummary) == 0x000808, "Member 'UTournamentDetails_C::EventLeaderboardSummary' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, EventsScrollBox) == 0x000810, "Member 'UTournamentDetails_C::EventsScrollBox' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, Image_PosterFade) == 0x000818, "Member 'UTournamentDetails_C::Image_PosterFade' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, MFA_WarningText) == 0x000820, "Member 'UTournamentDetails_C::MFA_WarningText' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, MFAContainer) == 0x000828, "Member 'UTournamentDetails_C::MFAContainer' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, OverviewPanel) == 0x000830, "Member 'UTournamentDetails_C::OverviewPanel' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, OverviewPanelButton) == 0x000838, "Member 'UTournamentDetails_C::OverviewPanelButton' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, RetainerBox_BGText) == 0x000840, "Member 'UTournamentDetails_C::RetainerBox_BGText' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, RetainerBox_TimeCallout) == 0x000848, "Member 'UTournamentDetails_C::RetainerBox_TimeCallout' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, RichTextBlock_TournamentTimeCallout1) == 0x000850, "Member 'UTournamentDetails_C::RichTextBlock_TournamentTimeCallout1' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, SafeZone_0) == 0x000858, "Member 'UTournamentDetails_C::SafeZone_0' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, SafeZone_1) == 0x000860, "Member 'UTournamentDetails_C::SafeZone_1' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, ScrollBox_DetailAndRules) == 0x000868, "Member 'UTournamentDetails_C::ScrollBox_DetailAndRules' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, SeriesPointLeaderboardButton) == 0x000870, "Member 'UTournamentDetails_C::SeriesPointLeaderboardButton' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, ShowdownEventTile) == 0x000878, "Member 'UTournamentDetails_C::ShowdownEventTile' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, ShowdownEventTile_0) == 0x000880, "Member 'UTournamentDetails_C::ShowdownEventTile_0' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, ShowdownEventTile_1) == 0x000888, "Member 'UTournamentDetails_C::ShowdownEventTile_1' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, ShowdownEventTile_2) == 0x000890, "Member 'UTournamentDetails_C::ShowdownEventTile_2' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, ShowdownTournamentDetailsScoringRule) == 0x000898, "Member 'UTournamentDetails_C::ShowdownTournamentDetailsScoringRule' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, ShowdownTournamentDetailsScoringRule_C_3) == 0x0008A0, "Member 'UTournamentDetails_C::ShowdownTournamentDetailsScoringRule_C_3' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, Text_PinUnlockScore) == 0x0008A8, "Member 'UTournamentDetails_C::Text_PinUnlockScore' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, TournamentEventWindowDetails) == 0x0008B0, "Member 'UTournamentDetails_C::TournamentEventWindowDetails' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, TournamentMatchType) == 0x0008B8, "Member 'UTournamentDetails_C::TournamentMatchType' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, TournamentPayoutModal) == 0x0008C0, "Member 'UTournamentDetails_C::TournamentPayoutModal' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, TournamentPosterBack) == 0x0008C8, "Member 'UTournamentDetails_C::TournamentPosterBack' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, TournamentPosterFront) == 0x0008D0, "Member 'UTournamentDetails_C::TournamentPosterFront' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, TournamentRoundText) == 0x0008D8, "Member 'UTournamentDetails_C::TournamentRoundText' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, TournamentSubTitleBackground) == 0x0008E0, "Member 'UTournamentDetails_C::TournamentSubTitleBackground' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, TournamentWatchList) == 0x0008E8, "Member 'UTournamentDetails_C::TournamentWatchList' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, UniformGridPanel_TournamentScoringRules) == 0x0008F0, "Member 'UTournamentDetails_C::UniformGridPanel_TournamentScoringRules' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, UnlockPinContent) == 0x0008F8, "Member 'UTournamentDetails_C::UnlockPinContent' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, EventWindowDetailsShown) == 0x000900, "Member 'UTournamentDetails_C::EventWindowDetailsShown' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, TournamentDetailsShown) == 0x000901, "Member 'UTournamentDetails_C::TournamentDetailsShown' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, BackActionSelected) == 0x000908, "Member 'UTournamentDetails_C::BackActionSelected' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, firstActiveEvent) == 0x000918, "Member 'UTournamentDetails_C::firstActiveEvent' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, lastFocusedEvent) == 0x000920, "Member 'UTournamentDetails_C::lastFocusedEvent' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, isCenteringScrollBox) == 0x000928, "Member 'UTournamentDetails_C::isCenteringScrollBox' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, LeaderboardisCollapsed) == 0x000929, "Member 'UTournamentDetails_C::LeaderboardisCollapsed' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, DefaultTournamentIdForScoringRules) == 0x000930, "Member 'UTournamentDetails_C::DefaultTournamentIdForScoringRules' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, LeaderboardListViewWrapper) == 0x000940, "Member 'UTournamentDetails_C::LeaderboardListViewWrapper' has a wrong offset!");

}

