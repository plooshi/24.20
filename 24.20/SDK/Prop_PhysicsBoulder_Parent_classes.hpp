#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prop_PhysicsBoulder_Parent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Prop_PhysicsBoulder_Parent.Prop_PhysicsBoulder_Parent_C
// 0x0080 (0x0F78 - 0x0EF8)
class AProp_PhysicsBoulder_Parent_C : public ABuildingProp
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0EF8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFortSoundIndicatorComponent*           Sound_Indicator;                                   // 0x0F00(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LastImpactNormal;                                  // 0x0F08(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         VerticalImpulseRatio;                              // 0x0F20(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        NextPotentialLaunchTime;                           // 0x0F48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LaunchDelay;                                       // 0x0F50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FScalableFloat>                 PlayerImpactTiers;                                 // 0x0F58(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FScalableFloat>                 PlayerImpulseTiers;                                // 0x0F68(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ComponentHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ExecuteUbergraph_Prop_PhysicsBoulder_Parent(int32 EntryPoint);
	void GetPlayerImpulseVelocityFromImpactVelocity(double Impact, bool* Minimum_Met, double* Impulse);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Prop_PhysicsBoulder_Parent_C">();
	}
	static class AProp_PhysicsBoulder_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProp_PhysicsBoulder_Parent_C>();
	}
};
static_assert(alignof(AProp_PhysicsBoulder_Parent_C) == 0x000008, "Wrong alignment on AProp_PhysicsBoulder_Parent_C");
static_assert(sizeof(AProp_PhysicsBoulder_Parent_C) == 0x000F78, "Wrong size on AProp_PhysicsBoulder_Parent_C");
static_assert(offsetof(AProp_PhysicsBoulder_Parent_C, UberGraphFrame) == 0x000EF8, "Member 'AProp_PhysicsBoulder_Parent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AProp_PhysicsBoulder_Parent_C, Sound_Indicator) == 0x000F00, "Member 'AProp_PhysicsBoulder_Parent_C::Sound_Indicator' has a wrong offset!");
static_assert(offsetof(AProp_PhysicsBoulder_Parent_C, LastImpactNormal) == 0x000F08, "Member 'AProp_PhysicsBoulder_Parent_C::LastImpactNormal' has a wrong offset!");
static_assert(offsetof(AProp_PhysicsBoulder_Parent_C, VerticalImpulseRatio) == 0x000F20, "Member 'AProp_PhysicsBoulder_Parent_C::VerticalImpulseRatio' has a wrong offset!");
static_assert(offsetof(AProp_PhysicsBoulder_Parent_C, NextPotentialLaunchTime) == 0x000F48, "Member 'AProp_PhysicsBoulder_Parent_C::NextPotentialLaunchTime' has a wrong offset!");
static_assert(offsetof(AProp_PhysicsBoulder_Parent_C, LaunchDelay) == 0x000F50, "Member 'AProp_PhysicsBoulder_Parent_C::LaunchDelay' has a wrong offset!");
static_assert(offsetof(AProp_PhysicsBoulder_Parent_C, PlayerImpactTiers) == 0x000F58, "Member 'AProp_PhysicsBoulder_Parent_C::PlayerImpactTiers' has a wrong offset!");
static_assert(offsetof(AProp_PhysicsBoulder_Parent_C, PlayerImpulseTiers) == 0x000F68, "Member 'AProp_PhysicsBoulder_Parent_C::PlayerImpulseTiers' has a wrong offset!");

}

