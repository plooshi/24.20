#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MotionTrajectory

#include "Basic.hpp"

#include "MotionTrajectory_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function MotionTrajectory.MotionTrajectoryComponent.SetSampleRate
// 0x0004 (0x0004 - 0x0000)
struct MotionTrajectoryComponent_SetSampleRate final
{
public:
	int32                                         Rate;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MotionTrajectoryComponent_SetSampleRate) == 0x000004, "Wrong alignment on MotionTrajectoryComponent_SetSampleRate");
static_assert(sizeof(MotionTrajectoryComponent_SetSampleRate) == 0x000004, "Wrong size on MotionTrajectoryComponent_SetSampleRate");
static_assert(offsetof(MotionTrajectoryComponent_SetSampleRate, Rate) == 0x000000, "Member 'MotionTrajectoryComponent_SetSampleRate::Rate' has a wrong offset!");

// Function MotionTrajectory.MotionTrajectoryComponent.GetHistory
// 0x0018 (0x0018 - 0x0000)
struct MotionTrajectoryComponent_GetHistory final
{
public:
	struct FTrajectorySampleRange                 ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MotionTrajectoryComponent_GetHistory) == 0x000008, "Wrong alignment on MotionTrajectoryComponent_GetHistory");
static_assert(sizeof(MotionTrajectoryComponent_GetHistory) == 0x000018, "Wrong size on MotionTrajectoryComponent_GetHistory");
static_assert(offsetof(MotionTrajectoryComponent_GetHistory, ReturnValue) == 0x000000, "Member 'MotionTrajectoryComponent_GetHistory::ReturnValue' has a wrong offset!");

// Function MotionTrajectory.MotionTrajectoryComponent.GetTrajectory
// 0x0018 (0x0018 - 0x0000)
struct MotionTrajectoryComponent_GetTrajectory final
{
public:
	struct FTrajectorySampleRange                 ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MotionTrajectoryComponent_GetTrajectory) == 0x000008, "Wrong alignment on MotionTrajectoryComponent_GetTrajectory");
static_assert(sizeof(MotionTrajectoryComponent_GetTrajectory) == 0x000018, "Wrong size on MotionTrajectoryComponent_GetTrajectory");
static_assert(offsetof(MotionTrajectoryComponent_GetTrajectory, ReturnValue) == 0x000000, "Member 'MotionTrajectoryComponent_GetTrajectory::ReturnValue' has a wrong offset!");

// Function MotionTrajectory.MotionTrajectoryComponent.GetTrajectoryWithSettings
// 0x0028 (0x0028 - 0x0000)
struct MotionTrajectoryComponent_GetTrajectoryWithSettings final
{
public:
	struct FMotionTrajectorySettings              Settings;                                          // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bIncludeHistory;                                   // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTrajectorySampleRange                 ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MotionTrajectoryComponent_GetTrajectoryWithSettings) == 0x000008, "Wrong alignment on MotionTrajectoryComponent_GetTrajectoryWithSettings");
static_assert(sizeof(MotionTrajectoryComponent_GetTrajectoryWithSettings) == 0x000028, "Wrong size on MotionTrajectoryComponent_GetTrajectoryWithSettings");
static_assert(offsetof(MotionTrajectoryComponent_GetTrajectoryWithSettings, Settings) == 0x000000, "Member 'MotionTrajectoryComponent_GetTrajectoryWithSettings::Settings' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryComponent_GetTrajectoryWithSettings, bIncludeHistory) == 0x00000C, "Member 'MotionTrajectoryComponent_GetTrajectoryWithSettings::bIncludeHistory' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryComponent_GetTrajectoryWithSettings, ReturnValue) == 0x000010, "Member 'MotionTrajectoryComponent_GetTrajectoryWithSettings::ReturnValue' has a wrong offset!");

// Function MotionTrajectory.CharacterMovementTrajectoryComponent.OnMovementUpdated
// 0x0038 (0x0038 - 0x0000)
struct CharacterMovementTrajectoryComponent_OnMovementUpdated final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                OldLocation;                                       // 0x0008(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                OldVelocity;                                       // 0x0020(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CharacterMovementTrajectoryComponent_OnMovementUpdated) == 0x000008, "Wrong alignment on CharacterMovementTrajectoryComponent_OnMovementUpdated");
static_assert(sizeof(CharacterMovementTrajectoryComponent_OnMovementUpdated) == 0x000038, "Wrong size on CharacterMovementTrajectoryComponent_OnMovementUpdated");
static_assert(offsetof(CharacterMovementTrajectoryComponent_OnMovementUpdated, DeltaSeconds) == 0x000000, "Member 'CharacterMovementTrajectoryComponent_OnMovementUpdated::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(CharacterMovementTrajectoryComponent_OnMovementUpdated, OldLocation) == 0x000008, "Member 'CharacterMovementTrajectoryComponent_OnMovementUpdated::OldLocation' has a wrong offset!");
static_assert(offsetof(CharacterMovementTrajectoryComponent_OnMovementUpdated, OldVelocity) == 0x000020, "Member 'CharacterMovementTrajectoryComponent_OnMovementUpdated::OldVelocity' has a wrong offset!");

// Function MotionTrajectory.MotionTrajectoryBlueprintLibrary.ClampTrajectoryDirection
// 0x0048 (0x0048 - 0x0000)
struct MotionTrajectoryBlueprintLibrary_ClampTrajectoryDirection final
{
public:
	struct FTrajectorySampleRange                 Trajectory;                                        // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TArray<struct FTrajectoryDirectionClamp>      Directions;                                        // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bPreserveRotation;                                 // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTrajectorySampleRange                 ReturnValue;                                       // 0x0030(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MotionTrajectoryBlueprintLibrary_ClampTrajectoryDirection) == 0x000008, "Wrong alignment on MotionTrajectoryBlueprintLibrary_ClampTrajectoryDirection");
static_assert(sizeof(MotionTrajectoryBlueprintLibrary_ClampTrajectoryDirection) == 0x000048, "Wrong size on MotionTrajectoryBlueprintLibrary_ClampTrajectoryDirection");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_ClampTrajectoryDirection, Trajectory) == 0x000000, "Member 'MotionTrajectoryBlueprintLibrary_ClampTrajectoryDirection::Trajectory' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_ClampTrajectoryDirection, Directions) == 0x000018, "Member 'MotionTrajectoryBlueprintLibrary_ClampTrajectoryDirection::Directions' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_ClampTrajectoryDirection, bPreserveRotation) == 0x000028, "Member 'MotionTrajectoryBlueprintLibrary_ClampTrajectoryDirection::bPreserveRotation' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_ClampTrajectoryDirection, ReturnValue) == 0x000030, "Member 'MotionTrajectoryBlueprintLibrary_ClampTrajectoryDirection::ReturnValue' has a wrong offset!");

// Function MotionTrajectory.MotionTrajectoryBlueprintLibrary.DebugDrawTrajectory
// 0x00C0 (0x00C0 - 0x0000)
struct MotionTrajectoryBlueprintLibrary_DebugDrawTrajectory final
{
public:
	const class AActor*                           Actor;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             WorldTransform;                                    // 0x0010(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTrajectorySampleRange                 Trajectory;                                        // 0x0070(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FLinearColor                           PredictionColor;                                   // 0x0088(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           HistoryColor;                                      // 0x0098(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TransformScale;                                    // 0x00A8(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TransformThickness;                                // 0x00AC(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ArrowScale;                                        // 0x00B0(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ArrowSize;                                         // 0x00B4(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ArrowThickness;                                    // 0x00B8(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MotionTrajectoryBlueprintLibrary_DebugDrawTrajectory) == 0x000010, "Wrong alignment on MotionTrajectoryBlueprintLibrary_DebugDrawTrajectory");
static_assert(sizeof(MotionTrajectoryBlueprintLibrary_DebugDrawTrajectory) == 0x0000C0, "Wrong size on MotionTrajectoryBlueprintLibrary_DebugDrawTrajectory");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_DebugDrawTrajectory, Actor) == 0x000000, "Member 'MotionTrajectoryBlueprintLibrary_DebugDrawTrajectory::Actor' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_DebugDrawTrajectory, WorldTransform) == 0x000010, "Member 'MotionTrajectoryBlueprintLibrary_DebugDrawTrajectory::WorldTransform' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_DebugDrawTrajectory, Trajectory) == 0x000070, "Member 'MotionTrajectoryBlueprintLibrary_DebugDrawTrajectory::Trajectory' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_DebugDrawTrajectory, PredictionColor) == 0x000088, "Member 'MotionTrajectoryBlueprintLibrary_DebugDrawTrajectory::PredictionColor' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_DebugDrawTrajectory, HistoryColor) == 0x000098, "Member 'MotionTrajectoryBlueprintLibrary_DebugDrawTrajectory::HistoryColor' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_DebugDrawTrajectory, TransformScale) == 0x0000A8, "Member 'MotionTrajectoryBlueprintLibrary_DebugDrawTrajectory::TransformScale' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_DebugDrawTrajectory, TransformThickness) == 0x0000AC, "Member 'MotionTrajectoryBlueprintLibrary_DebugDrawTrajectory::TransformThickness' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_DebugDrawTrajectory, ArrowScale) == 0x0000B0, "Member 'MotionTrajectoryBlueprintLibrary_DebugDrawTrajectory::ArrowScale' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_DebugDrawTrajectory, ArrowSize) == 0x0000B4, "Member 'MotionTrajectoryBlueprintLibrary_DebugDrawTrajectory::ArrowSize' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_DebugDrawTrajectory, ArrowThickness) == 0x0000B8, "Member 'MotionTrajectoryBlueprintLibrary_DebugDrawTrajectory::ArrowThickness' has a wrong offset!");

// Function MotionTrajectory.MotionTrajectoryBlueprintLibrary.FlattenTrajectory2D
// 0x0038 (0x0038 - 0x0000)
struct MotionTrajectoryBlueprintLibrary_FlattenTrajectory2D final
{
public:
	struct FTrajectorySampleRange                 Trajectory;                                        // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	bool                                          PreserveSpeed;                                     // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTrajectorySampleRange                 ReturnValue;                                       // 0x0020(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MotionTrajectoryBlueprintLibrary_FlattenTrajectory2D) == 0x000008, "Wrong alignment on MotionTrajectoryBlueprintLibrary_FlattenTrajectory2D");
static_assert(sizeof(MotionTrajectoryBlueprintLibrary_FlattenTrajectory2D) == 0x000038, "Wrong size on MotionTrajectoryBlueprintLibrary_FlattenTrajectory2D");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_FlattenTrajectory2D, Trajectory) == 0x000000, "Member 'MotionTrajectoryBlueprintLibrary_FlattenTrajectory2D::Trajectory' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_FlattenTrajectory2D, PreserveSpeed) == 0x000018, "Member 'MotionTrajectoryBlueprintLibrary_FlattenTrajectory2D::PreserveSpeed' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_FlattenTrajectory2D, ReturnValue) == 0x000020, "Member 'MotionTrajectoryBlueprintLibrary_FlattenTrajectory2D::ReturnValue' has a wrong offset!");

// Function MotionTrajectory.MotionTrajectoryBlueprintLibrary.IsConstantSpeedTrajectory
// 0x0028 (0x0028 - 0x0000)
struct MotionTrajectoryBlueprintLibrary_IsConstantSpeedTrajectory final
{
public:
	struct FTrajectorySampleRange                 Trajectory;                                        // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         Speed;                                             // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Tolerance;                                         // 0x001C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MotionTrajectoryBlueprintLibrary_IsConstantSpeedTrajectory) == 0x000008, "Wrong alignment on MotionTrajectoryBlueprintLibrary_IsConstantSpeedTrajectory");
static_assert(sizeof(MotionTrajectoryBlueprintLibrary_IsConstantSpeedTrajectory) == 0x000028, "Wrong size on MotionTrajectoryBlueprintLibrary_IsConstantSpeedTrajectory");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_IsConstantSpeedTrajectory, Trajectory) == 0x000000, "Member 'MotionTrajectoryBlueprintLibrary_IsConstantSpeedTrajectory::Trajectory' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_IsConstantSpeedTrajectory, Speed) == 0x000018, "Member 'MotionTrajectoryBlueprintLibrary_IsConstantSpeedTrajectory::Speed' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_IsConstantSpeedTrajectory, Tolerance) == 0x00001C, "Member 'MotionTrajectoryBlueprintLibrary_IsConstantSpeedTrajectory::Tolerance' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_IsConstantSpeedTrajectory, ReturnValue) == 0x000020, "Member 'MotionTrajectoryBlueprintLibrary_IsConstantSpeedTrajectory::ReturnValue' has a wrong offset!");

// Function MotionTrajectory.MotionTrajectoryBlueprintLibrary.IsSharpVelocityDirChange
// 0x0068 (0x0068 - 0x0000)
struct MotionTrajectoryBlueprintLibrary_IsSharpVelocityDirChange final
{
public:
	struct FTrajectorySampleRange                 Trajectory;                                        // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         MinSharpTurnAngleDegrees;                          // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETrajectorySampleDomain                       RotationConstraintDomain;                          // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RotationConstraintValue;                           // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxAlignmentAngleDegrees;                          // 0x0024(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinLinearSpeed;                                    // 0x0028(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TurnAxis;                                          // 0x0030(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ForwardAxis;                                       // 0x0048(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MotionTrajectoryBlueprintLibrary_IsSharpVelocityDirChange) == 0x000008, "Wrong alignment on MotionTrajectoryBlueprintLibrary_IsSharpVelocityDirChange");
static_assert(sizeof(MotionTrajectoryBlueprintLibrary_IsSharpVelocityDirChange) == 0x000068, "Wrong size on MotionTrajectoryBlueprintLibrary_IsSharpVelocityDirChange");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_IsSharpVelocityDirChange, Trajectory) == 0x000000, "Member 'MotionTrajectoryBlueprintLibrary_IsSharpVelocityDirChange::Trajectory' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_IsSharpVelocityDirChange, MinSharpTurnAngleDegrees) == 0x000018, "Member 'MotionTrajectoryBlueprintLibrary_IsSharpVelocityDirChange::MinSharpTurnAngleDegrees' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_IsSharpVelocityDirChange, RotationConstraintDomain) == 0x00001C, "Member 'MotionTrajectoryBlueprintLibrary_IsSharpVelocityDirChange::RotationConstraintDomain' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_IsSharpVelocityDirChange, RotationConstraintValue) == 0x000020, "Member 'MotionTrajectoryBlueprintLibrary_IsSharpVelocityDirChange::RotationConstraintValue' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_IsSharpVelocityDirChange, MaxAlignmentAngleDegrees) == 0x000024, "Member 'MotionTrajectoryBlueprintLibrary_IsSharpVelocityDirChange::MaxAlignmentAngleDegrees' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_IsSharpVelocityDirChange, MinLinearSpeed) == 0x000028, "Member 'MotionTrajectoryBlueprintLibrary_IsSharpVelocityDirChange::MinLinearSpeed' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_IsSharpVelocityDirChange, TurnAxis) == 0x000030, "Member 'MotionTrajectoryBlueprintLibrary_IsSharpVelocityDirChange::TurnAxis' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_IsSharpVelocityDirChange, ForwardAxis) == 0x000048, "Member 'MotionTrajectoryBlueprintLibrary_IsSharpVelocityDirChange::ForwardAxis' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_IsSharpVelocityDirChange, ReturnValue) == 0x000060, "Member 'MotionTrajectoryBlueprintLibrary_IsSharpVelocityDirChange::ReturnValue' has a wrong offset!");

// Function MotionTrajectory.MotionTrajectoryBlueprintLibrary.IsStartingTrajectory
// 0x0028 (0x0028 - 0x0000)
struct MotionTrajectoryBlueprintLibrary_IsStartingTrajectory final
{
public:
	struct FTrajectorySampleRange                 Trajectory;                                        // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         MoveMinSpeed;                                      // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IdleMaxSpeed;                                      // 0x001C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MotionTrajectoryBlueprintLibrary_IsStartingTrajectory) == 0x000008, "Wrong alignment on MotionTrajectoryBlueprintLibrary_IsStartingTrajectory");
static_assert(sizeof(MotionTrajectoryBlueprintLibrary_IsStartingTrajectory) == 0x000028, "Wrong size on MotionTrajectoryBlueprintLibrary_IsStartingTrajectory");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_IsStartingTrajectory, Trajectory) == 0x000000, "Member 'MotionTrajectoryBlueprintLibrary_IsStartingTrajectory::Trajectory' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_IsStartingTrajectory, MoveMinSpeed) == 0x000018, "Member 'MotionTrajectoryBlueprintLibrary_IsStartingTrajectory::MoveMinSpeed' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_IsStartingTrajectory, IdleMaxSpeed) == 0x00001C, "Member 'MotionTrajectoryBlueprintLibrary_IsStartingTrajectory::IdleMaxSpeed' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_IsStartingTrajectory, ReturnValue) == 0x000020, "Member 'MotionTrajectoryBlueprintLibrary_IsStartingTrajectory::ReturnValue' has a wrong offset!");

// Function MotionTrajectory.MotionTrajectoryBlueprintLibrary.IsStoppingTrajectory
// 0x0028 (0x0028 - 0x0000)
struct MotionTrajectoryBlueprintLibrary_IsStoppingTrajectory final
{
public:
	struct FTrajectorySampleRange                 Trajectory;                                        // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         MoveMinSpeed;                                      // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IdleMaxSpeed;                                      // 0x001C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MotionTrajectoryBlueprintLibrary_IsStoppingTrajectory) == 0x000008, "Wrong alignment on MotionTrajectoryBlueprintLibrary_IsStoppingTrajectory");
static_assert(sizeof(MotionTrajectoryBlueprintLibrary_IsStoppingTrajectory) == 0x000028, "Wrong size on MotionTrajectoryBlueprintLibrary_IsStoppingTrajectory");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_IsStoppingTrajectory, Trajectory) == 0x000000, "Member 'MotionTrajectoryBlueprintLibrary_IsStoppingTrajectory::Trajectory' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_IsStoppingTrajectory, MoveMinSpeed) == 0x000018, "Member 'MotionTrajectoryBlueprintLibrary_IsStoppingTrajectory::MoveMinSpeed' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_IsStoppingTrajectory, IdleMaxSpeed) == 0x00001C, "Member 'MotionTrajectoryBlueprintLibrary_IsStoppingTrajectory::IdleMaxSpeed' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_IsStoppingTrajectory, ReturnValue) == 0x000020, "Member 'MotionTrajectoryBlueprintLibrary_IsStoppingTrajectory::ReturnValue' has a wrong offset!");

// Function MotionTrajectory.MotionTrajectoryBlueprintLibrary.MakeTrajectoryRelativeToComponent
// 0x0038 (0x0038 - 0x0000)
struct MotionTrajectoryBlueprintLibrary_MakeTrajectoryRelativeToComponent final
{
public:
	struct FTrajectorySampleRange                 ActorTrajectory;                                   // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	const class USceneComponent*                  Component;                                         // 0x0018(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTrajectorySampleRange                 ReturnValue;                                       // 0x0020(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MotionTrajectoryBlueprintLibrary_MakeTrajectoryRelativeToComponent) == 0x000008, "Wrong alignment on MotionTrajectoryBlueprintLibrary_MakeTrajectoryRelativeToComponent");
static_assert(sizeof(MotionTrajectoryBlueprintLibrary_MakeTrajectoryRelativeToComponent) == 0x000038, "Wrong size on MotionTrajectoryBlueprintLibrary_MakeTrajectoryRelativeToComponent");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_MakeTrajectoryRelativeToComponent, ActorTrajectory) == 0x000000, "Member 'MotionTrajectoryBlueprintLibrary_MakeTrajectoryRelativeToComponent::ActorTrajectory' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_MakeTrajectoryRelativeToComponent, Component) == 0x000018, "Member 'MotionTrajectoryBlueprintLibrary_MakeTrajectoryRelativeToComponent::Component' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_MakeTrajectoryRelativeToComponent, ReturnValue) == 0x000020, "Member 'MotionTrajectoryBlueprintLibrary_MakeTrajectoryRelativeToComponent::ReturnValue' has a wrong offset!");

// Function MotionTrajectory.MotionTrajectoryBlueprintLibrary.RotateTrajectory
// 0x0060 (0x0060 - 0x0000)
struct MotionTrajectoryBlueprintLibrary_RotateTrajectory final
{
public:
	struct FTrajectorySampleRange                 Trajectory;                                        // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  Rotation;                                          // 0x0020(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTrajectorySampleRange                 ReturnValue;                                       // 0x0040(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MotionTrajectoryBlueprintLibrary_RotateTrajectory) == 0x000010, "Wrong alignment on MotionTrajectoryBlueprintLibrary_RotateTrajectory");
static_assert(sizeof(MotionTrajectoryBlueprintLibrary_RotateTrajectory) == 0x000060, "Wrong size on MotionTrajectoryBlueprintLibrary_RotateTrajectory");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_RotateTrajectory, Trajectory) == 0x000000, "Member 'MotionTrajectoryBlueprintLibrary_RotateTrajectory::Trajectory' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_RotateTrajectory, Rotation) == 0x000020, "Member 'MotionTrajectoryBlueprintLibrary_RotateTrajectory::Rotation' has a wrong offset!");
static_assert(offsetof(MotionTrajectoryBlueprintLibrary_RotateTrajectory, ReturnValue) == 0x000040, "Member 'MotionTrajectoryBlueprintLibrary_RotateTrajectory::ReturnValue' has a wrong offset!");

}

