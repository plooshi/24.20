#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AIPatrolPath

#include "Basic.hpp"

#include "FortniteAI_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AIPatrolPath_structs.hpp"


namespace SDK
{

// Class AIPatrolPath.AIPatrolPathComponent
// 0x02A8 (0x0348 - 0x00A0)
class UAIPatrolPathComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x20];                                      // 0x00A0(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   DefaultAIPawn;                                     // 0x00C0(0x0028)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ABuildingActor>             PathRendererClass;                                 // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAllowPartialPaths;                                // 0x00F0(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  UnableToPlaceNewDeviceTags;                        // 0x00F8(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FNavAgentProperties                    CachedAIAgentProperties;                           // 0x0118(0x0030)(Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNavigationSystemV1*                    CachedNavSystem;                                   // 0x0148(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ANavigationData*                        CachedNavData;                                     // 0x0150(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UNavigationQueryFilter>     CachedFilterClass;                                 // 0x0158(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_160[0x10];                                     // 0x0160(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class AFortAthenaPatrolPoint* PatrolPathPoint, class AAIController* Instigator)> OnPatrolPointFailedToReach;                        // 0x0170(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void(class AFortAthenaPatrolPoint* PatrolPathPoint, class AAIController* Instigator)> OnPatrolPointReached;                              // 0x0180(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void(class AAIController* Instigator)> OnPatrolPathStarted;                               // 0x0190(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void(class AAIController* Instigator)> OnPatrolPathStopped;                               // 0x01A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_1B0[0x8];                                      // 0x01B0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAIPatrolPathComponent*>         PatrolPath;                                        // 0x01B8(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	struct FPatrolPathSegmentDetails              PathSegmentDetails;                                // 0x01C8(0x0108)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2D0[0x10];                                     // 0x02D0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIPatrolPathComponent*                 CopiedFrom;                                        // 0x02E0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2E8[0x8];                                      // 0x02E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIPatrolPathComponent*                 CopiedFromCut;                                     // 0x02F0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortCreativePatrolPath*                PatrolPathActor;                                   // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortAthenaPatrolPoint*                 PatrolPointActor;                                  // 0x0300(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UAIPatrolPathComponent*>         MultiSelectActorToEnterList;                       // 0x0308(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_318[0x30];                                     // 0x0318(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void GeneratePathPoints(const EFortCreativePatrolPathGroup PatrolPathGroup);
	TSubclassOf<class UNavigationQueryFilter> GetPatrolFilterOptions();
	void OnPathExtremitiesChanged(const bool bIsStart, const bool bIsEnd);
	void OnPatrolPathActorAssigned();
	void OnPatrolPathGroupsMerged();
	void PatrolPathStarted(class AAIController* Instigator);
	void PatrolPathStopped(class AAIController* Instigator);
	void PatrolPointFailedToReach(class AFortAthenaPatrolPoint* PathPoint, class AAIController* Instigator);
	void PatrolPointReached(class AFortAthenaPatrolPoint* PathPoint, class AAIController* Instigator);
	bool RemovePoint();
	void RenderToNextAndPreviousPoint();
	void RenderToNextPoint();
	void RequestRenderPath();
	void SetPatrollingMode(const EPatrollingMode NewMode);
	void SetPatrolPathEnabled(const bool bIsEnabled);
	void SetPatrolPathGroup(const EFortCreativePatrolPathGroup PatrolPathGroup);
	void SetRenderPath(const bool bRenderPath);
	bool ShouldRenderPath();
	bool SyncSharedUserOptions(class UAIPatrolPathComponent* CopyToAIPatrolPathComp, const TMap<class FString, class FString>& UserOptionValues);

	bool CanNextPointBeReached() const;
	TArray<class UAIPatrolPathComponent*> GetLinkedPatrolPoints() const;
	bool GetNextAvailablePatrolPathIndex(int32* NextAvailableIndex) const;
	int32 GetPatrolPathIndex() const;
	class UAIPatrolPathComponent* GetPatrolPathPoint(const int32 InPatrolPathIndex, const int32 InPatrolPathPointIndex) const;
	int32 GetPatrolPathPointIndex() const;
	bool HasValidPatrolPath() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AIPatrolPathComponent">();
	}
	static class UAIPatrolPathComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAIPatrolPathComponent>();
	}
};
static_assert(alignof(UAIPatrolPathComponent) == 0x000008, "Wrong alignment on UAIPatrolPathComponent");
static_assert(sizeof(UAIPatrolPathComponent) == 0x000348, "Wrong size on UAIPatrolPathComponent");
static_assert(offsetof(UAIPatrolPathComponent, DefaultAIPawn) == 0x0000C0, "Member 'UAIPatrolPathComponent::DefaultAIPawn' has a wrong offset!");
static_assert(offsetof(UAIPatrolPathComponent, PathRendererClass) == 0x0000E8, "Member 'UAIPatrolPathComponent::PathRendererClass' has a wrong offset!");
static_assert(offsetof(UAIPatrolPathComponent, bAllowPartialPaths) == 0x0000F0, "Member 'UAIPatrolPathComponent::bAllowPartialPaths' has a wrong offset!");
static_assert(offsetof(UAIPatrolPathComponent, UnableToPlaceNewDeviceTags) == 0x0000F8, "Member 'UAIPatrolPathComponent::UnableToPlaceNewDeviceTags' has a wrong offset!");
static_assert(offsetof(UAIPatrolPathComponent, CachedAIAgentProperties) == 0x000118, "Member 'UAIPatrolPathComponent::CachedAIAgentProperties' has a wrong offset!");
static_assert(offsetof(UAIPatrolPathComponent, CachedNavSystem) == 0x000148, "Member 'UAIPatrolPathComponent::CachedNavSystem' has a wrong offset!");
static_assert(offsetof(UAIPatrolPathComponent, CachedNavData) == 0x000150, "Member 'UAIPatrolPathComponent::CachedNavData' has a wrong offset!");
static_assert(offsetof(UAIPatrolPathComponent, CachedFilterClass) == 0x000158, "Member 'UAIPatrolPathComponent::CachedFilterClass' has a wrong offset!");
static_assert(offsetof(UAIPatrolPathComponent, OnPatrolPointFailedToReach) == 0x000170, "Member 'UAIPatrolPathComponent::OnPatrolPointFailedToReach' has a wrong offset!");
static_assert(offsetof(UAIPatrolPathComponent, OnPatrolPointReached) == 0x000180, "Member 'UAIPatrolPathComponent::OnPatrolPointReached' has a wrong offset!");
static_assert(offsetof(UAIPatrolPathComponent, OnPatrolPathStarted) == 0x000190, "Member 'UAIPatrolPathComponent::OnPatrolPathStarted' has a wrong offset!");
static_assert(offsetof(UAIPatrolPathComponent, OnPatrolPathStopped) == 0x0001A0, "Member 'UAIPatrolPathComponent::OnPatrolPathStopped' has a wrong offset!");
static_assert(offsetof(UAIPatrolPathComponent, PatrolPath) == 0x0001B8, "Member 'UAIPatrolPathComponent::PatrolPath' has a wrong offset!");
static_assert(offsetof(UAIPatrolPathComponent, PathSegmentDetails) == 0x0001C8, "Member 'UAIPatrolPathComponent::PathSegmentDetails' has a wrong offset!");
static_assert(offsetof(UAIPatrolPathComponent, CopiedFrom) == 0x0002E0, "Member 'UAIPatrolPathComponent::CopiedFrom' has a wrong offset!");
static_assert(offsetof(UAIPatrolPathComponent, CopiedFromCut) == 0x0002F0, "Member 'UAIPatrolPathComponent::CopiedFromCut' has a wrong offset!");
static_assert(offsetof(UAIPatrolPathComponent, PatrolPathActor) == 0x0002F8, "Member 'UAIPatrolPathComponent::PatrolPathActor' has a wrong offset!");
static_assert(offsetof(UAIPatrolPathComponent, PatrolPointActor) == 0x000300, "Member 'UAIPatrolPathComponent::PatrolPointActor' has a wrong offset!");
static_assert(offsetof(UAIPatrolPathComponent, MultiSelectActorToEnterList) == 0x000308, "Member 'UAIPatrolPathComponent::MultiSelectActorToEnterList' has a wrong offset!");

}

