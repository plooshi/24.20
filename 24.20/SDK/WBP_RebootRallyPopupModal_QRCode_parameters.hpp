#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_RebootRallyPopupModal_QRCode

#include "Basic.hpp"

#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_RebootRallyPopupModal_QRCode.WBP_RebootRallyPopupModal_QRCode_C.ExecuteUbergraph_WBP_RebootRallyPopupModal_QRCode
// 0x0050 (0x0050 - 0x0000)
struct WBP_RebootRallyPopupModal_QRCode_C_ExecuteUbergraph_WBP_RebootRallyPopupModal_QRCode final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue_1;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsInvite;                            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue_2;    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue_1;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlatformName_ReturnValue;              // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RebootRallyPopupModal_QRCode_C_ExecuteUbergraph_WBP_RebootRallyPopupModal_QRCode) == 0x000008, "Wrong alignment on WBP_RebootRallyPopupModal_QRCode_C_ExecuteUbergraph_WBP_RebootRallyPopupModal_QRCode");
static_assert(sizeof(WBP_RebootRallyPopupModal_QRCode_C_ExecuteUbergraph_WBP_RebootRallyPopupModal_QRCode) == 0x000050, "Wrong size on WBP_RebootRallyPopupModal_QRCode_C_ExecuteUbergraph_WBP_RebootRallyPopupModal_QRCode");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_ExecuteUbergraph_WBP_RebootRallyPopupModal_QRCode, EntryPoint) == 0x000000, "Member 'WBP_RebootRallyPopupModal_QRCode_C_ExecuteUbergraph_WBP_RebootRallyPopupModal_QRCode::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_ExecuteUbergraph_WBP_RebootRallyPopupModal_QRCode, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_RebootRallyPopupModal_QRCode_C_ExecuteUbergraph_WBP_RebootRallyPopupModal_QRCode::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_ExecuteUbergraph_WBP_RebootRallyPopupModal_QRCode, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000010, "Member 'WBP_RebootRallyPopupModal_QRCode_C_ExecuteUbergraph_WBP_RebootRallyPopupModal_QRCode::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_ExecuteUbergraph_WBP_RebootRallyPopupModal_QRCode, CallFunc_GetLocalPlayerSubsystem_ReturnValue_1) == 0x000018, "Member 'WBP_RebootRallyPopupModal_QRCode_C_ExecuteUbergraph_WBP_RebootRallyPopupModal_QRCode::CallFunc_GetLocalPlayerSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_ExecuteUbergraph_WBP_RebootRallyPopupModal_QRCode, CallFunc_GetCurrentInputType_ReturnValue) == 0x000020, "Member 'WBP_RebootRallyPopupModal_QRCode_C_ExecuteUbergraph_WBP_RebootRallyPopupModal_QRCode::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_ExecuteUbergraph_WBP_RebootRallyPopupModal_QRCode, K2Node_Event_bIsInvite) == 0x000021, "Member 'WBP_RebootRallyPopupModal_QRCode_C_ExecuteUbergraph_WBP_RebootRallyPopupModal_QRCode::K2Node_Event_bIsInvite' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_ExecuteUbergraph_WBP_RebootRallyPopupModal_QRCode, CallFunc_GetLocalPlayerSubsystem_ReturnValue_2) == 0x000028, "Member 'WBP_RebootRallyPopupModal_QRCode_C_ExecuteUbergraph_WBP_RebootRallyPopupModal_QRCode::CallFunc_GetLocalPlayerSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_ExecuteUbergraph_WBP_RebootRallyPopupModal_QRCode, CallFunc_GetCurrentInputType_ReturnValue_1) == 0x000030, "Member 'WBP_RebootRallyPopupModal_QRCode_C_ExecuteUbergraph_WBP_RebootRallyPopupModal_QRCode::CallFunc_GetCurrentInputType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_ExecuteUbergraph_WBP_RebootRallyPopupModal_QRCode, CallFunc_GetPlatformName_ReturnValue) == 0x000038, "Member 'WBP_RebootRallyPopupModal_QRCode_C_ExecuteUbergraph_WBP_RebootRallyPopupModal_QRCode::CallFunc_GetPlatformName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_ExecuteUbergraph_WBP_RebootRallyPopupModal_QRCode, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000048, "Member 'WBP_RebootRallyPopupModal_QRCode_C_ExecuteUbergraph_WBP_RebootRallyPopupModal_QRCode::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");

// Function WBP_RebootRallyPopupModal_QRCode.WBP_RebootRallyPopupModal_QRCode_C.InputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_RebootRallyPopupModal_QRCode_C_InputMethodChanged final
{
public:
	ECommonInputType                              NewInputType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RebootRallyPopupModal_QRCode_C_InputMethodChanged) == 0x000001, "Wrong alignment on WBP_RebootRallyPopupModal_QRCode_C_InputMethodChanged");
static_assert(sizeof(WBP_RebootRallyPopupModal_QRCode_C_InputMethodChanged) == 0x000001, "Wrong size on WBP_RebootRallyPopupModal_QRCode_C_InputMethodChanged");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_InputMethodChanged, NewInputType) == 0x000000, "Member 'WBP_RebootRallyPopupModal_QRCode_C_InputMethodChanged::NewInputType' has a wrong offset!");

// Function WBP_RebootRallyPopupModal_QRCode.WBP_RebootRallyPopupModal_QRCode_C.SetIsInvite
// 0x0001 (0x0001 - 0x0000)
struct WBP_RebootRallyPopupModal_QRCode_C_SetIsInvite final
{
public:
	bool                                          bIsInvite_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RebootRallyPopupModal_QRCode_C_SetIsInvite) == 0x000001, "Wrong alignment on WBP_RebootRallyPopupModal_QRCode_C_SetIsInvite");
static_assert(sizeof(WBP_RebootRallyPopupModal_QRCode_C_SetIsInvite) == 0x000001, "Wrong size on WBP_RebootRallyPopupModal_QRCode_C_SetIsInvite");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_SetIsInvite, bIsInvite_0) == 0x000000, "Member 'WBP_RebootRallyPopupModal_QRCode_C_SetIsInvite::bIsInvite_0' has a wrong offset!");

// Function WBP_RebootRallyPopupModal_QRCode.WBP_RebootRallyPopupModal_QRCode_C.UpdateQRCode
// 0x0060 (0x0060 - 0x0000)
struct WBP_RebootRallyPopupModal_QRCode_C_UpdateQRCode final
{
public:
	ECommonInputType                              NewInputType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              Temp_byte_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_5;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_6;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_7;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RebootRallyPopupModal_QRCode_C_UpdateQRCode) == 0x000008, "Wrong alignment on WBP_RebootRallyPopupModal_QRCode_C_UpdateQRCode");
static_assert(sizeof(WBP_RebootRallyPopupModal_QRCode_C_UpdateQRCode) == 0x000060, "Wrong size on WBP_RebootRallyPopupModal_QRCode_C_UpdateQRCode");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateQRCode, NewInputType) == 0x000000, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateQRCode::NewInputType' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateQRCode, Temp_byte_Variable) == 0x000001, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateQRCode::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateQRCode, Temp_object_Variable) == 0x000008, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateQRCode::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateQRCode, Temp_object_Variable_1) == 0x000010, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateQRCode::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateQRCode, Temp_object_Variable_2) == 0x000018, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateQRCode::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateQRCode, Temp_object_Variable_3) == 0x000020, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateQRCode::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateQRCode, Temp_byte_Variable_1) == 0x000028, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateQRCode::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateQRCode, K2Node_Select_Default) == 0x000030, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateQRCode::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateQRCode, Temp_object_Variable_4) == 0x000038, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateQRCode::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateQRCode, Temp_object_Variable_5) == 0x000040, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateQRCode::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateQRCode, Temp_object_Variable_6) == 0x000048, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateQRCode::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateQRCode, Temp_object_Variable_7) == 0x000050, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateQRCode::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateQRCode, K2Node_Select_Default_1) == 0x000058, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateQRCode::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_RebootRallyPopupModal_QRCode.WBP_RebootRallyPopupModal_QRCode_C.UpdateText
// 0x0090 (0x0090 - 0x0000)
struct WBP_RebootRallyPopupModal_QRCode_C_UpdateText final
{
public:
	ECommonInputType                              NewInputType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              Temp_byte_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0038(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0050(0x0018)()
	ECommonInputType                              Temp_byte_Variable_5;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0070(0x0018)()
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RebootRallyPopupModal_QRCode_C_UpdateText) == 0x000008, "Wrong alignment on WBP_RebootRallyPopupModal_QRCode_C_UpdateText");
static_assert(sizeof(WBP_RebootRallyPopupModal_QRCode_C_UpdateText) == 0x000090, "Wrong size on WBP_RebootRallyPopupModal_QRCode_C_UpdateText");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateText, NewInputType) == 0x000000, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateText::NewInputType' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateText, Temp_byte_Variable) == 0x000001, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateText, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateText::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateText, Temp_byte_Variable_2) == 0x000003, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateText::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateText, Temp_byte_Variable_3) == 0x000004, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateText::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateText, Temp_byte_Variable_4) == 0x000005, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateText::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateText, Temp_text_Variable) == 0x000008, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateText, Temp_text_Variable_1) == 0x000020, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateText::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateText, Temp_text_Variable_2) == 0x000038, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateText::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateText, Temp_text_Variable_3) == 0x000050, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateText::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateText, Temp_byte_Variable_5) == 0x000068, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateText::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateText, K2Node_Select_Default) == 0x000070, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateText, K2Node_Select_Default_1) == 0x000088, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateText::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_RebootRallyPopupModal_QRCode.WBP_RebootRallyPopupModal_QRCode_C.UpdateURL
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_RebootRallyPopupModal_QRCode_C_UpdateURL final
{
public:
	ECommonInputType                              NewInputType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ECommonInputType                              Temp_byte_Variable_1;                              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_5;                            // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_6;                            // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_7;                            // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_1;                           // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RebootRallyPopupModal_QRCode_C_UpdateURL) == 0x000008, "Wrong alignment on WBP_RebootRallyPopupModal_QRCode_C_UpdateURL");
static_assert(sizeof(WBP_RebootRallyPopupModal_QRCode_C_UpdateURL) == 0x0000B0, "Wrong size on WBP_RebootRallyPopupModal_QRCode_C_UpdateURL");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateURL, NewInputType) == 0x000000, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateURL::NewInputType' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateURL, Temp_byte_Variable) == 0x000001, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateURL::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateURL, Temp_string_Variable) == 0x000008, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateURL::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateURL, Temp_string_Variable_1) == 0x000018, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateURL::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateURL, Temp_string_Variable_2) == 0x000028, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateURL::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateURL, Temp_string_Variable_3) == 0x000038, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateURL::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateURL, Temp_byte_Variable_1) == 0x000048, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateURL::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateURL, K2Node_Select_Default) == 0x000050, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateURL::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateURL, Temp_string_Variable_4) == 0x000060, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateURL::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateURL, Temp_string_Variable_5) == 0x000070, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateURL::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateURL, Temp_string_Variable_6) == 0x000080, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateURL::Temp_string_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateURL, Temp_string_Variable_7) == 0x000090, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateURL::Temp_string_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_RebootRallyPopupModal_QRCode_C_UpdateURL, K2Node_Select_Default_1) == 0x0000A0, "Member 'WBP_RebootRallyPopupModal_QRCode_C_UpdateURL::K2Node_Select_Default_1' has a wrong offset!");

}

