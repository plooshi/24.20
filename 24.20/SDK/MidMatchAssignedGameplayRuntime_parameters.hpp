#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MidMatchAssignedGameplayRuntime

#include "Basic.hpp"

#include "MidMatchAssignedGameplayRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function MidMatchAssignedGameplayRuntime.FortGameStateComponent_AssignedObjective.CalculateSquadAvgLocation
// 0x0028 (0x0028 - 0x0000)
struct FortGameStateComponent_AssignedObjective_CalculateSquadAvgLocation final
{
public:
	uint8                                         SquadId;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UObject*                          WorldContextObject;                                // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameStateComponent_AssignedObjective_CalculateSquadAvgLocation) == 0x000008, "Wrong alignment on FortGameStateComponent_AssignedObjective_CalculateSquadAvgLocation");
static_assert(sizeof(FortGameStateComponent_AssignedObjective_CalculateSquadAvgLocation) == 0x000028, "Wrong size on FortGameStateComponent_AssignedObjective_CalculateSquadAvgLocation");
static_assert(offsetof(FortGameStateComponent_AssignedObjective_CalculateSquadAvgLocation, SquadId) == 0x000000, "Member 'FortGameStateComponent_AssignedObjective_CalculateSquadAvgLocation::SquadId' has a wrong offset!");
static_assert(offsetof(FortGameStateComponent_AssignedObjective_CalculateSquadAvgLocation, WorldContextObject) == 0x000008, "Member 'FortGameStateComponent_AssignedObjective_CalculateSquadAvgLocation::WorldContextObject' has a wrong offset!");
static_assert(offsetof(FortGameStateComponent_AssignedObjective_CalculateSquadAvgLocation, ReturnValue) == 0x000010, "Member 'FortGameStateComponent_AssignedObjective_CalculateSquadAvgLocation::ReturnValue' has a wrong offset!");

// Function MidMatchAssignedGameplayRuntime.FortGameStateComponent_AssignedObjective.OnAssignedObjectiveReady
// 0x0028 (0x0028 - 0x0000)
struct FortGameStateComponent_AssignedObjective_OnAssignedObjectiveReady final
{
public:
	struct FFortAssignedObjectiveData             ObjectiveData;                                     // 0x0000(0x0028)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameStateComponent_AssignedObjective_OnAssignedObjectiveReady) == 0x000008, "Wrong alignment on FortGameStateComponent_AssignedObjective_OnAssignedObjectiveReady");
static_assert(sizeof(FortGameStateComponent_AssignedObjective_OnAssignedObjectiveReady) == 0x000028, "Wrong size on FortGameStateComponent_AssignedObjective_OnAssignedObjectiveReady");
static_assert(offsetof(FortGameStateComponent_AssignedObjective_OnAssignedObjectiveReady, ObjectiveData) == 0x000000, "Member 'FortGameStateComponent_AssignedObjective_OnAssignedObjectiveReady::ObjectiveData' has a wrong offset!");

}

