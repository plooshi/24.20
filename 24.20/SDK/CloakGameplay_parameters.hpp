#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CloakGameplay

#include "Basic.hpp"


namespace SDK::Params
{

// Function CloakGameplay.FortGameCueNotifyLoop_Cloak.SetModifierCanBeEnabled
// 0x0008 (0x0008 - 0x0000)
struct FortGameCueNotifyLoop_Cloak_SetModifierCanBeEnabled final
{
public:
	class FName                                   ModifierName;                                      // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNewCanBeEnabled;                                  // 0x0004(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortGameCueNotifyLoop_Cloak_SetModifierCanBeEnabled) == 0x000004, "Wrong alignment on FortGameCueNotifyLoop_Cloak_SetModifierCanBeEnabled");
static_assert(sizeof(FortGameCueNotifyLoop_Cloak_SetModifierCanBeEnabled) == 0x000008, "Wrong size on FortGameCueNotifyLoop_Cloak_SetModifierCanBeEnabled");
static_assert(offsetof(FortGameCueNotifyLoop_Cloak_SetModifierCanBeEnabled, ModifierName) == 0x000000, "Member 'FortGameCueNotifyLoop_Cloak_SetModifierCanBeEnabled::ModifierName' has a wrong offset!");
static_assert(offsetof(FortGameCueNotifyLoop_Cloak_SetModifierCanBeEnabled, bNewCanBeEnabled) == 0x000004, "Member 'FortGameCueNotifyLoop_Cloak_SetModifierCanBeEnabled::bNewCanBeEnabled' has a wrong offset!");
static_assert(offsetof(FortGameCueNotifyLoop_Cloak_SetModifierCanBeEnabled, ReturnValue) == 0x000005, "Member 'FortGameCueNotifyLoop_Cloak_SetModifierCanBeEnabled::ReturnValue' has a wrong offset!");

// Function CloakGameplay.FortGameCueNotifyLoop_Cloak.SetModifierEnabled
// 0x0008 (0x0008 - 0x0000)
struct FortGameCueNotifyLoop_Cloak_SetModifierEnabled final
{
public:
	class FName                                   ModifierName;                                      // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNewEnabled;                                       // 0x0004(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortGameCueNotifyLoop_Cloak_SetModifierEnabled) == 0x000004, "Wrong alignment on FortGameCueNotifyLoop_Cloak_SetModifierEnabled");
static_assert(sizeof(FortGameCueNotifyLoop_Cloak_SetModifierEnabled) == 0x000008, "Wrong size on FortGameCueNotifyLoop_Cloak_SetModifierEnabled");
static_assert(offsetof(FortGameCueNotifyLoop_Cloak_SetModifierEnabled, ModifierName) == 0x000000, "Member 'FortGameCueNotifyLoop_Cloak_SetModifierEnabled::ModifierName' has a wrong offset!");
static_assert(offsetof(FortGameCueNotifyLoop_Cloak_SetModifierEnabled, bNewEnabled) == 0x000004, "Member 'FortGameCueNotifyLoop_Cloak_SetModifierEnabled::bNewEnabled' has a wrong offset!");
static_assert(offsetof(FortGameCueNotifyLoop_Cloak_SetModifierEnabled, ReturnValue) == 0x000005, "Member 'FortGameCueNotifyLoop_Cloak_SetModifierEnabled::ReturnValue' has a wrong offset!");

// Function CloakGameplay.FortGameCueNotifyLoop_Cloak.TickVisibilityLevel
// 0x0008 (0x0008 - 0x0000)
struct FortGameCueNotifyLoop_Cloak_TickVisibilityLevel final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameCueNotifyLoop_Cloak_TickVisibilityLevel) == 0x000004, "Wrong alignment on FortGameCueNotifyLoop_Cloak_TickVisibilityLevel");
static_assert(sizeof(FortGameCueNotifyLoop_Cloak_TickVisibilityLevel) == 0x000008, "Wrong size on FortGameCueNotifyLoop_Cloak_TickVisibilityLevel");
static_assert(offsetof(FortGameCueNotifyLoop_Cloak_TickVisibilityLevel, DeltaSeconds) == 0x000000, "Member 'FortGameCueNotifyLoop_Cloak_TickVisibilityLevel::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(FortGameCueNotifyLoop_Cloak_TickVisibilityLevel, ReturnValue) == 0x000004, "Member 'FortGameCueNotifyLoop_Cloak_TickVisibilityLevel::ReturnValue' has a wrong offset!");

// Function CloakGameplay.FortGameCueNotifyLoop_Cloak.GetCurrentModifierValues
// 0x0010 (0x0010 - 0x0000)
struct FortGameCueNotifyLoop_Cloak_GetCurrentModifierValues final
{
public:
	float                                         OutVisibilityMultiplier;                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutVisibilityAddition;                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ModifierName;                                      // 0x0008(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortGameCueNotifyLoop_Cloak_GetCurrentModifierValues) == 0x000004, "Wrong alignment on FortGameCueNotifyLoop_Cloak_GetCurrentModifierValues");
static_assert(sizeof(FortGameCueNotifyLoop_Cloak_GetCurrentModifierValues) == 0x000010, "Wrong size on FortGameCueNotifyLoop_Cloak_GetCurrentModifierValues");
static_assert(offsetof(FortGameCueNotifyLoop_Cloak_GetCurrentModifierValues, OutVisibilityMultiplier) == 0x000000, "Member 'FortGameCueNotifyLoop_Cloak_GetCurrentModifierValues::OutVisibilityMultiplier' has a wrong offset!");
static_assert(offsetof(FortGameCueNotifyLoop_Cloak_GetCurrentModifierValues, OutVisibilityAddition) == 0x000004, "Member 'FortGameCueNotifyLoop_Cloak_GetCurrentModifierValues::OutVisibilityAddition' has a wrong offset!");
static_assert(offsetof(FortGameCueNotifyLoop_Cloak_GetCurrentModifierValues, ModifierName) == 0x000008, "Member 'FortGameCueNotifyLoop_Cloak_GetCurrentModifierValues::ModifierName' has a wrong offset!");
static_assert(offsetof(FortGameCueNotifyLoop_Cloak_GetCurrentModifierValues, ReturnValue) == 0x00000C, "Member 'FortGameCueNotifyLoop_Cloak_GetCurrentModifierValues::ReturnValue' has a wrong offset!");

}

