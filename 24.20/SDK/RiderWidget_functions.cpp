#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RiderWidget

#include "Basic.hpp"

#include "RiderWidget_classes.hpp"
#include "RiderWidget_parameters.hpp"


namespace SDK
{

// Function RiderWidget.RiderWidget_C.UpdateHealthDelta
// (Public, BlueprintCallable, BlueprintEvent)

void URiderWidget_C::UpdateHealthDelta()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiderWidget_C", "UpdateHealthDelta");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RiderWidget.RiderWidget_C.UpdateHealth
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URiderWidget_C::UpdateHealth(double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiderWidget_C", "UpdateHealth");

	Params::RiderWidget_C_UpdateHealth Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RiderWidget.RiderWidget_C.UpdateEnergy
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URiderWidget_C::UpdateEnergy(double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiderWidget_C", "UpdateEnergy");

	Params::RiderWidget_C_UpdateEnergy Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RiderWidget.RiderWidget_C.UpdateBoostEffect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  ProgressRatio                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URiderWidget_C::UpdateBoostEffect(double ProgressRatio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiderWidget_C", "UpdateBoostEffect");

	Params::RiderWidget_C_UpdateBoostEffect Parms{};

	Parms.ProgressRatio = ProgressRatio;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RiderWidget.RiderWidget_C.TryPlayingLowState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidgetAnimation*                 InAnimation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void URiderWidget_C::TryPlayingLowState(class UWidgetAnimation* InAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiderWidget_C", "TryPlayingLowState");

	Params::RiderWidget_C_TryPlayingLowState Parms{};

	Parms.InAnimation = InAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RiderWidget.RiderWidget_C.SetupEventBinds
// (Public, BlueprintCallable, BlueprintEvent)

void URiderWidget_C::SetupEventBinds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiderWidget_C", "SetupEventBinds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RiderWidget.RiderWidget_C.SetProgressBar
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UImage*                           TargetFillBar                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UImage*                           DeltaBar_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  PreviousValue                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Threshold                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FunctionName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FTimerHandle                     TimerHandle                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// double                                  DeltaDecayDelay                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTimerHandle                     DeltaTimerHandle                                       (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void URiderWidget_C::SetProgressBar(double Value, class UImage* TargetFillBar, class UImage* DeltaBar_0, double PreviousValue, double Threshold, const class FString& FunctionName, struct FTimerHandle& TimerHandle, double DeltaDecayDelay, struct FTimerHandle* DeltaTimerHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiderWidget_C", "SetProgressBar");

	Params::RiderWidget_C_SetProgressBar Parms{};

	Parms.Value = Value;
	Parms.TargetFillBar = TargetFillBar;
	Parms.DeltaBar_0 = DeltaBar_0;
	Parms.PreviousValue = PreviousValue;
	Parms.Threshold = Threshold;
	Parms.FunctionName = std::move(FunctionName);
	Parms.TimerHandle = std::move(TimerHandle);
	Parms.DeltaDecayDelay = DeltaDecayDelay;

	UObject::ProcessEvent(Func, &Parms);

	TimerHandle = std::move(Parms.TimerHandle);

	if (DeltaTimerHandle != nullptr)
		*DeltaTimerHandle = std::move(Parms.DeltaTimerHandle);
}


// Function RiderWidget.RiderWidget_C.SetHealthValue
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URiderWidget_C::SetHealthValue(double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiderWidget_C", "SetHealthValue");

	Params::RiderWidget_C_SetHealthValue Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RiderWidget.RiderWidget_C.SetBoostAnim
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsBoosting                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URiderWidget_C::SetBoostAnim(bool IsBoosting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiderWidget_C", "SetBoostAnim");

	Params::RiderWidget_C_SetBoostAnim Parms{};

	Parms.IsBoosting = IsBoosting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RiderWidget.RiderWidget_C.Set Delta
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UImage*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  CurrentValue_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PreviousValue                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Threshold                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           FunctionName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FTimerHandle                     TimerHandle                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// double                                  DeltaDecayDelay                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTimerHandle                     TimerHandleRef                                         (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void URiderWidget_C::Set_Delta(class UImage* Target, double CurrentValue_0, double PreviousValue, double Threshold, const class FString& FunctionName, struct FTimerHandle& TimerHandle, double DeltaDecayDelay, struct FTimerHandle* TimerHandleRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiderWidget_C", "Set Delta");

	Params::RiderWidget_C_Set_Delta Parms{};

	Parms.Target = Target;
	Parms.CurrentValue_0 = CurrentValue_0;
	Parms.PreviousValue = PreviousValue;
	Parms.Threshold = Threshold;
	Parms.FunctionName = std::move(FunctionName);
	Parms.TimerHandle = std::move(TimerHandle);
	Parms.DeltaDecayDelay = DeltaDecayDelay;

	UObject::ProcessEvent(Func, &Parms);

	TimerHandle = std::move(Parms.TimerHandle);

	if (TimerHandleRef != nullptr)
		*TimerHandleRef = std::move(Parms.TimerHandleRef);
}


// Function RiderWidget.RiderWidget_C.RiderUIHealthChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Health                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URiderWidget_C::RiderUIHealthChanged(double Health)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiderWidget_C", "RiderUIHealthChanged");

	Params::RiderWidget_C_RiderUIHealthChanged Parms{};

	Parms.Health = Health;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RiderWidget.RiderWidget_C.RiderUIEnergyChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Energy                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URiderWidget_C::RiderUIEnergyChanged(double Energy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiderWidget_C", "RiderUIEnergyChanged");

	Params::RiderWidget_C_RiderUIEnergyChanged Parms{};

	Parms.Energy = Energy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RiderWidget.RiderWidget_C.Removed_2725D3654E4B103B624310B5CBD4B008
// (BlueprintCallable, BlueprintEvent)

void URiderWidget_C::Removed_2725D3654E4B103B624310B5CBD4B008()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiderWidget_C", "Removed_2725D3654E4B103B624310B5CBD4B008");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RiderWidget.RiderWidget_C.OnSprintStopped
// (BlueprintCallable, BlueprintEvent)

void URiderWidget_C::OnSprintStopped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiderWidget_C", "OnSprintStopped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RiderWidget.RiderWidget_C.OnSprintStarted
// (BlueprintCallable, BlueprintEvent)

void URiderWidget_C::OnSprintStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiderWidget_C", "OnSprintStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RiderWidget.RiderWidget_C.OnRiderUINewStats
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FSlateBrush                      Icon                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// class AActor*                           RidableActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void URiderWidget_C::OnRiderUINewStats(const class FText& Name_0, const struct FSlateBrush& Icon, class AActor* RidableActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiderWidget_C", "OnRiderUINewStats");

	Params::RiderWidget_C_OnRiderUINewStats Parms{};

	Parms.Name_0 = std::move(Name_0);
	Parms.Icon = std::move(Icon);
	Parms.RidableActor = RidableActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RiderWidget.RiderWidget_C.OnRiderUIEnd
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           RidableActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void URiderWidget_C::OnRiderUIEnd(class AActor* RidableActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiderWidget_C", "OnRiderUIEnd");

	Params::RiderWidget_C_OnRiderUIEnd Parms{};

	Parms.RidableActor = RidableActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RiderWidget.RiderWidget_C.OnOvershieldVisibilityChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsVisible_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URiderWidget_C::OnOvershieldVisibilityChanged(bool IsVisible_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiderWidget_C", "OnOvershieldVisibilityChanged");

	Params::RiderWidget_C_OnOvershieldVisibilityChanged Parms{};

	Parms.IsVisible_0 = IsVisible_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RiderWidget.RiderWidget_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void URiderWidget_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiderWidget_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RiderWidget.RiderWidget_C.ListenToSprintEvents
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ListenForSprinting                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URiderWidget_C::ListenToSprintEvents(bool ListenForSprinting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiderWidget_C", "ListenToSprintEvents");

	Params::RiderWidget_C_ListenToSprintEvents Parms{};

	Parms.ListenForSprinting = ListenForSprinting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RiderWidget.RiderWidget_C.InitRiderWidget
// (BlueprintCallable, BlueprintEvent)

void URiderWidget_C::InitRiderWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiderWidget_C", "InitRiderWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RiderWidget.RiderWidget_C.Finished_357CBEA140721428C88288A0127368B0
// (BlueprintCallable, BlueprintEvent)

void URiderWidget_C::Finished_357CBEA140721428C88288A0127368B0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiderWidget_C", "Finished_357CBEA140721428C88288A0127368B0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RiderWidget.RiderWidget_C.ExecuteUbergraph_RiderWidget
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URiderWidget_C::ExecuteUbergraph_RiderWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiderWidget_C", "ExecuteUbergraph_RiderWidget");

	Params::RiderWidget_C_ExecuteUbergraph_RiderWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RiderWidget.RiderWidget_C.EmptyEnergyDelta
// (Public, BlueprintCallable, BlueprintEvent)

void URiderWidget_C::EmptyEnergyDelta()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiderWidget_C", "EmptyEnergyDelta");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RiderWidget.RiderWidget_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void URiderWidget_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiderWidget_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RiderWidget.RiderWidget_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void URiderWidget_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiderWidget_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RiderWidget.RiderWidget_C.ClearOldBindings
// (Public, BlueprintCallable, BlueprintEvent)

void URiderWidget_C::ClearOldBindings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiderWidget_C", "ClearOldBindings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RiderWidget.RiderWidget_C.Added_2054A51646A7A04B3C1966AECE2DA459
// (BlueprintCallable, BlueprintEvent)

void URiderWidget_C::Added_2054A51646A7A04B3C1966AECE2DA459()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RiderWidget_C", "Added_2054A51646A7A04B3C1966AECE2DA459");

	UObject::ProcessEvent(Func, nullptr);
}

}

