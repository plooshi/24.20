#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HmxAudioGraphics

#include "Basic.hpp"

#include "HmxCore_structs.hpp"


namespace SDK::Params
{

// Function HmxAudioGraphics.MusicTempometerComponent.SetMaterialParameterCollection
// 0x0008 (0x0008 - 0x0000)
struct MusicTempometerComponent_SetMaterialParameterCollection final
{
public:
	class UMaterialParameterCollection*           InMaterialParameterCollection;                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MusicTempometerComponent_SetMaterialParameterCollection) == 0x000008, "Wrong alignment on MusicTempometerComponent_SetMaterialParameterCollection");
static_assert(sizeof(MusicTempometerComponent_SetMaterialParameterCollection) == 0x000008, "Wrong size on MusicTempometerComponent_SetMaterialParameterCollection");
static_assert(offsetof(MusicTempometerComponent_SetMaterialParameterCollection, InMaterialParameterCollection) == 0x000000, "Member 'MusicTempometerComponent_SetMaterialParameterCollection::InMaterialParameterCollection' has a wrong offset!");

// Function HmxAudioGraphics.MusicTempometerComponent.SetSongPosInterface
// 0x0010 (0x0010 - 0x0000)
struct MusicTempometerComponent_SetSongPosInterface final
{
public:
	TScriptInterface<class ISongPosInterface>     InSongPosInterface;                                // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MusicTempometerComponent_SetSongPosInterface) == 0x000008, "Wrong alignment on MusicTempometerComponent_SetSongPosInterface");
static_assert(sizeof(MusicTempometerComponent_SetSongPosInterface) == 0x000010, "Wrong size on MusicTempometerComponent_SetSongPosInterface");
static_assert(offsetof(MusicTempometerComponent_SetSongPosInterface, InSongPosInterface) == 0x000000, "Member 'MusicTempometerComponent_SetSongPosInterface::InSongPosInterface' has a wrong offset!");

// Function HmxAudioGraphics.MusicTempometerComponent.SetSongPosInterfaceFromActor
// 0x0008 (0x0008 - 0x0000)
struct MusicTempometerComponent_SetSongPosInterfaceFromActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MusicTempometerComponent_SetSongPosInterfaceFromActor) == 0x000008, "Wrong alignment on MusicTempometerComponent_SetSongPosInterfaceFromActor");
static_assert(sizeof(MusicTempometerComponent_SetSongPosInterfaceFromActor) == 0x000008, "Wrong size on MusicTempometerComponent_SetSongPosInterfaceFromActor");
static_assert(offsetof(MusicTempometerComponent_SetSongPosInterfaceFromActor, Actor) == 0x000000, "Member 'MusicTempometerComponent_SetSongPosInterfaceFromActor::Actor' has a wrong offset!");

// Function HmxAudioGraphics.MusicTempometerComponent.GetBeatLifetime
// 0x0004 (0x0004 - 0x0000)
struct MusicTempometerComponent_GetBeatLifetime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MusicTempometerComponent_GetBeatLifetime) == 0x000004, "Wrong alignment on MusicTempometerComponent_GetBeatLifetime");
static_assert(sizeof(MusicTempometerComponent_GetBeatLifetime) == 0x000004, "Wrong size on MusicTempometerComponent_GetBeatLifetime");
static_assert(offsetof(MusicTempometerComponent_GetBeatLifetime, ReturnValue) == 0x000000, "Member 'MusicTempometerComponent_GetBeatLifetime::ReturnValue' has a wrong offset!");

// Function HmxAudioGraphics.MusicTempometerComponent.GetBeatTick
// 0x0004 (0x0004 - 0x0000)
struct MusicTempometerComponent_GetBeatTick final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MusicTempometerComponent_GetBeatTick) == 0x000004, "Wrong alignment on MusicTempometerComponent_GetBeatTick");
static_assert(sizeof(MusicTempometerComponent_GetBeatTick) == 0x000004, "Wrong size on MusicTempometerComponent_GetBeatTick");
static_assert(offsetof(MusicTempometerComponent_GetBeatTick, ReturnValue) == 0x000000, "Member 'MusicTempometerComponent_GetBeatTick::ReturnValue' has a wrong offset!");

// Function HmxAudioGraphics.MusicTempometerComponent.GetMaterialParameterCollection
// 0x0008 (0x0008 - 0x0000)
struct MusicTempometerComponent_GetMaterialParameterCollection final
{
public:
	class UMaterialParameterCollection*           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MusicTempometerComponent_GetMaterialParameterCollection) == 0x000008, "Wrong alignment on MusicTempometerComponent_GetMaterialParameterCollection");
static_assert(sizeof(MusicTempometerComponent_GetMaterialParameterCollection) == 0x000008, "Wrong size on MusicTempometerComponent_GetMaterialParameterCollection");
static_assert(offsetof(MusicTempometerComponent_GetMaterialParameterCollection, ReturnValue) == 0x000000, "Member 'MusicTempometerComponent_GetMaterialParameterCollection::ReturnValue' has a wrong offset!");

// Function HmxAudioGraphics.MusicTempometerComponent.GetMeasureBeat
// 0x0004 (0x0004 - 0x0000)
struct MusicTempometerComponent_GetMeasureBeat final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MusicTempometerComponent_GetMeasureBeat) == 0x000004, "Wrong alignment on MusicTempometerComponent_GetMeasureBeat");
static_assert(sizeof(MusicTempometerComponent_GetMeasureBeat) == 0x000004, "Wrong size on MusicTempometerComponent_GetMeasureBeat");
static_assert(offsetof(MusicTempometerComponent_GetMeasureBeat, ReturnValue) == 0x000000, "Member 'MusicTempometerComponent_GetMeasureBeat::ReturnValue' has a wrong offset!");

// Function HmxAudioGraphics.MusicTempometerComponent.GetMeasureLifetime
// 0x0004 (0x0004 - 0x0000)
struct MusicTempometerComponent_GetMeasureLifetime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MusicTempometerComponent_GetMeasureLifetime) == 0x000004, "Wrong alignment on MusicTempometerComponent_GetMeasureLifetime");
static_assert(sizeof(MusicTempometerComponent_GetMeasureLifetime) == 0x000004, "Wrong size on MusicTempometerComponent_GetMeasureLifetime");
static_assert(offsetof(MusicTempometerComponent_GetMeasureLifetime, ReturnValue) == 0x000000, "Member 'MusicTempometerComponent_GetMeasureLifetime::ReturnValue' has a wrong offset!");

// Function HmxAudioGraphics.MusicTempometerComponent.GetMeasureTick
// 0x0004 (0x0004 - 0x0000)
struct MusicTempometerComponent_GetMeasureTick final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MusicTempometerComponent_GetMeasureTick) == 0x000004, "Wrong alignment on MusicTempometerComponent_GetMeasureTick");
static_assert(sizeof(MusicTempometerComponent_GetMeasureTick) == 0x000004, "Wrong size on MusicTempometerComponent_GetMeasureTick");
static_assert(offsetof(MusicTempometerComponent_GetMeasureTick, ReturnValue) == 0x000000, "Member 'MusicTempometerComponent_GetMeasureTick::ReturnValue' has a wrong offset!");

// Function HmxAudioGraphics.MusicTempometerComponent.GetMusicBeat
// 0x0004 (0x0004 - 0x0000)
struct MusicTempometerComponent_GetMusicBeat final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MusicTempometerComponent_GetMusicBeat) == 0x000004, "Wrong alignment on MusicTempometerComponent_GetMusicBeat");
static_assert(sizeof(MusicTempometerComponent_GetMusicBeat) == 0x000004, "Wrong size on MusicTempometerComponent_GetMusicBeat");
static_assert(offsetof(MusicTempometerComponent_GetMusicBeat, ReturnValue) == 0x000000, "Member 'MusicTempometerComponent_GetMusicBeat::ReturnValue' has a wrong offset!");

// Function HmxAudioGraphics.MusicTempometerComponent.GetMusicMeasure
// 0x0004 (0x0004 - 0x0000)
struct MusicTempometerComponent_GetMusicMeasure final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MusicTempometerComponent_GetMusicMeasure) == 0x000004, "Wrong alignment on MusicTempometerComponent_GetMusicMeasure");
static_assert(sizeof(MusicTempometerComponent_GetMusicMeasure) == 0x000004, "Wrong size on MusicTempometerComponent_GetMusicMeasure");
static_assert(offsetof(MusicTempometerComponent_GetMusicMeasure, ReturnValue) == 0x000000, "Member 'MusicTempometerComponent_GetMusicMeasure::ReturnValue' has a wrong offset!");

// Function HmxAudioGraphics.MusicTempometerComponent.GetMusicSeconds
// 0x0004 (0x0004 - 0x0000)
struct MusicTempometerComponent_GetMusicSeconds final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MusicTempometerComponent_GetMusicSeconds) == 0x000004, "Wrong alignment on MusicTempometerComponent_GetMusicSeconds");
static_assert(sizeof(MusicTempometerComponent_GetMusicSeconds) == 0x000004, "Wrong size on MusicTempometerComponent_GetMusicSeconds");
static_assert(offsetof(MusicTempometerComponent_GetMusicSeconds, ReturnValue) == 0x000000, "Member 'MusicTempometerComponent_GetMusicSeconds::ReturnValue' has a wrong offset!");

// Function HmxAudioGraphics.MusicTempometerComponent.GetMusicTick
// 0x0004 (0x0004 - 0x0000)
struct MusicTempometerComponent_GetMusicTick final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MusicTempometerComponent_GetMusicTick) == 0x000004, "Wrong alignment on MusicTempometerComponent_GetMusicTick");
static_assert(sizeof(MusicTempometerComponent_GetMusicTick) == 0x000004, "Wrong size on MusicTempometerComponent_GetMusicTick");
static_assert(offsetof(MusicTempometerComponent_GetMusicTick, ReturnValue) == 0x000000, "Member 'MusicTempometerComponent_GetMusicTick::ReturnValue' has a wrong offset!");

// Function HmxAudioGraphics.MusicTempometerComponent.GetSongPos
// 0x004C (0x004C - 0x0000)
struct MusicTempometerComponent_GetSongPos final
{
public:
	struct FSongPos                               ReturnValue;                                       // 0x0000(0x004C)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(MusicTempometerComponent_GetSongPos) == 0x000004, "Wrong alignment on MusicTempometerComponent_GetSongPos");
static_assert(sizeof(MusicTempometerComponent_GetSongPos) == 0x00004C, "Wrong size on MusicTempometerComponent_GetSongPos");
static_assert(offsetof(MusicTempometerComponent_GetSongPos, ReturnValue) == 0x000000, "Member 'MusicTempometerComponent_GetSongPos::ReturnValue' has a wrong offset!");

// Function HmxAudioGraphics.MusicTempometerComponent.GetSongPosInterface
// 0x0010 (0x0010 - 0x0000)
struct MusicTempometerComponent_GetSongPosInterface final
{
public:
	TScriptInterface<class ISongPosInterface>     ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MusicTempometerComponent_GetSongPosInterface) == 0x000008, "Wrong alignment on MusicTempometerComponent_GetSongPosInterface");
static_assert(sizeof(MusicTempometerComponent_GetSongPosInterface) == 0x000010, "Wrong size on MusicTempometerComponent_GetSongPosInterface");
static_assert(offsetof(MusicTempometerComponent_GetSongPosInterface, ReturnValue) == 0x000000, "Member 'MusicTempometerComponent_GetSongPosInterface::ReturnValue' has a wrong offset!");

// Function HmxAudioGraphics.MusicTempometerComponent.GetSongPosInterfaceNoMutex
// 0x0010 (0x0010 - 0x0000)
struct MusicTempometerComponent_GetSongPosInterfaceNoMutex final
{
public:
	TScriptInterface<class ISongPosInterface>     ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MusicTempometerComponent_GetSongPosInterfaceNoMutex) == 0x000008, "Wrong alignment on MusicTempometerComponent_GetSongPosInterfaceNoMutex");
static_assert(sizeof(MusicTempometerComponent_GetSongPosInterfaceNoMutex) == 0x000010, "Wrong size on MusicTempometerComponent_GetSongPosInterfaceNoMutex");
static_assert(offsetof(MusicTempometerComponent_GetSongPosInterfaceNoMutex, ReturnValue) == 0x000000, "Member 'MusicTempometerComponent_GetSongPosInterfaceNoMutex::ReturnValue' has a wrong offset!");

// Function HmxAudioGraphics.MusicTempometerComponent.GetTempo
// 0x0004 (0x0004 - 0x0000)
struct MusicTempometerComponent_GetTempo final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MusicTempometerComponent_GetTempo) == 0x000004, "Wrong alignment on MusicTempometerComponent_GetTempo");
static_assert(sizeof(MusicTempometerComponent_GetTempo) == 0x000004, "Wrong size on MusicTempometerComponent_GetTempo");
static_assert(offsetof(MusicTempometerComponent_GetTempo, ReturnValue) == 0x000000, "Member 'MusicTempometerComponent_GetTempo::ReturnValue' has a wrong offset!");

// Function HmxAudioGraphics.MusicTempometerComponent.GetTickLifetime
// 0x0004 (0x0004 - 0x0000)
struct MusicTempometerComponent_GetTickLifetime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MusicTempometerComponent_GetTickLifetime) == 0x000004, "Wrong alignment on MusicTempometerComponent_GetTickLifetime");
static_assert(sizeof(MusicTempometerComponent_GetTickLifetime) == 0x000004, "Wrong size on MusicTempometerComponent_GetTickLifetime");
static_assert(offsetof(MusicTempometerComponent_GetTickLifetime, ReturnValue) == 0x000000, "Member 'MusicTempometerComponent_GetTickLifetime::ReturnValue' has a wrong offset!");

// Function HmxAudioGraphics.MusicTempometerComponent.GetTimeSignatureDenominator
// 0x0004 (0x0004 - 0x0000)
struct MusicTempometerComponent_GetTimeSignatureDenominator final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MusicTempometerComponent_GetTimeSignatureDenominator) == 0x000004, "Wrong alignment on MusicTempometerComponent_GetTimeSignatureDenominator");
static_assert(sizeof(MusicTempometerComponent_GetTimeSignatureDenominator) == 0x000004, "Wrong size on MusicTempometerComponent_GetTimeSignatureDenominator");
static_assert(offsetof(MusicTempometerComponent_GetTimeSignatureDenominator, ReturnValue) == 0x000000, "Member 'MusicTempometerComponent_GetTimeSignatureDenominator::ReturnValue' has a wrong offset!");

// Function HmxAudioGraphics.MusicTempometerComponent.GetTimeSignatureNumerator
// 0x0004 (0x0004 - 0x0000)
struct MusicTempometerComponent_GetTimeSignatureNumerator final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MusicTempometerComponent_GetTimeSignatureNumerator) == 0x000004, "Wrong alignment on MusicTempometerComponent_GetTimeSignatureNumerator");
static_assert(sizeof(MusicTempometerComponent_GetTimeSignatureNumerator) == 0x000004, "Wrong size on MusicTempometerComponent_GetTimeSignatureNumerator");
static_assert(offsetof(MusicTempometerComponent_GetTimeSignatureNumerator, ReturnValue) == 0x000000, "Member 'MusicTempometerComponent_GetTimeSignatureNumerator::ReturnValue' has a wrong offset!");

}

