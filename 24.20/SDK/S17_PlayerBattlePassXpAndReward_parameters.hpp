#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: S17_PlayerBattlePassXpAndReward

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function S17_PlayerBattlePassXpAndReward.S17_PlayerBattlePassXpAndReward_C.ExecuteUbergraph_S17_PlayerBattlePassXpAndReward
// 0x0010 (0x0010 - 0x0000)
struct S17_PlayerBattlePassXpAndReward_C_ExecuteUbergraph_S17_PlayerBattlePassXpAndReward final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(S17_PlayerBattlePassXpAndReward_C_ExecuteUbergraph_S17_PlayerBattlePassXpAndReward) == 0x000008, "Wrong alignment on S17_PlayerBattlePassXpAndReward_C_ExecuteUbergraph_S17_PlayerBattlePassXpAndReward");
static_assert(sizeof(S17_PlayerBattlePassXpAndReward_C_ExecuteUbergraph_S17_PlayerBattlePassXpAndReward) == 0x000010, "Wrong size on S17_PlayerBattlePassXpAndReward_C_ExecuteUbergraph_S17_PlayerBattlePassXpAndReward");
static_assert(offsetof(S17_PlayerBattlePassXpAndReward_C_ExecuteUbergraph_S17_PlayerBattlePassXpAndReward, EntryPoint) == 0x000000, "Member 'S17_PlayerBattlePassXpAndReward_C_ExecuteUbergraph_S17_PlayerBattlePassXpAndReward::EntryPoint' has a wrong offset!");
static_assert(offsetof(S17_PlayerBattlePassXpAndReward_C_ExecuteUbergraph_S17_PlayerBattlePassXpAndReward, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'S17_PlayerBattlePassXpAndReward_C_ExecuteUbergraph_S17_PlayerBattlePassXpAndReward::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function S17_PlayerBattlePassXpAndReward.S17_PlayerBattlePassXpAndReward_C.Update Text
// 0x0180 (0x0180 - 0x0000)
struct S17_PlayerBattlePassXpAndReward_C_Update_Text final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0050)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0080(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D0(0x0018)()
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_2;            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0108(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0158(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0168(0x0018)()
};
static_assert(alignof(S17_PlayerBattlePassXpAndReward_C_Update_Text) == 0x000008, "Wrong alignment on S17_PlayerBattlePassXpAndReward_C_Update_Text");
static_assert(sizeof(S17_PlayerBattlePassXpAndReward_C_Update_Text) == 0x000180, "Wrong size on S17_PlayerBattlePassXpAndReward_C_Update_Text");
static_assert(offsetof(S17_PlayerBattlePassXpAndReward_C_Update_Text, Temp_bool_Variable) == 0x000000, "Member 'S17_PlayerBattlePassXpAndReward_C_Update_Text::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(S17_PlayerBattlePassXpAndReward_C_Update_Text, Temp_byte_Variable) == 0x000001, "Member 'S17_PlayerBattlePassXpAndReward_C_Update_Text::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(S17_PlayerBattlePassXpAndReward_C_Update_Text, Temp_byte_Variable_1) == 0x000002, "Member 'S17_PlayerBattlePassXpAndReward_C_Update_Text::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(S17_PlayerBattlePassXpAndReward_C_Update_Text, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000008, "Member 'S17_PlayerBattlePassXpAndReward_C_Update_Text::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(S17_PlayerBattlePassXpAndReward_C_Update_Text, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'S17_PlayerBattlePassXpAndReward_C_Update_Text::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(S17_PlayerBattlePassXpAndReward_C_Update_Text, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'S17_PlayerBattlePassXpAndReward_C_Update_Text::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(S17_PlayerBattlePassXpAndReward_C_Update_Text, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000068, "Member 'S17_PlayerBattlePassXpAndReward_C_Update_Text::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(S17_PlayerBattlePassXpAndReward_C_Update_Text, K2Node_MakeArray_Array) == 0x000070, "Member 'S17_PlayerBattlePassXpAndReward_C_Update_Text::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(S17_PlayerBattlePassXpAndReward_C_Update_Text, K2Node_MakeStruct_FormatArgumentData_1) == 0x000080, "Member 'S17_PlayerBattlePassXpAndReward_C_Update_Text::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(S17_PlayerBattlePassXpAndReward_C_Update_Text, CallFunc_Format_ReturnValue) == 0x0000D0, "Member 'S17_PlayerBattlePassXpAndReward_C_Update_Text::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(S17_PlayerBattlePassXpAndReward_C_Update_Text, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0000E8, "Member 'S17_PlayerBattlePassXpAndReward_C_Update_Text::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(S17_PlayerBattlePassXpAndReward_C_Update_Text, CallFunc_Greater_IntInt_ReturnValue) == 0x0000F0, "Member 'S17_PlayerBattlePassXpAndReward_C_Update_Text::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(S17_PlayerBattlePassXpAndReward_C_Update_Text, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000F4, "Member 'S17_PlayerBattlePassXpAndReward_C_Update_Text::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(S17_PlayerBattlePassXpAndReward_C_Update_Text, K2Node_Select_Default) == 0x0000F8, "Member 'S17_PlayerBattlePassXpAndReward_C_Update_Text::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(S17_PlayerBattlePassXpAndReward_C_Update_Text, CallFunc_Conv_IntToInt64_ReturnValue_2) == 0x000100, "Member 'S17_PlayerBattlePassXpAndReward_C_Update_Text::CallFunc_Conv_IntToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(S17_PlayerBattlePassXpAndReward_C_Update_Text, K2Node_MakeStruct_FormatArgumentData_2) == 0x000108, "Member 'S17_PlayerBattlePassXpAndReward_C_Update_Text::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(S17_PlayerBattlePassXpAndReward_C_Update_Text, K2Node_MakeArray_Array_1) == 0x000158, "Member 'S17_PlayerBattlePassXpAndReward_C_Update_Text::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(S17_PlayerBattlePassXpAndReward_C_Update_Text, CallFunc_Format_ReturnValue_1) == 0x000168, "Member 'S17_PlayerBattlePassXpAndReward_C_Update_Text::CallFunc_Format_ReturnValue_1' has a wrong offset!");

}

