#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerseArchetypes

#include "Basic.hpp"

#include "VerseAIBase_0_structs.hpp"
#include "EpicGamesTemporary_0_structs.hpp"


namespace SDK
{

// VerseStruct VerseArchetypes.tuple_L_Kchar_M_Kchar_R
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) VerseArchetypes::Ftuple_L_Kchar_M_Kchar_R final
{
public:
	FVerseStringProperty_                         __verse_0x18E3F084_Elem0;                          // 0x0000(0x0010)(InstancedReference, HasGetValueTypeHash)
	FVerseStringProperty_                         __verse_0x7D844C3C_Elem1;                          // 0x0010(0x0010)(InstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(VerseArchetypes::Ftuple_L_Kchar_M_Kchar_R) == 0x000008, "Wrong alignment on VerseArchetypes::Ftuple_L_Kchar_M_Kchar_R");
static_assert(sizeof(VerseArchetypes::Ftuple_L_Kchar_M_Kchar_R) == 0x000020, "Wrong size on VerseArchetypes::Ftuple_L_Kchar_M_Kchar_R");
static_assert(offsetof(VerseArchetypes::Ftuple_L_Kchar_M_Kchar_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'VerseArchetypes::Ftuple_L_Kchar_M_Kchar_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(VerseArchetypes::Ftuple_L_Kchar_M_Kchar_R, __verse_0x7D844C3C_Elem1) == 0x000010, "Member 'VerseArchetypes::Ftuple_L_Kchar_M_Kchar_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// VerseStruct VerseArchetypes.tuple_L_Kchar_M_QColor_Ncolor_M_QDuration_Nfloat_R
// 0x0040 (0x0040 - 0x0000)
struct alignas(0x08) VerseArchetypes::Ftuple_L_Kchar_M_QColor_Ncolor_M_QDuration_Nfloat_R final
{
public:
	FVerseStringProperty_                         __verse_0x18E3F084_Elem0;                          // 0x0000(0x0010)(InstancedReference, HasGetValueTypeHash)
	FOptionProperty_                              __verse_0x7D844C3C_Elem1;                          // 0x0010(0x0019)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FOptionProperty_                              __verse_0x932BF92E_Elem2;                          // 0x0030(0x0009)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(VerseArchetypes::Ftuple_L_Kchar_M_QColor_Ncolor_M_QDuration_Nfloat_R) == 0x000008, "Wrong alignment on VerseArchetypes::Ftuple_L_Kchar_M_QColor_Ncolor_M_QDuration_Nfloat_R");
static_assert(sizeof(VerseArchetypes::Ftuple_L_Kchar_M_QColor_Ncolor_M_QDuration_Nfloat_R) == 0x000040, "Wrong size on VerseArchetypes::Ftuple_L_Kchar_M_QColor_Ncolor_M_QDuration_Nfloat_R");
static_assert(offsetof(VerseArchetypes::Ftuple_L_Kchar_M_QColor_Ncolor_M_QDuration_Nfloat_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'VerseArchetypes::Ftuple_L_Kchar_M_QColor_Ncolor_M_QDuration_Nfloat_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(VerseArchetypes::Ftuple_L_Kchar_M_QColor_Ncolor_M_QDuration_Nfloat_R, __verse_0x7D844C3C_Elem1) == 0x000010, "Member 'VerseArchetypes::Ftuple_L_Kchar_M_QColor_Ncolor_M_QDuration_Nfloat_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(VerseArchetypes::Ftuple_L_Kchar_M_QColor_Ncolor_M_QDuration_Nfloat_R, __verse_0x932BF92E_Elem2) == 0x000030, "Member 'VerseArchetypes::Ftuple_L_Kchar_M_QColor_Ncolor_M_QDuration_Nfloat_R::__verse_0x932BF92E_Elem2' has a wrong offset!");

// VerseStruct VerseArchetypes.tuple_L_Kchar_M_QDuration_Nfloat_20_3d_20_2e_2e_2e_M_QColor_Ncolor_20_3d_20_2e_2e_2e_R
// 0x0040 (0x0040 - 0x0000)
struct alignas(0x08) VerseArchetypes::Ftuple_L_Kchar_M_QDuration_Nfloat_20_3d_20_2e_2e_2e_M_QColor_Ncolor_20_3d_20_2e_2e_2e_R final
{
public:
	FVerseStringProperty_                         __verse_0x18E3F084_Elem0;                          // 0x0000(0x0010)(InstancedReference, HasGetValueTypeHash)
	FOptionProperty_                              __verse_0x7D844C3C_Elem1;                          // 0x0010(0x0009)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FOptionProperty_                              __verse_0x932BF92E_Elem2;                          // 0x0020(0x0019)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(VerseArchetypes::Ftuple_L_Kchar_M_QDuration_Nfloat_20_3d_20_2e_2e_2e_M_QColor_Ncolor_20_3d_20_2e_2e_2e_R) == 0x000008, "Wrong alignment on VerseArchetypes::Ftuple_L_Kchar_M_QDuration_Nfloat_20_3d_20_2e_2e_2e_M_QColor_Ncolor_20_3d_20_2e_2e_2e_R");
static_assert(sizeof(VerseArchetypes::Ftuple_L_Kchar_M_QDuration_Nfloat_20_3d_20_2e_2e_2e_M_QColor_Ncolor_20_3d_20_2e_2e_2e_R) == 0x000040, "Wrong size on VerseArchetypes::Ftuple_L_Kchar_M_QDuration_Nfloat_20_3d_20_2e_2e_2e_M_QColor_Ncolor_20_3d_20_2e_2e_2e_R");
static_assert(offsetof(VerseArchetypes::Ftuple_L_Kchar_M_QDuration_Nfloat_20_3d_20_2e_2e_2e_M_QColor_Ncolor_20_3d_20_2e_2e_2e_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'VerseArchetypes::Ftuple_L_Kchar_M_QDuration_Nfloat_20_3d_20_2e_2e_2e_M_QColor_Ncolor_20_3d_20_2e_2e_2e_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(VerseArchetypes::Ftuple_L_Kchar_M_QDuration_Nfloat_20_3d_20_2e_2e_2e_M_QColor_Ncolor_20_3d_20_2e_2e_2e_R, __verse_0x7D844C3C_Elem1) == 0x000010, "Member 'VerseArchetypes::Ftuple_L_Kchar_M_QDuration_Nfloat_20_3d_20_2e_2e_2e_M_QColor_Ncolor_20_3d_20_2e_2e_2e_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(VerseArchetypes::Ftuple_L_Kchar_M_QDuration_Nfloat_20_3d_20_2e_2e_2e_M_QColor_Ncolor_20_3d_20_2e_2e_2e_R, __verse_0x932BF92E_Elem2) == 0x000020, "Member 'VerseArchetypes::Ftuple_L_Kchar_M_QDuration_Nfloat_20_3d_20_2e_2e_2e_M_QColor_Ncolor_20_3d_20_2e_2e_2e_R::__verse_0x932BF92E_Elem2' has a wrong offset!");

// VerseStruct VerseArchetypes.tuple_L_Kchar_M_QLevel_Nlog__level_20_3d_20_2e_2e_2e_R
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) VerseArchetypes::Ftuple_L_Kchar_M_QLevel_Nlog__level_20_3d_20_2e_2e_2e_R final
{
public:
	FVerseStringProperty_                         __verse_0x18E3F084_Elem0;                          // 0x0000(0x0010)(InstancedReference, HasGetValueTypeHash)
	FOptionProperty_                              __verse_0x7D844C3C_Elem1;                          // 0x0010(0x0002)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(VerseArchetypes::Ftuple_L_Kchar_M_QLevel_Nlog__level_20_3d_20_2e_2e_2e_R) == 0x000008, "Wrong alignment on VerseArchetypes::Ftuple_L_Kchar_M_QLevel_Nlog__level_20_3d_20_2e_2e_2e_R");
static_assert(sizeof(VerseArchetypes::Ftuple_L_Kchar_M_QLevel_Nlog__level_20_3d_20_2e_2e_2e_R) == 0x000018, "Wrong size on VerseArchetypes::Ftuple_L_Kchar_M_QLevel_Nlog__level_20_3d_20_2e_2e_2e_R");
static_assert(offsetof(VerseArchetypes::Ftuple_L_Kchar_M_QLevel_Nlog__level_20_3d_20_2e_2e_2e_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'VerseArchetypes::Ftuple_L_Kchar_M_QLevel_Nlog__level_20_3d_20_2e_2e_2e_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(VerseArchetypes::Ftuple_L_Kchar_M_QLevel_Nlog__level_20_3d_20_2e_2e_2e_R, __verse_0x7D844C3C_Elem1) == 0x000010, "Member 'VerseArchetypes::Ftuple_L_Kchar_M_QLevel_Nlog__level_20_3d_20_2e_2e_2e_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// VerseStruct VerseArchetypes.tuple_L_R
// 0x0001 (0x0001 - 0x0000)
struct VerseArchetypes::Ftuple_L_R final
{
public:
	uint8                                         _StructPaddingDummy;                               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseArchetypes::Ftuple_L_R) == 0x000001, "Wrong alignment on VerseArchetypes::Ftuple_L_R");
static_assert(sizeof(VerseArchetypes::Ftuple_L_R) == 0x000001, "Wrong size on VerseArchetypes::Ftuple_L_R");
static_assert(offsetof(VerseArchetypes::Ftuple_L_R, _StructPaddingDummy) == 0x000000, "Member 'VerseArchetypes::Ftuple_L_R::_StructPaddingDummy' has a wrong offset!");

// VerseStruct VerseArchetypes.tuple_Lagent_Mtuple_L_R_Mtuple_L_R_R
// 0x0010 (0x0010 - 0x0000)
struct VerseArchetypes::Ftuple_Lagent_Mtuple_L_R_Mtuple_L_R_R final
{
public:
	class USimulation_agent*                      __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct VerseArchetypes::Ftuple_L_R            __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0001)(InstancedReference, HasGetValueTypeHash)
	struct VerseArchetypes::Ftuple_L_R            __verse_0x932BF92E_Elem2;                          // 0x0009(0x0001)(InstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(VerseArchetypes::Ftuple_Lagent_Mtuple_L_R_Mtuple_L_R_R) == 0x000008, "Wrong alignment on VerseArchetypes::Ftuple_Lagent_Mtuple_L_R_Mtuple_L_R_R");
static_assert(sizeof(VerseArchetypes::Ftuple_Lagent_Mtuple_L_R_Mtuple_L_R_R) == 0x000010, "Wrong size on VerseArchetypes::Ftuple_Lagent_Mtuple_L_R_Mtuple_L_R_R");
static_assert(offsetof(VerseArchetypes::Ftuple_Lagent_Mtuple_L_R_Mtuple_L_R_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'VerseArchetypes::Ftuple_Lagent_Mtuple_L_R_Mtuple_L_R_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(VerseArchetypes::Ftuple_Lagent_Mtuple_L_R_Mtuple_L_R_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'VerseArchetypes::Ftuple_Lagent_Mtuple_L_R_Mtuple_L_R_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(VerseArchetypes::Ftuple_Lagent_Mtuple_L_R_Mtuple_L_R_R, __verse_0x932BF92E_Elem2) == 0x000009, "Member 'VerseArchetypes::Ftuple_Lagent_Mtuple_L_R_Mtuple_L_R_R::__verse_0x932BF92E_Elem2' has a wrong offset!");

// VerseStruct VerseArchetypes.tuple_Lfort__character_Mtuple_L_R_Mtuple_L_R_R
// 0x0010 (0x0010 - 0x0000)
struct VerseArchetypes::Ftuple_Lfort__character_Mtuple_L_R_Mtuple_L_R_R final
{
public:
	class UObject*                                __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct VerseArchetypes::Ftuple_L_R            __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0001)(InstancedReference, HasGetValueTypeHash)
	struct VerseArchetypes::Ftuple_L_R            __verse_0x932BF92E_Elem2;                          // 0x0009(0x0001)(InstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(VerseArchetypes::Ftuple_Lfort__character_Mtuple_L_R_Mtuple_L_R_R) == 0x000008, "Wrong alignment on VerseArchetypes::Ftuple_Lfort__character_Mtuple_L_R_Mtuple_L_R_R");
static_assert(sizeof(VerseArchetypes::Ftuple_Lfort__character_Mtuple_L_R_Mtuple_L_R_R) == 0x000010, "Wrong size on VerseArchetypes::Ftuple_Lfort__character_Mtuple_L_R_Mtuple_L_R_R");
static_assert(offsetof(VerseArchetypes::Ftuple_Lfort__character_Mtuple_L_R_Mtuple_L_R_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'VerseArchetypes::Ftuple_Lfort__character_Mtuple_L_R_Mtuple_L_R_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(VerseArchetypes::Ftuple_Lfort__character_Mtuple_L_R_Mtuple_L_R_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'VerseArchetypes::Ftuple_Lfort__character_Mtuple_L_R_Mtuple_L_R_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(VerseArchetypes::Ftuple_Lfort__character_Mtuple_L_R_Mtuple_L_R_R, __verse_0x932BF92E_Elem2) == 0x000009, "Member 'VerseArchetypes::Ftuple_Lfort__character_Mtuple_L_R_Mtuple_L_R_R::__verse_0x932BF92E_Elem2' has a wrong offset!");

// VerseStruct VerseArchetypes.tuple_Lfort__item__descriptor_Mfort__item__tag_R
// 0x0020 (0x0020 - 0x0000)
struct VerseArchetypes::Ftuple_Lfort__item__descriptor_Mfort__item__tag_R final
{
public:
	struct FVerseAIBase_fort_item_descriptor      __verse_0x18E3F084_Elem0;                          // 0x0000(0x0018)(InstancedReference, NoDestructor)
	class UVerseAIBase_fort_item_tag*             __verse_0x7D844C3C_Elem1;                          // 0x0018(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
};
static_assert(alignof(VerseArchetypes::Ftuple_Lfort__item__descriptor_Mfort__item__tag_R) == 0x000008, "Wrong alignment on VerseArchetypes::Ftuple_Lfort__item__descriptor_Mfort__item__tag_R");
static_assert(sizeof(VerseArchetypes::Ftuple_Lfort__item__descriptor_Mfort__item__tag_R) == 0x000020, "Wrong size on VerseArchetypes::Ftuple_Lfort__item__descriptor_Mfort__item__tag_R");
static_assert(offsetof(VerseArchetypes::Ftuple_Lfort__item__descriptor_Mfort__item__tag_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'VerseArchetypes::Ftuple_Lfort__item__descriptor_Mfort__item__tag_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(VerseArchetypes::Ftuple_Lfort__item__descriptor_Mfort__item__tag_R, __verse_0x7D844C3C_Elem1) == 0x000018, "Member 'VerseArchetypes::Ftuple_Lfort__item__descriptor_Mfort__item__tag_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// VerseStruct VerseArchetypes.tuple_Lfort__weapon__descriptor_Mfort__item__tag_R
// 0x0020 (0x0020 - 0x0000)
struct Ftuple_Lfort__weapon__descriptor_Mfort__item__tag_R final
{
public:
	struct FVerseAIBase_fort_weapon_descriptor    __verse_0x18E3F084_Elem0;                          // 0x0000(0x0018)(InstancedReference, NoDestructor)
	class UVerseAIBase_fort_item_tag*             __verse_0x7D844C3C_Elem1;                          // 0x0018(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
};
static_assert(alignof(Ftuple_Lfort__weapon__descriptor_Mfort__item__tag_R) == 0x000008, "Wrong alignment on Ftuple_Lfort__weapon__descriptor_Mfort__item__tag_R");
static_assert(sizeof(Ftuple_Lfort__weapon__descriptor_Mfort__item__tag_R) == 0x000020, "Wrong size on Ftuple_Lfort__weapon__descriptor_Mfort__item__tag_R");
static_assert(offsetof(Ftuple_Lfort__weapon__descriptor_Mfort__item__tag_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'Ftuple_Lfort__weapon__descriptor_Mfort__item__tag_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(Ftuple_Lfort__weapon__descriptor_Mfort__item__tag_R, __verse_0x7D844C3C_Elem1) == 0x000018, "Member 'Ftuple_Lfort__weapon__descriptor_Mfort__item__tag_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

// VerseStruct VerseArchetypes.tuple_Lnavigation__target_M_QReachRadius_Nfloat_20_3d_20_2e_2e_2e_M_QAllowPartialPath_Nlogic_20_3d_20_2e_2e_2e_R
// 0x0018 (0x0018 - 0x0000)
struct VerseArchetypes::Ftuple_Lnavigation__target_M_QReachRadius_Nfloat_20_3d_20_2e_2e_2e_M_QAllowPartialPath_Nlogic_20_3d_20_2e_2e_2e_R final
{
public:
	class UVerseAIBase_navigation_target*         __verse_0x18E3F084_Elem0;                          // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FOptionProperty_                              __verse_0x7D844C3C_Elem1;                          // 0x0008(0x0009)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	FOptionProperty_                              __verse_0x932BF92E_Elem2;                          // 0x0011(0x0002)(InstancedReference, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(VerseArchetypes::Ftuple_Lnavigation__target_M_QReachRadius_Nfloat_20_3d_20_2e_2e_2e_M_QAllowPartialPath_Nlogic_20_3d_20_2e_2e_2e_R) == 0x000008, "Wrong alignment on VerseArchetypes::Ftuple_Lnavigation__target_M_QReachRadius_Nfloat_20_3d_20_2e_2e_2e_M_QAllowPartialPath_Nlogic_20_3d_20_2e_2e_2e_R");
static_assert(sizeof(VerseArchetypes::Ftuple_Lnavigation__target_M_QReachRadius_Nfloat_20_3d_20_2e_2e_2e_M_QAllowPartialPath_Nlogic_20_3d_20_2e_2e_2e_R) == 0x000018, "Wrong size on VerseArchetypes::Ftuple_Lnavigation__target_M_QReachRadius_Nfloat_20_3d_20_2e_2e_2e_M_QAllowPartialPath_Nlogic_20_3d_20_2e_2e_2e_R");
static_assert(offsetof(VerseArchetypes::Ftuple_Lnavigation__target_M_QReachRadius_Nfloat_20_3d_20_2e_2e_2e_M_QAllowPartialPath_Nlogic_20_3d_20_2e_2e_2e_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'VerseArchetypes::Ftuple_Lnavigation__target_M_QReachRadius_Nfloat_20_3d_20_2e_2e_2e_M_QAllowPartialPath_Nlogic_20_3d_20_2e_2e_2e_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(VerseArchetypes::Ftuple_Lnavigation__target_M_QReachRadius_Nfloat_20_3d_20_2e_2e_2e_M_QAllowPartialPath_Nlogic_20_3d_20_2e_2e_2e_R, __verse_0x7D844C3C_Elem1) == 0x000008, "Member 'VerseArchetypes::Ftuple_Lnavigation__target_M_QReachRadius_Nfloat_20_3d_20_2e_2e_2e_M_QAllowPartialPath_Nlogic_20_3d_20_2e_2e_2e_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(VerseArchetypes::Ftuple_Lnavigation__target_M_QReachRadius_Nfloat_20_3d_20_2e_2e_2e_M_QAllowPartialPath_Nlogic_20_3d_20_2e_2e_2e_R, __verse_0x932BF92E_Elem2) == 0x000011, "Member 'VerseArchetypes::Ftuple_Lnavigation__target_M_QReachRadius_Nfloat_20_3d_20_2e_2e_2e_M_QAllowPartialPath_Nlogic_20_3d_20_2e_2e_2e_R::__verse_0x932BF92E_Elem2' has a wrong offset!");

// VerseStruct VerseArchetypes.tuple_Lvector3_Mfloat_Mfloat_R
// 0x0028 (0x0028 - 0x0000)
struct VerseArchetypes::Ftuple_Lvector3_Mfloat_Mfloat_R final
{
public:
	struct FSpatialMath_vector3                   __verse_0x18E3F084_Elem0;                          // 0x0000(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	double                                        __verse_0x7D844C3C_Elem1;                          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __verse_0x932BF92E_Elem2;                          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VerseArchetypes::Ftuple_Lvector3_Mfloat_Mfloat_R) == 0x000008, "Wrong alignment on VerseArchetypes::Ftuple_Lvector3_Mfloat_Mfloat_R");
static_assert(sizeof(VerseArchetypes::Ftuple_Lvector3_Mfloat_Mfloat_R) == 0x000028, "Wrong size on VerseArchetypes::Ftuple_Lvector3_Mfloat_Mfloat_R");
static_assert(offsetof(VerseArchetypes::Ftuple_Lvector3_Mfloat_Mfloat_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'VerseArchetypes::Ftuple_Lvector3_Mfloat_Mfloat_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(VerseArchetypes::Ftuple_Lvector3_Mfloat_Mfloat_R, __verse_0x7D844C3C_Elem1) == 0x000018, "Member 'VerseArchetypes::Ftuple_Lvector3_Mfloat_Mfloat_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");
static_assert(offsetof(VerseArchetypes::Ftuple_Lvector3_Mfloat_Mfloat_R, __verse_0x932BF92E_Elem2) == 0x000020, "Member 'VerseArchetypes::Ftuple_Lvector3_Mfloat_Mfloat_R::__verse_0x932BF92E_Elem2' has a wrong offset!");

// VerseStruct VerseArchetypes.tuple_Lvector3_Mvector3_R
// 0x0030 (0x0030 - 0x0000)
struct VerseArchetypes::Ftuple_Lvector3_Mvector3_R final
{
public:
	struct FSpatialMath_vector3                   __verse_0x18E3F084_Elem0;                          // 0x0000(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FSpatialMath_vector3                   __verse_0x7D844C3C_Elem1;                          // 0x0018(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VerseArchetypes::Ftuple_Lvector3_Mvector3_R) == 0x000008, "Wrong alignment on VerseArchetypes::Ftuple_Lvector3_Mvector3_R");
static_assert(sizeof(VerseArchetypes::Ftuple_Lvector3_Mvector3_R) == 0x000030, "Wrong size on VerseArchetypes::Ftuple_Lvector3_Mvector3_R");
static_assert(offsetof(VerseArchetypes::Ftuple_Lvector3_Mvector3_R, __verse_0x18E3F084_Elem0) == 0x000000, "Member 'VerseArchetypes::Ftuple_Lvector3_Mvector3_R::__verse_0x18E3F084_Elem0' has a wrong offset!");
static_assert(offsetof(VerseArchetypes::Ftuple_Lvector3_Mvector3_R, __verse_0x7D844C3C_Elem1) == 0x000018, "Member 'VerseArchetypes::Ftuple_Lvector3_Mvector3_R::__verse_0x7D844C3C_Elem1' has a wrong offset!");

}

