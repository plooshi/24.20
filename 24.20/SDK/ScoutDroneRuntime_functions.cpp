#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ScoutDroneRuntime

#include "Basic.hpp"

#include "ScoutDroneRuntime_classes.hpp"
#include "ScoutDroneRuntime_parameters.hpp"


namespace SDK
{

// Function ScoutDroneRuntime.FortGameplayAbility_ScoutDrone_Dive.BP_OnDroneStartedDiving
// (BlueprintAuthorityOnly, Event, Protected, BlueprintEvent)

void UFortGameplayAbility_ScoutDrone_Dive::BP_OnDroneStartedDiving()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility_ScoutDrone_Dive", "BP_OnDroneStartedDiving");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ScoutDroneRuntime.FortGameplayAbility_ScoutDrone_Dive.BP_OnDroneStoppedDiving
// (BlueprintAuthorityOnly, Event, Protected, BlueprintEvent)

void UFortGameplayAbility_ScoutDrone_Dive::BP_OnDroneStoppedDiving()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility_ScoutDrone_Dive", "BP_OnDroneStoppedDiving");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ScoutDroneRuntime.FortGameplayAbility_ScoutDrone_TargetingBase.BP_OnTargetsFound
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FTargetingRequestHandle          TargetingHandle                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortGameplayAbility_ScoutDrone_TargetingBase::BP_OnTargetsFound(const struct FTargetingRequestHandle& TargetingHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility_ScoutDrone_TargetingBase", "BP_OnTargetsFound");

	Params::FortGameplayAbility_ScoutDrone_TargetingBase_BP_OnTargetsFound Parms{};

	Parms.TargetingHandle = std::move(TargetingHandle);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ScoutDroneRuntime.FortGameplayAbility_ScoutDrone_TargetingBase.StartTargeting
// (Final, Native, Protected, BlueprintCallable)

void UFortGameplayAbility_ScoutDrone_TargetingBase::StartTargeting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility_ScoutDrone_TargetingBase", "StartTargeting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ScoutDroneRuntime.FortGameplayAbility_ScoutDrone_TargetingBase.StopTargeting
// (Final, Native, Protected, BlueprintCallable)

void UFortGameplayAbility_ScoutDrone_TargetingBase::StopTargeting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility_ScoutDrone_TargetingBase", "StopTargeting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ScoutDroneRuntime.FortGameplayAbility_ScoutDrone_SpeedBoost.OnBoostedIntoActor
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       HitResult                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UFortGameplayAbility_ScoutDrone_SpeedBoost::OnBoostedIntoActor(const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility_ScoutDrone_SpeedBoost", "OnBoostedIntoActor");

	Params::FortGameplayAbility_ScoutDrone_SpeedBoost_OnBoostedIntoActor Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ScoutDroneRuntime.FortGameplayAbility_ScoutDrone_SpeedBoost.OnDoorBashed
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       HitResult                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class UFortBuildingWallDoorComponent*   BashedDoor                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGameplayAbility_ScoutDrone_SpeedBoost::OnDoorBashed(const struct FHitResult& HitResult, class UFortBuildingWallDoorComponent* BashedDoor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility_ScoutDrone_SpeedBoost", "OnDoorBashed");

	Params::FortGameplayAbility_ScoutDrone_SpeedBoost_OnDoorBashed Parms{};

	Parms.HitResult = std::move(HitResult);
	Parms.BashedDoor = BashedDoor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ScoutDroneRuntime.FortGameplayAbility_ScoutDrone_Dismiss.GetControlledDrone
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class AFortScoutDrone*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortScoutDrone* UFortGameplayAbility_ScoutDrone_Dismiss::GetControlledDrone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility_ScoutDrone_Dismiss", "GetControlledDrone");

	Params::FortGameplayAbility_ScoutDrone_Dismiss_GetControlledDrone Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScoutDroneRuntime.FortGameplayAbility_ScoutDrone_MarkPotentialTargets.OnStartHighlightingTarget
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGameplayAbility_ScoutDrone_MarkPotentialTargets::OnStartHighlightingTarget(class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility_ScoutDrone_MarkPotentialTargets", "OnStartHighlightingTarget");

	Params::FortGameplayAbility_ScoutDrone_MarkPotentialTargets_OnStartHighlightingTarget Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ScoutDroneRuntime.FortGameplayAbility_ScoutDrone_MarkPotentialTargets.OnStoppedHighlightingTarget
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGameplayAbility_ScoutDrone_MarkPotentialTargets::OnStoppedHighlightingTarget(class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility_ScoutDrone_MarkPotentialTargets", "OnStoppedHighlightingTarget");

	Params::FortGameplayAbility_ScoutDrone_MarkPotentialTargets_OnStoppedHighlightingTarget Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ScoutDroneRuntime.FortGameplayAbility_ScoutDrone_PassiveMark.BP_OnTargetStatusChanged
// (BlueprintAuthorityOnly, Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           ActiveTarget                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGameplayAbility_ScoutDrone_PassiveMark::BP_OnTargetStatusChanged(class AActor* ActiveTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility_ScoutDrone_PassiveMark", "BP_OnTargetStatusChanged");

	Params::FortGameplayAbility_ScoutDrone_PassiveMark_BP_OnTargetStatusChanged Parms{};

	Parms.ActiveTarget = ActiveTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ScoutDroneRuntime.FortGameplayAbility_ScoutDrone_PassiveMark.OnActorIndicatorExpired
// (Final, Native, Private)
// Parameters:
// class AActor*                           IndicatedActor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGameplayAbility_ScoutDrone_PassiveMark::OnActorIndicatorExpired(class AActor* IndicatedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility_ScoutDrone_PassiveMark", "OnActorIndicatorExpired");

	Params::FortGameplayAbility_ScoutDrone_PassiveMark_OnActorIndicatorExpired Parms{};

	Parms.IndicatedActor = IndicatedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ScoutDroneRuntime.FortGameplayAbility_ScoutDrone_PassiveMark.OnRep_CurrentTargetStatus
// (Final, Native, Protected)

void UFortGameplayAbility_ScoutDrone_PassiveMark::OnRep_CurrentTargetStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility_ScoutDrone_PassiveMark", "OnRep_CurrentTargetStatus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ScoutDroneRuntime.FortGameplayAbility_ScoutDrone_PickUp.ServerConfirmTargets
// (Final, Net, NetReliable, Native, Event, Private, NetServer)

void UFortGameplayAbility_ScoutDrone_PickUp::ServerConfirmTargets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility_ScoutDrone_PickUp", "ServerConfirmTargets");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ScoutDroneRuntime.FortGameplayAbility_ScoutDrone_Tether.OnRep_bIsInSignalLossRange
// (Final, Native, Private)

void UFortGameplayAbility_ScoutDrone_Tether::OnRep_bIsInSignalLossRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility_ScoutDrone_Tether", "OnRep_bIsInSignalLossRange");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ScoutDroneRuntime.FortGameplayAbility_ScoutDrone_Tether.OnRep_bIsInWarningRange
// (Final, Native, Private)

void UFortGameplayAbility_ScoutDrone_Tether::OnRep_bIsInWarningRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility_ScoutDrone_Tether", "OnRep_bIsInWarningRange");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ScoutDroneRuntime.FortGameplayAbility_ScoutDrone_Tether.StartCheckingDistances
// (Final, Native, Protected, BlueprintCallable)

void UFortGameplayAbility_ScoutDrone_Tether::StartCheckingDistances()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility_ScoutDrone_Tether", "StartCheckingDistances");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ScoutDroneRuntime.FortGameplayAbility_ScoutDrone_Tether.StopCheckingDistances
// (Final, Native, Protected, BlueprintCallable)

void UFortGameplayAbility_ScoutDrone_Tether::StopCheckingDistances()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility_ScoutDrone_Tether", "StopCheckingDistances");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ScoutDroneRuntime.FortAthenaMutator_ScoutDrone.OnViewTargetChanged
// (Final, Native, Private)
// Parameters:
// class AFortPlayerController*            PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OldViewTarget                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           NewViewTarget                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAthenaMutator_ScoutDrone::OnViewTargetChanged(class AFortPlayerController* PlayerController, class AActor* OldViewTarget, class AActor* NewViewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMutator_ScoutDrone", "OnViewTargetChanged");

	Params::FortAthenaMutator_ScoutDrone_OnViewTargetChanged Parms{};

	Parms.PlayerController = PlayerController;
	Parms.OldViewTarget = OldViewTarget;
	Parms.NewViewTarget = NewViewTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ScoutDroneRuntime.FortChargingSet_ScoutDroneEnergy.OnRep_Energy
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FFortGameplayAttributeData       OldValue                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortChargingSet_ScoutDroneEnergy::OnRep_Energy(const struct FFortGameplayAttributeData& OldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChargingSet_ScoutDroneEnergy", "OnRep_Energy");

	Params::FortChargingSet_ScoutDroneEnergy_OnRep_Energy Parms{};

	Parms.OldValue = std::move(OldValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ScoutDroneRuntime.FortScoutDrone.GameplayCue_Damage
// (Native, Protected)
// Parameters:
// EGameplayCueEvent                       EventType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayCueParameters           Parameters                                             (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AFortScoutDrone::GameplayCue_Damage(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScoutDrone", "GameplayCue_Damage");

	Params::FortScoutDrone_GameplayCue_Damage Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ScoutDroneRuntime.FortScoutDrone.GetForwardAndRightDotProducts_Native
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   OutForwardDot                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutRightDot                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortScoutDrone::GetForwardAndRightDotProducts_Native(float* OutForwardDot, float* OutRightDot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScoutDrone", "GetForwardAndRightDotProducts_Native");

	Params::FortScoutDrone_GetForwardAndRightDotProducts_Native Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutForwardDot != nullptr)
		*OutForwardDot = Parms.OutForwardDot;

	if (OutRightDot != nullptr)
		*OutRightDot = Parms.OutRightDot;
}


// Function ScoutDroneRuntime.FortScoutDrone.OnDamagePlayEffects
// (BlueprintCosmetic, Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FVector                          Momentum                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AFortPawn*                        InstigatedBy                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayEffectContextHandle     EffectContext                                          (Parm, NativeAccessSpecifierPublic)

void AFortScoutDrone::OnDamagePlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScoutDrone", "OnDamagePlayEffects");

	Params::FortScoutDrone_OnDamagePlayEffects Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = std::move(DamageTags);
	Parms.Momentum = std::move(Momentum);
	Parms.HitInfo = std::move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = std::move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ScoutDroneRuntime.FortScoutDrone.OnDeathPlayEffects
// (BlueprintCosmetic, Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FVector                          Momentum                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AFortPawn*                        InstigatedBy                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayEffectContextHandle     EffectContext                                          (Parm, NativeAccessSpecifierPublic)

void AFortScoutDrone::OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScoutDrone", "OnDeathPlayEffects");

	Params::FortScoutDrone_OnDeathPlayEffects Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = std::move(DamageTags);
	Parms.Momentum = std::move(Momentum);
	Parms.HitInfo = std::move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = std::move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ScoutDroneRuntime.FortScoutDrone.OnRep_ControllingPlayerPawn
// (Final, Native, Private)

void AFortScoutDrone::OnRep_ControllingPlayerPawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScoutDrone", "OnRep_ControllingPlayerPawn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ScoutDroneRuntime.FortScoutDrone.SetAffiliationAudio
// (Final, Native, Protected, BlueprintCallable)

void AFortScoutDrone::SetAffiliationAudio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScoutDrone", "SetAffiliationAudio");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ScoutDroneRuntime.FortScoutDrone.SetTeamMatesIndicator
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bState                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortScoutDrone::SetTeamMatesIndicator(bool bState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScoutDrone", "SetTeamMatesIndicator");

	Params::FortScoutDrone_SetTeamMatesIndicator Parms{};

	Parms.bState = bState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ScoutDroneRuntime.FortScoutDrone.SetupGameplayAudioParameters
// (Final, BlueprintCosmetic, Native, Protected, BlueprintCallable)

void AFortScoutDrone::SetupGameplayAudioParameters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScoutDrone", "SetupGameplayAudioParameters");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ScoutDroneRuntime.FortScoutDrone.GetControllingPlayerPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortPawn*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPawn* AFortScoutDrone::GetControllingPlayerPawn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScoutDrone", "GetControllingPlayerPawn");

	Params::FortScoutDrone_GetControllingPlayerPawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScoutDroneRuntime.FortScoutDrone.GetDeltaRotator
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator AFortScoutDrone::GetDeltaRotator() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScoutDrone", "GetDeltaRotator");

	Params::FortScoutDrone_GetDeltaRotator Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScoutDroneRuntime.FortScoutDrone.GetHealthPercentage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortScoutDrone::GetHealthPercentage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScoutDrone", "GetHealthPercentage");

	Params::FortScoutDrone_GetHealthPercentage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScoutDroneRuntime.FortScoutDroneControllingComponent.BP_OnDestructionStarted
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInstantDestruction                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     DismissalReason                                        (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortScoutDroneControllingComponent::BP_OnDestructionStarted(bool bInstantDestruction, const struct FGameplayTag& DismissalReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScoutDroneControllingComponent", "BP_OnDestructionStarted");

	Params::FortScoutDroneControllingComponent_BP_OnDestructionStarted Parms{};

	Parms.bInstantDestruction = bInstantDestruction;
	Parms.DismissalReason = std::move(DismissalReason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ScoutDroneRuntime.FortScoutDroneControllingComponent.BP_OnDismissalStarted
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInstantDismissal                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     DismissalReason                                        (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortScoutDroneControllingComponent::BP_OnDismissalStarted(bool bInstantDismissal, const struct FGameplayTag& DismissalReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScoutDroneControllingComponent", "BP_OnDismissalStarted");

	Params::FortScoutDroneControllingComponent_BP_OnDismissalStarted Parms{};

	Parms.bInstantDismissal = bInstantDismissal;
	Parms.DismissalReason = std::move(DismissalReason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ScoutDroneRuntime.FortScoutDroneControllingComponent.BP_OnDroneDestroyed
// (BlueprintCosmetic, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     DismissalReason                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortScoutDroneControllingComponent::BP_OnDroneDestroyed(const struct FGameplayTag& DismissalReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScoutDroneControllingComponent", "BP_OnDroneDestroyed");

	Params::FortScoutDroneControllingComponent_BP_OnDroneDestroyed Parms{};

	Parms.DismissalReason = std::move(DismissalReason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ScoutDroneRuntime.FortScoutDroneControllingComponent.BP_OnPlayerInteractLongUseChanged
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInteracting                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLongUseInteractionCompleted                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortScoutDroneControllingComponent::BP_OnPlayerInteractLongUseChanged(bool bInteracting, bool bLongUseInteractionCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScoutDroneControllingComponent", "BP_OnPlayerInteractLongUseChanged");

	Params::FortScoutDroneControllingComponent_BP_OnPlayerInteractLongUseChanged Parms{};

	Parms.bInteracting = bInteracting;
	Parms.bLongUseInteractionCompleted = bLongUseInteractionCompleted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ScoutDroneRuntime.FortScoutDroneControllingComponent.BP_OnPlayerShortInteract
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void UFortScoutDroneControllingComponent::BP_OnPlayerShortInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScoutDroneControllingComponent", "BP_OnPlayerShortInteract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ScoutDroneRuntime.FortScoutDroneControllingComponent.OnControlledDroneDestroyed
// (Final, Native, Private)
// Parameters:
// class AActor*                           InControlledDrone                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortScoutDroneControllingComponent::OnControlledDroneDestroyed(class AActor* InControlledDrone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScoutDroneControllingComponent", "OnControlledDroneDestroyed");

	Params::FortScoutDroneControllingComponent_OnControlledDroneDestroyed Parms{};

	Parms.InControlledDrone = InControlledDrone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ScoutDroneRuntime.FortScoutDroneControllingComponent.OnOwningPlayerStartedDBNO
// (Final, Native, Private)

void UFortScoutDroneControllingComponent::OnOwningPlayerStartedDBNO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScoutDroneControllingComponent", "OnOwningPlayerStartedDBNO");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ScoutDroneRuntime.FortScoutDroneControllingComponent.OnPlayerInterruptionTagsChanged
// (Final, Native, Private)
// Parameters:
// struct FGameplayTag                     tag                                                    (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortScoutDroneControllingComponent::OnPlayerInterruptionTagsChanged(const struct FGameplayTag& tag, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScoutDroneControllingComponent", "OnPlayerInterruptionTagsChanged");

	Params::FortScoutDroneControllingComponent_OnPlayerInterruptionTagsChanged Parms{};

	Parms.tag = std::move(tag);
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ScoutDroneRuntime.FortScoutDroneControllingComponent.OnRep_ControlledDrone
// (Final, Native, Private)

void UFortScoutDroneControllingComponent::OnRep_ControlledDrone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScoutDroneControllingComponent", "OnRep_ControlledDrone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ScoutDroneRuntime.FortScoutDroneControllingComponent.OnRep_CurrentDestructionData
// (Final, Native, Private)

void UFortScoutDroneControllingComponent::OnRep_CurrentDestructionData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScoutDroneControllingComponent", "OnRep_CurrentDestructionData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ScoutDroneRuntime.FortScoutDroneControllingComponent.OnWeaponEquipped
// (Final, Native, Private)
// Parameters:
// class AFortWeapon*                      NewWeapon                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortWeapon*                      PrevWeapon                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortScoutDroneControllingComponent::OnWeaponEquipped(class AFortWeapon* NewWeapon, class AFortWeapon* PrevWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScoutDroneControllingComponent", "OnWeaponEquipped");

	Params::FortScoutDroneControllingComponent_OnWeaponEquipped Parms{};

	Parms.NewWeapon = NewWeapon;
	Parms.PrevWeapon = PrevWeapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ScoutDroneRuntime.FortScoutDroneControllingComponent.ServerRequestDroneDismissal
// (Final, Net, NetReliable, Native, Event, Private, NetServer)

void UFortScoutDroneControllingComponent::ServerRequestDroneDismissal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScoutDroneControllingComponent", "ServerRequestDroneDismissal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ScoutDroneRuntime.FortScoutDroneControllingComponent.GetControlledDrone
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortScoutDrone*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortScoutDrone* UFortScoutDroneControllingComponent::GetControlledDrone() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScoutDroneControllingComponent", "GetControlledDrone");

	Params::FortScoutDroneControllingComponent_GetControlledDrone Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScoutDroneRuntime.FortScoutDronePickupManager.BP_OnActorsAttached
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void UFortScoutDronePickupManager::BP_OnActorsAttached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScoutDronePickupManager", "BP_OnActorsAttached");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ScoutDroneRuntime.FortScoutDronePickupManager.BP_OnActorsDetached
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void UFortScoutDronePickupManager::BP_OnActorsDetached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScoutDronePickupManager", "BP_OnActorsDetached");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ScoutDroneRuntime.FortScoutDronePickupManager.OnAttachedPawnDied
// (Final, Native, Private, HasDefaults)
// Parameters:
// class AActor*                           DamagedActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      InstigatedBy                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          HitLocation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              FHitComponent                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Momentum                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortScoutDronePickupManager::OnAttachedPawnDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScoutDronePickupManager", "OnAttachedPawnDied");

	Params::FortScoutDronePickupManager_OnAttachedPawnDied Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.Damage = Damage;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.HitLocation = std::move(HitLocation);
	Parms.FHitComponent = FHitComponent;
	Parms.BoneName = BoneName;
	Parms.Momentum = std::move(Momentum);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ScoutDroneRuntime.FortScoutDronePickupManager.OnPawnDBNOStateChanged
// (Final, Native, Private)
// Parameters:
// class AFortPawn*                        Pawn                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsDBNO                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortScoutDronePickupManager::OnPawnDBNOStateChanged(class AFortPawn* Pawn, bool bIsDBNO)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScoutDronePickupManager", "OnPawnDBNOStateChanged");

	Params::FortScoutDronePickupManager_OnPawnDBNOStateChanged Parms{};

	Parms.Pawn = Pawn;
	Parms.bIsDBNO = bIsDBNO;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ScoutDroneRuntime.FortScoutDronePickupManager.OnRep_AttachedTargets
// (Final, Native, Private)

void UFortScoutDronePickupManager::OnRep_AttachedTargets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScoutDronePickupManager", "OnRep_AttachedTargets");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ScoutDroneRuntime.FortScoutDronePickupManager.ServerDropAttachedActors
// (Net, NetReliable, Native, Event, Public, NetServer)

void UFortScoutDronePickupManager::ServerDropAttachedActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScoutDronePickupManager", "ServerDropAttachedActors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ScoutDroneRuntime.FortScoutDronePickupManager.ServerUpdateItemAttachment
// (Final, Net, NetReliable, Native, Event, Private, NetServer, HasDefaults)
// Parameters:
// struct FVector                          CalculatedItemOffset                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortScoutDronePickupManager::ServerUpdateItemAttachment(const struct FVector& CalculatedItemOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScoutDronePickupManager", "ServerUpdateItemAttachment");

	Params::FortScoutDronePickupManager_ServerUpdateItemAttachment Parms{};

	Parms.CalculatedItemOffset = std::move(CalculatedItemOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ScoutDroneRuntime.FortScoutDronePickupManager.HasAnyAttachedActors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortScoutDronePickupManager::HasAnyAttachedActors() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScoutDronePickupManager", "HasAnyAttachedActors");

	Params::FortScoutDronePickupManager_HasAnyAttachedActors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScoutDroneRuntime.FortScoutDronePickupManager.HasAPawnAtached
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortScoutDronePickupManager::HasAPawnAtached() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScoutDronePickupManager", "HasAPawnAtached");

	Params::FortScoutDronePickupManager_HasAPawnAtached Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

