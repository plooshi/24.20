#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerseMovement_0

#include "Basic.hpp"

#include "EpicGamesTemporary_0_structs.hpp"


namespace SDK
{

// VerseEnum VerseMovement.VerseMovement_move_response_effect
// NumValues: 0x0005
enum class EVerseMovement_move_response_effect : uint8
{
	Force                                    = 0,
	VelocityChange                           = 1,
	Transform                                = 2,
	move_response_effect_MAX                 = 3,
	VerseMovement_move_response_MAX          = 4,
};

// VerseEnum VerseMovement.VerseMovement_move_response_frame
// NumValues: 0x0005
enum class EVerseMovement_move_response_frame : uint8
{
	Absolute                                 = 0,
	move_response_frame_Object               = 1,
	move_response_frame_Camera               = 2,
	move_response_frame_MAX                  = 3,
	VerseMovement_move_response_MAX          = 4,
};

// VerseEnum VerseMovement.VerseMovement_move_response_modifier
// NumValues: 0x0007
enum class EVerseMovement_move_response_modifier : uint8
{
	move_response_modifier_Add               = 0,
	TargetTransform                          = 1,
	TargetVelocity                           = 2,
	OverrideTransform                        = 3,
	OverrideVelocity                         = 4,
	move_response_modifier_MAX               = 5,
	VerseMovement_move_response_MAX          = 6,
};

// VerseEnum VerseMovement.VerseMovement_move_response_type
// NumValues: 0x0004
enum class EVerseMovement_move_response_type : uint8
{
	Linear                                   = 0,
	Angular                                  = 1,
	move_response_type_MAX                   = 2,
	VerseMovement_move_response_MAX          = 3,
};

// VerseEnum VerseMovement.VerseMovement_move_trigger_type
// NumValues: 0x0007
enum class EVerseMovement_move_trigger_type : uint8
{
	Input                                    = 0,
	Constraint                               = 1,
	Physics                                  = 2,
	Trace                                    = 3,
	Constant                                 = 4,
	move_trigger_type_MAX                    = 5,
	VerseMovement_move_trigger_MAX           = 6,
};

// VerseStruct VerseMovement.VerseMovement_move_input_trigger_params
// 0x0038 (0x0038 - 0x0000)
struct FVerseMovement_move_input_trigger_params final
{
public:
	uint8                                         __verse_0x7D5B20A2_IsAxis : 1;                     // 0x0000(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (InstancedReference, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseStringProperty_                         __verse_0x38D9A616_Name;                           // 0x0008(0x0010)(InstancedReference, HasGetValueTypeHash)
	FOptionProperty_                              __verse_0x2A186A5F_AxisToMagnitudeCurve;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	uint8                                         __verse_0xC35555B9_AccumulateAxisInput : 1;        // 0x0020(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (InstancedReference, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpatialMath_vector2                   __verse_0x9EA11583_ClampAxis;                      // 0x0028(0x0010)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FVerseMovement_move_input_trigger_params) == 0x000008, "Wrong alignment on FVerseMovement_move_input_trigger_params");
static_assert(sizeof(FVerseMovement_move_input_trigger_params) == 0x000038, "Wrong size on FVerseMovement_move_input_trigger_params");
static_assert(offsetof(FVerseMovement_move_input_trigger_params, __verse_0x38D9A616_Name) == 0x000008, "Member 'FVerseMovement_move_input_trigger_params::__verse_0x38D9A616_Name' has a wrong offset!");
static_assert(offsetof(FVerseMovement_move_input_trigger_params, __verse_0x2A186A5F_AxisToMagnitudeCurve) == 0x000018, "Member 'FVerseMovement_move_input_trigger_params::__verse_0x2A186A5F_AxisToMagnitudeCurve' has a wrong offset!");
static_assert(offsetof(FVerseMovement_move_input_trigger_params, __verse_0x9EA11583_ClampAxis) == 0x000028, "Member 'FVerseMovement_move_input_trigger_params::__verse_0x9EA11583_ClampAxis' has a wrong offset!");

// VerseStruct VerseMovement.VerseMovement_move_physics_trigger_params
// 0x0018 (0x0018 - 0x0000)
struct FVerseMovement_move_physics_trigger_params final
{
public:
	struct FSpatialMath_vector3                   __verse_0xE78E15A1_SpeedInDirection;               // 0x0000(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FVerseMovement_move_physics_trigger_params) == 0x000008, "Wrong alignment on FVerseMovement_move_physics_trigger_params");
static_assert(sizeof(FVerseMovement_move_physics_trigger_params) == 0x000018, "Wrong size on FVerseMovement_move_physics_trigger_params");
static_assert(offsetof(FVerseMovement_move_physics_trigger_params, __verse_0xE78E15A1_SpeedInDirection) == 0x000000, "Member 'FVerseMovement_move_physics_trigger_params::__verse_0xE78E15A1_SpeedInDirection' has a wrong offset!");

// VerseStruct VerseMovement.VerseMovement_move_trace_trigger_params
// 0x0038 (0x0038 - 0x0000)
struct FVerseMovement_move_trace_trigger_params final
{
public:
	struct FSpatialMath_vector3                   __verse_0x722EF6A3_Direction;                      // 0x0000(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	EVerseMovement_move_response_frame            __verse_0x08A22912_Frame;                          // 0x0018(0x0001)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        __verse_0x2AC13C27_TraceLength;                    // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         __verse_0x99455FC7_ProportionalToHitDistance : 1;  // 0x0028(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (InstancedReference, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FOptionProperty_                              __verse_0x0C3D14E7_HitDistanceToMagnitudeCurve;    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(FVerseMovement_move_trace_trigger_params) == 0x000008, "Wrong alignment on FVerseMovement_move_trace_trigger_params");
static_assert(sizeof(FVerseMovement_move_trace_trigger_params) == 0x000038, "Wrong size on FVerseMovement_move_trace_trigger_params");
static_assert(offsetof(FVerseMovement_move_trace_trigger_params, __verse_0x722EF6A3_Direction) == 0x000000, "Member 'FVerseMovement_move_trace_trigger_params::__verse_0x722EF6A3_Direction' has a wrong offset!");
static_assert(offsetof(FVerseMovement_move_trace_trigger_params, __verse_0x08A22912_Frame) == 0x000018, "Member 'FVerseMovement_move_trace_trigger_params::__verse_0x08A22912_Frame' has a wrong offset!");
static_assert(offsetof(FVerseMovement_move_trace_trigger_params, __verse_0x2AC13C27_TraceLength) == 0x000020, "Member 'FVerseMovement_move_trace_trigger_params::__verse_0x2AC13C27_TraceLength' has a wrong offset!");
static_assert(offsetof(FVerseMovement_move_trace_trigger_params, __verse_0x0C3D14E7_HitDistanceToMagnitudeCurve) == 0x000030, "Member 'FVerseMovement_move_trace_trigger_params::__verse_0x0C3D14E7_HitDistanceToMagnitudeCurve' has a wrong offset!");

// VerseStruct VerseMovement.VerseMovement_move_trigger
// 0x0090 (0x0090 - 0x0000)
struct FVerseMovement_move_trigger final
{
public:
	EVerseMovement_move_trigger_type              __verse_0x72E298E9_Type;                           // 0x0000(0x0001)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVerseMovement_move_input_trigger_params __verse_0xD3F71544_InputParams;                    // 0x0008(0x0038)(InstancedReference)
	struct FVerseMovement_move_physics_trigger_params __verse_0x4D939126_PhysicsParams;                  // 0x0040(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FVerseMovement_move_trace_trigger_params __verse_0x874565E7_TraceParams;                    // 0x0058(0x0038)(InstancedReference, NoDestructor)
};
static_assert(alignof(FVerseMovement_move_trigger) == 0x000008, "Wrong alignment on FVerseMovement_move_trigger");
static_assert(sizeof(FVerseMovement_move_trigger) == 0x000090, "Wrong size on FVerseMovement_move_trigger");
static_assert(offsetof(FVerseMovement_move_trigger, __verse_0x72E298E9_Type) == 0x000000, "Member 'FVerseMovement_move_trigger::__verse_0x72E298E9_Type' has a wrong offset!");
static_assert(offsetof(FVerseMovement_move_trigger, __verse_0xD3F71544_InputParams) == 0x000008, "Member 'FVerseMovement_move_trigger::__verse_0xD3F71544_InputParams' has a wrong offset!");
static_assert(offsetof(FVerseMovement_move_trigger, __verse_0x4D939126_PhysicsParams) == 0x000040, "Member 'FVerseMovement_move_trigger::__verse_0x4D939126_PhysicsParams' has a wrong offset!");
static_assert(offsetof(FVerseMovement_move_trigger, __verse_0x874565E7_TraceParams) == 0x000058, "Member 'FVerseMovement_move_trigger::__verse_0x874565E7_TraceParams' has a wrong offset!");

// VerseStruct VerseMovement.VerseMovement_move_response
// 0x0050 (0x0050 - 0x0000)
struct FVerseMovement_move_response final
{
public:
	struct FSpatialMath_vector3                   __verse_0x0464FDB1_Vector;                         // 0x0000(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	double                                        __verse_0xA6A970E7_Magnitude;                      // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FOptionProperty_                              __verse_0x9D526629_MagnitudeCurve;                 // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	EVerseMovement_move_response_type             __verse_0x72E298E9_Type;                           // 0x0028(0x0001)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerseMovement_move_response_frame            __verse_0x08A22912_Frame;                          // 0x0029(0x0001)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerseMovement_move_response_effect           __verse_0xCDC901A6_Effect;                         // 0x002A(0x0001)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerseMovement_move_response_modifier         __verse_0xCDC9EFBD_Modifier;                       // 0x002B(0x0001)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpatialMath_vector3                   __verse_0x7B949B4B_ClampVector;                    // 0x0030(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	EVerseMovement_move_response_frame            __verse_0x3B045791_ClampFrame;                     // 0x0048(0x0001)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FVerseMovement_move_response) == 0x000008, "Wrong alignment on FVerseMovement_move_response");
static_assert(sizeof(FVerseMovement_move_response) == 0x000050, "Wrong size on FVerseMovement_move_response");
static_assert(offsetof(FVerseMovement_move_response, __verse_0x0464FDB1_Vector) == 0x000000, "Member 'FVerseMovement_move_response::__verse_0x0464FDB1_Vector' has a wrong offset!");
static_assert(offsetof(FVerseMovement_move_response, __verse_0xA6A970E7_Magnitude) == 0x000018, "Member 'FVerseMovement_move_response::__verse_0xA6A970E7_Magnitude' has a wrong offset!");
static_assert(offsetof(FVerseMovement_move_response, __verse_0x9D526629_MagnitudeCurve) == 0x000020, "Member 'FVerseMovement_move_response::__verse_0x9D526629_MagnitudeCurve' has a wrong offset!");
static_assert(offsetof(FVerseMovement_move_response, __verse_0x72E298E9_Type) == 0x000028, "Member 'FVerseMovement_move_response::__verse_0x72E298E9_Type' has a wrong offset!");
static_assert(offsetof(FVerseMovement_move_response, __verse_0x08A22912_Frame) == 0x000029, "Member 'FVerseMovement_move_response::__verse_0x08A22912_Frame' has a wrong offset!");
static_assert(offsetof(FVerseMovement_move_response, __verse_0xCDC901A6_Effect) == 0x00002A, "Member 'FVerseMovement_move_response::__verse_0xCDC901A6_Effect' has a wrong offset!");
static_assert(offsetof(FVerseMovement_move_response, __verse_0xCDC9EFBD_Modifier) == 0x00002B, "Member 'FVerseMovement_move_response::__verse_0xCDC9EFBD_Modifier' has a wrong offset!");
static_assert(offsetof(FVerseMovement_move_response, __verse_0x7B949B4B_ClampVector) == 0x000030, "Member 'FVerseMovement_move_response::__verse_0x7B949B4B_ClampVector' has a wrong offset!");
static_assert(offsetof(FVerseMovement_move_response, __verse_0x3B045791_ClampFrame) == 0x000048, "Member 'FVerseMovement_move_response::__verse_0x3B045791_ClampFrame' has a wrong offset!");

// VerseStruct VerseMovement.VerseMovement_move_config_entry
// 0x0030 (0x0030 - 0x0000)
struct FVerseMovement_move_config_entry final
{
public:
	FVerseStringProperty_                         __verse_0x38D9A616_Name;                           // 0x0000(0x0010)(InstancedReference, HasGetValueTypeHash)
	TArray<struct FVerseMovement_move_trigger>    __verse_0x6DA99CE5_Triggers;                       // 0x0010(0x0010)(InstancedReference, ContainsInstancedReference)
	TArray<struct FVerseMovement_move_response>   __verse_0xBAC32A9B_Responses;                      // 0x0020(0x0010)(InstancedReference, ContainsInstancedReference)
};
static_assert(alignof(FVerseMovement_move_config_entry) == 0x000008, "Wrong alignment on FVerseMovement_move_config_entry");
static_assert(sizeof(FVerseMovement_move_config_entry) == 0x000030, "Wrong size on FVerseMovement_move_config_entry");
static_assert(offsetof(FVerseMovement_move_config_entry, __verse_0x38D9A616_Name) == 0x000000, "Member 'FVerseMovement_move_config_entry::__verse_0x38D9A616_Name' has a wrong offset!");
static_assert(offsetof(FVerseMovement_move_config_entry, __verse_0x6DA99CE5_Triggers) == 0x000010, "Member 'FVerseMovement_move_config_entry::__verse_0x6DA99CE5_Triggers' has a wrong offset!");
static_assert(offsetof(FVerseMovement_move_config_entry, __verse_0xBAC32A9B_Responses) == 0x000020, "Member 'FVerseMovement_move_config_entry::__verse_0xBAC32A9B_Responses' has a wrong offset!");

// VerseStruct VerseMovement.VerseMovement_move_config
// 0x0010 (0x0010 - 0x0000)
struct FVerseMovement_move_config final
{
public:
	TArray<struct FVerseMovement_move_config_entry> __verse_0xCE82C4DD_Entries;                        // 0x0000(0x0010)(InstancedReference, ContainsInstancedReference)
};
static_assert(alignof(FVerseMovement_move_config) == 0x000008, "Wrong alignment on FVerseMovement_move_config");
static_assert(sizeof(FVerseMovement_move_config) == 0x000010, "Wrong size on FVerseMovement_move_config");
static_assert(offsetof(FVerseMovement_move_config, __verse_0xCE82C4DD_Entries) == 0x000000, "Member 'FVerseMovement_move_config::__verse_0xCE82C4DD_Entries' has a wrong offset!");

}

