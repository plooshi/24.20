#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MidMatchAssignedGameplayRuntime

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// ScriptStruct MidMatchAssignedGameplayRuntime.FortAssignedObjectiveSquadData
// 0x0020 (0x0020 - 0x0000)
struct FFortAssignedObjectiveSquadData final
{
public:
	uint8                                         SquadId;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CachedSquadAvgLocation;                            // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFortAssignedObjectiveSquadData) == 0x000008, "Wrong alignment on FFortAssignedObjectiveSquadData");
static_assert(sizeof(FFortAssignedObjectiveSquadData) == 0x000020, "Wrong size on FFortAssignedObjectiveSquadData");
static_assert(offsetof(FFortAssignedObjectiveSquadData, SquadId) == 0x000000, "Member 'FFortAssignedObjectiveSquadData::SquadId' has a wrong offset!");
static_assert(offsetof(FFortAssignedObjectiveSquadData, CachedSquadAvgLocation) == 0x000008, "Member 'FFortAssignedObjectiveSquadData::CachedSquadAvgLocation' has a wrong offset!");

// ScriptStruct MidMatchAssignedGameplayRuntime.FortAssignedObjectiveData
// 0x0028 (0x0028 - 0x0000)
struct FFortAssignedObjectiveData final
{
public:
	TArray<struct FFortAssignedObjectiveSquadData> AssignedSquadDataArray;                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FVector                                ObjectiveLocation;                                 // 0x0010(0x0018)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFortAssignedObjectiveData) == 0x000008, "Wrong alignment on FFortAssignedObjectiveData");
static_assert(sizeof(FFortAssignedObjectiveData) == 0x000028, "Wrong size on FFortAssignedObjectiveData");
static_assert(offsetof(FFortAssignedObjectiveData, AssignedSquadDataArray) == 0x000000, "Member 'FFortAssignedObjectiveData::AssignedSquadDataArray' has a wrong offset!");
static_assert(offsetof(FFortAssignedObjectiveData, ObjectiveLocation) == 0x000010, "Member 'FFortAssignedObjectiveData::ObjectiveLocation' has a wrong offset!");

}

