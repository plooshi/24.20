#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VKDownloadOnDemandUI

#include "Basic.hpp"

#include "VKDownloadOnDemandUI_classes.hpp"
#include "VKDownloadOnDemandUI_parameters.hpp"


namespace SDK
{

// Function VKDownloadOnDemandUI.DownloadOnDemandProjectManagementTab.RemoveProjectConfirmed
// (Final, Native, Protected, BlueprintCallable)

void UDownloadOnDemandProjectManagementTab::RemoveProjectConfirmed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloadOnDemandProjectManagementTab", "RemoveProjectConfirmed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VKDownloadOnDemandUI.DownloadOnDemandProjectManagementTab.UpdateProjectConfirmed
// (Final, Native, Protected, BlueprintCallable)

void UDownloadOnDemandProjectManagementTab::UpdateProjectConfirmed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloadOnDemandProjectManagementTab", "UpdateProjectConfirmed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VKDownloadOnDemandUI.DownloadOnDemandAddProjectModal.HandleDownloadLinkIdTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                             InputLinkCode                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UDownloadOnDemandAddProjectModal::HandleDownloadLinkIdTextChanged(const class FText& InputLinkCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloadOnDemandAddProjectModal", "HandleDownloadLinkIdTextChanged");

	Params::DownloadOnDemandAddProjectModal_HandleDownloadLinkIdTextChanged Parms{};

	Parms.InputLinkCode = std::move(InputLinkCode);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VKDownloadOnDemandUI.DownloadOnDemandAddProjectModal.UpdateLightningViolator
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// ESlateVisibility                        InVisibility                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UDownloadOnDemandAddProjectModal::UpdateLightningViolator(ESlateVisibility InVisibility, const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloadOnDemandAddProjectModal", "UpdateLightningViolator");

	Params::DownloadOnDemandAddProjectModal_UpdateLightningViolator Parms{};

	Parms.InVisibility = InVisibility;
	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function VKDownloadOnDemandUI.DownloadOnDemandProjectTile.OnLabelUpdated
// (Event, Protected, BlueprintEvent)

void UDownloadOnDemandProjectTile::OnLabelUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloadOnDemandProjectTile", "OnLabelUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VKDownloadOnDemandUI.DownloadOnDemandProjectTile.UpdateLabel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bShowLabel                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDownloadOnDemandProjectTile::UpdateLabel(bool bShowLabel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloadOnDemandProjectTile", "UpdateLabel");

	Params::DownloadOnDemandProjectTile_UpdateLabel Parms{};

	Parms.bShowLabel = bShowLabel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

