#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CosmeticLoadoutScreen

#include "Basic.hpp"

#include "CosmeticLoadoutScreen_classes.hpp"
#include "CosmeticLoadoutScreen_parameters.hpp"


namespace SDK
{

// Function CosmeticLoadoutScreen.CosmeticLoadoutScreen_C.BP_OnActivated
// (Event, Protected, BlueprintEvent)

void UCosmeticLoadoutScreen_C::BP_OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CosmeticLoadoutScreen_C", "BP_OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CosmeticLoadoutScreen.CosmeticLoadoutScreen_C.ExecuteUbergraph_CosmeticLoadoutScreen
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCosmeticLoadoutScreen_C::ExecuteUbergraph_CosmeticLoadoutScreen(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CosmeticLoadoutScreen_C", "ExecuteUbergraph_CosmeticLoadoutScreen");

	Params::CosmeticLoadoutScreen_C_ExecuteUbergraph_CosmeticLoadoutScreen Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CosmeticLoadoutScreen.CosmeticLoadoutScreen_C.OnFlavorForScreenMode
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFortCosmeticLoadoutScreenMode          NewMode                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCosmeticLoadoutScreen_C::OnFlavorForScreenMode(EFortCosmeticLoadoutScreenMode NewMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CosmeticLoadoutScreen_C", "OnFlavorForScreenMode");

	Params::CosmeticLoadoutScreen_C_OnFlavorForScreenMode Parms{};

	Parms.NewMode = NewMode;

	UObject::ProcessEvent(Func, &Parms);
}

}

