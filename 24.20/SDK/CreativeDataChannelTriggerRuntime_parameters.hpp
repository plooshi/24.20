#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CreativeDataChannelTriggerRuntime

#include "Basic.hpp"

#include "CreativeDataChannelTriggerRuntime_structs.hpp"


namespace SDK::Params
{

// Function CreativeDataChannelTriggerRuntime.CreativeDataChannelTarget.FireEvent
// 0x0004 (0x0004 - 0x0000)
struct CreativeDataChannelTarget_FireEvent final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CreativeDataChannelTarget_FireEvent) == 0x000004, "Wrong alignment on CreativeDataChannelTarget_FireEvent");
static_assert(sizeof(CreativeDataChannelTarget_FireEvent) == 0x000004, "Wrong size on CreativeDataChannelTarget_FireEvent");
static_assert(offsetof(CreativeDataChannelTarget_FireEvent, EventName) == 0x000000, "Member 'CreativeDataChannelTarget_FireEvent::EventName' has a wrong offset!");

// Function CreativeDataChannelTriggerRuntime.CreativeDataChannelTarget.TestCreativeDataChannelTarget
// 0x0010 (0x0010 - 0x0000)
struct CreativeDataChannelTarget_TestCreativeDataChannelTarget final
{
public:
	struct FCreativeDataChannelEvents             TestEvents;                                        // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CreativeDataChannelTarget_TestCreativeDataChannelTarget) == 0x000008, "Wrong alignment on CreativeDataChannelTarget_TestCreativeDataChannelTarget");
static_assert(sizeof(CreativeDataChannelTarget_TestCreativeDataChannelTarget) == 0x000010, "Wrong size on CreativeDataChannelTarget_TestCreativeDataChannelTarget");
static_assert(offsetof(CreativeDataChannelTarget_TestCreativeDataChannelTarget, TestEvents) == 0x000000, "Member 'CreativeDataChannelTarget_TestCreativeDataChannelTarget::TestEvents' has a wrong offset!");

// Function CreativeDataChannelTriggerRuntime.CreativeDataChannelTargetRL.ReportServerStateStreamError
// 0x0030 (0x0030 - 0x0000)
struct CreativeDataChannelTargetRL_ReportServerStateStreamError final
{
public:
	class FString                                 Error;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UID;                                               // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 URL;                                               // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CreativeDataChannelTargetRL_ReportServerStateStreamError) == 0x000008, "Wrong alignment on CreativeDataChannelTargetRL_ReportServerStateStreamError");
static_assert(sizeof(CreativeDataChannelTargetRL_ReportServerStateStreamError) == 0x000030, "Wrong size on CreativeDataChannelTargetRL_ReportServerStateStreamError");
static_assert(offsetof(CreativeDataChannelTargetRL_ReportServerStateStreamError, Error) == 0x000000, "Member 'CreativeDataChannelTargetRL_ReportServerStateStreamError::Error' has a wrong offset!");
static_assert(offsetof(CreativeDataChannelTargetRL_ReportServerStateStreamError, UID) == 0x000010, "Member 'CreativeDataChannelTargetRL_ReportServerStateStreamError::UID' has a wrong offset!");
static_assert(offsetof(CreativeDataChannelTargetRL_ReportServerStateStreamError, URL) == 0x000020, "Member 'CreativeDataChannelTargetRL_ReportServerStateStreamError::URL' has a wrong offset!");

}

