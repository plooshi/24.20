#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DiscoveryBrowserUI

#include "Basic.hpp"

#include "DiscoveryBrowserUI_classes.hpp"
#include "DiscoveryBrowserUI_parameters.hpp"


namespace SDK
{

// Function DiscoveryBrowserUI.FortActivityBrowserTabButton.OnFavoriteChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsFavorite                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserTabButton::OnFavoriteChanged(bool bIsFavorite)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserTabButton", "OnFavoriteChanged");

	Params::FortActivityBrowserTabButton_OnFavoriteChanged Parms{};

	Parms.bIsFavorite = bIsFavorite;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowser.HandleTabChanged
// (Final, Native, Private)
// Parameters:
// class FName                             TabId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowser::HandleTabChanged(class FName TabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowser", "HandleTabChanged");

	Params::FortActivityBrowser_HandleTabChanged Parms{};

	Parms.TabId = TabId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DiscoveryBrowserUI.FortActivityBrowser.OnActivitySelected
// (Event, Protected, BlueprintEvent)

void UFortActivityBrowser::OnActivitySelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowser", "OnActivitySelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityBrowser.OnEnableColorScheme
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsColorSchemeActive                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowser::OnEnableColorScheme(const bool bIsColorSchemeActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowser", "OnEnableColorScheme");

	Params::FortActivityBrowser_OnEnableColorScheme Parms{};

	Parms.bIsColorSchemeActive = bIsColorSchemeActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowser.OnPlayerQueueTypeChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// EPlayerQueueType                        PlayerQueueType                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowser::OnPlayerQueueTypeChanged(const EPlayerQueueType PlayerQueueType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowser", "OnPlayerQueueTypeChanged");

	Params::FortActivityBrowser_OnPlayerQueueTypeChanged Parms{};

	Parms.PlayerQueueType = PlayerQueueType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowser.OnSwapColorScheme
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInIsUsingAlternateColorScheme                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowser::OnSwapColorScheme(const bool bInIsUsingAlternateColorScheme)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowser", "OnSwapColorScheme");

	Params::FortActivityBrowser_OnSwapColorScheme Parms{};

	Parms.bInIsUsingAlternateColorScheme = bInIsUsingAlternateColorScheme;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserPlayWithFriendsTile.OnTextureBeginLoading
// (Event, Protected, BlueprintEvent)

void UFortActivityBrowserPlayWithFriendsTile::OnTextureBeginLoading()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserPlayWithFriendsTile", "OnTextureBeginLoading");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityBrowserPlayWithFriendsTile.OnTextureLoadingComplete
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UTexture*                         ThumbnailTexture                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserPlayWithFriendsTile::OnTextureLoadingComplete(const class UTexture* ThumbnailTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserPlayWithFriendsTile", "OnTextureLoadingComplete");

	Params::FortActivityBrowserPlayWithFriendsTile_OnTextureLoadingComplete Parms{};

	Parms.ThumbnailTexture = ThumbnailTexture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserPlayWithFriendsTile.OnTileActiveSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsTileActive                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserPlayWithFriendsTile::OnTileActiveSet(const bool bIsTileActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserPlayWithFriendsTile", "OnTileActiveSet");

	Params::FortActivityBrowserPlayWithFriendsTile_OnTileActiveSet Parms{};

	Parms.bIsTileActive = bIsTileActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserPlayWithFriendsTile.UpdateIslandInformation
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             ActivityName                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortActivityBrowserPlayWithFriendsTile::UpdateIslandInformation(const class FText& ActivityName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserPlayWithFriendsTile", "UpdateIslandInformation");

	Params::FortActivityBrowserPlayWithFriendsTile_UpdateIslandInformation Parms{};

	Parms.ActivityName = std::move(ActivityName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserPlayWithFriendsTile.UpdateIslandInformationAndThumbnail
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             ActivityName                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UTexture*                         ThumbnailTexture                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserPlayWithFriendsTile::UpdateIslandInformationAndThumbnail(const class FText& ActivityName, const class UTexture* ThumbnailTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserPlayWithFriendsTile", "UpdateIslandInformationAndThumbnail");

	Params::FortActivityBrowserPlayWithFriendsTile_UpdateIslandInformationAndThumbnail Parms{};

	Parms.ActivityName = std::move(ActivityName);
	Parms.ThumbnailTexture = ThumbnailTexture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserPlayWithFriendsTile.UpdateJoinablePartySubText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             JoinablePartySubText                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortActivityBrowserPlayWithFriendsTile::UpdateJoinablePartySubText(const class FText& JoinablePartySubText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserPlayWithFriendsTile", "UpdateJoinablePartySubText");

	Params::FortActivityBrowserPlayWithFriendsTile_UpdateJoinablePartySubText Parms{};

	Parms.JoinablePartySubText = std::move(JoinablePartySubText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserPlayWithFriendsTile.UpdatePartyInformation
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   CurrentPartyCount                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MaxPartyCount                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsActiveInvite                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsPartyPrivate                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserPlayWithFriendsTile::UpdatePartyInformation(const int32 CurrentPartyCount, const int32 MaxPartyCount, const bool bIsActiveInvite, const bool bIsPartyPrivate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserPlayWithFriendsTile", "UpdatePartyInformation");

	Params::FortActivityBrowserPlayWithFriendsTile_UpdatePartyInformation Parms{};

	Parms.CurrentPartyCount = CurrentPartyCount;
	Parms.MaxPartyCount = MaxPartyCount;
	Parms.bIsActiveInvite = bIsActiveInvite;
	Parms.bIsPartyPrivate = bIsPartyPrivate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserPlayWithFriendsTile.UpdatePartyMemberNames
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Names                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortActivityBrowserPlayWithFriendsTile::UpdatePartyMemberNames(const class FText& Names)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserPlayWithFriendsTile", "UpdatePartyMemberNames");

	Params::FortActivityBrowserPlayWithFriendsTile_UpdatePartyMemberNames Parms{};

	Parms.Names = std::move(Names);

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserPlayWithFriendsTile.UpdateRichPresence
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             RichPresence                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortActivityBrowserPlayWithFriendsTile::UpdateRichPresence(const class FText& RichPresence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserPlayWithFriendsTile", "UpdateRichPresence");

	Params::FortActivityBrowserPlayWithFriendsTile_UpdateRichPresence Parms{};

	Parms.RichPresence = std::move(RichPresence);

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserRow.OnCategoryItemChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bPlayAnimation                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserRow::OnCategoryItemChanged(const bool bPlayAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserRow", "OnCategoryItemChanged");

	Params::FortActivityBrowserRow_OnCategoryItemChanged Parms{};

	Parms.bPlayAnimation = bPlayAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserRow.OnRowIsActiveChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsActive                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserRow::OnRowIsActiveChanged(const bool bIsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserRow", "OnRowIsActiveChanged");

	Params::FortActivityBrowserRow_OnRowIsActiveChanged Parms{};

	Parms.bIsActive = bIsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserRow.OnRowIsSelectedChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsSelected                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserRow::OnRowIsSelectedChanged(const bool bIsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserRow", "OnRowIsSelectedChanged");

	Params::FortActivityBrowserRow_OnRowIsSelectedChanged Parms{};

	Parms.bIsSelected = bIsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserRow.OnRowMoveDown
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bMovingOffscreen                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserRow::OnRowMoveDown(const bool bMovingOffscreen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserRow", "OnRowMoveDown");

	Params::FortActivityBrowserRow_OnRowMoveDown Parms{};

	Parms.bMovingOffscreen = bMovingOffscreen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserRow.OnRowMoveUp
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bMovingOffscreen                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserRow::OnRowMoveUp(const bool bMovingOffscreen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserRow", "OnRowMoveUp");

	Params::FortActivityBrowserRow_OnRowMoveUp Parms{};

	Parms.bMovingOffscreen = bMovingOffscreen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserRow.OnRowPeekStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsInPeekState                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserRow::OnRowPeekStateChanged(const bool bIsInPeekState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserRow", "OnRowPeekStateChanged");

	Params::FortActivityBrowserRow_OnRowPeekStateChanged Parms{};

	Parms.bIsInPeekState = bIsInPeekState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserRow.GetIsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivityBrowserRow::GetIsActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserRow", "GetIsActive");

	Params::FortActivityBrowserRow_GetIsActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityBrowserRow.GetIsInPeekState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivityBrowserRow::GetIsInPeekState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserRow", "GetIsInPeekState");

	Params::FortActivityBrowserRow_GetIsInPeekState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityBrowserRow.GetIsSelected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivityBrowserRow::GetIsSelected() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserRow", "GetIsSelected");

	Params::FortActivityBrowserRow_GetIsSelected Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityBrowserRowHero.CheckUpdateDetailsDelay
// (Final, Native, Private)

void UFortActivityBrowserRowHero::CheckUpdateDetailsDelay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserRowHero", "CheckUpdateDetailsDelay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DiscoveryBrowserUI.FortActivityBrowserRowHero.CycleNextActivity
// (Final, Native, Public, BlueprintCallable)

void UFortActivityBrowserRowHero::CycleNextActivity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserRowHero", "CycleNextActivity");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DiscoveryBrowserUI.FortActivityBrowserRowHero.HandleActivityVideoCycleEndReached
// (Final, Native, Private)

void UFortActivityBrowserRowHero::HandleActivityVideoCycleEndReached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserRowHero", "HandleActivityVideoCycleEndReached");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DiscoveryBrowserUI.FortActivityBrowserRowHero.HandleActivityVideoCycleStarted
// (Final, Native, Private)

void UFortActivityBrowserRowHero::HandleActivityVideoCycleStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserRowHero", "HandleActivityVideoCycleStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DiscoveryBrowserUI.FortActivityBrowserRowHero.OnActivityUpdated
// (Event, Public, BlueprintEvent)

void UFortActivityBrowserRowHero::OnActivityUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserRowHero", "OnActivityUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityBrowserRowHero.OnListViewFinishedAddingEntries
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   ActivityCount                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserRowHero::OnListViewFinishedAddingEntries(int32 ActivityCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserRowHero", "OnListViewFinishedAddingEntries");

	Params::FortActivityBrowserRowHero_OnListViewFinishedAddingEntries Parms{};

	Parms.ActivityCount = ActivityCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserRowHero.OnPlayKeyArtIntro
// (Event, Public, BlueprintEvent)

void UFortActivityBrowserRowHero::OnPlayKeyArtIntro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserRowHero", "OnPlayKeyArtIntro");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityBrowserRowHero.OnPlayKeyArtOutro
// (Event, Public, BlueprintEvent)

void UFortActivityBrowserRowHero::OnPlayKeyArtOutro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserRowHero", "OnPlayKeyArtOutro");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityBrowserRowHero.OnPreviewImageChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsLoading                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         Texture                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserRowHero::OnPreviewImageChanged(const bool bIsLoading, const class UTexture* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserRowHero", "OnPreviewImageChanged");

	Params::FortActivityBrowserRowHero_OnPreviewImageChanged Parms{};

	Parms.bIsLoading = bIsLoading;
	Parms.Texture = Texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserRowHero.OnQueryActivitiesFinished
// (Event, Public, BlueprintEvent)

void UFortActivityBrowserRowHero::OnQueryActivitiesFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserRowHero", "OnQueryActivitiesFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityBrowserRowHero.OnQueryStatusChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsActive                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserRowHero::OnQueryStatusChanged(bool bIsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserRowHero", "OnQueryStatusChanged");

	Params::FortActivityBrowserRowHero_OnQueryStatusChanged Parms{};

	Parms.bIsActive = bIsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserRowHero.OnRowHeroFocusChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bHasFocus                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserRowHero::OnRowHeroFocusChanged(bool bHasFocus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserRowHero", "OnRowHeroFocusChanged");

	Params::FortActivityBrowserRowHero_OnRowHeroFocusChanged Parms{};

	Parms.bHasFocus = bHasFocus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserRowHero.OnUpdateDetailsDisplay
// (Event, Public, BlueprintEvent)

void UFortActivityBrowserRowHero::OnUpdateDetailsDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserRowHero", "OnUpdateDetailsDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityBrowserRowHero.OnVideoEndReached
// (Event, Public, BlueprintEvent)

void UFortActivityBrowserRowHero::OnVideoEndReached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserRowHero", "OnVideoEndReached");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityBrowserRowHero.OnVideoStarted
// (Event, Public, BlueprintEvent)

void UFortActivityBrowserRowHero::OnVideoStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserRowHero", "OnVideoStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityBrowserRowHero.GetCurrentTexture
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const class UTexture*                   ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTexture* UFortActivityBrowserRowHero::GetCurrentTexture() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserRowHero", "GetCurrentTexture");

	Params::FortActivityBrowserRowHero_GetCurrentTexture Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityBrowserRowHero.GetKeyArtOutroAnimation
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UWidgetAnimation*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidgetAnimation* UFortActivityBrowserRowHero::GetKeyArtOutroAnimation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserRowHero", "GetKeyArtOutroAnimation");

	Params::FortActivityBrowserRowHero_GetKeyArtOutroAnimation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityBrowserRowHero.IsImageLoading
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivityBrowserRowHero::IsImageLoading() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserRowHero", "IsImageLoading");

	Params::FortActivityBrowserRowHero_IsImageLoading Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityBrowserRowHero.IsInOutroState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivityBrowserRowHero::IsInOutroState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserRowHero", "IsInOutroState");

	Params::FortActivityBrowserRowHero_IsInOutroState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityBrowserRowHero.IsShowingSeasonalContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivityBrowserRowHero::IsShowingSeasonalContent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserRowHero", "IsShowingSeasonalContent");

	Params::FortActivityBrowserRowHero_IsShowingSeasonalContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityBrowserRowList.OnQueryStatusChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsActive                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserRowList::OnQueryStatusChanged(bool bIsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserRowList", "OnQueryStatusChanged");

	Params::FortActivityBrowserRowList_OnQueryStatusChanged Parms{};

	Parms.bIsActive = bIsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserRowPromoted.OnPreviewImageChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsLoading                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         Texture                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserRowPromoted::OnPreviewImageChanged(const bool bIsLoading, const class UTexture* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserRowPromoted", "OnPreviewImageChanged");

	Params::FortActivityBrowserRowPromoted_OnPreviewImageChanged Parms{};

	Parms.bIsLoading = bIsLoading;
	Parms.Texture = Texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserView.OnSurfaceDataDirty
// (Event, Protected, BlueprintEvent)

void UFortActivityBrowserView::OnSurfaceDataDirty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserView", "OnSurfaceDataDirty");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityBrowserView.GetInvalidActivityReason
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortInvalidActivityReason              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortInvalidActivityReason UFortActivityBrowserView::GetInvalidActivityReason() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserView", "GetInvalidActivityReason");

	Params::FortActivityBrowserView_GetInvalidActivityReason Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityBrowserRowView.OnActivityUpdated
// (Event, Public, BlueprintEvent)

void UFortActivityBrowserRowView::OnActivityUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserRowView", "OnActivityUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityBrowserRowView.OnQueryActivitiesFinished
// (Event, Public, BlueprintEvent)

void UFortActivityBrowserRowView::OnQueryActivitiesFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserRowView", "OnQueryActivitiesFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityBrowserRowView.OnRowChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   NewCategoryIndex                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityBrowserRowView::OnRowChanged(const int32 NewCategoryIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserRowView", "OnRowChanged");

	Params::FortActivityBrowserRowView_OnRowChanged Parms{};

	Parms.NewCategoryIndex = NewCategoryIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityBrowserTile.HandleActivitySelected
// (Final, Native, Private)

void UFortActivityBrowserTile::HandleActivitySelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityBrowserTile", "HandleActivitySelected");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DiscoveryBrowserUI.FortActivityPlayerBrowserView.BP_OnTileViewUpdated
// (Event, Protected, BlueprintEvent)

void UFortActivityPlayerBrowserView::BP_OnTileViewUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityPlayerBrowserView", "BP_OnTileViewUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityPlayerBrowserView.OnPlayViewIntro
// (Event, Protected, BlueprintEvent)

void UFortActivityPlayerBrowserView::OnPlayViewIntro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityPlayerBrowserView", "OnPlayViewIntro");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityPlayerBrowserView.OnQueryActivitiesComplete
// (Event, Protected, BlueprintEvent)

void UFortActivityPlayerBrowserView::OnQueryActivitiesComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityPlayerBrowserView", "OnQueryActivitiesComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityPlayerBrowserView.OnQueryActivitiesStarted
// (Event, Protected, BlueprintEvent)

void UFortActivityPlayerBrowserView::OnQueryActivitiesStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityPlayerBrowserView", "OnQueryActivitiesStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityPlayerBrowserView.PlayViewIntro
// (Final, Native, Public, BlueprintCallable)

void UFortActivityPlayerBrowserView::PlayViewIntro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityPlayerBrowserView", "PlayViewIntro");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DiscoveryBrowserUI.FortActivityCategoryTile.OnTileActiveSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsTileActive                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityCategoryTile::OnTileActiveSet(const bool bIsTileActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityCategoryTile", "OnTileActiveSet");

	Params::FortActivityCategoryTile_OnTileActiveSet Parms{};

	Parms.bIsTileActive = bIsTileActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityCategoryView.NavigateFromPanel
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EUINavigation                           Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortActivityCategoryTilePanel*   NavigatingPanel                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortActivityCategoryTilePanel*   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortActivityCategoryTilePanel* UFortActivityCategoryView::NavigateFromPanel(EUINavigation Direction, class UFortActivityCategoryTilePanel* NavigatingPanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityCategoryView", "NavigateFromPanel");

	Params::FortActivityCategoryView_NavigateFromPanel Parms{};

	Parms.Direction = Direction;
	Parms.NavigatingPanel = NavigatingPanel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityCategoryView.OnCategoryTilePanelSelected
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortActivityCategoryTilePanel*   SelectedPanel                                          (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityCategoryView::OnCategoryTilePanelSelected(const class UFortActivityCategoryTilePanel* SelectedPanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityCategoryView", "OnCategoryTilePanelSelected");

	Params::FortActivityCategoryView_OnCategoryTilePanelSelected Parms{};

	Parms.SelectedPanel = SelectedPanel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityCategoryView.OnSurfaceDataReady
// (Event, Protected, BlueprintEvent)

void UFortActivityCategoryView::OnSurfaceDataReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityCategoryView", "OnSurfaceDataReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityCategoryView.GetCurrentSelectedPanel
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UFortActivityCategoryTilePanel*ReturnValue                                            (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UFortActivityCategoryTilePanel* UFortActivityCategoryView::GetCurrentSelectedPanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityCategoryView", "GetCurrentSelectedPanel");

	Params::FortActivityCategoryView_GetCurrentSelectedPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityCategoryView.GetTopMostVisiblePanel
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class UFortActivityCategoryTilePanel*   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortActivityCategoryTilePanel* UFortActivityCategoryView::GetTopMostVisiblePanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityCategoryView", "GetTopMostVisiblePanel");

	Params::FortActivityCategoryView_GetTopMostVisiblePanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityCreateView.OnCreativeActivityUpdated
// (Event, Protected, BlueprintEvent)

void UFortActivityCreateView::OnCreativeActivityUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityCreateView", "OnCreativeActivityUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityCreateView.GetInvalidCreativeActivityReason
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortInvalidActivityReason              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortInvalidActivityReason UFortActivityCreateView::GetInvalidCreativeActivityReason() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityCreateView", "GetInvalidCreativeActivityReason");

	Params::FortActivityCreateView_GetInvalidCreativeActivityReason Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityCreatorPageView.OnCreatorActivitiesQueryFinished
// (Event, Protected, BlueprintEvent)

void UFortActivityCreatorPageView::OnCreatorActivitiesQueryFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityCreatorPageView", "OnCreatorActivitiesQueryFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityCreatorPageView.OnNoContentFoundForCreator
// (Event, Protected, BlueprintEvent)

void UFortActivityCreatorPageView::OnNoContentFoundForCreator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityCreatorPageView", "OnNoContentFoundForCreator");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityDiscoverView.CheckUpdateDetailsDelay
// (Final, Native, Private)

void UFortActivityDiscoverView::CheckUpdateDetailsDelay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityDiscoverView", "CheckUpdateDetailsDelay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DiscoveryBrowserUI.FortActivityDiscoverView.HandleMovieWidgetMediaPreEndEvent
// (Final, Native, Private)

void UFortActivityDiscoverView::HandleMovieWidgetMediaPreEndEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityDiscoverView", "HandleMovieWidgetMediaPreEndEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DiscoveryBrowserUI.FortActivityDiscoverView.HandleMovieWidgetMediaStarted
// (Final, Native, Private)

void UFortActivityDiscoverView::HandleMovieWidgetMediaStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityDiscoverView", "HandleMovieWidgetMediaStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DiscoveryBrowserUI.FortActivityDiscoverView.OnMoviePlayingChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsPlaying                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityDiscoverView::OnMoviePlayingChanged(const bool bIsPlaying)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityDiscoverView", "OnMoviePlayingChanged");

	Params::FortActivityDiscoverView_OnMoviePlayingChanged Parms{};

	Parms.bIsPlaying = bIsPlaying;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityDiscoverView.OnMoviePreEndEvent
// (Event, Public, BlueprintEvent)

void UFortActivityDiscoverView::OnMoviePreEndEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityDiscoverView", "OnMoviePreEndEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityDiscoverView.OnPlayKeyArtIntro
// (Event, Public, BlueprintEvent)

void UFortActivityDiscoverView::OnPlayKeyArtIntro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityDiscoverView", "OnPlayKeyArtIntro");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityDiscoverView.OnPlayKeyArtOutro
// (Event, Public, BlueprintEvent)

void UFortActivityDiscoverView::OnPlayKeyArtOutro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityDiscoverView", "OnPlayKeyArtOutro");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityDiscoverView.OnPreviewImageChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsLoading                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         Texture                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityDiscoverView::OnPreviewImageChanged(const bool bIsLoading, const class UTexture* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityDiscoverView", "OnPreviewImageChanged");

	Params::FortActivityDiscoverView_OnPreviewImageChanged Parms{};

	Parms.bIsLoading = bIsLoading;
	Parms.Texture = Texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityDiscoverView.OnUpdateDetailsDisplay
// (Event, Public, BlueprintEvent)

void UFortActivityDiscoverView::OnUpdateDetailsDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityDiscoverView", "OnUpdateDetailsDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityDiscoverView.GetCurrentTexture
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const class UTexture*                   ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UTexture* UFortActivityDiscoverView::GetCurrentTexture() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityDiscoverView", "GetCurrentTexture");

	Params::FortActivityDiscoverView_GetCurrentTexture Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityDiscoverView.GetKeyArtOutroAnimation
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UWidgetAnimation*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidgetAnimation* UFortActivityDiscoverView::GetKeyArtOutroAnimation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityDiscoverView", "GetKeyArtOutroAnimation");

	Params::FortActivityDiscoverView_GetKeyArtOutroAnimation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityDiscoverView.GetMovieWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortActivatableMovieWidget*      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortActivatableMovieWidget* UFortActivityDiscoverView::GetMovieWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityDiscoverView", "GetMovieWidget");

	Params::FortActivityDiscoverView_GetMovieWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityDiscoverView.GetPromotedMovieWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortActivatableMovieWidget*      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortActivatableMovieWidget* UFortActivityDiscoverView::GetPromotedMovieWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityDiscoverView", "GetPromotedMovieWidget");

	Params::FortActivityDiscoverView_GetPromotedMovieWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityDiscoverView.IsImageLoading
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivityDiscoverView::IsImageLoading() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityDiscoverView", "IsImageLoading");

	Params::FortActivityDiscoverView_IsImageLoading Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityDiscoverView.IsInOutroState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivityDiscoverView::IsInOutroState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityDiscoverView", "IsInOutroState");

	Params::FortActivityDiscoverView_IsInOutroState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityDiscoverView.IsShowingPromotedContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivityDiscoverView::IsShowingPromotedContent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityDiscoverView", "IsShowingPromotedContent");

	Params::FortActivityDiscoverView_IsShowingPromotedContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityDiscoverView.IsShowingSeasonalContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivityDiscoverView::IsShowingSeasonalContent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityDiscoverView", "IsShowingSeasonalContent");

	Params::FortActivityDiscoverView_IsShowingSeasonalContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityDiscoverViewV2.IsShowingPromotedContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivityDiscoverViewV2::IsShowingPromotedContent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityDiscoverViewV2", "IsShowingPromotedContent");

	Params::FortActivityDiscoverViewV2_IsShowingPromotedContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityDiscoverViewV2.IsShowingSeasonalContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivityDiscoverViewV2::IsShowingSeasonalContent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityDiscoverViewV2", "IsShowingSeasonalContent");

	Params::FortActivityDiscoverViewV2_IsShowingSeasonalContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityListView.GetInViewCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortActivityListView::GetInViewCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityListView", "GetInViewCount");

	Params::FortActivityListView_GetInViewCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityLobbyTile.OnDetailsUpdated
// (Event, Protected, BlueprintEvent)

void UFortActivityLobbyTile::OnDetailsUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityLobbyTile", "OnDetailsUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityLobbyTile.OnHideChildActivityFirstTimeNotification
// (Event, Protected, BlueprintEvent)

void UFortActivityLobbyTile::OnHideChildActivityFirstTimeNotification()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityLobbyTile", "OnHideChildActivityFirstTimeNotification");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityLobbyTile.OnPreviewImageChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsLoading                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         Texture                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityLobbyTile::OnPreviewImageChanged(const bool bIsLoading, const class UTexture* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityLobbyTile", "OnPreviewImageChanged");

	Params::FortActivityLobbyTile_OnPreviewImageChanged Parms{};

	Parms.bIsLoading = bIsLoading;
	Parms.Texture = Texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityLobbyTile.OnShowChildActivityChangedNotification
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             DisplayName                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortActivityLobbyTile::OnShowChildActivityChangedNotification(const class FText& DisplayName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityLobbyTile", "OnShowChildActivityChangedNotification");

	Params::FortActivityLobbyTile_OnShowChildActivityChangedNotification Parms{};

	Parms.DisplayName = std::move(DisplayName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityLobbyTile.OnShowChildActivityFirstTimeNotification
// (Event, Protected, BlueprintEvent)

void UFortActivityLobbyTile::OnShowChildActivityFirstTimeNotification()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityLobbyTile", "OnShowChildActivityFirstTimeNotification");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityLobbyTile.ShowModeSetSelectionModal
// (Final, Native, Public, BlueprintCallable)

void UFortActivityLobbyTile::ShowModeSetSelectionModal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityLobbyTile", "ShowModeSetSelectionModal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DiscoveryBrowserUI.FortActivityLobbyTile.TrySendFirstTimeNotification
// (Final, Native, Public, BlueprintCallable)

void UFortActivityLobbyTile::TrySendFirstTimeNotification()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityLobbyTile", "TrySendFirstTimeNotification");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DiscoveryBrowserUI.FortActivityLobbyTile.GetChildActivityDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortActivityLobbyTile::GetChildActivityDisplayName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityLobbyTile", "GetChildActivityDisplayName");

	Params::FortActivityLobbyTile_GetChildActivityDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityLobbyTile.IsActivityEpicCreated
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivityLobbyTile::IsActivityEpicCreated() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityLobbyTile", "IsActivityEpicCreated");

	Params::FortActivityLobbyTile_IsActivityEpicCreated Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityLobbyTile.IsModeSetActivity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivityLobbyTile::IsModeSetActivity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityLobbyTile", "IsModeSetActivity");

	Params::FortActivityLobbyTile_IsModeSetActivity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityModeSetSelectionModal.OnActivityChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortGameActivity*                GameActivity                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           StartingSelectedMnemonic                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityModeSetSelectionModal::OnActivityChanged(const class UFortGameActivity* GameActivity, const class FString& StartingSelectedMnemonic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityModeSetSelectionModal", "OnActivityChanged");

	Params::FortActivityModeSetSelectionModal_OnActivityChanged Parms{};

	Parms.GameActivity = GameActivity;
	Parms.StartingSelectedMnemonic = std::move(StartingSelectedMnemonic);

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityModeSetSelectionModal.OnPreviewImageChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsLoading                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         Texture                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityModeSetSelectionModal::OnPreviewImageChanged(const bool bIsLoading, const class UTexture* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityModeSetSelectionModal", "OnPreviewImageChanged");

	Params::FortActivityModeSetSelectionModal_OnPreviewImageChanged Parms{};

	Parms.bIsLoading = bIsLoading;
	Parms.Texture = Texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityModeSetSelectionModal.OnSubModeSelected
// (Event, Protected, BlueprintEvent)

void UFortActivityModeSetSelectionModal::OnSubModeSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityModeSetSelectionModal", "OnSubModeSelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityModeSetSelectionModal.OnSubModeSelectionChanged
// (Event, Protected, BlueprintEvent)

void UFortActivityModeSetSelectionModal::OnSubModeSelectionChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityModeSetSelectionModal", "OnSubModeSelectionChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityModeSetSelectionModal.SaveSelectionAndClose
// (Final, Native, Protected, BlueprintCallable)

void UFortActivityModeSetSelectionModal::SaveSelectionAndClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityModeSetSelectionModal", "SaveSelectionAndClose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DiscoveryBrowserUI.FortActivityPlayerBrowserTile.HandleActivitySelected
// (Final, Native, Private)

void UFortActivityPlayerBrowserTile::HandleActivitySelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityPlayerBrowserTile", "HandleActivitySelected");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DiscoveryBrowserUI.FortActivitySearchView.HandleTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortActivitySearchView::HandleTextChanged(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivitySearchView", "HandleTextChanged");

	Params::FortActivitySearchView_HandleTextChanged Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DiscoveryBrowserUI.FortActivitySearchView.HandleTextCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             CommitInfo                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivitySearchView::HandleTextCommitted(const class FText& InText, ETextCommit CommitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivitySearchView", "HandleTextCommitted");

	Params::FortActivitySearchView_HandleTextCommitted Parms{};

	Parms.InText = std::move(InText);
	Parms.CommitInfo = CommitInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DiscoveryBrowserUI.FortActivitySearchView.OnActivityClear
// (Event, Protected, BlueprintEvent)

void UFortActivitySearchView::OnActivityClear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivitySearchView", "OnActivityClear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivitySearchView.OnActivityValidated
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFortActivityValidationResult           ValidateResult                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivitySearchView::OnActivityValidated(const EFortActivityValidationResult ValidateResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivitySearchView", "OnActivityValidated");

	Params::FortActivitySearchView_OnActivityValidated Parms{};

	Parms.ValidateResult = ValidateResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.OnDetailsUpdated
// (Event, Protected, BlueprintEvent)

void UFortActivityTileDetailsDisplay::OnDetailsUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityTileDetailsDisplay", "OnDetailsUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.OnIsFavoriteChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsFavorite                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityTileDetailsDisplay::OnIsFavoriteChanged(const bool bIsFavorite)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityTileDetailsDisplay", "OnIsFavoriteChanged");

	Params::FortActivityTileDetailsDisplay_OnIsFavoriteChanged Parms{};

	Parms.bIsFavorite = bIsFavorite;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.OnLocalPlayerDemoted
// (Event, Protected, BlueprintEvent)

void UFortActivityTileDetailsDisplay::OnLocalPlayerDemoted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityTileDetailsDisplay", "OnLocalPlayerDemoted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.OnLocalPlayerPromotedToLeader
// (Event, Protected, BlueprintEvent)

void UFortActivityTileDetailsDisplay::OnLocalPlayerPromotedToLeader()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityTileDetailsDisplay", "OnLocalPlayerPromotedToLeader");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.OnLogoImageChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsLoading                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         Texture                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityTileDetailsDisplay::OnLogoImageChanged(const bool bIsLoading, const class UTexture* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityTileDetailsDisplay", "OnLogoImageChanged");

	Params::FortActivityTileDetailsDisplay_OnLogoImageChanged Parms{};

	Parms.bIsLoading = bIsLoading;
	Parms.Texture = Texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.OnPartySizeChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   PartySize                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityTileDetailsDisplay::OnPartySizeChanged(const int32 PartySize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityTileDetailsDisplay", "OnPartySizeChanged");

	Params::FortActivityTileDetailsDisplay_OnPartySizeChanged Parms{};

	Parms.PartySize = PartySize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.OnPreviewImageChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsLoading                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         Texture                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityTileDetailsDisplay::OnPreviewImageChanged(const bool bIsLoading, const class UTexture* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityTileDetailsDisplay", "OnPreviewImageChanged");

	Params::FortActivityTileDetailsDisplay_OnPreviewImageChanged Parms{};

	Parms.bIsLoading = bIsLoading;
	Parms.Texture = Texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.OnRequiresPurchaseChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bRequiresPurchase                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityTileDetailsDisplay::OnRequiresPurchaseChanged(const bool bRequiresPurchase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityTileDetailsDisplay", "OnRequiresPurchaseChanged");

	Params::FortActivityTileDetailsDisplay_OnRequiresPurchaseChanged Parms{};

	Parms.bRequiresPurchase = bRequiresPurchase;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.OnSocialUsersPlayingChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NumPlaying                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityTileDetailsDisplay::OnSocialUsersPlayingChanged(int32 NumPlaying)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityTileDetailsDisplay", "OnSocialUsersPlayingChanged");

	Params::FortActivityTileDetailsDisplay_OnSocialUsersPlayingChanged Parms{};

	Parms.NumPlaying = NumPlaying;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.OnTileActiveSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsTileActive                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityTileDetailsDisplay::OnTileActiveSet(const bool bIsTileActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityTileDetailsDisplay", "OnTileActiveSet");

	Params::FortActivityTileDetailsDisplay_OnTileActiveSet Parms{};

	Parms.bIsTileActive = bIsTileActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.OnUpdateColumnSize
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   NewColumnSize                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityTileDetailsDisplay::OnUpdateColumnSize(int32 NewColumnSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityTileDetailsDisplay", "OnUpdateColumnSize");

	Params::FortActivityTileDetailsDisplay_OnUpdateColumnSize Parms{};

	Parms.NewColumnSize = NewColumnSize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.ShouldPlayTileVideo
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bOutResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityTileDetailsDisplay::ShouldPlayTileVideo(bool* bOutResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityTileDetailsDisplay", "ShouldPlayTileVideo");

	Params::FortActivityTileDetailsDisplay_ShouldPlayTileVideo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bOutResult != nullptr)
		*bOutResult = Parms.bOutResult;
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.StartTileVideo
// (Final, Native, Protected, BlueprintCallable)

void UFortActivityTileDetailsDisplay::StartTileVideo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityTileDetailsDisplay", "StartTileVideo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.StopTileVideo
// (Final, Native, Protected, BlueprintCallable)

void UFortActivityTileDetailsDisplay::StopTileVideo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityTileDetailsDisplay", "StopTileVideo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.UpdateCCU
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   CCUCount                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityTileDetailsDisplay::UpdateCCU(const int32 CCUCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityTileDetailsDisplay", "UpdateCCU");

	Params::FortActivityTileDetailsDisplay_UpdateCCU Parms{};

	Parms.CCUCount = CCUCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.DoesActivityRequirePurchase
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivityTileDetailsDisplay::DoesActivityRequirePurchase() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityTileDetailsDisplay", "DoesActivityRequirePurchase");

	Params::FortActivityTileDetailsDisplay_DoesActivityRequirePurchase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.GetInvalidActivityReason
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortInvalidActivityReason              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortInvalidActivityReason UFortActivityTileDetailsDisplay::GetInvalidActivityReason() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityTileDetailsDisplay", "GetInvalidActivityReason");

	Params::FortActivityTileDetailsDisplay_GetInvalidActivityReason Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.IsActivityEpicCreated
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivityTileDetailsDisplay::IsActivityEpicCreated() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityTileDetailsDisplay", "IsActivityEpicCreated");

	Params::FortActivityTileDetailsDisplay_IsActivityEpicCreated Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.IsActivityFavorited
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivityTileDetailsDisplay::IsActivityFavorited() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityTileDetailsDisplay", "IsActivityFavorited");

	Params::FortActivityTileDetailsDisplay_IsActivityFavorited Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityTileDetailsDisplay.IsModeSetActivity
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivityTileDetailsDisplay::IsModeSetActivity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityTileDetailsDisplay", "IsModeSetActivity");

	Params::FortActivityTileDetailsDisplay_IsModeSetActivity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DiscoveryBrowserUI.FortActivityTileView.SetListenForMouseWheelInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bListenForInput                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivityTileView::SetListenForMouseWheelInput(bool bListenForInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivityTileView", "SetListenForMouseWheelInput");

	Params::FortActivityTileView_SetListenForMouseWheelInput Parms{};

	Parms.bListenForInput = bListenForInput;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

