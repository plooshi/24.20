#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPS24_BattlePassTile

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BattlePassBase_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BPS24_BattlePassTile.BPS24_BattlePassTile_C.BP_OnHoldEnded
// 0x0008 (0x0008 - 0x0000)
struct BPS24_BattlePassTile_C_BP_OnHoldEnded final
{
public:
	float                                         HoldPercentage;                                    // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInUseSecondaryHoldAnimation;                      // 0x0004(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS24_BattlePassTile_C_BP_OnHoldEnded) == 0x000004, "Wrong alignment on BPS24_BattlePassTile_C_BP_OnHoldEnded");
static_assert(sizeof(BPS24_BattlePassTile_C_BP_OnHoldEnded) == 0x000008, "Wrong size on BPS24_BattlePassTile_C_BP_OnHoldEnded");
static_assert(offsetof(BPS24_BattlePassTile_C_BP_OnHoldEnded, HoldPercentage) == 0x000000, "Member 'BPS24_BattlePassTile_C_BP_OnHoldEnded::HoldPercentage' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_BP_OnHoldEnded, bInUseSecondaryHoldAnimation) == 0x000004, "Member 'BPS24_BattlePassTile_C_BP_OnHoldEnded::bInUseSecondaryHoldAnimation' has a wrong offset!");

// Function BPS24_BattlePassTile.BPS24_BattlePassTile_C.BP_OnHoldStarted
// 0x0008 (0x0008 - 0x0000)
struct BPS24_BattlePassTile_C_BP_OnHoldStarted final
{
public:
	float                                         HoldPercentage;                                    // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInUseSecondaryHoldAnimation;                      // 0x0004(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS24_BattlePassTile_C_BP_OnHoldStarted) == 0x000004, "Wrong alignment on BPS24_BattlePassTile_C_BP_OnHoldStarted");
static_assert(sizeof(BPS24_BattlePassTile_C_BP_OnHoldStarted) == 0x000008, "Wrong size on BPS24_BattlePassTile_C_BP_OnHoldStarted");
static_assert(offsetof(BPS24_BattlePassTile_C_BP_OnHoldStarted, HoldPercentage) == 0x000000, "Member 'BPS24_BattlePassTile_C_BP_OnHoldStarted::HoldPercentage' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_BP_OnHoldStarted, bInUseSecondaryHoldAnimation) == 0x000004, "Member 'BPS24_BattlePassTile_C_BP_OnHoldStarted::bInUseSecondaryHoldAnimation' has a wrong offset!");

// Function BPS24_BattlePassTile.BPS24_BattlePassTile_C.ExecuteUbergraph_BPS24_BattlePassTile
// 0x0718 (0x0718 - 0x0000)
struct BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0094(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00A4(0x0014)()
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x00CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x00DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE[0x2];                                       // 0x00EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_8;                            // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_9;                            // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_10;                           // 0x0114(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_13;                             // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0126(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_14;                             // 0x0127(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_11;                           // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_15;                             // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_12;                           // 0x013C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_16;                             // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_17;                             // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_13;                           // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_14;                           // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_18;                             // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_15;                           // 0x017C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_16;                           // 0x018C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_19;                             // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_17;                           // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_18;                           // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_20;                             // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_19;                           // 0x01C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_20;                           // 0x01D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_21;                             // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E5[0x3];                                      // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_21;                           // 0x01E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_22;                           // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_22;                             // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMcpProfileAthena*                  CallFunc_GetAthenaProfile_ReturnValue;             // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasPurchasedSeasonBook_ReturnValue;       // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_23;                             // 0x0223(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0225(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_24;                             // 0x0226(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_227[0x1];                                      // 0x0227(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_3;                              // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicFontMaterial_ReturnValue;       // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EBattlePassCurrencyType                       K2Node_Event_Currency;                             // 0x0258(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Price;                                // 0x025C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHasEnougCurrency;                    // 0x0260(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0268(0x0018)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_282[0x2];                                      // 0x0282(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_3;                           // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsFreeTrack;                         // 0x0288(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bOwnsBattlePass;                      // 0x0289(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x028A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x028B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicFontMaterial_ReturnValue_1;     // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_2;         // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_25;                             // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_4;                           // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_1;       // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_2;       // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EBattlePassTileAvailabilityStates             CallFunc_GetState_ReturnValue;                     // 0x02C8(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_4;                              // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DA[0x6];                                      // 0x02DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_5;                           // 0x02E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Progress;                             // 0x02F8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_CurrentlyOwnedRewards;                // 0x02FC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_NeededRewards;                        // 0x0300(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0304(0x0014)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_6;                           // 0x031A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31B[0x1];                                      // 0x031B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_7;                           // 0x031C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_8;                           // 0x032C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_3;         // 0x0340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5;                              // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_26;                             // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x3];                                      // 0x0351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_HoldPercentage_1;                     // 0x0354(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInUseSecondaryHoldAnimation_1;       // 0x0358(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_9;                           // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_HoldPercentage;                       // 0x0368(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInUseSecondaryHoldAnimation;         // 0x036C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36D[0x3];                                      // 0x036D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicFontMaterial_ReturnValue_2;     // 0x0370(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_2;       // 0x0380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_3;       // 0x0388(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_OwnsBattlePass;                       // 0x0390(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_ParentUnlocked;                       // 0x0391(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_HasRemainingPrerequisites;            // 0x0392(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsDelayed;                           // 0x0393(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0394(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0395(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0396(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_397[0x1];                                      // 0x0397(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default_10;                          // 0x0398(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1[0x3];                                      // 0x03A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_6;                              // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       K2Node_Select_Default_11;                          // 0x03C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue_1;                 // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CC[0x4];                                      // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_7;                              // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x03F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_3;       // 0x0410(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0418(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0420(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_4;         // 0x0428(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_5;         // 0x0430(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_6;         // 0x0438(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_1;         // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_27;                             // 0x0441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_442[0x6];                                      // 0x0442(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_12;                          // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_7;         // 0x0450(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_8;         // 0x0458(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_9;         // 0x0460(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_10;        // 0x0468(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAffordable_ReturnValue;                 // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_471[0x3];                                      // 0x0471(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_13;                          // 0x0474(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0484(0x0014)()
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_499[0x3];                                      // 0x0499(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_14;                          // 0x049C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_15;                          // 0x04AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AD[0x3];                                      // 0x04AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_3;                    // 0x04B0(0x0014)()
	uint8                                         Pad_4C4[0x4];                                      // 0x04C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_8;                              // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_4;       // 0x04D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_11;        // 0x04D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_12;        // 0x04E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_5;       // 0x04E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_4;       // 0x04F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_13;        // 0x04F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x0500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0504(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_509[0x3];                                      // 0x0509(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_16;                          // 0x050C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_17;                          // 0x051C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52C[0x4];                                      // 0x052C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default_18;                          // 0x0530(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_6;       // 0x0538(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_5;       // 0x0540(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0548(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_14;        // 0x0550(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_9;                              // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x0571(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_28;                             // 0x0572(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0573(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_574[0x4];                                      // 0x0574(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_15;        // 0x0578(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_581[0x7];                                      // 0x0581(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_10;                             // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_19;                          // 0x0590(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_16;        // 0x05A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_17;        // 0x05A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_20;                          // 0x05B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_21;                          // 0x05C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_11;                             // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassTileAvailabilityStates             K2Node_Event_NewState;                             // 0x05D8(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x05D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DA[0x6];                                      // 0x05DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_18;        // 0x05E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E9[0x3];                                      // 0x05E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_22;                          // 0x05EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_23;                          // 0x05FC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x060C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60D[0x3];                                      // 0x060D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_19;        // 0x0610(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_24;                          // 0x0618(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAffordable_ReturnValue_1;               // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_629[0x7];                                      // 0x0629(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_25;                          // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_26;                          // 0x0638(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_639[0x7];                                      // 0x0639(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_12;                             // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_27;                          // 0x0648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0651(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassTileAvailabilityStates             Temp_byte_Variable_9;                              // 0x0652(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_653[0x5];                                      // 0x0653(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_20;        // 0x0658(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_28;                          // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AreAnyGrantedItemsEquipped_ReturnValue;   // 0x0668(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_669[0x7];                                      // 0x0669(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UWidget*                          K2Node_Select_Default_29;                          // 0x0670(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0678(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_67C[0x4];                                      // 0x067C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x06A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A4[0x4];                                      // 0x06A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x06A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x06B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_StartAtTime_ImplicitCast;   // 0x06C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C4[0x4];                                      // 0x06C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast_1;     // 0x06C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1;   // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1;   // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2;   // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2;   // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast; // 0x06F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimationReverse_PlaybackSpeed_ImplicitCast; // 0x06F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x06F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6FC[0x4];                                      // 0x06FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Round_A_ImplicitCast;                     // 0x0700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x0708(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_4; // 0x070C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_5; // 0x0710(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile) == 0x000008, "Wrong alignment on BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile");
static_assert(sizeof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile) == 0x000718, "Wrong size on BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, EntryPoint) == 0x000000, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_real_Variable) == 0x000008, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_bool_Variable) == 0x000010, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_int_Variable) == 0x000014, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_int_Variable_1) == 0x000018, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_bool_Variable_1) == 0x00001C, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_real_Variable_1) == 0x000020, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_real_Variable_2) == 0x000028, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_bool_Variable_2) == 0x000030, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_byte_Variable) == 0x000031, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_byte_Variable_1) == 0x000032, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_bool_Variable_3) == 0x000033, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_bool_Variable_4) == 0x000034, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_bool_Variable_5) == 0x000035, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_byte_Variable_2) == 0x000036, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_byte_Variable_3) == 0x000037, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_bool_Variable_6) == 0x000038, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_bool_Variable_7) == 0x000039, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_struct_Variable) == 0x00003C, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_struct_Variable_1) == 0x00004C, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_bool_Variable_8) == 0x00005C, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_struct_Variable_2) == 0x000060, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_struct_Variable_3) == 0x000070, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_bool_Variable_9) == 0x000080, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_struct_Variable_4) == 0x000084, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Select_Default) == 0x000094, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_MakeStruct_SlateColor) == 0x0000A4, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_struct_Variable_5) == 0x0000B8, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_bool_Variable_10) == 0x0000C8, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_struct_Variable_6) == 0x0000CC, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_struct_Variable_7) == 0x0000DC, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_bool_Variable_11) == 0x0000EC, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Select_Default_1) == 0x0000ED, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_struct_Variable_8) == 0x0000F0, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_struct_Variable_9) == 0x000100, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_bool_Variable_12) == 0x000110, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_struct_Variable_10) == 0x000114, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_bool_Variable_13) == 0x000124, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_byte_Variable_4) == 0x000125, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_byte_Variable_5) == 0x000126, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_bool_Variable_14) == 0x000127, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_struct_Variable_11) == 0x000128, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_bool_Variable_15) == 0x000138, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_struct_Variable_12) == 0x00013C, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_struct_Variable_12' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_bool_Variable_16) == 0x00014C, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_bool_Variable_16' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000150, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_bool_Variable_17) == 0x000154, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_bool_Variable_17' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_struct_Variable_13) == 0x000158, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_struct_Variable_13' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_struct_Variable_14) == 0x000168, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_struct_Variable_14' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_bool_Variable_18) == 0x000178, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_bool_Variable_18' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_struct_Variable_15) == 0x00017C, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_struct_Variable_15' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_struct_Variable_16) == 0x00018C, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_struct_Variable_16' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_bool_Variable_19) == 0x00019C, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_bool_Variable_19' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_struct_Variable_17) == 0x0001A0, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_struct_Variable_17' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_struct_Variable_18) == 0x0001B0, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_struct_Variable_18' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_bool_Variable_20) == 0x0001C0, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_bool_Variable_20' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_struct_Variable_19) == 0x0001C4, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_struct_Variable_19' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_struct_Variable_20) == 0x0001D4, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_struct_Variable_20' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_bool_Variable_21) == 0x0001E4, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_bool_Variable_21' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_struct_Variable_21) == 0x0001E8, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_struct_Variable_21' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_struct_Variable_22) == 0x0001F8, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_struct_Variable_22' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_GetContext_ReturnValue) == 0x000208, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_bool_Variable_22) == 0x000210, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_bool_Variable_22' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_GetAthenaProfile_ReturnValue) == 0x000218, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_GetAthenaProfile_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_byte_Variable_6) == 0x000220, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_HasPurchasedSeasonBook_ReturnValue) == 0x000221, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_HasPurchasedSeasonBook_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_byte_Variable_7) == 0x000222, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_bool_Variable_23) == 0x000223, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_bool_Variable_23' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_byte_Variable_8) == 0x000224, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Select_Default_2) == 0x000225, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_bool_Variable_24) == 0x000226, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_bool_Variable_24' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_real_Variable_3) == 0x000228, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000230, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000238, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000240, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_GetDynamicFontMaterial_ReturnValue) == 0x000248, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_GetDynamicFontMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000250, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Event_Currency) == 0x000258, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Event_Currency' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Event_Price) == 0x00025C, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Event_Price' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Event_bHasEnougCurrency) == 0x000260, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Event_bHasEnougCurrency' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_Conv_IntToText_ReturnValue) == 0x000268, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000280, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000281, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Select_Default_3) == 0x000284, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Event_bIsFreeTrack) == 0x000288, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Event_bIsFreeTrack' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Event_bOwnsBattlePass) == 0x000289, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Event_bOwnsBattlePass' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_Not_PreBool_ReturnValue) == 0x00028A, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_BooleanAND_ReturnValue) == 0x00028B, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_GetDynamicFontMaterial_ReturnValue_1) == 0x000290, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_GetDynamicFontMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_2) == 0x000298, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_bool_Variable_25) == 0x0002A0, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_bool_Variable_25' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Select_Default_4) == 0x0002A8, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_PlayAnimationReverse_ReturnValue_1) == 0x0002B0, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_PlayAnimationReverse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_PlayAnimationReverse_ReturnValue_2) == 0x0002B8, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_PlayAnimationReverse_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_PlayAnimationForward_ReturnValue) == 0x0002C0, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_GetState_ReturnValue) == 0x0002C8, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_GetState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_real_Variable_4) == 0x0002D0, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002D8, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_BooleanAND_ReturnValue_1) == 0x0002D9, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x0002E0, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Select_Default_5) == 0x0002E8, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Event_Progress) == 0x0002F8, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Event_Progress' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Event_CurrentlyOwnedRewards) == 0x0002FC, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Event_CurrentlyOwnedRewards' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Event_NeededRewards) == 0x000300, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Event_NeededRewards' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_MakeStruct_SlateColor_1) == 0x000304, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_Greater_IntInt_ReturnValue) == 0x000318, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000319, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Select_Default_6) == 0x00031A, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Select_Default_7) == 0x00031C, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Select_Default_8) == 0x00032C, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_3) == 0x000340, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_real_Variable_5) == 0x000348, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_bool_Variable_26) == 0x000350, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_bool_Variable_26' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Event_HoldPercentage_1) == 0x000354, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Event_HoldPercentage_1' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Event_bInUseSecondaryHoldAnimation_1) == 0x000358, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Event_bInUseSecondaryHoldAnimation_1' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Select_Default_9) == 0x000360, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Event_HoldPercentage) == 0x000368, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Event_HoldPercentage' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Event_bInUseSecondaryHoldAnimation) == 0x00036C, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Event_bInUseSecondaryHoldAnimation' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_GetDynamicFontMaterial_ReturnValue_2) == 0x000370, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_GetDynamicFontMaterial_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000378, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_PlayAnimationForward_ReturnValue_2) == 0x000380, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_PlayAnimationForward_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_PlayAnimationForward_ReturnValue_3) == 0x000388, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_PlayAnimationForward_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Event_OwnsBattlePass) == 0x000390, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Event_OwnsBattlePass' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Event_ParentUnlocked) == 0x000391, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Event_ParentUnlocked' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Event_HasRemainingPrerequisites) == 0x000392, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Event_HasRemainingPrerequisites' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Event_bIsDelayed) == 0x000393, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Event_bIsDelayed' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_Not_PreBool_ReturnValue_1) == 0x000394, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_Not_PreBool_ReturnValue_2) == 0x000395, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_BooleanOR_ReturnValue) == 0x000396, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Select_Default_10) == 0x000398, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_BooleanOR_ReturnValue_1) == 0x0003A0, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_GetEndTime_ReturnValue) == 0x0003A4, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_BooleanOR_ReturnValue_2) == 0x0003A8, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0003B0, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_real_Variable_6) == 0x0003B8, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Select_Default_11) == 0x0003C0, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_GetEndTime_ReturnValue_1) == 0x0003C8, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_GetEndTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_real_Variable_7) == 0x0003D0, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0003D8, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0003E0, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0003E8, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0003F0, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_PlayAnimation_ReturnValue) == 0x0003F8, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000400, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000408, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_PlayAnimationReverse_ReturnValue_3) == 0x000410, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_PlayAnimationReverse_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_PlayAnimation_ReturnValue_1) == 0x000418, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_PlayAnimation_ReturnValue_2) == 0x000420, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_4) == 0x000428, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_5) == 0x000430, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_6) == 0x000438, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_IsAnimationPlaying_ReturnValue_1) == 0x000440, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_IsAnimationPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_bool_Variable_27) == 0x000441, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_bool_Variable_27' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Select_Default_12) == 0x000448, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_7) == 0x000450, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_8) == 0x000458, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_9) == 0x000460, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_10) == 0x000468, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_IsAffordable_ReturnValue) == 0x000470, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_IsAffordable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Select_Default_13) == 0x000474, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Select_Default_13' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_MakeStruct_SlateColor_2) == 0x000484, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_Not_PreBool_ReturnValue_3) == 0x000498, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Select_Default_14) == 0x00049C, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Select_Default_14' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Select_Default_15) == 0x0004AC, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Select_Default_15' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_MakeStruct_SlateColor_3) == 0x0004B0, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_MakeStruct_SlateColor_3' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_real_Variable_8) == 0x0004C8, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_PlayAnimationForward_ReturnValue_4) == 0x0004D0, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_PlayAnimationForward_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_11) == 0x0004D8, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_12) == 0x0004E0, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_PlayAnimationForward_ReturnValue_5) == 0x0004E8, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_PlayAnimationForward_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_PlayAnimationReverse_ReturnValue_4) == 0x0004F0, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_PlayAnimationReverse_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_13) == 0x0004F8, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x000500, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_Round_ReturnValue) == 0x000504, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_Conv_IntToBool_ReturnValue) == 0x000508, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Select_Default_16) == 0x00050C, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Select_Default_16' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Select_Default_17) == 0x00051C, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Select_Default_17' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Select_Default_18) == 0x000530, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Select_Default_18' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_PlayAnimationForward_ReturnValue_6) == 0x000538, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_PlayAnimationForward_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_PlayAnimationReverse_ReturnValue_5) == 0x000540, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_PlayAnimationReverse_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_SpawnSound2D_ReturnValue) == 0x000548, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_14) == 0x000550, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_real_Variable_9) == 0x000558, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_BreakVector2D_X) == 0x000560, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_BreakVector2D_Y) == 0x000568, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000570, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x000571, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_bool_Variable_28) == 0x000572, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_bool_Variable_28' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_BooleanAND_ReturnValue_2) == 0x000573, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_15) == 0x000578, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000580, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_real_Variable_10) == 0x000588, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_real_Variable_10' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Select_Default_19) == 0x000590, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Select_Default_19' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_16) == 0x0005A0, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_17) == 0x0005A8, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Select_Default_20) == 0x0005B0, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Select_Default_20' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Select_Default_21) == 0x0005C0, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Select_Default_21' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_real_Variable_11) == 0x0005D0, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_real_Variable_11' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Event_NewState) == 0x0005D8, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Event_NewState' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0005D9, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_18) == 0x0005E0, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_SwitchEnum_CmpSuccess) == 0x0005E8, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Select_Default_22) == 0x0005EC, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Select_Default_22' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Select_Default_23) == 0x0005FC, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Select_Default_23' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00060C, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_19) == 0x000610, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Select_Default_24) == 0x000618, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Select_Default_24' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_IsAffordable_ReturnValue_1) == 0x000628, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_IsAffordable_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Select_Default_25) == 0x000630, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Select_Default_25' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Select_Default_26) == 0x000638, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Select_Default_26' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_real_Variable_12) == 0x000640, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_real_Variable_12' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Select_Default_27) == 0x000648, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Select_Default_27' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000650, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Event_IsDesignTime) == 0x000651, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, Temp_byte_Variable_9) == 0x000652, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_GetDynamicMaterial_ReturnValue_20) == 0x000658, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_GetDynamicMaterial_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Select_Default_28) == 0x000660, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Select_Default_28' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_AreAnyGrantedItemsEquipped_ReturnValue) == 0x000668, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_AreAnyGrantedItemsEquipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, K2Node_Select_Default_29) == 0x000670, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::K2Node_Select_Default_29' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000678, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x000680, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000688, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000690, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000698, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x0006A0, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0006A8, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x0006B0, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x0006B8, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_PlayAnimation_StartAtTime_ImplicitCast) == 0x0006C0, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_PlayAnimation_StartAtTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_Divide_DoubleDouble_A_ImplicitCast_1) == 0x0006C8, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_Divide_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1) == 0x0006D0, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1) == 0x0006D8, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2) == 0x0006E0, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2) == 0x0006E8, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast) == 0x0006F0, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_PlayAnimationReverse_PlaybackSpeed_ImplicitCast) == 0x0006F4, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_PlayAnimationReverse_PlaybackSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x0006F8, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_Round_A_ImplicitCast) == 0x000700, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_Round_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x000708, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_SetScalarParameterValue_Value_ImplicitCast_4) == 0x00070C, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_SetScalarParameterValue_Value_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile, CallFunc_SetScalarParameterValue_Value_ImplicitCast_5) == 0x000710, "Member 'BPS24_BattlePassTile_C_ExecuteUbergraph_BPS24_BattlePassTile::CallFunc_SetScalarParameterValue_Value_ImplicitCast_5' has a wrong offset!");

// Function BPS24_BattlePassTile.BPS24_BattlePassTile_C.OnAffordabilityChanged
// 0x0001 (0x0001 - 0x0000)
struct BPS24_BattlePassTile_C_OnAffordabilityChanged final
{
public:
	bool                                          bHasEnougCurrency;                                 // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS24_BattlePassTile_C_OnAffordabilityChanged) == 0x000001, "Wrong alignment on BPS24_BattlePassTile_C_OnAffordabilityChanged");
static_assert(sizeof(BPS24_BattlePassTile_C_OnAffordabilityChanged) == 0x000001, "Wrong size on BPS24_BattlePassTile_C_OnAffordabilityChanged");
static_assert(offsetof(BPS24_BattlePassTile_C_OnAffordabilityChanged, bHasEnougCurrency) == 0x000000, "Member 'BPS24_BattlePassTile_C_OnAffordabilityChanged::bHasEnougCurrency' has a wrong offset!");

// Function BPS24_BattlePassTile.BPS24_BattlePassTile_C.OnFocusReceived
// 0x01B8 (0x01B8 - 0x0000)
struct BPS24_BattlePassTile_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0048(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0100(0x00B8)()
};
static_assert(alignof(BPS24_BattlePassTile_C_OnFocusReceived) == 0x000008, "Wrong alignment on BPS24_BattlePassTile_C_OnFocusReceived");
static_assert(sizeof(BPS24_BattlePassTile_C_OnFocusReceived) == 0x0001B8, "Wrong size on BPS24_BattlePassTile_C_OnFocusReceived");
static_assert(offsetof(BPS24_BattlePassTile_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'BPS24_BattlePassTile_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_OnFocusReceived, InFocusEvent) == 0x000040, "Member 'BPS24_BattlePassTile_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_OnFocusReceived, ReturnValue) == 0x000048, "Member 'BPS24_BattlePassTile_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x000100, "Member 'BPS24_BattlePassTile_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function BPS24_BattlePassTile.BPS24_BattlePassTile_C.OnLockedProgressUpdated
// 0x000C (0x000C - 0x0000)
struct BPS24_BattlePassTile_C_OnLockedProgressUpdated final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentlyOwnedRewards;                             // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NeededRewards;                                     // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS24_BattlePassTile_C_OnLockedProgressUpdated) == 0x000004, "Wrong alignment on BPS24_BattlePassTile_C_OnLockedProgressUpdated");
static_assert(sizeof(BPS24_BattlePassTile_C_OnLockedProgressUpdated) == 0x00000C, "Wrong size on BPS24_BattlePassTile_C_OnLockedProgressUpdated");
static_assert(offsetof(BPS24_BattlePassTile_C_OnLockedProgressUpdated, Progress) == 0x000000, "Member 'BPS24_BattlePassTile_C_OnLockedProgressUpdated::Progress' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_OnLockedProgressUpdated, CurrentlyOwnedRewards) == 0x000004, "Member 'BPS24_BattlePassTile_C_OnLockedProgressUpdated::CurrentlyOwnedRewards' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_OnLockedProgressUpdated, NeededRewards) == 0x000008, "Member 'BPS24_BattlePassTile_C_OnLockedProgressUpdated::NeededRewards' has a wrong offset!");

// Function BPS24_BattlePassTile.BPS24_BattlePassTile_C.OnLockedStateUpdated
// 0x0004 (0x0004 - 0x0000)
struct BPS24_BattlePassTile_C_OnLockedStateUpdated final
{
public:
	bool                                          OwnsBattlePass;                                    // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ParentUnlocked;                                    // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasRemainingPrerequisites;                         // 0x0002(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsDelayed;                                        // 0x0003(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS24_BattlePassTile_C_OnLockedStateUpdated) == 0x000001, "Wrong alignment on BPS24_BattlePassTile_C_OnLockedStateUpdated");
static_assert(sizeof(BPS24_BattlePassTile_C_OnLockedStateUpdated) == 0x000004, "Wrong size on BPS24_BattlePassTile_C_OnLockedStateUpdated");
static_assert(offsetof(BPS24_BattlePassTile_C_OnLockedStateUpdated, OwnsBattlePass) == 0x000000, "Member 'BPS24_BattlePassTile_C_OnLockedStateUpdated::OwnsBattlePass' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_OnLockedStateUpdated, ParentUnlocked) == 0x000001, "Member 'BPS24_BattlePassTile_C_OnLockedStateUpdated::ParentUnlocked' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_OnLockedStateUpdated, HasRemainingPrerequisites) == 0x000002, "Member 'BPS24_BattlePassTile_C_OnLockedStateUpdated::HasRemainingPrerequisites' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_OnLockedStateUpdated, bIsDelayed) == 0x000003, "Member 'BPS24_BattlePassTile_C_OnLockedStateUpdated::bIsDelayed' has a wrong offset!");

// Function BPS24_BattlePassTile.BPS24_BattlePassTile_C.OnSetCurrencyAndPrice
// 0x0008 (0x0008 - 0x0000)
struct BPS24_BattlePassTile_C_OnSetCurrencyAndPrice final
{
public:
	EBattlePassCurrencyType                       Currency;                                          // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Price;                                             // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS24_BattlePassTile_C_OnSetCurrencyAndPrice) == 0x000004, "Wrong alignment on BPS24_BattlePassTile_C_OnSetCurrencyAndPrice");
static_assert(sizeof(BPS24_BattlePassTile_C_OnSetCurrencyAndPrice) == 0x000008, "Wrong size on BPS24_BattlePassTile_C_OnSetCurrencyAndPrice");
static_assert(offsetof(BPS24_BattlePassTile_C_OnSetCurrencyAndPrice, Currency) == 0x000000, "Member 'BPS24_BattlePassTile_C_OnSetCurrencyAndPrice::Currency' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_OnSetCurrencyAndPrice, Price) == 0x000004, "Member 'BPS24_BattlePassTile_C_OnSetCurrencyAndPrice::Price' has a wrong offset!");

// Function BPS24_BattlePassTile.BPS24_BattlePassTile_C.OnSetTrack
// 0x0002 (0x0002 - 0x0000)
struct BPS24_BattlePassTile_C_OnSetTrack final
{
public:
	bool                                          bIsFreeTrack;                                      // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOwnsBattlePass;                                   // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS24_BattlePassTile_C_OnSetTrack) == 0x000001, "Wrong alignment on BPS24_BattlePassTile_C_OnSetTrack");
static_assert(sizeof(BPS24_BattlePassTile_C_OnSetTrack) == 0x000002, "Wrong size on BPS24_BattlePassTile_C_OnSetTrack");
static_assert(offsetof(BPS24_BattlePassTile_C_OnSetTrack, bIsFreeTrack) == 0x000000, "Member 'BPS24_BattlePassTile_C_OnSetTrack::bIsFreeTrack' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_OnSetTrack, bOwnsBattlePass) == 0x000001, "Member 'BPS24_BattlePassTile_C_OnSetTrack::bOwnsBattlePass' has a wrong offset!");

// Function BPS24_BattlePassTile.BPS24_BattlePassTile_C.OnStateChanged
// 0x0001 (0x0001 - 0x0000)
struct BPS24_BattlePassTile_C_OnStateChanged final
{
public:
	EBattlePassTileAvailabilityStates             NewState;                                          // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS24_BattlePassTile_C_OnStateChanged) == 0x000001, "Wrong alignment on BPS24_BattlePassTile_C_OnStateChanged");
static_assert(sizeof(BPS24_BattlePassTile_C_OnStateChanged) == 0x000001, "Wrong size on BPS24_BattlePassTile_C_OnStateChanged");
static_assert(offsetof(BPS24_BattlePassTile_C_OnStateChanged, NewState) == 0x000000, "Member 'BPS24_BattlePassTile_C_OnStateChanged::NewState' has a wrong offset!");

// Function BPS24_BattlePassTile.BPS24_BattlePassTile_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BPS24_BattlePassTile_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS24_BattlePassTile_C_PreConstruct) == 0x000001, "Wrong alignment on BPS24_BattlePassTile_C_PreConstruct");
static_assert(sizeof(BPS24_BattlePassTile_C_PreConstruct) == 0x000001, "Wrong size on BPS24_BattlePassTile_C_PreConstruct");
static_assert(offsetof(BPS24_BattlePassTile_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BPS24_BattlePassTile_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BPS24_BattlePassTile.BPS24_BattlePassTile_C.UpdateTileColors
// 0x0050 (0x0050 - 0x0000)
struct BPS24_BattlePassTile_C_UpdateTileColors final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0018(0x0010)(ReferenceParm)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Map_Find_Value;                           // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS24_BattlePassTile_C_UpdateTileColors) == 0x000008, "Wrong alignment on BPS24_BattlePassTile_C_UpdateTileColors");
static_assert(sizeof(BPS24_BattlePassTile_C_UpdateTileColors) == 0x000050, "Wrong size on BPS24_BattlePassTile_C_UpdateTileColors");
static_assert(offsetof(BPS24_BattlePassTile_C_UpdateTileColors, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BPS24_BattlePassTile_C_UpdateTileColors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_UpdateTileColors, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BPS24_BattlePassTile_C_UpdateTileColors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_UpdateTileColors, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BPS24_BattlePassTile_C_UpdateTileColors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_UpdateTileColors, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'BPS24_BattlePassTile_C_UpdateTileColors::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_UpdateTileColors, CallFunc_Map_Keys_Keys) == 0x000018, "Member 'BPS24_BattlePassTile_C_UpdateTileColors::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_UpdateTileColors, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000028, "Member 'BPS24_BattlePassTile_C_UpdateTileColors::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_UpdateTileColors, CallFunc_Array_Get_Item) == 0x000030, "Member 'BPS24_BattlePassTile_C_UpdateTileColors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_UpdateTileColors, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BPS24_BattlePassTile_C_UpdateTileColors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_UpdateTileColors, CallFunc_Map_Find_Value) == 0x000038, "Member 'BPS24_BattlePassTile_C_UpdateTileColors::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_UpdateTileColors, CallFunc_Map_Find_ReturnValue) == 0x000048, "Member 'BPS24_BattlePassTile_C_UpdateTileColors::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_BattlePassTile_C_UpdateTileColors, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'BPS24_BattlePassTile_C_UpdateTileColors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

