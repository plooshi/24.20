#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline

#include "Basic.hpp"

#include "PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_classes.hpp"
#include "PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_parameters.hpp"


namespace SDK
{

// Function PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline.PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C.AddPlayerToZipliningArray
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  NewItem                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void APROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C::AddPlayerToZipliningArray(const class AFortPlayerPawn*& NewItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C", "AddPlayerToZipliningArray");

	Params::PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C_AddPlayerToZipliningArray Parms{};

	Parms.NewItem = NewItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline.PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C.AddSplineMeshSegment
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USplineMeshComponent*             SplineMeshSegment                                      (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void APROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C::AddSplineMeshSegment(class USplineMeshComponent** SplineMeshSegment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C", "AddSplineMeshSegment");

	Params::PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C_AddSplineMeshSegment Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SplineMeshSegment != nullptr)
		*SplineMeshSegment = Parms.SplineMeshSegment;
}


// Function PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline.PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C.AutoSmoothTanget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Tangent                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          PointA                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          PointB                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          SmoothedTangent                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C::AutoSmoothTanget(const struct FVector& Tangent, const struct FVector& PointA, const struct FVector& PointB, struct FVector* SmoothedTangent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C", "AutoSmoothTanget");

	Params::PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C_AutoSmoothTanget Parms{};

	Parms.Tangent = std::move(Tangent);
	Parms.PointA = std::move(PointA);
	Parms.PointB = std::move(PointB);

	UObject::ProcessEvent(Func, &Parms);

	if (SmoothedTangent != nullptr)
		*SmoothedTangent = std::move(Parms.SmoothedTangent);
}


// Function PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline.PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C.Calc Auto Location At Alpha
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InAlpha                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DrawDebug                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          PointLocation                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C::Calc_Auto_Location_At_Alpha(double InAlpha, bool DrawDebug, struct FVector* PointLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C", "Calc Auto Location At Alpha");

	Params::PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C_Calc_Auto_Location_At_Alpha Parms{};

	Parms.InAlpha = InAlpha;
	Parms.DrawDebug = DrawDebug;

	UObject::ProcessEvent(Func, &Parms);

	if (PointLocation != nullptr)
		*PointLocation = std::move(Parms.PointLocation);
}


// Function PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline.PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C.CalculatePositionOfPoles
// (Public, BlueprintCallable, BlueprintEvent)

void APROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C::CalculatePositionOfPoles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C", "CalculatePositionOfPoles");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline.PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C.ExecuteUbergraph_PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C::ExecuteUbergraph_PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C", "ExecuteUbergraph_PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline");

	Params::PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C_ExecuteUbergraph_PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline.PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C.GetAutoHorizAndVertVectors
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          highVector                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LowVector                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          VertVec                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HorizVec                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C::GetAutoHorizAndVertVectors(const struct FVector& highVector, const struct FVector& LowVector, struct FVector* VertVec, struct FVector* HorizVec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C", "GetAutoHorizAndVertVectors");

	Params::PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C_GetAutoHorizAndVertVectors Parms{};

	Parms.highVector = std::move(highVector);
	Parms.LowVector = std::move(LowVector);

	UObject::ProcessEvent(Func, &Parms);

	if (VertVec != nullptr)
		*VertVec = std::move(Parms.VertVec);

	if (HorizVec != nullptr)
		*HorizVec = std::move(Parms.HorizVec);
}


// Function PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline.PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C.OnDeathServer
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          Momentum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectContextHandle     EffectContext                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void APROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C::OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C", "OnDeathServer");

	Params::PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C_OnDeathServer Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = std::move(DamageTags);
	Parms.Momentum = std::move(Momentum);
	Parms.HitInfo = std::move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = std::move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline.PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C.OnZipliningStarted
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  InteractingPawn                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              InteractComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void APROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C::OnZipliningStarted(class AFortPlayerPawn* InteractingPawn, class UPrimitiveComponent* InteractComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C", "OnZipliningStarted");

	Params::PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C_OnZipliningStarted Parms{};

	Parms.InteractingPawn = InteractingPawn;
	Parms.InteractComponent = InteractComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline.PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C.OnZipliningStopped
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  InteractingPawn                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              InteractComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// float                                   ZiplineUsageDuration                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C::OnZipliningStopped(class AFortPlayerPawn* InteractingPawn, class UPrimitiveComponent* InteractComponent, float ZiplineUsageDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C", "OnZipliningStopped");

	Params::PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C_OnZipliningStopped Parms{};

	Parms.InteractingPawn = InteractingPawn;
	Parms.InteractComponent = InteractComponent;
	Parms.ZiplineUsageDuration = ZiplineUsageDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline.PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void APROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline.PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C.RemovePlayerFromZipliningArray
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  Item                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void APROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C::RemovePlayerFromZipliningArray(const class AFortPlayerPawn*& Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C", "RemovePlayerFromZipliningArray");

	Params::PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C_RemovePlayerFromZipliningArray Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline.PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C.SetCableTilingBySplineLength
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void APROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C::SetCableTilingBySplineLength(class UMeshComponent* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C", "SetCableTilingBySplineLength");

	Params::PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C_SetCableTilingBySplineLength Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline.PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C.SetSplinePositionAndTangent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    SetPosition                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SetTangent                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C::SetSplinePositionAndTangent(bool SetPosition, bool SetTangent, int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C", "SetSplinePositionAndTangent");

	Params::PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C_SetSplinePositionAndTangent Parms{};

	Parms.SetPosition = SetPosition;
	Parms.SetTangent = SetTangent;
	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline.PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void APROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline.PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C.WaitThenSetDynamicSpline
// (BlueprintCallable, BlueprintEvent)

void APROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C::WaitThenSetDynamicSpline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C", "WaitThenSetDynamicSpline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline.PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C.BlueprintCanInteract
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AFortPawn*                        InteractingPawn                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EInteractionBeingAttempted              InteractionBeingAttempted                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETInteractionType                       InteractionType                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool APROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C::BlueprintCanInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted, const ETInteractionType InteractionType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C", "BlueprintCanInteract");

	Params::PROTOTYPE_BP_Athena_Dynamic_ZipLine_Spline_C_BlueprintCanInteract Parms{};

	Parms.InteractingPawn = InteractingPawn;
	Parms.InteractionBeingAttempted = InteractionBeingAttempted;
	Parms.InteractionType = InteractionType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

