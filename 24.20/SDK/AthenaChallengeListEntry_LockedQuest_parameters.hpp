#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaChallengeListEntry_LockedQuest

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AthenaChallengeListEntry_LockedQuest.AthenaChallengeListEntry_LockedQuest_C.BP_OnChallengeInfoSet
// 0x0001 (0x0001 - 0x0000)
struct AthenaChallengeListEntry_LockedQuest_C_BP_OnChallengeInfoSet final
{
public:
	bool                                          bDisabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengeListEntry_LockedQuest_C_BP_OnChallengeInfoSet) == 0x000001, "Wrong alignment on AthenaChallengeListEntry_LockedQuest_C_BP_OnChallengeInfoSet");
static_assert(sizeof(AthenaChallengeListEntry_LockedQuest_C_BP_OnChallengeInfoSet) == 0x000001, "Wrong size on AthenaChallengeListEntry_LockedQuest_C_BP_OnChallengeInfoSet");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_BP_OnChallengeInfoSet, bDisabled) == 0x000000, "Member 'AthenaChallengeListEntry_LockedQuest_C_BP_OnChallengeInfoSet::bDisabled' has a wrong offset!");

// Function AthenaChallengeListEntry_LockedQuest.AthenaChallengeListEntry_LockedQuest_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct AthenaChallengeListEntry_LockedQuest_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengeListEntry_LockedQuest_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on AthenaChallengeListEntry_LockedQuest_C_BP_OnItemSelectionChanged");
static_assert(sizeof(AthenaChallengeListEntry_LockedQuest_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on AthenaChallengeListEntry_LockedQuest_C_BP_OnItemSelectionChanged");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_BP_OnItemSelectionChanged, bIsSelected_0) == 0x000000, "Member 'AthenaChallengeListEntry_LockedQuest_C_BP_OnItemSelectionChanged::bIsSelected_0' has a wrong offset!");

// Function AthenaChallengeListEntry_LockedQuest.AthenaChallengeListEntry_LockedQuest_C.ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest
// 0x0770 (0x0770 - 0x0000)
struct AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F[0x1];                                       // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0040(0x0018)()
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0058(0x0040)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0098(0x0098)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0130(0x0098)(ConstParm)
	bool                                          CallFunc_IsUsingTouch_ReturnValue;                 // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingTouch_ReturnValue_1;               // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSelected;                          // 0x01CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CB[0x5];                                      // 0x01CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_1;       // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_2;       // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bDisabled;                            // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_202[0x6];                                      // 0x0202(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_GetStartingUnlockTime_ReturnValue;        // 0x0208(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetFormattedTime_OutputString;            // 0x0210(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0228(0x0050)(HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0278(0x0014)()
	bool                                          Temp_bool_Variable_5;                              // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28D[0x3];                                      // 0x028D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_GetStartingUnlockTime_ReturnValue_1;      // 0x0290(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetFormattedTime_OutputString_1;          // 0x0298(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x02B0(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_Int64ToInt_ReturnValue;              // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0310(0x00C0)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x03D0(0x0050)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELockedWidgetUnlockType                       K2Node_Event_InUnlockType;                         // 0x0428(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_Int64Int64_ReturnValue;           // 0x0429(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x042A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42B[0x5];                                      // 0x042B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetFinalDisplayName_DisplayName;          // 0x0430(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0448(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0460(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x04B0(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0500(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0550(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0560(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0570(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x05C0(0x0010)(ReferenceParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_3;       // 0x05D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x05D8(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x05F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue_1;                // 0x05F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F2[0x6];                                      // 0x05F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_2;                           // 0x05F8(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0610(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x0628(0x0018)()
	class FText                                   K2Node_Select_Default_3;                           // 0x0640(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0658(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue_2;                // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_671[0x7];                                      // 0x0671(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_3;            // 0x0678(0x0018)()
	class FText                                   K2Node_Select_Default_4;                           // 0x0690(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x06A8(0x0018)()
	class FText                                   CallFunc_GetSingleLineDescription_ReturnValue;     // 0x06C0(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue_3;                // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D9[0x7];                                      // 0x06D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x06E0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0730(0x0010)(ReferenceParm)
	class FText                                   K2Node_Select_Default_5;                           // 0x0740(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0758(0x0018)()
};
static_assert(alignof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest) == 0x000010, "Wrong alignment on AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest");
static_assert(sizeof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest) == 0x000770, "Wrong size on AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, EntryPoint) == 0x000000, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_MakeLiteralText_ReturnValue) == 0x000008, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, Temp_text_Variable) == 0x000020, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, Temp_bool_Variable) == 0x000038, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, Temp_byte_Variable) == 0x000039, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, Temp_byte_Variable_1) == 0x00003A, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, Temp_bool_Variable_1) == 0x00003B, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, Temp_bool_Variable_2) == 0x00003C, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, Temp_bool_Variable_3) == 0x00003D, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, Temp_bool_Variable_4) == 0x00003E, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, Temp_text_Variable_1) == 0x000040, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_Event_MyGeometry) == 0x000058, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_Event_MouseEvent_1) == 0x000098, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_Event_MouseEvent) == 0x000130, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_IsUsingTouch_ReturnValue) == 0x0001C8, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_IsUsingTouch_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_IsUsingTouch_ReturnValue_1) == 0x0001C9, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_IsUsingTouch_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_Event_bIsSelected) == 0x0001CA, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_PlayAnimation_ReturnValue) == 0x0001D0, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_PlayAnimationReverse_ReturnValue) == 0x0001D8, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_PlayAnimation_ReturnValue_1) == 0x0001E0, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_PlayAnimationReverse_ReturnValue_1) == 0x0001E8, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_PlayAnimationReverse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_PlayAnimationReverse_ReturnValue_2) == 0x0001F0, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_PlayAnimationReverse_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_PlayAnimation_ReturnValue_2) == 0x0001F8, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_Event_bDisabled) == 0x000200, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_Event_bDisabled' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_Select_Default) == 0x000201, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_GetStartingUnlockTime_ReturnValue) == 0x000208, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_GetStartingUnlockTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_GetFormattedTime_OutputString) == 0x000210, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_GetFormattedTime_OutputString' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_MakeStruct_FormatArgumentData) == 0x000228, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_MakeStruct_SlateColor) == 0x000278, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, Temp_bool_Variable_5) == 0x00028C, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_GetStartingUnlockTime_ReturnValue_1) == 0x000290, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_GetStartingUnlockTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_GetFormattedTime_OutputString_1) == 0x000298, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_GetFormattedTime_OutputString_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_MakeStruct_FormatArgumentData_1) == 0x0002B0, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_IsValid_ReturnValue) == 0x000300, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_Conv_Int64ToInt_ReturnValue) == 0x000304, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_Conv_Int64ToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000308, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_MakeStruct_SlateBrush) == 0x000310, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_MakeStruct_FormatArgumentData_2) == 0x0003D0, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000420, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_Event_InUnlockType) == 0x000428, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_Event_InUnlockType' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_Greater_Int64Int64_ReturnValue) == 0x000429, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_Greater_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_SwitchEnum_CmpSuccess) == 0x00042A, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_GetFinalDisplayName_DisplayName) == 0x000430, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_GetFinalDisplayName_DisplayName' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_Select_Default_1) == 0x000448, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_MakeStruct_FormatArgumentData_3) == 0x000460, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_MakeStruct_FormatArgumentData_4) == 0x0004B0, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_MakeStruct_FormatArgumentData_5) == 0x000500, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_MakeArray_Array) == 0x000550, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_MakeArray_Array_1) == 0x000560, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_MakeStruct_FormatArgumentData_6) == 0x000570, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_MakeArray_Array_2) == 0x0005C0, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_PlayAnimationReverse_ReturnValue_3) == 0x0005D0, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_PlayAnimationReverse_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_MakeLiteralText_ReturnValue_1) == 0x0005D8, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_TextIsEmpty_ReturnValue) == 0x0005F0, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_TextIsEmpty_ReturnValue_1) == 0x0005F1, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_TextIsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_Select_Default_2) == 0x0005F8, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_Format_ReturnValue) == 0x000610, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_MakeLiteralText_ReturnValue_2) == 0x000628, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_Select_Default_3) == 0x000640, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_Format_ReturnValue_1) == 0x000658, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_TextIsEmpty_ReturnValue_2) == 0x000670, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_TextIsEmpty_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_MakeLiteralText_ReturnValue_3) == 0x000678, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_MakeLiteralText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_Select_Default_4) == 0x000690, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_Format_ReturnValue_2) == 0x0006A8, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_GetSingleLineDescription_ReturnValue) == 0x0006C0, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_GetSingleLineDescription_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_TextIsEmpty_ReturnValue_3) == 0x0006D8, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_TextIsEmpty_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_MakeStruct_FormatArgumentData_7) == 0x0006E0, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_MakeArray_Array_3) == 0x000730, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, K2Node_Select_Default_5) == 0x000740, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest, CallFunc_Format_ReturnValue_3) == 0x000758, "Member 'AthenaChallengeListEntry_LockedQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_LockedQuest::CallFunc_Format_ReturnValue_3' has a wrong offset!");

// Function AthenaChallengeListEntry_LockedQuest.AthenaChallengeListEntry_LockedQuest_C.GetFinalDisplayName
// 0x0020 (0x0020 - 0x0000)
struct AthenaChallengeListEntry_LockedQuest_C_GetFinalDisplayName final
{
public:
	class FText                                   DisplayName;                                       // 0x0000(0x0018)(Parm, OutParm)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengeListEntry_LockedQuest_C_GetFinalDisplayName) == 0x000008, "Wrong alignment on AthenaChallengeListEntry_LockedQuest_C_GetFinalDisplayName");
static_assert(sizeof(AthenaChallengeListEntry_LockedQuest_C_GetFinalDisplayName) == 0x000020, "Wrong size on AthenaChallengeListEntry_LockedQuest_C_GetFinalDisplayName");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_GetFinalDisplayName, DisplayName) == 0x000000, "Member 'AthenaChallengeListEntry_LockedQuest_C_GetFinalDisplayName::DisplayName' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_GetFinalDisplayName, CallFunc_TextIsEmpty_ReturnValue) == 0x000018, "Member 'AthenaChallengeListEntry_LockedQuest_C_GetFinalDisplayName::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");

// Function AthenaChallengeListEntry_LockedQuest.AthenaChallengeListEntry_LockedQuest_C.GetFormattedTime
// 0x0078 (0x0078 - 0x0000)
struct AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime final
{
public:
	struct FTimespan                              TimeRemaining;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class FText                                   OutputString;                                      // 0x0008(0x0018)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetTimespanAsText_ReturnValue;            // 0x0028(0x0018)()
	class FText                                   Temp_text_Variable;                                // 0x0040(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0060(0x0018)()
};
static_assert(alignof(AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime) == 0x000008, "Wrong alignment on AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime");
static_assert(sizeof(AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime) == 0x000078, "Wrong size on AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime, TimeRemaining) == 0x000000, "Member 'AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime::TimeRemaining' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime, OutputString) == 0x000008, "Member 'AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime::OutputString' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime, Temp_bool_Variable) == 0x000020, "Member 'AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime, CallFunc_GetTimespanAsText_ReturnValue) == 0x000028, "Member 'AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime::CallFunc_GetTimespanAsText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime, Temp_text_Variable) == 0x000040, "Member 'AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime, CallFunc_TextIsEmpty_ReturnValue) == 0x000058, "Member 'AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime, K2Node_Select_Default) == 0x000060, "Member 'AthenaChallengeListEntry_LockedQuest_C_GetFormattedTime::K2Node_Select_Default' has a wrong offset!");

// Function AthenaChallengeListEntry_LockedQuest.AthenaChallengeListEntry_LockedQuest_C.OnInitDisplayText
// 0x0001 (0x0001 - 0x0000)
struct AthenaChallengeListEntry_LockedQuest_C_OnInitDisplayText final
{
public:
	ELockedWidgetUnlockType                       InUnlockType;                                      // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengeListEntry_LockedQuest_C_OnInitDisplayText) == 0x000001, "Wrong alignment on AthenaChallengeListEntry_LockedQuest_C_OnInitDisplayText");
static_assert(sizeof(AthenaChallengeListEntry_LockedQuest_C_OnInitDisplayText) == 0x000001, "Wrong size on AthenaChallengeListEntry_LockedQuest_C_OnInitDisplayText");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_OnInitDisplayText, InUnlockType) == 0x000000, "Member 'AthenaChallengeListEntry_LockedQuest_C_OnInitDisplayText::InUnlockType' has a wrong offset!");

// Function AthenaChallengeListEntry_LockedQuest.AthenaChallengeListEntry_LockedQuest_C.OnMouseEnter
// 0x00D8 (0x00D8 - 0x0000)
struct AthenaChallengeListEntry_LockedQuest_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0040(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(AthenaChallengeListEntry_LockedQuest_C_OnMouseEnter) == 0x000008, "Wrong alignment on AthenaChallengeListEntry_LockedQuest_C_OnMouseEnter");
static_assert(sizeof(AthenaChallengeListEntry_LockedQuest_C_OnMouseEnter) == 0x0000D8, "Wrong size on AthenaChallengeListEntry_LockedQuest_C_OnMouseEnter");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'AthenaChallengeListEntry_LockedQuest_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_OnMouseEnter, MouseEvent) == 0x000040, "Member 'AthenaChallengeListEntry_LockedQuest_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function AthenaChallengeListEntry_LockedQuest.AthenaChallengeListEntry_LockedQuest_C.OnMouseLeave
// 0x0098 (0x0098 - 0x0000)
struct AthenaChallengeListEntry_LockedQuest_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(AthenaChallengeListEntry_LockedQuest_C_OnMouseLeave) == 0x000008, "Wrong alignment on AthenaChallengeListEntry_LockedQuest_C_OnMouseLeave");
static_assert(sizeof(AthenaChallengeListEntry_LockedQuest_C_OnMouseLeave) == 0x000098, "Wrong size on AthenaChallengeListEntry_LockedQuest_C_OnMouseLeave");
static_assert(offsetof(AthenaChallengeListEntry_LockedQuest_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'AthenaChallengeListEntry_LockedQuest_C_OnMouseLeave::MouseEvent' has a wrong offset!");

}

