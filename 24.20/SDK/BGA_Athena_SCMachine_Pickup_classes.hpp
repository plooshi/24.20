#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_Athena_SCMachine_Pickup

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BGA_Athena_SCMachine_Pickup.BGA_Athena_SCMachine_Pickup_C
// 0x0100 (0x0C40 - 0x0B40)
class ABGA_Athena_SCMachine_Pickup_C final : public ABuildingGameplayActorSpawnChip
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B40(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCapsuleComponent*                      OverlapCollision;                                  // 0x0B48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ParentMesh;                                        // 0x0B50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortLinkToActorComponent*              FortLinkToActor;                                   // 0x0B58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        SC_Machine_Memory_Card_Loop_Cue;                   // 0x0B60(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               SpawnInEffect;                                     // 0x0B68(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BackgroundGlow;                                    // 0x0B70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Card;                                              // 0x0B78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         UnHide;                                            // 0x0B80(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B84[0x4];                                      // 0x0B84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DelayBeforeUnhide;                                 // 0x0B88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         OwnerTeam;                                         // 0x0B90(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_B91[0x7];                                      // 0x0B91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Timer_DestroyPickup;                               // 0x0B98(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         Row_PickupLife;                                    // 0x0BA0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   InteractText;                                      // 0x0BC8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UParticleSystem*                        SpawnOutParticle;                                  // 0x0BE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             PickupSound;                                       // 0x0BE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          SpawnSoundPlayed;                                  // 0x0BF0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BF1[0x7];                                      // 0x0BF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             SpawnInSound;                                      // 0x0BF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPendingKill;                                     // 0x0C00(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideAndKill;                                       // 0x0C01(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C02[0x6];                                      // 0x0C02(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         Row_PickUpInteractTime;                            // 0x0C08(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsDelayingDeath;                                   // 0x0C30(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OwnerDiedInVortex;                                 // 0x0C31(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BlueprintOnInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted);
	void BndEvt__BGA_Athena_SCMachine_Pickup_FortLinkToActor_K2Node_ComponentBoundEvent_4_OnLinkedActorDestroyed__DelegateSignature(class AActor* DamageCauser);
	void BndEvt__Collision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void CollectPickup();
	void DelayDestroyPickup();
	void DestroyPickup();
	void ExecuteUbergraph_BGA_Athena_SCMachine_Pickup(int32 EntryPoint);
	void HideAndKillPickup();
	void OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDestroyPickup();
	void OnRep_HideAndKill();
	void OnRep_UnHide();
	void ReceiveBeginPlay();
	bool ShouldDie(float Damage, class AController* EventInstigator, class AActor* DamageCauser);
	void SpawnSound();
	void UserConstructionScript();

	bool BlueprintCanInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted, const ETInteractionType InteractionType) const;
	class FText BlueprintGetInteractionString(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted) const;
	bool BlueprintGetInteractionTime(const class AFortPawn* InteractingPawn, float* OutInteractionTime, const EInteractionBeingAttempted InteractionBeingAttempted) const;
	bool BuildDataRegistryResolverScope(TArray<class FName>* InOutResolverScopes, int32* InOutPriority) const;
	bool CanHandleCleanupEvents() const;
	const class UObject* GetCacheContextOverride() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BGA_Athena_SCMachine_Pickup_C">();
	}
	static class ABGA_Athena_SCMachine_Pickup_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABGA_Athena_SCMachine_Pickup_C>();
	}
};
static_assert(alignof(ABGA_Athena_SCMachine_Pickup_C) == 0x000010, "Wrong alignment on ABGA_Athena_SCMachine_Pickup_C");
static_assert(sizeof(ABGA_Athena_SCMachine_Pickup_C) == 0x000C40, "Wrong size on ABGA_Athena_SCMachine_Pickup_C");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, UberGraphFrame) == 0x000B40, "Member 'ABGA_Athena_SCMachine_Pickup_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, OverlapCollision) == 0x000B48, "Member 'ABGA_Athena_SCMachine_Pickup_C::OverlapCollision' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, ParentMesh) == 0x000B50, "Member 'ABGA_Athena_SCMachine_Pickup_C::ParentMesh' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, FortLinkToActor) == 0x000B58, "Member 'ABGA_Athena_SCMachine_Pickup_C::FortLinkToActor' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, SC_Machine_Memory_Card_Loop_Cue) == 0x000B60, "Member 'ABGA_Athena_SCMachine_Pickup_C::SC_Machine_Memory_Card_Loop_Cue' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, SpawnInEffect) == 0x000B68, "Member 'ABGA_Athena_SCMachine_Pickup_C::SpawnInEffect' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, BackgroundGlow) == 0x000B70, "Member 'ABGA_Athena_SCMachine_Pickup_C::BackgroundGlow' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, Card) == 0x000B78, "Member 'ABGA_Athena_SCMachine_Pickup_C::Card' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, UnHide) == 0x000B80, "Member 'ABGA_Athena_SCMachine_Pickup_C::UnHide' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, DelayBeforeUnhide) == 0x000B88, "Member 'ABGA_Athena_SCMachine_Pickup_C::DelayBeforeUnhide' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, OwnerTeam) == 0x000B90, "Member 'ABGA_Athena_SCMachine_Pickup_C::OwnerTeam' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, Timer_DestroyPickup) == 0x000B98, "Member 'ABGA_Athena_SCMachine_Pickup_C::Timer_DestroyPickup' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, Row_PickupLife) == 0x000BA0, "Member 'ABGA_Athena_SCMachine_Pickup_C::Row_PickupLife' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, InteractText) == 0x000BC8, "Member 'ABGA_Athena_SCMachine_Pickup_C::InteractText' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, SpawnOutParticle) == 0x000BE0, "Member 'ABGA_Athena_SCMachine_Pickup_C::SpawnOutParticle' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, PickupSound) == 0x000BE8, "Member 'ABGA_Athena_SCMachine_Pickup_C::PickupSound' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, SpawnSoundPlayed) == 0x000BF0, "Member 'ABGA_Athena_SCMachine_Pickup_C::SpawnSoundPlayed' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, SpawnInSound) == 0x000BF8, "Member 'ABGA_Athena_SCMachine_Pickup_C::SpawnInSound' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, IsPendingKill) == 0x000C00, "Member 'ABGA_Athena_SCMachine_Pickup_C::IsPendingKill' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, HideAndKill) == 0x000C01, "Member 'ABGA_Athena_SCMachine_Pickup_C::HideAndKill' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, Row_PickUpInteractTime) == 0x000C08, "Member 'ABGA_Athena_SCMachine_Pickup_C::Row_PickUpInteractTime' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, IsDelayingDeath) == 0x000C30, "Member 'ABGA_Athena_SCMachine_Pickup_C::IsDelayingDeath' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, OwnerDiedInVortex) == 0x000C31, "Member 'ABGA_Athena_SCMachine_Pickup_C::OwnerDiedInVortex' has a wrong offset!");

}

