#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProgressiveItemDetails

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function ProgressiveItemDetails.ProgressiveItemDetails_C.ExecuteUbergraph_ProgressiveItemDetails
// 0x0004 (0x0004 - 0x0000)
struct ProgressiveItemDetails_C_ExecuteUbergraph_ProgressiveItemDetails final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressiveItemDetails_C_ExecuteUbergraph_ProgressiveItemDetails) == 0x000004, "Wrong alignment on ProgressiveItemDetails_C_ExecuteUbergraph_ProgressiveItemDetails");
static_assert(sizeof(ProgressiveItemDetails_C_ExecuteUbergraph_ProgressiveItemDetails) == 0x000004, "Wrong size on ProgressiveItemDetails_C_ExecuteUbergraph_ProgressiveItemDetails");
static_assert(offsetof(ProgressiveItemDetails_C_ExecuteUbergraph_ProgressiveItemDetails, EntryPoint) == 0x000000, "Member 'ProgressiveItemDetails_C_ExecuteUbergraph_ProgressiveItemDetails::EntryPoint' has a wrong offset!");

// Function ProgressiveItemDetails.ProgressiveItemDetails_C.UpdateSubscribedVisuals
// 0x0050 (0x0050 - 0x0000)
struct ProgressiveItemDetails_C_UpdateSubscribedVisuals final
{
public:
	bool                                          IsSubscribed;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAthenaRewardItemTypeRarityTag_C*       K2Node_DynamicCast_AsAthena_Reward_Item_Type_Rarity_Tag; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0014(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0028(0x0014)()
	struct FSlateColor                            K2Node_Select_Default;                             // 0x003C(0x0014)()
};
static_assert(alignof(ProgressiveItemDetails_C_UpdateSubscribedVisuals) == 0x000008, "Wrong alignment on ProgressiveItemDetails_C_UpdateSubscribedVisuals");
static_assert(sizeof(ProgressiveItemDetails_C_UpdateSubscribedVisuals) == 0x000050, "Wrong size on ProgressiveItemDetails_C_UpdateSubscribedVisuals");
static_assert(offsetof(ProgressiveItemDetails_C_UpdateSubscribedVisuals, IsSubscribed) == 0x000000, "Member 'ProgressiveItemDetails_C_UpdateSubscribedVisuals::IsSubscribed' has a wrong offset!");
static_assert(offsetof(ProgressiveItemDetails_C_UpdateSubscribedVisuals, Temp_bool_Variable) == 0x000001, "Member 'ProgressiveItemDetails_C_UpdateSubscribedVisuals::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProgressiveItemDetails_C_UpdateSubscribedVisuals, K2Node_DynamicCast_AsAthena_Reward_Item_Type_Rarity_Tag) == 0x000008, "Member 'ProgressiveItemDetails_C_UpdateSubscribedVisuals::K2Node_DynamicCast_AsAthena_Reward_Item_Type_Rarity_Tag' has a wrong offset!");
static_assert(offsetof(ProgressiveItemDetails_C_UpdateSubscribedVisuals, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'ProgressiveItemDetails_C_UpdateSubscribedVisuals::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ProgressiveItemDetails_C_UpdateSubscribedVisuals, K2Node_MakeStruct_SlateColor) == 0x000014, "Member 'ProgressiveItemDetails_C_UpdateSubscribedVisuals::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(ProgressiveItemDetails_C_UpdateSubscribedVisuals, K2Node_MakeStruct_SlateColor_1) == 0x000028, "Member 'ProgressiveItemDetails_C_UpdateSubscribedVisuals::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(ProgressiveItemDetails_C_UpdateSubscribedVisuals, K2Node_Select_Default) == 0x00003C, "Member 'ProgressiveItemDetails_C_UpdateSubscribedVisuals::K2Node_Select_Default' has a wrong offset!");

}

