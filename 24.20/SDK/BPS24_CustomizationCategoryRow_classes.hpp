#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPS24_CustomizationCategoryRow

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BattlePassBase_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BPS24_CustomizationCategoryRow.BPS24_CustomizationCategoryRow_C
// 0x0050 (0x0370 - 0x0320)
class UBPS24_CustomizationCategoryRow_C final : public UFortBattlePassCustomSkinCategoryTile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0320(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_Lock;                                        // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Progress;                                    // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Progress_Locked;                             // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_1;                                     // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonVisibilitySwitcher*              Switcher_State;                                    // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   Text_Progress;                                     // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   Text_Progress_Locked;                              // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   Text_UnlockCondition;                              // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         Number_to_unlock;                                  // 0x0368(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_locked;                                         // 0x036C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BPS24_CustomizationCategoryRow(int32 EntryPoint);
	void OnLockedProgressUpdated(const int32 CurrentlyOwnedBeforeCategory, const int32 TotalRewardsBeforeCategory, const float LockedProgress);
	void OnLockedStateChanged(const bool bCategoryLocked);
	void OnOwnedTilesUpdated(const int32 CurrentlyOwnedRewards, const int32 TotalRewards, const float CategoryProgress);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPS24_CustomizationCategoryRow_C">();
	}
	static class UBPS24_CustomizationCategoryRow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPS24_CustomizationCategoryRow_C>();
	}
};
static_assert(alignof(UBPS24_CustomizationCategoryRow_C) == 0x000008, "Wrong alignment on UBPS24_CustomizationCategoryRow_C");
static_assert(sizeof(UBPS24_CustomizationCategoryRow_C) == 0x000370, "Wrong size on UBPS24_CustomizationCategoryRow_C");
static_assert(offsetof(UBPS24_CustomizationCategoryRow_C, UberGraphFrame) == 0x000320, "Member 'UBPS24_CustomizationCategoryRow_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPS24_CustomizationCategoryRow_C, Image_Lock) == 0x000328, "Member 'UBPS24_CustomizationCategoryRow_C::Image_Lock' has a wrong offset!");
static_assert(offsetof(UBPS24_CustomizationCategoryRow_C, Image_Progress) == 0x000330, "Member 'UBPS24_CustomizationCategoryRow_C::Image_Progress' has a wrong offset!");
static_assert(offsetof(UBPS24_CustomizationCategoryRow_C, Image_Progress_Locked) == 0x000338, "Member 'UBPS24_CustomizationCategoryRow_C::Image_Progress_Locked' has a wrong offset!");
static_assert(offsetof(UBPS24_CustomizationCategoryRow_C, ProgressBar_1) == 0x000340, "Member 'UBPS24_CustomizationCategoryRow_C::ProgressBar_1' has a wrong offset!");
static_assert(offsetof(UBPS24_CustomizationCategoryRow_C, Switcher_State) == 0x000348, "Member 'UBPS24_CustomizationCategoryRow_C::Switcher_State' has a wrong offset!");
static_assert(offsetof(UBPS24_CustomizationCategoryRow_C, Text_Progress) == 0x000350, "Member 'UBPS24_CustomizationCategoryRow_C::Text_Progress' has a wrong offset!");
static_assert(offsetof(UBPS24_CustomizationCategoryRow_C, Text_Progress_Locked) == 0x000358, "Member 'UBPS24_CustomizationCategoryRow_C::Text_Progress_Locked' has a wrong offset!");
static_assert(offsetof(UBPS24_CustomizationCategoryRow_C, Text_UnlockCondition) == 0x000360, "Member 'UBPS24_CustomizationCategoryRow_C::Text_UnlockCondition' has a wrong offset!");
static_assert(offsetof(UBPS24_CustomizationCategoryRow_C, Number_to_unlock) == 0x000368, "Member 'UBPS24_CustomizationCategoryRow_C::Number_to_unlock' has a wrong offset!");
static_assert(offsetof(UBPS24_CustomizationCategoryRow_C, Is_locked) == 0x00036C, "Member 'UBPS24_CustomizationCategoryRow_C::Is_locked' has a wrong offset!");

}

