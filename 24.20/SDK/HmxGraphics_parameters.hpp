#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HmxGraphics

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function HmxGraphics.HmxTextureBase.GetCurrentTextureHeight
// 0x0004 (0x0004 - 0x0000)
struct HmxTextureBase_GetCurrentTextureHeight final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HmxTextureBase_GetCurrentTextureHeight) == 0x000004, "Wrong alignment on HmxTextureBase_GetCurrentTextureHeight");
static_assert(sizeof(HmxTextureBase_GetCurrentTextureHeight) == 0x000004, "Wrong size on HmxTextureBase_GetCurrentTextureHeight");
static_assert(offsetof(HmxTextureBase_GetCurrentTextureHeight, ReturnValue) == 0x000000, "Member 'HmxTextureBase_GetCurrentTextureHeight::ReturnValue' has a wrong offset!");

// Function HmxGraphics.HmxTextureBase.GetCurrentTextureWidth
// 0x0004 (0x0004 - 0x0000)
struct HmxTextureBase_GetCurrentTextureWidth final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HmxTextureBase_GetCurrentTextureWidth) == 0x000004, "Wrong alignment on HmxTextureBase_GetCurrentTextureWidth");
static_assert(sizeof(HmxTextureBase_GetCurrentTextureWidth) == 0x000004, "Wrong size on HmxTextureBase_GetCurrentTextureWidth");
static_assert(offsetof(HmxTextureBase_GetCurrentTextureWidth, ReturnValue) == 0x000000, "Member 'HmxTextureBase_GetCurrentTextureWidth::ReturnValue' has a wrong offset!");

// Function HmxGraphics.TextureSampler.TextureReadPixel
// 0x0018 (0x0018 - 0x0000)
struct TextureSampler_TextureReadPixel final
{
public:
	int32                                         U;                                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         V;                                                 // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TextureSampler_TextureReadPixel) == 0x000004, "Wrong alignment on TextureSampler_TextureReadPixel");
static_assert(sizeof(TextureSampler_TextureReadPixel) == 0x000018, "Wrong size on TextureSampler_TextureReadPixel");
static_assert(offsetof(TextureSampler_TextureReadPixel, U) == 0x000000, "Member 'TextureSampler_TextureReadPixel::U' has a wrong offset!");
static_assert(offsetof(TextureSampler_TextureReadPixel, V) == 0x000004, "Member 'TextureSampler_TextureReadPixel::V' has a wrong offset!");
static_assert(offsetof(TextureSampler_TextureReadPixel, ReturnValue) == 0x000008, "Member 'TextureSampler_TextureReadPixel::ReturnValue' has a wrong offset!");

// Function HmxGraphics.TextureSampler.TextureSample
// 0x0020 (0x0020 - 0x0000)
struct TextureSampler_TextureSample final
{
public:
	struct FVector2D                              UV;                                                // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TextureSampler_TextureSample) == 0x000008, "Wrong alignment on TextureSampler_TextureSample");
static_assert(sizeof(TextureSampler_TextureSample) == 0x000020, "Wrong size on TextureSampler_TextureSample");
static_assert(offsetof(TextureSampler_TextureSample, UV) == 0x000000, "Member 'TextureSampler_TextureSample::UV' has a wrong offset!");
static_assert(offsetof(TextureSampler_TextureSample, ReturnValue) == 0x000010, "Member 'TextureSampler_TextureSample::ReturnValue' has a wrong offset!");

}

