#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KatanaGameplayRuntime

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// Enum KatanaGameplayRuntime.EFortKatanaPrimaryAttackVariation
// NumValues: 0x0004
enum class EFortKatanaPrimaryAttackVariation : uint8
{
	OnGroundFirst                            = 0,
	OnGroundSecond                           = 1,
	InAir                                    = 2,
	EFortKatanaPrimaryAttackVariation_MAX    = 3,
};

// ScriptStruct KatanaGameplayRuntime.FortKatanaPrimaryAttackVariationInfo
// 0x0098 (0x0098 - 0x0000)
struct FFortKatanaPrimaryAttackVariationInfo final
{
public:
	struct FScalableFloat                         Range;                                             // 0x0000(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         OffsetFromTarget;                                  // 0x0028(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortAbilityTargetSelectionList        TargetSelectionList;                               // 0x0050(0x0048)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFortKatanaPrimaryAttackVariationInfo) == 0x000008, "Wrong alignment on FFortKatanaPrimaryAttackVariationInfo");
static_assert(sizeof(FFortKatanaPrimaryAttackVariationInfo) == 0x000098, "Wrong size on FFortKatanaPrimaryAttackVariationInfo");
static_assert(offsetof(FFortKatanaPrimaryAttackVariationInfo, Range) == 0x000000, "Member 'FFortKatanaPrimaryAttackVariationInfo::Range' has a wrong offset!");
static_assert(offsetof(FFortKatanaPrimaryAttackVariationInfo, OffsetFromTarget) == 0x000028, "Member 'FFortKatanaPrimaryAttackVariationInfo::OffsetFromTarget' has a wrong offset!");
static_assert(offsetof(FFortKatanaPrimaryAttackVariationInfo, TargetSelectionList) == 0x000050, "Member 'FFortKatanaPrimaryAttackVariationInfo::TargetSelectionList' has a wrong offset!");

// ScriptStruct KatanaGameplayRuntime.FortKatanaDashTargetingInfo
// 0x0040 (0x0040 - 0x0000)
struct FFortKatanaDashTargetingInfo final
{
public:
	struct FVector                                DashDirection;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DashDistance;                                      // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                  DashBlockingActor;                                 // 0x001C(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWasDashDirectionAdjusted;                         // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         DamagedActors;                                     // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         OutOfRangePercent;                                 // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FFortKatanaDashTargetingInfo) == 0x000008, "Wrong alignment on FFortKatanaDashTargetingInfo");
static_assert(sizeof(FFortKatanaDashTargetingInfo) == 0x000040, "Wrong size on FFortKatanaDashTargetingInfo");
static_assert(offsetof(FFortKatanaDashTargetingInfo, DashDirection) == 0x000000, "Member 'FFortKatanaDashTargetingInfo::DashDirection' has a wrong offset!");
static_assert(offsetof(FFortKatanaDashTargetingInfo, DashDistance) == 0x000018, "Member 'FFortKatanaDashTargetingInfo::DashDistance' has a wrong offset!");
static_assert(offsetof(FFortKatanaDashTargetingInfo, DashBlockingActor) == 0x00001C, "Member 'FFortKatanaDashTargetingInfo::DashBlockingActor' has a wrong offset!");
static_assert(offsetof(FFortKatanaDashTargetingInfo, bWasDashDirectionAdjusted) == 0x000024, "Member 'FFortKatanaDashTargetingInfo::bWasDashDirectionAdjusted' has a wrong offset!");
static_assert(offsetof(FFortKatanaDashTargetingInfo, DamagedActors) == 0x000028, "Member 'FFortKatanaDashTargetingInfo::DamagedActors' has a wrong offset!");
static_assert(offsetof(FFortKatanaDashTargetingInfo, OutOfRangePercent) == 0x000038, "Member 'FFortKatanaDashTargetingInfo::OutOfRangePercent' has a wrong offset!");

// ScriptStruct KatanaGameplayRuntime.RootMotionSource_KatanaDashForce
// 0x0000 (0x0120 - 0x0120)
struct FRootMotionSource_KatanaDashForce final : public FRootMotionSource_MoveToForce
{
public:
	float                                         HeightAboveGround;                                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FRootMotionSource_KatanaDashForce) == 0x000010, "Wrong alignment on FRootMotionSource_KatanaDashForce");
static_assert(sizeof(FRootMotionSource_KatanaDashForce) == 0x000120, "Wrong size on FRootMotionSource_KatanaDashForce");
static_assert(offsetof(FRootMotionSource_KatanaDashForce, HeightAboveGround) == 0x000118, "Member 'FRootMotionSource_KatanaDashForce::HeightAboveGround' has a wrong offset!");

}

