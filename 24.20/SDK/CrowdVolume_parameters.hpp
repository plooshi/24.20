#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CrowdVolume

#include "Basic.hpp"


namespace SDK::Params
{

// Function CrowdVolume.CrowdSpawner.RefreshTrackedActors
// 0x0008 (0x0008 - 0x0000)
struct CrowdSpawner_RefreshTrackedActors final
{
public:
	class UPlayspaceComponent_SpatialActorTracker* InPlaySpaceComponent_SpatialActorTracker;          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CrowdSpawner_RefreshTrackedActors) == 0x000008, "Wrong alignment on CrowdSpawner_RefreshTrackedActors");
static_assert(sizeof(CrowdSpawner_RefreshTrackedActors) == 0x000008, "Wrong size on CrowdSpawner_RefreshTrackedActors");
static_assert(offsetof(CrowdSpawner_RefreshTrackedActors, InPlaySpaceComponent_SpatialActorTracker) == 0x000000, "Member 'CrowdSpawner_RefreshTrackedActors::InPlaySpaceComponent_SpatialActorTracker' has a wrong offset!");

// Function CrowdVolume.CrowdSpawner.SpawnCrowd
// 0x001C (0x001C - 0x0000)
struct CrowdSpawner_SpawnCrowd final
{
public:
	int32                                         Width;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Depth;                                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Height;                                            // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Precision;                                         // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CharacterScaleRandomness;                          // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CharacterAngleRandomness;                          // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Density;                                           // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CrowdSpawner_SpawnCrowd) == 0x000004, "Wrong alignment on CrowdSpawner_SpawnCrowd");
static_assert(sizeof(CrowdSpawner_SpawnCrowd) == 0x00001C, "Wrong size on CrowdSpawner_SpawnCrowd");
static_assert(offsetof(CrowdSpawner_SpawnCrowd, Width) == 0x000000, "Member 'CrowdSpawner_SpawnCrowd::Width' has a wrong offset!");
static_assert(offsetof(CrowdSpawner_SpawnCrowd, Depth) == 0x000004, "Member 'CrowdSpawner_SpawnCrowd::Depth' has a wrong offset!");
static_assert(offsetof(CrowdSpawner_SpawnCrowd, Height) == 0x000008, "Member 'CrowdSpawner_SpawnCrowd::Height' has a wrong offset!");
static_assert(offsetof(CrowdSpawner_SpawnCrowd, Precision) == 0x00000C, "Member 'CrowdSpawner_SpawnCrowd::Precision' has a wrong offset!");
static_assert(offsetof(CrowdSpawner_SpawnCrowd, CharacterScaleRandomness) == 0x000010, "Member 'CrowdSpawner_SpawnCrowd::CharacterScaleRandomness' has a wrong offset!");
static_assert(offsetof(CrowdSpawner_SpawnCrowd, CharacterAngleRandomness) == 0x000014, "Member 'CrowdSpawner_SpawnCrowd::CharacterAngleRandomness' has a wrong offset!");
static_assert(offsetof(CrowdSpawner_SpawnCrowd, Density) == 0x000018, "Member 'CrowdSpawner_SpawnCrowd::Density' has a wrong offset!");

}

