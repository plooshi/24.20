#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnnualRefundTokenUI

#include "Basic.hpp"

#include "AnnualRefundTokenUI_structs.hpp"


namespace SDK::Params
{

// Function AnnualRefundTokenUI.FortAnnualRefundTicket.OnUpdateAvailableState
// 0x0001 (0x0001 - 0x0000)
struct FortAnnualRefundTicket_OnUpdateAvailableState final
{
public:
	bool                                          bIsAvailable;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAnnualRefundTicket_OnUpdateAvailableState) == 0x000001, "Wrong alignment on FortAnnualRefundTicket_OnUpdateAvailableState");
static_assert(sizeof(FortAnnualRefundTicket_OnUpdateAvailableState) == 0x000001, "Wrong size on FortAnnualRefundTicket_OnUpdateAvailableState");
static_assert(offsetof(FortAnnualRefundTicket_OnUpdateAvailableState, bIsAvailable) == 0x000000, "Member 'FortAnnualRefundTicket_OnUpdateAvailableState::bIsAvailable' has a wrong offset!");

// Function AnnualRefundTokenUI.FortAnnualRefundTicket.OnUpdatePendingState
// 0x0001 (0x0001 - 0x0000)
struct FortAnnualRefundTicket_OnUpdatePendingState final
{
public:
	bool                                          bIsPending;                                        // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAnnualRefundTicket_OnUpdatePendingState) == 0x000001, "Wrong alignment on FortAnnualRefundTicket_OnUpdatePendingState");
static_assert(sizeof(FortAnnualRefundTicket_OnUpdatePendingState) == 0x000001, "Wrong size on FortAnnualRefundTicket_OnUpdatePendingState");
static_assert(offsetof(FortAnnualRefundTicket_OnUpdatePendingState, bIsPending) == 0x000000, "Member 'FortAnnualRefundTicket_OnUpdatePendingState::bIsPending' has a wrong offset!");

// Function AnnualRefundTokenUI.FortPurchaseHistoryEntry.OnSetHistory
// 0x0004 (0x0004 - 0x0000)
struct FortPurchaseHistoryEntry_OnSetHistory final
{
public:
	bool                                          bHasBeenRefunded;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsTokenlessRefund;                                // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPlayerHasTokens;                                  // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNonRefundable;                                    // 0x0003(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPurchaseHistoryEntry_OnSetHistory) == 0x000001, "Wrong alignment on FortPurchaseHistoryEntry_OnSetHistory");
static_assert(sizeof(FortPurchaseHistoryEntry_OnSetHistory) == 0x000004, "Wrong size on FortPurchaseHistoryEntry_OnSetHistory");
static_assert(offsetof(FortPurchaseHistoryEntry_OnSetHistory, bHasBeenRefunded) == 0x000000, "Member 'FortPurchaseHistoryEntry_OnSetHistory::bHasBeenRefunded' has a wrong offset!");
static_assert(offsetof(FortPurchaseHistoryEntry_OnSetHistory, bIsTokenlessRefund) == 0x000001, "Member 'FortPurchaseHistoryEntry_OnSetHistory::bIsTokenlessRefund' has a wrong offset!");
static_assert(offsetof(FortPurchaseHistoryEntry_OnSetHistory, bPlayerHasTokens) == 0x000002, "Member 'FortPurchaseHistoryEntry_OnSetHistory::bPlayerHasTokens' has a wrong offset!");
static_assert(offsetof(FortPurchaseHistoryEntry_OnSetHistory, bNonRefundable) == 0x000003, "Member 'FortPurchaseHistoryEntry_OnSetHistory::bNonRefundable' has a wrong offset!");

// Function AnnualRefundTokenUI.FortPurchaseHistoryEntry.SetPurchaseText
// 0x0038 (0x0038 - 0x0000)
struct FortPurchaseHistoryEntry_SetPurchaseText final
{
public:
	class FText                                   PurchaseDateText;                                  // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   RefundDateText;                                    // 0x0018(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bHasBeenRefunded;                                  // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortPurchaseHistoryRefundType                RefundType;                                        // 0x0031(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortPurchaseHistoryEntry_SetPurchaseText) == 0x000008, "Wrong alignment on FortPurchaseHistoryEntry_SetPurchaseText");
static_assert(sizeof(FortPurchaseHistoryEntry_SetPurchaseText) == 0x000038, "Wrong size on FortPurchaseHistoryEntry_SetPurchaseText");
static_assert(offsetof(FortPurchaseHistoryEntry_SetPurchaseText, PurchaseDateText) == 0x000000, "Member 'FortPurchaseHistoryEntry_SetPurchaseText::PurchaseDateText' has a wrong offset!");
static_assert(offsetof(FortPurchaseHistoryEntry_SetPurchaseText, RefundDateText) == 0x000018, "Member 'FortPurchaseHistoryEntry_SetPurchaseText::RefundDateText' has a wrong offset!");
static_assert(offsetof(FortPurchaseHistoryEntry_SetPurchaseText, bHasBeenRefunded) == 0x000030, "Member 'FortPurchaseHistoryEntry_SetPurchaseText::bHasBeenRefunded' has a wrong offset!");
static_assert(offsetof(FortPurchaseHistoryEntry_SetPurchaseText, RefundType) == 0x000031, "Member 'FortPurchaseHistoryEntry_SetPurchaseText::RefundType' has a wrong offset!");

// Function AnnualRefundTokenUI.FortPurchaseHistoryEntry.SetupItemCard
// 0x0010 (0x0010 - 0x0000)
struct FortPurchaseHistoryEntry_SetupItemCard final
{
public:
	const class UFortCosmeticItemCard*            ItemCard;                                          // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UFortItem*                        Item;                                              // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPurchaseHistoryEntry_SetupItemCard) == 0x000008, "Wrong alignment on FortPurchaseHistoryEntry_SetupItemCard");
static_assert(sizeof(FortPurchaseHistoryEntry_SetupItemCard) == 0x000010, "Wrong size on FortPurchaseHistoryEntry_SetupItemCard");
static_assert(offsetof(FortPurchaseHistoryEntry_SetupItemCard, ItemCard) == 0x000000, "Member 'FortPurchaseHistoryEntry_SetupItemCard::ItemCard' has a wrong offset!");
static_assert(offsetof(FortPurchaseHistoryEntry_SetupItemCard, Item) == 0x000008, "Member 'FortPurchaseHistoryEntry_SetupItemCard::Item' has a wrong offset!");

// Function AnnualRefundTokenUI.FortPurchaseHistoryEntry.UpdateItemList
// 0x0010 (0x0010 - 0x0000)
struct FortPurchaseHistoryEntry_UpdateItemList final
{
public:
	TArray<class UFortCosmeticItemCard*>          ItemCards;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPurchaseHistoryEntry_UpdateItemList) == 0x000008, "Wrong alignment on FortPurchaseHistoryEntry_UpdateItemList");
static_assert(sizeof(FortPurchaseHistoryEntry_UpdateItemList) == 0x000010, "Wrong size on FortPurchaseHistoryEntry_UpdateItemList");
static_assert(offsetof(FortPurchaseHistoryEntry_UpdateItemList, ItemCards) == 0x000000, "Member 'FortPurchaseHistoryEntry_UpdateItemList::ItemCards' has a wrong offset!");

// Function AnnualRefundTokenUI.FortPurchaseHistoryScreen.BP_IsShowingPurchases
// 0x0001 (0x0001 - 0x0000)
struct FortPurchaseHistoryScreen_BP_IsShowingPurchases final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPurchaseHistoryScreen_BP_IsShowingPurchases) == 0x000001, "Wrong alignment on FortPurchaseHistoryScreen_BP_IsShowingPurchases");
static_assert(sizeof(FortPurchaseHistoryScreen_BP_IsShowingPurchases) == 0x000001, "Wrong size on FortPurchaseHistoryScreen_BP_IsShowingPurchases");
static_assert(offsetof(FortPurchaseHistoryScreen_BP_IsShowingPurchases, ReturnValue) == 0x000000, "Member 'FortPurchaseHistoryScreen_BP_IsShowingPurchases::ReturnValue' has a wrong offset!");

// Function AnnualRefundTokenUI.FortRefundConfirmation.BP_UpdateItemsList
// 0x0018 (0x0018 - 0x0000)
struct FortRefundConfirmation_BP_UpdateItemsList final
{
public:
	TArray<class UFortItemDefinition*>            SelectedItemDefs;                                  // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         TotalMtxPaid;                                      // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortRefundConfirmation_BP_UpdateItemsList) == 0x000008, "Wrong alignment on FortRefundConfirmation_BP_UpdateItemsList");
static_assert(sizeof(FortRefundConfirmation_BP_UpdateItemsList) == 0x000018, "Wrong size on FortRefundConfirmation_BP_UpdateItemsList");
static_assert(offsetof(FortRefundConfirmation_BP_UpdateItemsList, SelectedItemDefs) == 0x000000, "Member 'FortRefundConfirmation_BP_UpdateItemsList::SelectedItemDefs' has a wrong offset!");
static_assert(offsetof(FortRefundConfirmation_BP_UpdateItemsList, TotalMtxPaid) == 0x000010, "Member 'FortRefundConfirmation_BP_UpdateItemsList::TotalMtxPaid' has a wrong offset!");

// Function AnnualRefundTokenUI.FortRefundConfirmation.BP_UpdateRefundType
// 0x0001 (0x0001 - 0x0000)
struct FortRefundConfirmation_BP_UpdateRefundType final
{
public:
	EFortPurchaseHistoryRefundType                RefundType;                                        // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortRefundConfirmation_BP_UpdateRefundType) == 0x000001, "Wrong alignment on FortRefundConfirmation_BP_UpdateRefundType");
static_assert(sizeof(FortRefundConfirmation_BP_UpdateRefundType) == 0x000001, "Wrong size on FortRefundConfirmation_BP_UpdateRefundType");
static_assert(offsetof(FortRefundConfirmation_BP_UpdateRefundType, RefundType) == 0x000000, "Member 'FortRefundConfirmation_BP_UpdateRefundType::RefundType' has a wrong offset!");

}

