#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_RailConnector_GrindRail

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GrindRailRuntime_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "GrindRail_Connection_structs.hpp"
#include "RailConnectionOption_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BGA_RailConnector_GrindRail.BGA_RailConnector_GrindRail_C
// 0x00F0 (0x0B20 - 0x0A30)
class ABGA_RailConnector_GrindRail_C final : public AFortGrindRailConnector
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0A30(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBillboardComponent*                    Billboard1;                                        // 0x0A38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Billboard;                                         // 0x0A40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow2;                                            // 0x0A48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sphere1;                                           // 0x0A50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0A58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_GrindingComponent_C*                CurrentGrindingComp;                               // 0x0A60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class ABGA_GrindRail_C*>               Rails;                                             // 0x0A68(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<struct FGrindRail_Connection>          DebugConnections;                                  // 0x0A78(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                TotalLocation;                                     // 0x0A88(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AverageLocation;                                   // 0x0AA0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TangentIntensity__ReadOnly_;                       // 0x0AB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ApplyTangent;                                      // 0x0AC0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC1[0x7];                                      // 0x0AC1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRailConnectionOption>          RailOptions;                                       // 0x0AC8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<int32>                                 RailsAndPoints_Rails;                              // 0x0AD8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        Sphere_Radius;                                     // 0x0AE8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Disable_Snapping;                                  // 0x0AF0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AF1[0x7];                                      // 0x0AF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterial>               SphereMaterialEditor;                              // 0x0AF8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void AddRailOptionsFromRail(class ABGA_GrindRail_C* Rail);
	bool CheckIfOptionsCanConnect(const struct FRailConnectionOption& EntryOption, const struct FRailConnectionOption& ExitOption);
	void ExecuteUbergraph_BGA_RailConnector_GrindRail(int32 EntryPoint);
	int32 GetClosestSplinePoint(const struct FVector& WorldLocation, class USplineComponent* Spline);
	void GetOptions(const struct FRailConnectionOption& EntryOption, struct FRailConnectionOption* Left, struct FRailConnectionOption* Center, struct FRailConnectionOption* Right, bool* Found_Options);
	void MakeOption(class ABGA_GrindRail_C* TheRail, int32 ThePoint, int32 TheDirection, bool* Success, struct FRailConnectionOption* RailConnectionOption);
	void ReceiveBeginPlay();
	void SnapRailPoints(class ABGA_GrindRail_C* Rail);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BGA_RailConnector_GrindRail_C">();
	}
	static class ABGA_RailConnector_GrindRail_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABGA_RailConnector_GrindRail_C>();
	}
};
static_assert(alignof(ABGA_RailConnector_GrindRail_C) == 0x000008, "Wrong alignment on ABGA_RailConnector_GrindRail_C");
static_assert(sizeof(ABGA_RailConnector_GrindRail_C) == 0x000B20, "Wrong size on ABGA_RailConnector_GrindRail_C");
static_assert(offsetof(ABGA_RailConnector_GrindRail_C, UberGraphFrame) == 0x000A30, "Member 'ABGA_RailConnector_GrindRail_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABGA_RailConnector_GrindRail_C, Billboard1) == 0x000A38, "Member 'ABGA_RailConnector_GrindRail_C::Billboard1' has a wrong offset!");
static_assert(offsetof(ABGA_RailConnector_GrindRail_C, Billboard) == 0x000A40, "Member 'ABGA_RailConnector_GrindRail_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABGA_RailConnector_GrindRail_C, Arrow2) == 0x000A48, "Member 'ABGA_RailConnector_GrindRail_C::Arrow2' has a wrong offset!");
static_assert(offsetof(ABGA_RailConnector_GrindRail_C, Sphere1) == 0x000A50, "Member 'ABGA_RailConnector_GrindRail_C::Sphere1' has a wrong offset!");
static_assert(offsetof(ABGA_RailConnector_GrindRail_C, Arrow) == 0x000A58, "Member 'ABGA_RailConnector_GrindRail_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABGA_RailConnector_GrindRail_C, CurrentGrindingComp) == 0x000A60, "Member 'ABGA_RailConnector_GrindRail_C::CurrentGrindingComp' has a wrong offset!");
static_assert(offsetof(ABGA_RailConnector_GrindRail_C, Rails) == 0x000A68, "Member 'ABGA_RailConnector_GrindRail_C::Rails' has a wrong offset!");
static_assert(offsetof(ABGA_RailConnector_GrindRail_C, DebugConnections) == 0x000A78, "Member 'ABGA_RailConnector_GrindRail_C::DebugConnections' has a wrong offset!");
static_assert(offsetof(ABGA_RailConnector_GrindRail_C, TotalLocation) == 0x000A88, "Member 'ABGA_RailConnector_GrindRail_C::TotalLocation' has a wrong offset!");
static_assert(offsetof(ABGA_RailConnector_GrindRail_C, AverageLocation) == 0x000AA0, "Member 'ABGA_RailConnector_GrindRail_C::AverageLocation' has a wrong offset!");
static_assert(offsetof(ABGA_RailConnector_GrindRail_C, TangentIntensity__ReadOnly_) == 0x000AB8, "Member 'ABGA_RailConnector_GrindRail_C::TangentIntensity__ReadOnly_' has a wrong offset!");
static_assert(offsetof(ABGA_RailConnector_GrindRail_C, ApplyTangent) == 0x000AC0, "Member 'ABGA_RailConnector_GrindRail_C::ApplyTangent' has a wrong offset!");
static_assert(offsetof(ABGA_RailConnector_GrindRail_C, RailOptions) == 0x000AC8, "Member 'ABGA_RailConnector_GrindRail_C::RailOptions' has a wrong offset!");
static_assert(offsetof(ABGA_RailConnector_GrindRail_C, RailsAndPoints_Rails) == 0x000AD8, "Member 'ABGA_RailConnector_GrindRail_C::RailsAndPoints_Rails' has a wrong offset!");
static_assert(offsetof(ABGA_RailConnector_GrindRail_C, Sphere_Radius) == 0x000AE8, "Member 'ABGA_RailConnector_GrindRail_C::Sphere_Radius' has a wrong offset!");
static_assert(offsetof(ABGA_RailConnector_GrindRail_C, Disable_Snapping) == 0x000AF0, "Member 'ABGA_RailConnector_GrindRail_C::Disable_Snapping' has a wrong offset!");
static_assert(offsetof(ABGA_RailConnector_GrindRail_C, SphereMaterialEditor) == 0x000AF8, "Member 'ABGA_RailConnector_GrindRail_C::SphereMaterialEditor' has a wrong offset!");

}

