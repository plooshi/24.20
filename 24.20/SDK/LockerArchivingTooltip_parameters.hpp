#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LockerArchivingTooltip

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function LockerArchivingTooltip.LockerArchivingTooltip_C.BndEvt__LockerArchivingTooltip_Dismiss_Button_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct LockerArchivingTooltip_C_BndEvt__LockerArchivingTooltip_Dismiss_Button_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButtonLegacy*                    Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LockerArchivingTooltip_C_BndEvt__LockerArchivingTooltip_Dismiss_Button_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on LockerArchivingTooltip_C_BndEvt__LockerArchivingTooltip_Dismiss_Button_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(LockerArchivingTooltip_C_BndEvt__LockerArchivingTooltip_Dismiss_Button_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on LockerArchivingTooltip_C_BndEvt__LockerArchivingTooltip_Dismiss_Button_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(LockerArchivingTooltip_C_BndEvt__LockerArchivingTooltip_Dismiss_Button_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'LockerArchivingTooltip_C_BndEvt__LockerArchivingTooltip_Dismiss_Button_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function LockerArchivingTooltip.LockerArchivingTooltip_C.ExecuteUbergraph_LockerArchivingTooltip
// 0x0048 (0x0048 - 0x0000)
struct LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBorderSlot*                            CallFunc_SlotAsBorderSlot_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonLegacy*                    K2Node_ComponentBoundEvent_Button;                 // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bShouldShowTooltip;             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip) == 0x000008, "Wrong alignment on LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip");
static_assert(sizeof(LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip) == 0x000048, "Wrong size on LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip");
static_assert(offsetof(LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip, EntryPoint) == 0x000000, "Member 'LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip::EntryPoint' has a wrong offset!");
static_assert(offsetof(LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip, Temp_byte_Variable) == 0x000004, "Member 'LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip, Temp_byte_Variable_1) == 0x000005, "Member 'LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip, Temp_bool_Variable) == 0x000006, "Member 'LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip, Temp_byte_Variable_2) == 0x000007, "Member 'LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip, Temp_byte_Variable_3) == 0x000008, "Member 'LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip, K2Node_Event_IsDesignTime) == 0x000009, "Member 'LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000010, "Member 'LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip, CallFunc_PlayAnimationForward_ReturnValue) == 0x000018, "Member 'LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip, CallFunc_SlotAsBorderSlot_ReturnValue) == 0x000028, "Member 'LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip::CallFunc_SlotAsBorderSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip, K2Node_ComponentBoundEvent_Button) == 0x000030, "Member 'LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip, K2Node_Select_Default) == 0x000038, "Member 'LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip, K2Node_CustomEvent_bShouldShowTooltip) == 0x000039, "Member 'LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip::K2Node_CustomEvent_bShouldShowTooltip' has a wrong offset!");
static_assert(offsetof(LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00003A, "Member 'LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip, Temp_bool_Variable_1) == 0x00003B, "Member 'LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip, K2Node_Select_Default_1) == 0x00003C, "Member 'LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x000040, "Member 'LockerArchivingTooltip_C_ExecuteUbergraph_LockerArchivingTooltip::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");

// Function LockerArchivingTooltip.LockerArchivingTooltip_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct LockerArchivingTooltip_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LockerArchivingTooltip_C_PreConstruct) == 0x000001, "Wrong alignment on LockerArchivingTooltip_C_PreConstruct");
static_assert(sizeof(LockerArchivingTooltip_C_PreConstruct) == 0x000001, "Wrong size on LockerArchivingTooltip_C_PreConstruct");
static_assert(offsetof(LockerArchivingTooltip_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'LockerArchivingTooltip_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function LockerArchivingTooltip.LockerArchivingTooltip_C.SetText
// 0x0018 (0x0018 - 0x0000)
struct LockerArchivingTooltip_C_SetText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(LockerArchivingTooltip_C_SetText) == 0x000008, "Wrong alignment on LockerArchivingTooltip_C_SetText");
static_assert(sizeof(LockerArchivingTooltip_C_SetText) == 0x000018, "Wrong size on LockerArchivingTooltip_C_SetText");
static_assert(offsetof(LockerArchivingTooltip_C_SetText, Text) == 0x000000, "Member 'LockerArchivingTooltip_C_SetText::Text' has a wrong offset!");

// Function LockerArchivingTooltip.LockerArchivingTooltip_C.SetTooltipEnabled
// 0x0002 (0x0002 - 0x0000)
struct LockerArchivingTooltip_C_SetTooltipEnabled final
{
public:
	bool                                          bInEnabled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LockerArchivingTooltip_C_SetTooltipEnabled) == 0x000001, "Wrong alignment on LockerArchivingTooltip_C_SetTooltipEnabled");
static_assert(sizeof(LockerArchivingTooltip_C_SetTooltipEnabled) == 0x000002, "Wrong size on LockerArchivingTooltip_C_SetTooltipEnabled");
static_assert(offsetof(LockerArchivingTooltip_C_SetTooltipEnabled, bInEnabled) == 0x000000, "Member 'LockerArchivingTooltip_C_SetTooltipEnabled::bInEnabled' has a wrong offset!");
static_assert(offsetof(LockerArchivingTooltip_C_SetTooltipEnabled, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'LockerArchivingTooltip_C_SetTooltipEnabled::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function LockerArchivingTooltip.LockerArchivingTooltip_C.SetTooltipStatus
// 0x0001 (0x0001 - 0x0000)
struct LockerArchivingTooltip_C_SetTooltipStatus final
{
public:
	bool                                          bShouldShowTooltip;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LockerArchivingTooltip_C_SetTooltipStatus) == 0x000001, "Wrong alignment on LockerArchivingTooltip_C_SetTooltipStatus");
static_assert(sizeof(LockerArchivingTooltip_C_SetTooltipStatus) == 0x000001, "Wrong size on LockerArchivingTooltip_C_SetTooltipStatus");
static_assert(offsetof(LockerArchivingTooltip_C_SetTooltipStatus, bShouldShowTooltip) == 0x000000, "Member 'LockerArchivingTooltip_C_SetTooltipStatus::bShouldShowTooltip' has a wrong offset!");

}

