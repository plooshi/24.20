#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortniteAIServer

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteAI_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK::Params
{

// Function FortniteAIServer.FortAthenaAIEvaluator_BlueprintBase.OnEnter
// 0x0008 (0x0008 - 0x0000)
struct FortAthenaAIEvaluator_BlueprintBase_OnEnter final
{
public:
	class UBehaviorTreeComponent*                 OwnerComp;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaAIEvaluator_BlueprintBase_OnEnter) == 0x000008, "Wrong alignment on FortAthenaAIEvaluator_BlueprintBase_OnEnter");
static_assert(sizeof(FortAthenaAIEvaluator_BlueprintBase_OnEnter) == 0x000008, "Wrong size on FortAthenaAIEvaluator_BlueprintBase_OnEnter");
static_assert(offsetof(FortAthenaAIEvaluator_BlueprintBase_OnEnter, OwnerComp) == 0x000000, "Member 'FortAthenaAIEvaluator_BlueprintBase_OnEnter::OwnerComp' has a wrong offset!");

// Function FortniteAIServer.FortAthenaAIEvaluator_BlueprintBase.OnExit
// 0x0008 (0x0008 - 0x0000)
struct FortAthenaAIEvaluator_BlueprintBase_OnExit final
{
public:
	class UBehaviorTreeComponent*                 OwnerComp;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaAIEvaluator_BlueprintBase_OnExit) == 0x000008, "Wrong alignment on FortAthenaAIEvaluator_BlueprintBase_OnExit");
static_assert(sizeof(FortAthenaAIEvaluator_BlueprintBase_OnExit) == 0x000008, "Wrong size on FortAthenaAIEvaluator_BlueprintBase_OnExit");
static_assert(offsetof(FortAthenaAIEvaluator_BlueprintBase_OnExit, OwnerComp) == 0x000000, "Member 'FortAthenaAIEvaluator_BlueprintBase_OnExit::OwnerComp' has a wrong offset!");

// Function FortniteAIServer.FortAthenaAIEvaluator_BlueprintBase.EvaluateOngoingConditions
// 0x0010 (0x0010 - 0x0000)
struct FortAthenaAIEvaluator_BlueprintBase_EvaluateOngoingConditions final
{
public:
	class UBehaviorTreeComponent*                 OwnerComp;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortAthenaAIEvaluator_BlueprintBase_EvaluateOngoingConditions) == 0x000008, "Wrong alignment on FortAthenaAIEvaluator_BlueprintBase_EvaluateOngoingConditions");
static_assert(sizeof(FortAthenaAIEvaluator_BlueprintBase_EvaluateOngoingConditions) == 0x000010, "Wrong size on FortAthenaAIEvaluator_BlueprintBase_EvaluateOngoingConditions");
static_assert(offsetof(FortAthenaAIEvaluator_BlueprintBase_EvaluateOngoingConditions, OwnerComp) == 0x000000, "Member 'FortAthenaAIEvaluator_BlueprintBase_EvaluateOngoingConditions::OwnerComp' has a wrong offset!");
static_assert(offsetof(FortAthenaAIEvaluator_BlueprintBase_EvaluateOngoingConditions, ReturnValue) == 0x000008, "Member 'FortAthenaAIEvaluator_BlueprintBase_EvaluateOngoingConditions::ReturnValue' has a wrong offset!");

// Function FortniteAIServer.FortAthenaAIEvaluator_BlueprintBase.EvaluateStartingConditions
// 0x0010 (0x0010 - 0x0000)
struct FortAthenaAIEvaluator_BlueprintBase_EvaluateStartingConditions final
{
public:
	class UBehaviorTreeComponent*                 OwnerComp;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortAthenaAIEvaluator_BlueprintBase_EvaluateStartingConditions) == 0x000008, "Wrong alignment on FortAthenaAIEvaluator_BlueprintBase_EvaluateStartingConditions");
static_assert(sizeof(FortAthenaAIEvaluator_BlueprintBase_EvaluateStartingConditions) == 0x000010, "Wrong size on FortAthenaAIEvaluator_BlueprintBase_EvaluateStartingConditions");
static_assert(offsetof(FortAthenaAIEvaluator_BlueprintBase_EvaluateStartingConditions, OwnerComp) == 0x000000, "Member 'FortAthenaAIEvaluator_BlueprintBase_EvaluateStartingConditions::OwnerComp' has a wrong offset!");
static_assert(offsetof(FortAthenaAIEvaluator_BlueprintBase_EvaluateStartingConditions, ReturnValue) == 0x000008, "Member 'FortAthenaAIEvaluator_BlueprintBase_EvaluateStartingConditions::ReturnValue' has a wrong offset!");

// Function FortniteAIServer.FortWorldConditionTimeOfDayState.HandleTimeOfDayPhaseChange
// 0x0003 (0x0003 - 0x0000)
struct FortWorldConditionTimeOfDayState_HandleTimeOfDayPhaseChange final
{
public:
	EFortDayPhase                                 CurrentDayPhase;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortDayPhase                                 PreviousDayPhase;                                  // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAtCreation;                                       // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortWorldConditionTimeOfDayState_HandleTimeOfDayPhaseChange) == 0x000001, "Wrong alignment on FortWorldConditionTimeOfDayState_HandleTimeOfDayPhaseChange");
static_assert(sizeof(FortWorldConditionTimeOfDayState_HandleTimeOfDayPhaseChange) == 0x000003, "Wrong size on FortWorldConditionTimeOfDayState_HandleTimeOfDayPhaseChange");
static_assert(offsetof(FortWorldConditionTimeOfDayState_HandleTimeOfDayPhaseChange, CurrentDayPhase) == 0x000000, "Member 'FortWorldConditionTimeOfDayState_HandleTimeOfDayPhaseChange::CurrentDayPhase' has a wrong offset!");
static_assert(offsetof(FortWorldConditionTimeOfDayState_HandleTimeOfDayPhaseChange, PreviousDayPhase) == 0x000001, "Member 'FortWorldConditionTimeOfDayState_HandleTimeOfDayPhaseChange::PreviousDayPhase' has a wrong offset!");
static_assert(offsetof(FortWorldConditionTimeOfDayState_HandleTimeOfDayPhaseChange, bAtCreation) == 0x000002, "Member 'FortWorldConditionTimeOfDayState_HandleTimeOfDayPhaseChange::bAtCreation' has a wrong offset!");

// Function FortniteAIServer.FortGameplayInteractionSmartObjectBehaviorDefinition.CanBeUsedBy
// 0x0018 (0x0018 - 0x0000)
struct FortGameplayInteractionSmartObjectBehaviorDefinition_CanBeUsedBy final
{
public:
	const class AActor*                           User;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class AActor*                           SmartObjectActor;                                  // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortGameplayInteractionSmartObjectBehaviorDefinition_CanBeUsedBy) == 0x000008, "Wrong alignment on FortGameplayInteractionSmartObjectBehaviorDefinition_CanBeUsedBy");
static_assert(sizeof(FortGameplayInteractionSmartObjectBehaviorDefinition_CanBeUsedBy) == 0x000018, "Wrong size on FortGameplayInteractionSmartObjectBehaviorDefinition_CanBeUsedBy");
static_assert(offsetof(FortGameplayInteractionSmartObjectBehaviorDefinition_CanBeUsedBy, User) == 0x000000, "Member 'FortGameplayInteractionSmartObjectBehaviorDefinition_CanBeUsedBy::User' has a wrong offset!");
static_assert(offsetof(FortGameplayInteractionSmartObjectBehaviorDefinition_CanBeUsedBy, SmartObjectActor) == 0x000008, "Member 'FortGameplayInteractionSmartObjectBehaviorDefinition_CanBeUsedBy::SmartObjectActor' has a wrong offset!");
static_assert(offsetof(FortGameplayInteractionSmartObjectBehaviorDefinition_CanBeUsedBy, ReturnValue) == 0x000010, "Member 'FortGameplayInteractionSmartObjectBehaviorDefinition_CanBeUsedBy::ReturnValue' has a wrong offset!");

// Function FortniteAIServer.FortAthenaAIBotEvaluator_Conversation.OnPlayerPawnSpawned
// 0x0010 (0x0010 - 0x0000)
struct FortAthenaAIBotEvaluator_Conversation_OnPlayerPawnSpawned final
{
public:
	class AFortAthenaAIBotController*             BotController;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerPawnAthena*                  BotPawn;                                           // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaAIBotEvaluator_Conversation_OnPlayerPawnSpawned) == 0x000008, "Wrong alignment on FortAthenaAIBotEvaluator_Conversation_OnPlayerPawnSpawned");
static_assert(sizeof(FortAthenaAIBotEvaluator_Conversation_OnPlayerPawnSpawned) == 0x000010, "Wrong size on FortAthenaAIBotEvaluator_Conversation_OnPlayerPawnSpawned");
static_assert(offsetof(FortAthenaAIBotEvaluator_Conversation_OnPlayerPawnSpawned, BotController) == 0x000000, "Member 'FortAthenaAIBotEvaluator_Conversation_OnPlayerPawnSpawned::BotController' has a wrong offset!");
static_assert(offsetof(FortAthenaAIBotEvaluator_Conversation_OnPlayerPawnSpawned, BotPawn) == 0x000008, "Member 'FortAthenaAIBotEvaluator_Conversation_OnPlayerPawnSpawned::BotPawn' has a wrong offset!");

// Function FortniteAIServer.FortEQSPrevisActor.SetQueryTemplate
// 0x0008 (0x0008 - 0x0000)
struct FortEQSPrevisActor_SetQueryTemplate final
{
public:
	class UEnvQuery*                              InPrevisQueryTemplate;                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortEQSPrevisActor_SetQueryTemplate) == 0x000008, "Wrong alignment on FortEQSPrevisActor_SetQueryTemplate");
static_assert(sizeof(FortEQSPrevisActor_SetQueryTemplate) == 0x000008, "Wrong size on FortEQSPrevisActor_SetQueryTemplate");
static_assert(offsetof(FortEQSPrevisActor_SetQueryTemplate, InPrevisQueryTemplate) == 0x000000, "Member 'FortEQSPrevisActor_SetQueryTemplate::InPrevisQueryTemplate' has a wrong offset!");

// Function FortniteAIServer.FortAthenaBTService_ManageWeapon.ManageWeaponTargeting
// 0x0008 (0x0008 - 0x0000)
struct FortAthenaBTService_ManageWeapon_ManageWeaponTargeting final
{
public:
	class UBehaviorTreeComponent*                 OwnerComp;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaBTService_ManageWeapon_ManageWeaponTargeting) == 0x000008, "Wrong alignment on FortAthenaBTService_ManageWeapon_ManageWeaponTargeting");
static_assert(sizeof(FortAthenaBTService_ManageWeapon_ManageWeaponTargeting) == 0x000008, "Wrong size on FortAthenaBTService_ManageWeapon_ManageWeaponTargeting");
static_assert(offsetof(FortAthenaBTService_ManageWeapon_ManageWeaponTargeting, OwnerComp) == 0x000000, "Member 'FortAthenaBTService_ManageWeapon_ManageWeaponTargeting::OwnerComp' has a wrong offset!");

// Function FortniteAIServer.FortAthenaAIBotEvaluator_Storm.OnSafeZoneStateChanged
// 0x0001 (0x0001 - 0x0000)
struct FortAthenaAIBotEvaluator_Storm_OnSafeZoneStateChanged final
{
public:
	EFortSafeZoneState                            NewState;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaAIBotEvaluator_Storm_OnSafeZoneStateChanged) == 0x000001, "Wrong alignment on FortAthenaAIBotEvaluator_Storm_OnSafeZoneStateChanged");
static_assert(sizeof(FortAthenaAIBotEvaluator_Storm_OnSafeZoneStateChanged) == 0x000001, "Wrong size on FortAthenaAIBotEvaluator_Storm_OnSafeZoneStateChanged");
static_assert(offsetof(FortAthenaAIBotEvaluator_Storm_OnSafeZoneStateChanged, NewState) == 0x000000, "Member 'FortAthenaAIBotEvaluator_Storm_OnSafeZoneStateChanged::NewState' has a wrong offset!");

// Function FortniteAIServer.FortAthenaPlayMontageStateTreeTask.HandleMontageEnded
// 0x0010 (0x0010 - 0x0000)
struct FortAthenaPlayMontageStateTreeTask_HandleMontageEnded final
{
public:
	const class UAnimMontage*                     EndedMontage;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInterrupted;                                      // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortAthenaPlayMontageStateTreeTask_HandleMontageEnded) == 0x000008, "Wrong alignment on FortAthenaPlayMontageStateTreeTask_HandleMontageEnded");
static_assert(sizeof(FortAthenaPlayMontageStateTreeTask_HandleMontageEnded) == 0x000010, "Wrong size on FortAthenaPlayMontageStateTreeTask_HandleMontageEnded");
static_assert(offsetof(FortAthenaPlayMontageStateTreeTask_HandleMontageEnded, EndedMontage) == 0x000000, "Member 'FortAthenaPlayMontageStateTreeTask_HandleMontageEnded::EndedMontage' has a wrong offset!");
static_assert(offsetof(FortAthenaPlayMontageStateTreeTask_HandleMontageEnded, bInterrupted) == 0x000008, "Member 'FortAthenaPlayMontageStateTreeTask_HandleMontageEnded::bInterrupted' has a wrong offset!");

// Function FortniteAIServer.FortAthenaPlayMontageStateTreeTask.HandleNotifyBeginReceived
// 0x0028 (0x0028 - 0x0000)
struct FortAthenaPlayMontageStateTreeTask_HandleNotifyBeginReceived final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBranchingPointNotifyPayload           BranchingPointNotifyPayload;                       // 0x0008(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaPlayMontageStateTreeTask_HandleNotifyBeginReceived) == 0x000008, "Wrong alignment on FortAthenaPlayMontageStateTreeTask_HandleNotifyBeginReceived");
static_assert(sizeof(FortAthenaPlayMontageStateTreeTask_HandleNotifyBeginReceived) == 0x000028, "Wrong size on FortAthenaPlayMontageStateTreeTask_HandleNotifyBeginReceived");
static_assert(offsetof(FortAthenaPlayMontageStateTreeTask_HandleNotifyBeginReceived, NotifyName) == 0x000000, "Member 'FortAthenaPlayMontageStateTreeTask_HandleNotifyBeginReceived::NotifyName' has a wrong offset!");
static_assert(offsetof(FortAthenaPlayMontageStateTreeTask_HandleNotifyBeginReceived, BranchingPointNotifyPayload) == 0x000008, "Member 'FortAthenaPlayMontageStateTreeTask_HandleNotifyBeginReceived::BranchingPointNotifyPayload' has a wrong offset!");

// Function FortniteAIServer.FortAthenaPlayContextualAnimTaskInstanceData.OnMontageEnded
// 0x0010 (0x0010 - 0x0000)
struct FortAthenaPlayContextualAnimTaskInstanceData_OnMontageEnded final
{
public:
	const class UAnimMontage*                     EndedMontage;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInterrupted;                                      // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortAthenaPlayContextualAnimTaskInstanceData_OnMontageEnded) == 0x000008, "Wrong alignment on FortAthenaPlayContextualAnimTaskInstanceData_OnMontageEnded");
static_assert(sizeof(FortAthenaPlayContextualAnimTaskInstanceData_OnMontageEnded) == 0x000010, "Wrong size on FortAthenaPlayContextualAnimTaskInstanceData_OnMontageEnded");
static_assert(offsetof(FortAthenaPlayContextualAnimTaskInstanceData_OnMontageEnded, EndedMontage) == 0x000000, "Member 'FortAthenaPlayContextualAnimTaskInstanceData_OnMontageEnded::EndedMontage' has a wrong offset!");
static_assert(offsetof(FortAthenaPlayContextualAnimTaskInstanceData_OnMontageEnded, bInterrupted) == 0x000008, "Member 'FortAthenaPlayContextualAnimTaskInstanceData_OnMontageEnded::bInterrupted' has a wrong offset!");

// Function FortniteAIServer.FortAthenaPlayContextualAnimTaskInstanceData.OnNotifyBeginReceived
// 0x0028 (0x0028 - 0x0000)
struct FortAthenaPlayContextualAnimTaskInstanceData_OnNotifyBeginReceived final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBranchingPointNotifyPayload           BranchingPointNotifyPayload;                       // 0x0008(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaPlayContextualAnimTaskInstanceData_OnNotifyBeginReceived) == 0x000008, "Wrong alignment on FortAthenaPlayContextualAnimTaskInstanceData_OnNotifyBeginReceived");
static_assert(sizeof(FortAthenaPlayContextualAnimTaskInstanceData_OnNotifyBeginReceived) == 0x000028, "Wrong size on FortAthenaPlayContextualAnimTaskInstanceData_OnNotifyBeginReceived");
static_assert(offsetof(FortAthenaPlayContextualAnimTaskInstanceData_OnNotifyBeginReceived, NotifyName) == 0x000000, "Member 'FortAthenaPlayContextualAnimTaskInstanceData_OnNotifyBeginReceived::NotifyName' has a wrong offset!");
static_assert(offsetof(FortAthenaPlayContextualAnimTaskInstanceData_OnNotifyBeginReceived, BranchingPointNotifyPayload) == 0x000008, "Member 'FortAthenaPlayContextualAnimTaskInstanceData_OnNotifyBeginReceived::BranchingPointNotifyPayload' has a wrong offset!");

// Function FortniteAIServer.FortAthenaAIBotEvaluator_CharacterLaunched.OnZiplineStateChanged
// 0x0010 (0x0010 - 0x0000)
struct FortAthenaAIBotEvaluator_CharacterLaunched_OnZiplineStateChanged final
{
public:
	bool                                          bIsZiplining;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        FortPlayerPawn;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaAIBotEvaluator_CharacterLaunched_OnZiplineStateChanged) == 0x000008, "Wrong alignment on FortAthenaAIBotEvaluator_CharacterLaunched_OnZiplineStateChanged");
static_assert(sizeof(FortAthenaAIBotEvaluator_CharacterLaunched_OnZiplineStateChanged) == 0x000010, "Wrong size on FortAthenaAIBotEvaluator_CharacterLaunched_OnZiplineStateChanged");
static_assert(offsetof(FortAthenaAIBotEvaluator_CharacterLaunched_OnZiplineStateChanged, bIsZiplining) == 0x000000, "Member 'FortAthenaAIBotEvaluator_CharacterLaunched_OnZiplineStateChanged::bIsZiplining' has a wrong offset!");
static_assert(offsetof(FortAthenaAIBotEvaluator_CharacterLaunched_OnZiplineStateChanged, FortPlayerPawn) == 0x000008, "Member 'FortAthenaAIBotEvaluator_CharacterLaunched_OnZiplineStateChanged::FortPlayerPawn' has a wrong offset!");

// Function FortniteAIServer.FortAthenaAIBotEvaluator_Converted.OnConvertedEvent
// 0x0010 (0x0010 - 0x0000)
struct FortAthenaAIBotEvaluator_Converted_OnConvertedEvent final
{
public:
	class AFortPawn*                              InstigatorPawn;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPawn*                              ConvertedPawn;                                     // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaAIBotEvaluator_Converted_OnConvertedEvent) == 0x000008, "Wrong alignment on FortAthenaAIBotEvaluator_Converted_OnConvertedEvent");
static_assert(sizeof(FortAthenaAIBotEvaluator_Converted_OnConvertedEvent) == 0x000010, "Wrong size on FortAthenaAIBotEvaluator_Converted_OnConvertedEvent");
static_assert(offsetof(FortAthenaAIBotEvaluator_Converted_OnConvertedEvent, InstigatorPawn) == 0x000000, "Member 'FortAthenaAIBotEvaluator_Converted_OnConvertedEvent::InstigatorPawn' has a wrong offset!");
static_assert(offsetof(FortAthenaAIBotEvaluator_Converted_OnConvertedEvent, ConvertedPawn) == 0x000008, "Member 'FortAthenaAIBotEvaluator_Converted_OnConvertedEvent::ConvertedPawn' has a wrong offset!");

// Function FortniteAIServer.FortAthenaAIBotEvaluator_Converted.OnUnconvertedEvent
// 0x0010 (0x0010 - 0x0000)
struct FortAthenaAIBotEvaluator_Converted_OnUnconvertedEvent final
{
public:
	class AFortPawn*                              UnconvertedPawn;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUnconvertReason                              UnconvertReason;                                   // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortAthenaAIBotEvaluator_Converted_OnUnconvertedEvent) == 0x000008, "Wrong alignment on FortAthenaAIBotEvaluator_Converted_OnUnconvertedEvent");
static_assert(sizeof(FortAthenaAIBotEvaluator_Converted_OnUnconvertedEvent) == 0x000010, "Wrong size on FortAthenaAIBotEvaluator_Converted_OnUnconvertedEvent");
static_assert(offsetof(FortAthenaAIBotEvaluator_Converted_OnUnconvertedEvent, UnconvertedPawn) == 0x000000, "Member 'FortAthenaAIBotEvaluator_Converted_OnUnconvertedEvent::UnconvertedPawn' has a wrong offset!");
static_assert(offsetof(FortAthenaAIBotEvaluator_Converted_OnUnconvertedEvent, UnconvertReason) == 0x000008, "Member 'FortAthenaAIBotEvaluator_Converted_OnUnconvertedEvent::UnconvertReason' has a wrong offset!");

// Function FortniteAIServer.FortAthenaAIBotEvaluator_DBNO.OnAllyPawnDBNOStateChanged
// 0x0010 (0x0010 - 0x0000)
struct FortAthenaAIBotEvaluator_DBNO_OnAllyPawnDBNOStateChanged final
{
public:
	class AFortPawn*                              InPlayer;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInIsDBNO;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortAthenaAIBotEvaluator_DBNO_OnAllyPawnDBNOStateChanged) == 0x000008, "Wrong alignment on FortAthenaAIBotEvaluator_DBNO_OnAllyPawnDBNOStateChanged");
static_assert(sizeof(FortAthenaAIBotEvaluator_DBNO_OnAllyPawnDBNOStateChanged) == 0x000010, "Wrong size on FortAthenaAIBotEvaluator_DBNO_OnAllyPawnDBNOStateChanged");
static_assert(offsetof(FortAthenaAIBotEvaluator_DBNO_OnAllyPawnDBNOStateChanged, InPlayer) == 0x000000, "Member 'FortAthenaAIBotEvaluator_DBNO_OnAllyPawnDBNOStateChanged::InPlayer' has a wrong offset!");
static_assert(offsetof(FortAthenaAIBotEvaluator_DBNO_OnAllyPawnDBNOStateChanged, bInIsDBNO) == 0x000008, "Member 'FortAthenaAIBotEvaluator_DBNO_OnAllyPawnDBNOStateChanged::bInIsDBNO' has a wrong offset!");

// Function FortniteAIServer.FortAthenaAIBotEvaluator_EvasiveManeuvers.OnMoveCompleted
// 0x0008 (0x0008 - 0x0000)
struct FortAthenaAIBotEvaluator_EvasiveManeuvers_OnMoveCompleted final
{
public:
	struct FAIRequestID                           RequestID;                                         // 0x0000(0x0004)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	EPathFollowingResult                          MovementResult;                                    // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortAthenaAIBotEvaluator_EvasiveManeuvers_OnMoveCompleted) == 0x000004, "Wrong alignment on FortAthenaAIBotEvaluator_EvasiveManeuvers_OnMoveCompleted");
static_assert(sizeof(FortAthenaAIBotEvaluator_EvasiveManeuvers_OnMoveCompleted) == 0x000008, "Wrong size on FortAthenaAIBotEvaluator_EvasiveManeuvers_OnMoveCompleted");
static_assert(offsetof(FortAthenaAIBotEvaluator_EvasiveManeuvers_OnMoveCompleted, RequestID) == 0x000000, "Member 'FortAthenaAIBotEvaluator_EvasiveManeuvers_OnMoveCompleted::RequestID' has a wrong offset!");
static_assert(offsetof(FortAthenaAIBotEvaluator_EvasiveManeuvers_OnMoveCompleted, MovementResult) == 0x000004, "Member 'FortAthenaAIBotEvaluator_EvasiveManeuvers_OnMoveCompleted::MovementResult' has a wrong offset!");

// Function FortniteAIServer.FortAthenaAIBotEvaluator_SandTunnel.OnBotControllerAlertLevelChanged
// 0x0010 (0x0010 - 0x0000)
struct FortAthenaAIBotEvaluator_SandTunnel_OnBotControllerAlertLevelChanged final
{
public:
	class AFortAthenaAIBotController*             BotController;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAlertLevel                                   OldAlertLevel;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAlertLevel                                   NewAlertLevel;                                     // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortAthenaAIBotEvaluator_SandTunnel_OnBotControllerAlertLevelChanged) == 0x000008, "Wrong alignment on FortAthenaAIBotEvaluator_SandTunnel_OnBotControllerAlertLevelChanged");
static_assert(sizeof(FortAthenaAIBotEvaluator_SandTunnel_OnBotControllerAlertLevelChanged) == 0x000010, "Wrong size on FortAthenaAIBotEvaluator_SandTunnel_OnBotControllerAlertLevelChanged");
static_assert(offsetof(FortAthenaAIBotEvaluator_SandTunnel_OnBotControllerAlertLevelChanged, BotController) == 0x000000, "Member 'FortAthenaAIBotEvaluator_SandTunnel_OnBotControllerAlertLevelChanged::BotController' has a wrong offset!");
static_assert(offsetof(FortAthenaAIBotEvaluator_SandTunnel_OnBotControllerAlertLevelChanged, OldAlertLevel) == 0x000008, "Member 'FortAthenaAIBotEvaluator_SandTunnel_OnBotControllerAlertLevelChanged::OldAlertLevel' has a wrong offset!");
static_assert(offsetof(FortAthenaAIBotEvaluator_SandTunnel_OnBotControllerAlertLevelChanged, NewAlertLevel) == 0x000009, "Member 'FortAthenaAIBotEvaluator_SandTunnel_OnBotControllerAlertLevelChanged::NewAlertLevel' has a wrong offset!");

// Function FortniteAIServer.FortAthenaAIBotEvaluator_Zipline.OnZiplineStateChanged
// 0x0010 (0x0010 - 0x0000)
struct FortAthenaAIBotEvaluator_Zipline_OnZiplineStateChanged final
{
public:
	bool                                          bIsZiplining;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        FortPlayerPawn;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaAIBotEvaluator_Zipline_OnZiplineStateChanged) == 0x000008, "Wrong alignment on FortAthenaAIBotEvaluator_Zipline_OnZiplineStateChanged");
static_assert(sizeof(FortAthenaAIBotEvaluator_Zipline_OnZiplineStateChanged) == 0x000010, "Wrong size on FortAthenaAIBotEvaluator_Zipline_OnZiplineStateChanged");
static_assert(offsetof(FortAthenaAIBotEvaluator_Zipline_OnZiplineStateChanged, bIsZiplining) == 0x000000, "Member 'FortAthenaAIBotEvaluator_Zipline_OnZiplineStateChanged::bIsZiplining' has a wrong offset!");
static_assert(offsetof(FortAthenaAIBotEvaluator_Zipline_OnZiplineStateChanged, FortPlayerPawn) == 0x000008, "Member 'FortAthenaAIBotEvaluator_Zipline_OnZiplineStateChanged::FortPlayerPawn' has a wrong offset!");

// Function FortniteAIServer.FortAthenaAIEvaluator_DormantUntilPhase.HandleGamePhaseStepChanged
// 0x0018 (0x0018 - 0x0000)
struct FortAthenaAIEvaluator_DormantUntilPhase_HandleGamePhaseStepChanged final
{
public:
	TScriptInterface<class IFortSafeZoneInterface> SafeZoneInterface;                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAthenaGamePhaseStep                          GamePhaseStep;                                     // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortAthenaAIEvaluator_DormantUntilPhase_HandleGamePhaseStepChanged) == 0x000008, "Wrong alignment on FortAthenaAIEvaluator_DormantUntilPhase_HandleGamePhaseStepChanged");
static_assert(sizeof(FortAthenaAIEvaluator_DormantUntilPhase_HandleGamePhaseStepChanged) == 0x000018, "Wrong size on FortAthenaAIEvaluator_DormantUntilPhase_HandleGamePhaseStepChanged");
static_assert(offsetof(FortAthenaAIEvaluator_DormantUntilPhase_HandleGamePhaseStepChanged, SafeZoneInterface) == 0x000000, "Member 'FortAthenaAIEvaluator_DormantUntilPhase_HandleGamePhaseStepChanged::SafeZoneInterface' has a wrong offset!");
static_assert(offsetof(FortAthenaAIEvaluator_DormantUntilPhase_HandleGamePhaseStepChanged, GamePhaseStep) == 0x000010, "Member 'FortAthenaAIEvaluator_DormantUntilPhase_HandleGamePhaseStepChanged::GamePhaseStep' has a wrong offset!");

// Function FortniteAIServer.FortAthenaBTService_Slide.OnStopSliding
// 0x0008 (0x0008 - 0x0000)
struct FortAthenaBTService_Slide_OnStopSliding final
{
public:
	class AFortPlayerPawn*                        Pawn;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaBTService_Slide_OnStopSliding) == 0x000008, "Wrong alignment on FortAthenaBTService_Slide_OnStopSliding");
static_assert(sizeof(FortAthenaBTService_Slide_OnStopSliding) == 0x000008, "Wrong size on FortAthenaBTService_Slide_OnStopSliding");
static_assert(offsetof(FortAthenaBTService_Slide_OnStopSliding, Pawn) == 0x000000, "Member 'FortAthenaBTService_Slide_OnStopSliding::Pawn' has a wrong offset!");

// Function FortniteAIServer.FortAthenaBTTask_Zipline.OnZiplineStateChanged
// 0x0010 (0x0010 - 0x0000)
struct FortAthenaBTTask_Zipline_OnZiplineStateChanged final
{
public:
	bool                                          bIsZiplining;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        FortPlayerPawn;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaBTTask_Zipline_OnZiplineStateChanged) == 0x000008, "Wrong alignment on FortAthenaBTTask_Zipline_OnZiplineStateChanged");
static_assert(sizeof(FortAthenaBTTask_Zipline_OnZiplineStateChanged) == 0x000010, "Wrong size on FortAthenaBTTask_Zipline_OnZiplineStateChanged");
static_assert(offsetof(FortAthenaBTTask_Zipline_OnZiplineStateChanged, bIsZiplining) == 0x000000, "Member 'FortAthenaBTTask_Zipline_OnZiplineStateChanged::bIsZiplining' has a wrong offset!");
static_assert(offsetof(FortAthenaBTTask_Zipline_OnZiplineStateChanged, FortPlayerPawn) == 0x000008, "Member 'FortAthenaBTTask_Zipline_OnZiplineStateChanged::FortPlayerPawn' has a wrong offset!");

// Function FortniteAIServer.FortAthenaPlayInteractionStateTreeTask.OnMontageEnded
// 0x0010 (0x0010 - 0x0000)
struct FortAthenaPlayInteractionStateTreeTask_OnMontageEnded final
{
public:
	const class UAnimMontage*                     EndedMontage;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInterrupted;                                      // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortAthenaPlayInteractionStateTreeTask_OnMontageEnded) == 0x000008, "Wrong alignment on FortAthenaPlayInteractionStateTreeTask_OnMontageEnded");
static_assert(sizeof(FortAthenaPlayInteractionStateTreeTask_OnMontageEnded) == 0x000010, "Wrong size on FortAthenaPlayInteractionStateTreeTask_OnMontageEnded");
static_assert(offsetof(FortAthenaPlayInteractionStateTreeTask_OnMontageEnded, EndedMontage) == 0x000000, "Member 'FortAthenaPlayInteractionStateTreeTask_OnMontageEnded::EndedMontage' has a wrong offset!");
static_assert(offsetof(FortAthenaPlayInteractionStateTreeTask_OnMontageEnded, bInterrupted) == 0x000008, "Member 'FortAthenaPlayInteractionStateTreeTask_OnMontageEnded::bInterrupted' has a wrong offset!");

// Function FortniteAIServer.FortAthenaPlayInteractionStateTreeTask.OnNotifyBeginReceived
// 0x0028 (0x0028 - 0x0000)
struct FortAthenaPlayInteractionStateTreeTask_OnNotifyBeginReceived final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBranchingPointNotifyPayload           BranchingPointNotifyPayload;                       // 0x0008(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaPlayInteractionStateTreeTask_OnNotifyBeginReceived) == 0x000008, "Wrong alignment on FortAthenaPlayInteractionStateTreeTask_OnNotifyBeginReceived");
static_assert(sizeof(FortAthenaPlayInteractionStateTreeTask_OnNotifyBeginReceived) == 0x000028, "Wrong size on FortAthenaPlayInteractionStateTreeTask_OnNotifyBeginReceived");
static_assert(offsetof(FortAthenaPlayInteractionStateTreeTask_OnNotifyBeginReceived, NotifyName) == 0x000000, "Member 'FortAthenaPlayInteractionStateTreeTask_OnNotifyBeginReceived::NotifyName' has a wrong offset!");
static_assert(offsetof(FortAthenaPlayInteractionStateTreeTask_OnNotifyBeginReceived, BranchingPointNotifyPayload) == 0x000008, "Member 'FortAthenaPlayInteractionStateTreeTask_OnNotifyBeginReceived::BranchingPointNotifyPayload' has a wrong offset!");

}

