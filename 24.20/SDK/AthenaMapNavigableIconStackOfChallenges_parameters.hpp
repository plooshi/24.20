#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaMapNavigableIconStackOfChallenges

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function AthenaMapNavigableIconStackOfChallenges.AthenaMapNavigableIconStackOfChallenges_C.ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges
// 0x0110 (0x0110 - 0x0000)
struct AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsComplete;                          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsLocked;                            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHasIconOverride;                     // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Progress;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShouldShowBang;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsPinned;                            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bChallengeSelected;                   // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	const class UTexture2D*                       K2Node_Event_Icon;                                 // 0x0028(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_NewStackCount;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_NonCompletedCount;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F[0x1];                                       // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0040(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectStackedDataIndex_ReturnValue;    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0070(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldCycleAutomatically_ReturnValue;     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHasLocation;                         // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsInGame;                            // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_2;         // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_3;         // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               CallFunc_K2_GetTextureParameterValue_ReturnValue;  // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bUserInteraction_3;                   // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bUserInteraction_2;                   // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bUserInteraction_1;                   // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bUserInteraction;                     // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsIconSelected_ReturnValue;               // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsIconSelected_ReturnValue_1;             // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E7[0x1];                                       // 0x00E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1;                              // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_3;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShouldShow;                          // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x2];                                      // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges) == 0x000008, "Wrong alignment on AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges");
static_assert(sizeof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges) == 0x000110, "Wrong size on AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, EntryPoint) == 0x000000, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, Temp_byte_Variable) == 0x000010, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, Temp_byte_Variable_1) == 0x000011, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, Temp_bool_Variable) == 0x000012, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, Temp_byte_Variable_2) == 0x000013, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, Temp_byte_Variable_3) == 0x000014, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, Temp_bool_Variable_1) == 0x000015, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, Temp_byte_Variable_4) == 0x000016, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, Temp_byte_Variable_5) == 0x000017, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, Temp_bool_Variable_2) == 0x000018, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, K2Node_Event_bIsComplete) == 0x000019, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::K2Node_Event_bIsComplete' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, K2Node_Event_bIsLocked) == 0x00001A, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::K2Node_Event_bIsLocked' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, K2Node_Event_bHasIconOverride) == 0x00001B, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::K2Node_Event_bHasIconOverride' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, K2Node_Event_Progress) == 0x00001C, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::K2Node_Event_Progress' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, K2Node_Event_bShouldShowBang) == 0x000020, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::K2Node_Event_bShouldShowBang' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, K2Node_Event_bIsPinned) == 0x000021, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::K2Node_Event_bIsPinned' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, K2Node_Event_bChallengeSelected) == 0x000022, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::K2Node_Event_bChallengeSelected' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, K2Node_Event_Icon) == 0x000028, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::K2Node_Event_Icon' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, K2Node_Select_Default) == 0x000030, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, CallFunc_BooleanOR_ReturnValue) == 0x000031, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, K2Node_Event_NewStackCount) == 0x000034, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::K2Node_Event_NewStackCount' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, K2Node_Event_NonCompletedCount) == 0x000038, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::K2Node_Event_NonCompletedCount' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, CallFunc_BooleanOR_ReturnValue_1) == 0x00003C, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, CallFunc_Greater_IntInt_ReturnValue) == 0x00003D, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, K2Node_Select_Default_1) == 0x00003E, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, CallFunc_Conv_IntToText_ReturnValue) == 0x000040, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, CallFunc_PlayAnimation_ReturnValue_1) == 0x000058, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, CallFunc_GetSelectStackedDataIndex_ReturnValue) == 0x000060, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::CallFunc_GetSelectStackedDataIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, Temp_byte_Variable_6) == 0x000068, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000070, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, Temp_byte_Variable_7) == 0x000088, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, Temp_bool_Variable_3) == 0x000089, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, CallFunc_RandomFloatInRange_ReturnValue) == 0x000090, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, CallFunc_PlayAnimation_ReturnValue_2) == 0x000098, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, CallFunc_ShouldCycleAutomatically_ReturnValue) == 0x0000A0, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::CallFunc_ShouldCycleAutomatically_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, Temp_real_Variable) == 0x0000A8, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, K2Node_Event_bHasLocation) == 0x0000B0, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::K2Node_Event_bHasLocation' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, K2Node_Event_bIsInGame) == 0x0000B1, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::K2Node_Event_bIsInGame' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0000B8, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x0000C0, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, CallFunc_GetDynamicMaterial_ReturnValue_2) == 0x0000C8, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::CallFunc_GetDynamicMaterial_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, CallFunc_GetDynamicMaterial_ReturnValue_3) == 0x0000D0, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::CallFunc_GetDynamicMaterial_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, CallFunc_K2_GetTextureParameterValue_ReturnValue) == 0x0000D8, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::CallFunc_K2_GetTextureParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, K2Node_Event_bUserInteraction_3) == 0x0000E0, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::K2Node_Event_bUserInteraction_3' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, K2Node_Event_bUserInteraction_2) == 0x0000E1, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::K2Node_Event_bUserInteraction_2' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, K2Node_Event_bUserInteraction_1) == 0x0000E2, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::K2Node_Event_bUserInteraction_1' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, K2Node_Event_bUserInteraction) == 0x0000E3, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::K2Node_Event_bUserInteraction' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, CallFunc_IsIconSelected_ReturnValue) == 0x0000E4, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::CallFunc_IsIconSelected_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, CallFunc_IsIconSelected_ReturnValue_1) == 0x0000E5, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::CallFunc_IsIconSelected_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, K2Node_Select_Default_2) == 0x0000E6, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, Temp_real_Variable_1) == 0x0000E8, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, Temp_bool_Variable_4) == 0x0000F0, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, K2Node_Select_Default_3) == 0x0000F8, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, K2Node_Event_bShouldShow) == 0x000100, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::K2Node_Event_bShouldShow' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, K2Node_Select_Default_4) == 0x000101, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, CallFunc_Delay_Duration_ImplicitCast) == 0x000104, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000108, "Member 'AthenaMapNavigableIconStackOfChallenges_C_ExecuteUbergraph_AthenaMapNavigableIconStackOfChallenges::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function AthenaMapNavigableIconStackOfChallenges.AthenaMapNavigableIconStackOfChallenges_C.OnChallengeIconOverriden
// 0x0008 (0x0008 - 0x0000)
struct AthenaMapNavigableIconStackOfChallenges_C_OnChallengeIconOverriden final
{
public:
	const class UTexture2D*                       Icon;                                              // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMapNavigableIconStackOfChallenges_C_OnChallengeIconOverriden) == 0x000008, "Wrong alignment on AthenaMapNavigableIconStackOfChallenges_C_OnChallengeIconOverriden");
static_assert(sizeof(AthenaMapNavigableIconStackOfChallenges_C_OnChallengeIconOverriden) == 0x000008, "Wrong size on AthenaMapNavigableIconStackOfChallenges_C_OnChallengeIconOverriden");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_OnChallengeIconOverriden, Icon) == 0x000000, "Member 'AthenaMapNavigableIconStackOfChallenges_C_OnChallengeIconOverriden::Icon' has a wrong offset!");

// Function AthenaMapNavigableIconStackOfChallenges.AthenaMapNavigableIconStackOfChallenges_C.OnChallengeSet
// 0x000C (0x000C - 0x0000)
struct AthenaMapNavigableIconStackOfChallenges_C_OnChallengeSet final
{
public:
	bool                                          bIsComplete;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLocked;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasIconOverride;                                  // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Progress;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldShowBang;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPinned;                                         // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bChallengeSelected;                                // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMapNavigableIconStackOfChallenges_C_OnChallengeSet) == 0x000004, "Wrong alignment on AthenaMapNavigableIconStackOfChallenges_C_OnChallengeSet");
static_assert(sizeof(AthenaMapNavigableIconStackOfChallenges_C_OnChallengeSet) == 0x00000C, "Wrong size on AthenaMapNavigableIconStackOfChallenges_C_OnChallengeSet");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_OnChallengeSet, bIsComplete) == 0x000000, "Member 'AthenaMapNavigableIconStackOfChallenges_C_OnChallengeSet::bIsComplete' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_OnChallengeSet, bIsLocked) == 0x000001, "Member 'AthenaMapNavigableIconStackOfChallenges_C_OnChallengeSet::bIsLocked' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_OnChallengeSet, bHasIconOverride) == 0x000002, "Member 'AthenaMapNavigableIconStackOfChallenges_C_OnChallengeSet::bHasIconOverride' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_OnChallengeSet, Progress) == 0x000004, "Member 'AthenaMapNavigableIconStackOfChallenges_C_OnChallengeSet::Progress' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_OnChallengeSet, bShouldShowBang) == 0x000008, "Member 'AthenaMapNavigableIconStackOfChallenges_C_OnChallengeSet::bShouldShowBang' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_OnChallengeSet, bIsPinned) == 0x000009, "Member 'AthenaMapNavigableIconStackOfChallenges_C_OnChallengeSet::bIsPinned' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_OnChallengeSet, bChallengeSelected) == 0x00000A, "Member 'AthenaMapNavigableIconStackOfChallenges_C_OnChallengeSet::bChallengeSelected' has a wrong offset!");

// Function AthenaMapNavigableIconStackOfChallenges.AthenaMapNavigableIconStackOfChallenges_C.OnChangeBangVisibility
// 0x0001 (0x0001 - 0x0000)
struct AthenaMapNavigableIconStackOfChallenges_C_OnChangeBangVisibility final
{
public:
	bool                                          bShouldShow;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMapNavigableIconStackOfChallenges_C_OnChangeBangVisibility) == 0x000001, "Wrong alignment on AthenaMapNavigableIconStackOfChallenges_C_OnChangeBangVisibility");
static_assert(sizeof(AthenaMapNavigableIconStackOfChallenges_C_OnChangeBangVisibility) == 0x000001, "Wrong size on AthenaMapNavigableIconStackOfChallenges_C_OnChangeBangVisibility");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_OnChangeBangVisibility, bShouldShow) == 0x000000, "Member 'AthenaMapNavigableIconStackOfChallenges_C_OnChangeBangVisibility::bShouldShow' has a wrong offset!");

// Function AthenaMapNavigableIconStackOfChallenges.AthenaMapNavigableIconStackOfChallenges_C.OnChangedStackData
// 0x0008 (0x0008 - 0x0000)
struct AthenaMapNavigableIconStackOfChallenges_C_OnChangedStackData final
{
public:
	int32                                         NewStackCount;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NonCompletedCount;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMapNavigableIconStackOfChallenges_C_OnChangedStackData) == 0x000004, "Wrong alignment on AthenaMapNavigableIconStackOfChallenges_C_OnChangedStackData");
static_assert(sizeof(AthenaMapNavigableIconStackOfChallenges_C_OnChangedStackData) == 0x000008, "Wrong size on AthenaMapNavigableIconStackOfChallenges_C_OnChangedStackData");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_OnChangedStackData, NewStackCount) == 0x000000, "Member 'AthenaMapNavigableIconStackOfChallenges_C_OnChangedStackData::NewStackCount' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_OnChangedStackData, NonCompletedCount) == 0x000004, "Member 'AthenaMapNavigableIconStackOfChallenges_C_OnChangedStackData::NonCompletedCount' has a wrong offset!");

// Function AthenaMapNavigableIconStackOfChallenges.AthenaMapNavigableIconStackOfChallenges_C.OnHovered
// 0x0001 (0x0001 - 0x0000)
struct AthenaMapNavigableIconStackOfChallenges_C_OnHovered final
{
public:
	bool                                          bUserInteraction;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMapNavigableIconStackOfChallenges_C_OnHovered) == 0x000001, "Wrong alignment on AthenaMapNavigableIconStackOfChallenges_C_OnHovered");
static_assert(sizeof(AthenaMapNavigableIconStackOfChallenges_C_OnHovered) == 0x000001, "Wrong size on AthenaMapNavigableIconStackOfChallenges_C_OnHovered");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_OnHovered, bUserInteraction) == 0x000000, "Member 'AthenaMapNavigableIconStackOfChallenges_C_OnHovered::bUserInteraction' has a wrong offset!");

// Function AthenaMapNavigableIconStackOfChallenges.AthenaMapNavigableIconStackOfChallenges_C.OnSelected
// 0x0001 (0x0001 - 0x0000)
struct AthenaMapNavigableIconStackOfChallenges_C_OnSelected final
{
public:
	bool                                          bUserInteraction;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMapNavigableIconStackOfChallenges_C_OnSelected) == 0x000001, "Wrong alignment on AthenaMapNavigableIconStackOfChallenges_C_OnSelected");
static_assert(sizeof(AthenaMapNavigableIconStackOfChallenges_C_OnSelected) == 0x000001, "Wrong size on AthenaMapNavigableIconStackOfChallenges_C_OnSelected");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_OnSelected, bUserInteraction) == 0x000000, "Member 'AthenaMapNavigableIconStackOfChallenges_C_OnSelected::bUserInteraction' has a wrong offset!");

// Function AthenaMapNavigableIconStackOfChallenges.AthenaMapNavigableIconStackOfChallenges_C.OnSetHasLocation
// 0x0001 (0x0001 - 0x0000)
struct AthenaMapNavigableIconStackOfChallenges_C_OnSetHasLocation final
{
public:
	bool                                          bHasLocation;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMapNavigableIconStackOfChallenges_C_OnSetHasLocation) == 0x000001, "Wrong alignment on AthenaMapNavigableIconStackOfChallenges_C_OnSetHasLocation");
static_assert(sizeof(AthenaMapNavigableIconStackOfChallenges_C_OnSetHasLocation) == 0x000001, "Wrong size on AthenaMapNavigableIconStackOfChallenges_C_OnSetHasLocation");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_OnSetHasLocation, bHasLocation) == 0x000000, "Member 'AthenaMapNavigableIconStackOfChallenges_C_OnSetHasLocation::bHasLocation' has a wrong offset!");

// Function AthenaMapNavigableIconStackOfChallenges.AthenaMapNavigableIconStackOfChallenges_C.OnSetIsInGame
// 0x0001 (0x0001 - 0x0000)
struct AthenaMapNavigableIconStackOfChallenges_C_OnSetIsInGame final
{
public:
	bool                                          bIsInGame;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMapNavigableIconStackOfChallenges_C_OnSetIsInGame) == 0x000001, "Wrong alignment on AthenaMapNavigableIconStackOfChallenges_C_OnSetIsInGame");
static_assert(sizeof(AthenaMapNavigableIconStackOfChallenges_C_OnSetIsInGame) == 0x000001, "Wrong size on AthenaMapNavigableIconStackOfChallenges_C_OnSetIsInGame");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_OnSetIsInGame, bIsInGame) == 0x000000, "Member 'AthenaMapNavigableIconStackOfChallenges_C_OnSetIsInGame::bIsInGame' has a wrong offset!");

// Function AthenaMapNavigableIconStackOfChallenges.AthenaMapNavigableIconStackOfChallenges_C.OnUnhovered
// 0x0001 (0x0001 - 0x0000)
struct AthenaMapNavigableIconStackOfChallenges_C_OnUnhovered final
{
public:
	bool                                          bUserInteraction;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMapNavigableIconStackOfChallenges_C_OnUnhovered) == 0x000001, "Wrong alignment on AthenaMapNavigableIconStackOfChallenges_C_OnUnhovered");
static_assert(sizeof(AthenaMapNavigableIconStackOfChallenges_C_OnUnhovered) == 0x000001, "Wrong size on AthenaMapNavigableIconStackOfChallenges_C_OnUnhovered");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_OnUnhovered, bUserInteraction) == 0x000000, "Member 'AthenaMapNavigableIconStackOfChallenges_C_OnUnhovered::bUserInteraction' has a wrong offset!");

// Function AthenaMapNavigableIconStackOfChallenges.AthenaMapNavigableIconStackOfChallenges_C.OnUnselected
// 0x0001 (0x0001 - 0x0000)
struct AthenaMapNavigableIconStackOfChallenges_C_OnUnselected final
{
public:
	bool                                          bUserInteraction;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMapNavigableIconStackOfChallenges_C_OnUnselected) == 0x000001, "Wrong alignment on AthenaMapNavigableIconStackOfChallenges_C_OnUnselected");
static_assert(sizeof(AthenaMapNavigableIconStackOfChallenges_C_OnUnselected) == 0x000001, "Wrong size on AthenaMapNavigableIconStackOfChallenges_C_OnUnselected");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_OnUnselected, bUserInteraction) == 0x000000, "Member 'AthenaMapNavigableIconStackOfChallenges_C_OnUnselected::bUserInteraction' has a wrong offset!");

// Function AthenaMapNavigableIconStackOfChallenges.AthenaMapNavigableIconStackOfChallenges_C.SetAnywhereState
// 0x0060 (0x0060 - 0x0000)
struct AthenaMapNavigableIconStackOfChallenges_C_SetAnywhereState final
{
public:
	bool                                          bIsAnytimeChallenge;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0008(0x0058)(HasGetValueTypeHash)
};
static_assert(alignof(AthenaMapNavigableIconStackOfChallenges_C_SetAnywhereState) == 0x000008, "Wrong alignment on AthenaMapNavigableIconStackOfChallenges_C_SetAnywhereState");
static_assert(sizeof(AthenaMapNavigableIconStackOfChallenges_C_SetAnywhereState) == 0x000060, "Wrong size on AthenaMapNavigableIconStackOfChallenges_C_SetAnywhereState");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_SetAnywhereState, bIsAnytimeChallenge) == 0x000000, "Member 'AthenaMapNavigableIconStackOfChallenges_C_SetAnywhereState::bIsAnytimeChallenge' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_SetAnywhereState, K2Node_MakeStruct_SlateFontInfo) == 0x000008, "Member 'AthenaMapNavigableIconStackOfChallenges_C_SetAnywhereState::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");

// Function AthenaMapNavigableIconStackOfChallenges.AthenaMapNavigableIconStackOfChallenges_C.SetMaterialState
// 0x0003 (0x0003 - 0x0000)
struct AthenaMapNavigableIconStackOfChallenges_C_SetMaterialState final
{
public:
	bool                                          Complete;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Locked;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasIconOverride;                                   // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMapNavigableIconStackOfChallenges_C_SetMaterialState) == 0x000001, "Wrong alignment on AthenaMapNavigableIconStackOfChallenges_C_SetMaterialState");
static_assert(sizeof(AthenaMapNavigableIconStackOfChallenges_C_SetMaterialState) == 0x000003, "Wrong size on AthenaMapNavigableIconStackOfChallenges_C_SetMaterialState");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_SetMaterialState, Complete) == 0x000000, "Member 'AthenaMapNavigableIconStackOfChallenges_C_SetMaterialState::Complete' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_SetMaterialState, Locked) == 0x000001, "Member 'AthenaMapNavigableIconStackOfChallenges_C_SetMaterialState::Locked' has a wrong offset!");
static_assert(offsetof(AthenaMapNavigableIconStackOfChallenges_C_SetMaterialState, HasIconOverride) == 0x000002, "Member 'AthenaMapNavigableIconStackOfChallenges_C_SetMaterialState::HasIconOverride' has a wrong offset!");

}

