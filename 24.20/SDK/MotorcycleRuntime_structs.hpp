#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MotorcycleRuntime

#include "Basic.hpp"


namespace SDK
{

// Enum MotorcycleRuntime.EFortMotorcycleAirTrickType
// NumValues: 0x0005
enum class EFortMotorcycleAirTrickType : uint8
{
	None                                     = 0,
	Default                                  = 1,
	Left                                     = 2,
	Right                                    = 3,
	EFortMotorcycleAirTrickType_MAX          = 4,
};

// Enum MotorcycleRuntime.EFortMotorcycleWheelTraceMode
// NumValues: 0x0004
enum class EFortMotorcycleWheelTraceMode : uint8
{
	None                                     = 0,
	BoxSweep                                 = 1,
	LineTrace                                = 2,
	EFortMotorcycleWheelTraceMode_MAX        = 3,
};

// ScriptStruct MotorcycleRuntime.MotorcycleWheel
// 0x003C (0x003C - 0x0000)
struct FMotorcycleWheel final
{
public:
	class FName                                   WheelSocket;                                       // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TireWidth;                                         // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpringLength;                                      // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WheelieMinSpringLength;                            // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpringStiff;                                       // 0x0014(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpringDamp;                                        // 0x0018(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PoppedTireSpringLength;                            // 0x001C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PoppedTireSpringStiff;                             // 0x0020(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PoppedTireSpringDamp;                              // 0x0024(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PowerslideSpringStiff;                             // 0x0028(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PowerslideSpringDamp;                              // 0x002C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WheelieSpringStiff;                                // 0x0030(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WheelieSpringDamp;                                 // 0x0034(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortMotorcycleWheelTraceMode                 WheelTraceMode;                                    // 0x0038(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMotorcycleWheel) == 0x000004, "Wrong alignment on FMotorcycleWheel");
static_assert(sizeof(FMotorcycleWheel) == 0x00003C, "Wrong size on FMotorcycleWheel");
static_assert(offsetof(FMotorcycleWheel, WheelSocket) == 0x000000, "Member 'FMotorcycleWheel::WheelSocket' has a wrong offset!");
static_assert(offsetof(FMotorcycleWheel, Radius) == 0x000004, "Member 'FMotorcycleWheel::Radius' has a wrong offset!");
static_assert(offsetof(FMotorcycleWheel, TireWidth) == 0x000008, "Member 'FMotorcycleWheel::TireWidth' has a wrong offset!");
static_assert(offsetof(FMotorcycleWheel, SpringLength) == 0x00000C, "Member 'FMotorcycleWheel::SpringLength' has a wrong offset!");
static_assert(offsetof(FMotorcycleWheel, WheelieMinSpringLength) == 0x000010, "Member 'FMotorcycleWheel::WheelieMinSpringLength' has a wrong offset!");
static_assert(offsetof(FMotorcycleWheel, SpringStiff) == 0x000014, "Member 'FMotorcycleWheel::SpringStiff' has a wrong offset!");
static_assert(offsetof(FMotorcycleWheel, SpringDamp) == 0x000018, "Member 'FMotorcycleWheel::SpringDamp' has a wrong offset!");
static_assert(offsetof(FMotorcycleWheel, PoppedTireSpringLength) == 0x00001C, "Member 'FMotorcycleWheel::PoppedTireSpringLength' has a wrong offset!");
static_assert(offsetof(FMotorcycleWheel, PoppedTireSpringStiff) == 0x000020, "Member 'FMotorcycleWheel::PoppedTireSpringStiff' has a wrong offset!");
static_assert(offsetof(FMotorcycleWheel, PoppedTireSpringDamp) == 0x000024, "Member 'FMotorcycleWheel::PoppedTireSpringDamp' has a wrong offset!");
static_assert(offsetof(FMotorcycleWheel, PowerslideSpringStiff) == 0x000028, "Member 'FMotorcycleWheel::PowerslideSpringStiff' has a wrong offset!");
static_assert(offsetof(FMotorcycleWheel, PowerslideSpringDamp) == 0x00002C, "Member 'FMotorcycleWheel::PowerslideSpringDamp' has a wrong offset!");
static_assert(offsetof(FMotorcycleWheel, WheelieSpringStiff) == 0x000030, "Member 'FMotorcycleWheel::WheelieSpringStiff' has a wrong offset!");
static_assert(offsetof(FMotorcycleWheel, WheelieSpringDamp) == 0x000034, "Member 'FMotorcycleWheel::WheelieSpringDamp' has a wrong offset!");
static_assert(offsetof(FMotorcycleWheel, WheelTraceMode) == 0x000038, "Member 'FMotorcycleWheel::WheelTraceMode' has a wrong offset!");

}

