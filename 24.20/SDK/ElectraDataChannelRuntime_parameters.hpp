#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ElectraDataChannelRuntime

#include "Basic.hpp"


namespace SDK::Params
{

// Function ElectraDataChannelRuntime.ElectraDataChannelPlayer.PlayFromFile
// 0x0010 (0x0010 - 0x0000)
struct ElectraDataChannelPlayer_PlayFromFile final
{
public:
	class FString                                 InFilename;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ElectraDataChannelPlayer_PlayFromFile) == 0x000008, "Wrong alignment on ElectraDataChannelPlayer_PlayFromFile");
static_assert(sizeof(ElectraDataChannelPlayer_PlayFromFile) == 0x000010, "Wrong size on ElectraDataChannelPlayer_PlayFromFile");
static_assert(offsetof(ElectraDataChannelPlayer_PlayFromFile, InFilename) == 0x000000, "Member 'ElectraDataChannelPlayer_PlayFromFile::InFilename' has a wrong offset!");

// Function ElectraDataChannelRuntime.ElectraDataChannelPlayer.PlayFromMediaPlayer
// 0x0008 (0x0008 - 0x0000)
struct ElectraDataChannelPlayer_PlayFromMediaPlayer final
{
public:
	class UMediaPlayer*                           InMediaPlayer;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ElectraDataChannelPlayer_PlayFromMediaPlayer) == 0x000008, "Wrong alignment on ElectraDataChannelPlayer_PlayFromMediaPlayer");
static_assert(sizeof(ElectraDataChannelPlayer_PlayFromMediaPlayer) == 0x000008, "Wrong size on ElectraDataChannelPlayer_PlayFromMediaPlayer");
static_assert(offsetof(ElectraDataChannelPlayer_PlayFromMediaPlayer, InMediaPlayer) == 0x000000, "Member 'ElectraDataChannelPlayer_PlayFromMediaPlayer::InMediaPlayer' has a wrong offset!");

// Function ElectraDataChannelRuntime.ElectraDataChannelPlayer.PlayFromStateStreamServer
// 0x0010 (0x0010 - 0x0000)
struct ElectraDataChannelPlayer_PlayFromStateStreamServer final
{
public:
	class FString                                 InStatePlaylistURL;                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ElectraDataChannelPlayer_PlayFromStateStreamServer) == 0x000008, "Wrong alignment on ElectraDataChannelPlayer_PlayFromStateStreamServer");
static_assert(sizeof(ElectraDataChannelPlayer_PlayFromStateStreamServer) == 0x000010, "Wrong size on ElectraDataChannelPlayer_PlayFromStateStreamServer");
static_assert(offsetof(ElectraDataChannelPlayer_PlayFromStateStreamServer, InStatePlaylistURL) == 0x000000, "Member 'ElectraDataChannelPlayer_PlayFromStateStreamServer::InStatePlaylistURL' has a wrong offset!");

// Function ElectraDataChannelRuntime.ElectraDataChannelPlayer.UseTimeFromMediaPlayer
// 0x0008 (0x0008 - 0x0000)
struct ElectraDataChannelPlayer_UseTimeFromMediaPlayer final
{
public:
	class UMediaPlayer*                           InMediaPlayer;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ElectraDataChannelPlayer_UseTimeFromMediaPlayer) == 0x000008, "Wrong alignment on ElectraDataChannelPlayer_UseTimeFromMediaPlayer");
static_assert(sizeof(ElectraDataChannelPlayer_UseTimeFromMediaPlayer) == 0x000008, "Wrong size on ElectraDataChannelPlayer_UseTimeFromMediaPlayer");
static_assert(offsetof(ElectraDataChannelPlayer_UseTimeFromMediaPlayer, InMediaPlayer) == 0x000000, "Member 'ElectraDataChannelPlayer_UseTimeFromMediaPlayer::InMediaPlayer' has a wrong offset!");

// Function ElectraDataChannelRuntime.ElectraDataChannelRecorder.RecordToFile
// 0x0010 (0x0010 - 0x0000)
struct ElectraDataChannelRecorder_RecordToFile final
{
public:
	class FString                                 InFilename;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ElectraDataChannelRecorder_RecordToFile) == 0x000008, "Wrong alignment on ElectraDataChannelRecorder_RecordToFile");
static_assert(sizeof(ElectraDataChannelRecorder_RecordToFile) == 0x000010, "Wrong size on ElectraDataChannelRecorder_RecordToFile");
static_assert(offsetof(ElectraDataChannelRecorder_RecordToFile, InFilename) == 0x000000, "Member 'ElectraDataChannelRecorder_RecordToFile::InFilename' has a wrong offset!");

// Function ElectraDataChannelRuntime.ElectraDataChannelRecorder.UseTimeFromMediaPlayer
// 0x0008 (0x0008 - 0x0000)
struct ElectraDataChannelRecorder_UseTimeFromMediaPlayer final
{
public:
	class UMediaPlayer*                           InMediaPlayer;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ElectraDataChannelRecorder_UseTimeFromMediaPlayer) == 0x000008, "Wrong alignment on ElectraDataChannelRecorder_UseTimeFromMediaPlayer");
static_assert(sizeof(ElectraDataChannelRecorder_UseTimeFromMediaPlayer) == 0x000008, "Wrong size on ElectraDataChannelRecorder_UseTimeFromMediaPlayer");
static_assert(offsetof(ElectraDataChannelRecorder_UseTimeFromMediaPlayer, InMediaPlayer) == 0x000000, "Member 'ElectraDataChannelRecorder_UseTimeFromMediaPlayer::InMediaPlayer' has a wrong offset!");

// Function ElectraDataChannelRuntime.ElectraDataChannelTarget.SetTargetAlias
// 0x0010 (0x0010 - 0x0000)
struct ElectraDataChannelTarget_SetTargetAlias final
{
public:
	class FString                                 InAlias;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ElectraDataChannelTarget_SetTargetAlias) == 0x000008, "Wrong alignment on ElectraDataChannelTarget_SetTargetAlias");
static_assert(sizeof(ElectraDataChannelTarget_SetTargetAlias) == 0x000010, "Wrong size on ElectraDataChannelTarget_SetTargetAlias");
static_assert(offsetof(ElectraDataChannelTarget_SetTargetAlias, InAlias) == 0x000000, "Member 'ElectraDataChannelTarget_SetTargetAlias::InAlias' has a wrong offset!");

// Function ElectraDataChannelRuntime.ElectraDataChannelTarget.GetTargetAlias
// 0x0010 (0x0010 - 0x0000)
struct ElectraDataChannelTarget_GetTargetAlias final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ElectraDataChannelTarget_GetTargetAlias) == 0x000008, "Wrong alignment on ElectraDataChannelTarget_GetTargetAlias");
static_assert(sizeof(ElectraDataChannelTarget_GetTargetAlias) == 0x000010, "Wrong size on ElectraDataChannelTarget_GetTargetAlias");
static_assert(offsetof(ElectraDataChannelTarget_GetTargetAlias, ReturnValue) == 0x000000, "Member 'ElectraDataChannelTarget_GetTargetAlias::ReturnValue' has a wrong offset!");

}

