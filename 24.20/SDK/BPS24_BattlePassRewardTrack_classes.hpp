#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPS24_BattlePassRewardTrack

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BattlePassBase_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BPS24_BattlePassRewardTrack.BPS24_BattlePassRewardTrack_C
// 0x0088 (0x04C0 - 0x0438)
class UBPS24_BattlePassRewardTrack_C final : public UFortBattlePassRewardTrack
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0438(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBPS24_BattlePassPrerequisiteHeader_C*  BPS23_BattlePassPrerequisiteHeader;                // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBPS24_BattlePassPrerequisiteHeader_C*  BPS23_BattlePassPrerequisiteHeader_31;             // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBPS24_BattlePassTile_C*                BPS23_BattlePassTile;                              // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBPS24_BattlePassTile_C*                BPS23_BattlePassTile_1;                            // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBPS24_BattlePassTile_C*                BPS23_BattlePassTile_2;                            // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBPS24_BattlePassTile_C*                BPS23_BattlePassTile_3;                            // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBPS24_BattlePassTile_C*                BPS23_BattlePassTile_4;                            // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBPS24_BattlePassTile_C*                BPS23_BattlePassTile_5;                            // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBPS24_BattlePassTile_C*                BPS23_BattlePassTile_6;                            // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBPS24_BattlePassTile_C*                BPS23_BattlePassTile_7;                            // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBPS24_BattlePassTile_C*                BPS23_BattlePassTile_8;                            // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer_ExtraRoom;                                  // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer_ExtraRoom_Bottom;                           // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer_NoHeader;                                   // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_0;                                     // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          HasHeader;                                         // 0x04B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_BPS24_BattlePassRewardTrack(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPS24_BattlePassRewardTrack_C">();
	}
	static class UBPS24_BattlePassRewardTrack_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPS24_BattlePassRewardTrack_C>();
	}
};
static_assert(alignof(UBPS24_BattlePassRewardTrack_C) == 0x000008, "Wrong alignment on UBPS24_BattlePassRewardTrack_C");
static_assert(sizeof(UBPS24_BattlePassRewardTrack_C) == 0x0004C0, "Wrong size on UBPS24_BattlePassRewardTrack_C");
static_assert(offsetof(UBPS24_BattlePassRewardTrack_C, UberGraphFrame) == 0x000438, "Member 'UBPS24_BattlePassRewardTrack_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPS24_BattlePassRewardTrack_C, BPS23_BattlePassPrerequisiteHeader) == 0x000440, "Member 'UBPS24_BattlePassRewardTrack_C::BPS23_BattlePassPrerequisiteHeader' has a wrong offset!");
static_assert(offsetof(UBPS24_BattlePassRewardTrack_C, BPS23_BattlePassPrerequisiteHeader_31) == 0x000448, "Member 'UBPS24_BattlePassRewardTrack_C::BPS23_BattlePassPrerequisiteHeader_31' has a wrong offset!");
static_assert(offsetof(UBPS24_BattlePassRewardTrack_C, BPS23_BattlePassTile) == 0x000450, "Member 'UBPS24_BattlePassRewardTrack_C::BPS23_BattlePassTile' has a wrong offset!");
static_assert(offsetof(UBPS24_BattlePassRewardTrack_C, BPS23_BattlePassTile_1) == 0x000458, "Member 'UBPS24_BattlePassRewardTrack_C::BPS23_BattlePassTile_1' has a wrong offset!");
static_assert(offsetof(UBPS24_BattlePassRewardTrack_C, BPS23_BattlePassTile_2) == 0x000460, "Member 'UBPS24_BattlePassRewardTrack_C::BPS23_BattlePassTile_2' has a wrong offset!");
static_assert(offsetof(UBPS24_BattlePassRewardTrack_C, BPS23_BattlePassTile_3) == 0x000468, "Member 'UBPS24_BattlePassRewardTrack_C::BPS23_BattlePassTile_3' has a wrong offset!");
static_assert(offsetof(UBPS24_BattlePassRewardTrack_C, BPS23_BattlePassTile_4) == 0x000470, "Member 'UBPS24_BattlePassRewardTrack_C::BPS23_BattlePassTile_4' has a wrong offset!");
static_assert(offsetof(UBPS24_BattlePassRewardTrack_C, BPS23_BattlePassTile_5) == 0x000478, "Member 'UBPS24_BattlePassRewardTrack_C::BPS23_BattlePassTile_5' has a wrong offset!");
static_assert(offsetof(UBPS24_BattlePassRewardTrack_C, BPS23_BattlePassTile_6) == 0x000480, "Member 'UBPS24_BattlePassRewardTrack_C::BPS23_BattlePassTile_6' has a wrong offset!");
static_assert(offsetof(UBPS24_BattlePassRewardTrack_C, BPS23_BattlePassTile_7) == 0x000488, "Member 'UBPS24_BattlePassRewardTrack_C::BPS23_BattlePassTile_7' has a wrong offset!");
static_assert(offsetof(UBPS24_BattlePassRewardTrack_C, BPS23_BattlePassTile_8) == 0x000490, "Member 'UBPS24_BattlePassRewardTrack_C::BPS23_BattlePassTile_8' has a wrong offset!");
static_assert(offsetof(UBPS24_BattlePassRewardTrack_C, Spacer_ExtraRoom) == 0x000498, "Member 'UBPS24_BattlePassRewardTrack_C::Spacer_ExtraRoom' has a wrong offset!");
static_assert(offsetof(UBPS24_BattlePassRewardTrack_C, Spacer_ExtraRoom_Bottom) == 0x0004A0, "Member 'UBPS24_BattlePassRewardTrack_C::Spacer_ExtraRoom_Bottom' has a wrong offset!");
static_assert(offsetof(UBPS24_BattlePassRewardTrack_C, Spacer_NoHeader) == 0x0004A8, "Member 'UBPS24_BattlePassRewardTrack_C::Spacer_NoHeader' has a wrong offset!");
static_assert(offsetof(UBPS24_BattlePassRewardTrack_C, VerticalBox_0) == 0x0004B0, "Member 'UBPS24_BattlePassRewardTrack_C::VerticalBox_0' has a wrong offset!");
static_assert(offsetof(UBPS24_BattlePassRewardTrack_C, HasHeader) == 0x0004B8, "Member 'UBPS24_BattlePassRewardTrack_C::HasHeader' has a wrong offset!");

}

