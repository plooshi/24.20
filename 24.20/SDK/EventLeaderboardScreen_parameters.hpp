#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EventLeaderboardScreen

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "FortniteUI_structs.hpp"


namespace SDK::Params
{

// Function EventLeaderboardScreen.EventLeaderboardScreen_C.BndEvt__Button_Back2_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct EventLeaderboardScreen_C_BndEvt__Button_Back2_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButtonLegacy*                    Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EventLeaderboardScreen_C_BndEvt__Button_Back2_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on EventLeaderboardScreen_C_BndEvt__Button_Back2_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(EventLeaderboardScreen_C_BndEvt__Button_Back2_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on EventLeaderboardScreen_C_BndEvt__Button_Back2_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(EventLeaderboardScreen_C_BndEvt__Button_Back2_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'EventLeaderboardScreen_C_BndEvt__Button_Back2_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function EventLeaderboardScreen.EventLeaderboardScreen_C.BndEvt__CloseButton_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct EventLeaderboardScreen_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButtonLegacy*                    Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EventLeaderboardScreen_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on EventLeaderboardScreen_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(EventLeaderboardScreen_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on EventLeaderboardScreen_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(EventLeaderboardScreen_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'EventLeaderboardScreen_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function EventLeaderboardScreen.EventLeaderboardScreen_C.BndEvt__LiveGames_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct EventLeaderboardScreen_C_BndEvt__LiveGames_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButtonLegacy*                    Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EventLeaderboardScreen_C_BndEvt__LiveGames_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on EventLeaderboardScreen_C_BndEvt__LiveGames_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(EventLeaderboardScreen_C_BndEvt__LiveGames_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on EventLeaderboardScreen_C_BndEvt__LiveGames_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(EventLeaderboardScreen_C_BndEvt__LiveGames_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'EventLeaderboardScreen_C_BndEvt__LiveGames_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function EventLeaderboardScreen.EventLeaderboardScreen_C.EventColorize
// 0x01D0 (0x01D0 - 0x0000)
struct EventLeaderboardScreen_C_EventColorize final
{
public:
	struct FFortTournamentDisplayInfo             TournamentDisplayInfo;                             // 0x0000(0x01D0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(EventLeaderboardScreen_C_EventColorize) == 0x000008, "Wrong alignment on EventLeaderboardScreen_C_EventColorize");
static_assert(sizeof(EventLeaderboardScreen_C_EventColorize) == 0x0001D0, "Wrong size on EventLeaderboardScreen_C_EventColorize");
static_assert(offsetof(EventLeaderboardScreen_C_EventColorize, TournamentDisplayInfo) == 0x000000, "Member 'EventLeaderboardScreen_C_EventColorize::TournamentDisplayInfo' has a wrong offset!");

// Function EventLeaderboardScreen.EventLeaderboardScreen_C.ExecuteUbergraph_EventLeaderboardScreen
// 0x02C0 (0x02C0 - 0x0000)
struct EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortEventLeaderboardEntryData*   K2Node_Event_EntryData;                            // 0x0010(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonLegacy*                    K2Node_CustomEvent_Button;                         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFortEventLeaderboardEntryData*         CallFunc_GetMyLeaderboardEntry_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonLegacy*                    K2Node_ComponentBoundEvent_Button_2;               // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UListView*                              CallFunc_GetListView_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ULeaderboardListViewWrapper_C*          K2Node_DynamicCast_AsLeaderboard_List_View_Wrapper; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Item;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortEventLeaderboardEntryData*         K2Node_DynamicCast_AsFort_Event_Leaderboard_Entry_Data; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULeaderboardTab_C*                      K2Node_DynamicCast_AsLeaderboard_Tab;              // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsVisible;                           // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonLegacy*                    K2Node_ComponentBoundEvent_Button_1;               // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEventsSimpleButton_C*                  K2Node_DynamicCast_AsEvents_Simple_Button;         // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Item)>          K2Node_CreateDelegate_OutputDelegate;              // 0x0094(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonLegacy*                    K2Node_Event_TabButton;                            // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_TabText;                              // 0x00A8(0x0018)(ConstParm)
	class UEventsSimpleTab_C*                     K2Node_DynamicCast_AsEvents_Simple_Tab;            // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UCommonButtonLegacy* Button)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00CC(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFortTournamentDisplayInfo             K2Node_CustomEvent_TournamentDisplayInfo;          // 0x00D8(0x01D0)()
	bool                                          K2Node_Event_bShowDetailsPanel;                    // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AA[0x6];                                      // 0x02AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonLegacy*                    K2Node_ComponentBoundEvent_Button;                 // 0x02B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ELeaderboardDisplayType                       K2Node_Event_NewDisplayType;                       // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen) == 0x000008, "Wrong alignment on EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen");
static_assert(sizeof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen) == 0x0002C0, "Wrong size on EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, EntryPoint) == 0x000000, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, Temp_byte_Variable) == 0x000004, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, Temp_byte_Variable_1) == 0x000005, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, Temp_bool_Variable) == 0x000006, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, Temp_byte_Variable_2) == 0x000007, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, Temp_byte_Variable_3) == 0x000008, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, K2Node_Event_EntryData) == 0x000010, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::K2Node_Event_EntryData' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, Temp_bool_Variable_1) == 0x000018, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, K2Node_CustomEvent_Button) == 0x000020, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::K2Node_CustomEvent_Button' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, CallFunc_GetMyLeaderboardEntry_ReturnValue) == 0x000028, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::CallFunc_GetMyLeaderboardEntry_ReturnValue' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, K2Node_ComponentBoundEvent_Button_2) == 0x000030, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, CallFunc_GetListView_ReturnValue) == 0x000038, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::CallFunc_GetListView_ReturnValue' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, K2Node_DynamicCast_AsLeaderboard_List_View_Wrapper) == 0x000040, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::K2Node_DynamicCast_AsLeaderboard_List_View_Wrapper' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, K2Node_CustomEvent_Item) == 0x000050, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::K2Node_CustomEvent_Item' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, K2Node_DynamicCast_AsFort_Event_Leaderboard_Entry_Data) == 0x000058, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::K2Node_DynamicCast_AsFort_Event_Leaderboard_Entry_Data' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, K2Node_DynamicCast_AsLeaderboard_Tab) == 0x000068, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::K2Node_DynamicCast_AsLeaderboard_Tab' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, K2Node_Event_bIsVisible) == 0x000071, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::K2Node_Event_bIsVisible' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, K2Node_ComponentBoundEvent_Button_1) == 0x000078, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, K2Node_Select_Default) == 0x000080, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, K2Node_DynamicCast_AsEvents_Simple_Button) == 0x000088, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::K2Node_DynamicCast_AsEvents_Simple_Button' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, K2Node_DynamicCast_bSuccess_3) == 0x000090, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, K2Node_CreateDelegate_OutputDelegate) == 0x000094, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, K2Node_Event_TabButton) == 0x0000A0, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::K2Node_Event_TabButton' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, K2Node_Event_TabText) == 0x0000A8, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::K2Node_Event_TabText' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, K2Node_DynamicCast_AsEvents_Simple_Tab) == 0x0000C0, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::K2Node_DynamicCast_AsEvents_Simple_Tab' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, K2Node_DynamicCast_bSuccess_4) == 0x0000C8, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000CC, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, K2Node_CustomEvent_TournamentDisplayInfo) == 0x0000D8, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::K2Node_CustomEvent_TournamentDisplayInfo' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, K2Node_Event_bShowDetailsPanel) == 0x0002A8, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::K2Node_Event_bShowDetailsPanel' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, K2Node_Select_Default_1) == 0x0002A9, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, K2Node_ComponentBoundEvent_Button) == 0x0002B0, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen, K2Node_Event_NewDisplayType) == 0x0002B8, "Member 'EventLeaderboardScreen_C_ExecuteUbergraph_EventLeaderboardScreen::K2Node_Event_NewDisplayType' has a wrong offset!");

// Function EventLeaderboardScreen.EventLeaderboardScreen_C.Init
// 0x0058 (0x0058 - 0x0000)
struct EventLeaderboardScreen_C_Init final
{
public:
	class FString                                 EventWindowId;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 TournamentSeriesId;                                // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSeriesPointLeaderboardIds_OutEventId;  // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSeriesPointLeaderboardIds_OutEventWindowId; // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSeriesPointLeaderboardAvailable_ReturnValue; // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ULeaderboardTab_C*                      K2Node_DynamicCast_AsLeaderboard_Tab;              // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EventLeaderboardScreen_C_Init) == 0x000008, "Wrong alignment on EventLeaderboardScreen_C_Init");
static_assert(sizeof(EventLeaderboardScreen_C_Init) == 0x000058, "Wrong size on EventLeaderboardScreen_C_Init");
static_assert(offsetof(EventLeaderboardScreen_C_Init, EventWindowId) == 0x000000, "Member 'EventLeaderboardScreen_C_Init::EventWindowId' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_Init, TournamentSeriesId) == 0x000010, "Member 'EventLeaderboardScreen_C_Init::TournamentSeriesId' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_Init, CallFunc_GetSeriesPointLeaderboardIds_OutEventId) == 0x000020, "Member 'EventLeaderboardScreen_C_Init::CallFunc_GetSeriesPointLeaderboardIds_OutEventId' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_Init, CallFunc_GetSeriesPointLeaderboardIds_OutEventWindowId) == 0x000030, "Member 'EventLeaderboardScreen_C_Init::CallFunc_GetSeriesPointLeaderboardIds_OutEventWindowId' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_Init, CallFunc_IsEmpty_ReturnValue) == 0x000040, "Member 'EventLeaderboardScreen_C_Init::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_Init, CallFunc_IsSeriesPointLeaderboardAvailable_ReturnValue) == 0x000041, "Member 'EventLeaderboardScreen_C_Init::CallFunc_IsSeriesPointLeaderboardAvailable_ReturnValue' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_Init, CallFunc_BooleanAND_ReturnValue) == 0x000042, "Member 'EventLeaderboardScreen_C_Init::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_Init, CallFunc_GetVisibility_ReturnValue) == 0x000043, "Member 'EventLeaderboardScreen_C_Init::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_Init, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000044, "Member 'EventLeaderboardScreen_C_Init::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_Init, K2Node_DynamicCast_AsLeaderboard_Tab) == 0x000048, "Member 'EventLeaderboardScreen_C_Init::K2Node_DynamicCast_AsLeaderboard_Tab' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_Init, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'EventLeaderboardScreen_C_Init::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function EventLeaderboardScreen.EventLeaderboardScreen_C.InitializeTabButton
// 0x0020 (0x0020 - 0x0000)
struct EventLeaderboardScreen_C_InitializeTabButton final
{
public:
	class UCommonButtonLegacy*                    TabButton;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   TabText;                                           // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(EventLeaderboardScreen_C_InitializeTabButton) == 0x000008, "Wrong alignment on EventLeaderboardScreen_C_InitializeTabButton");
static_assert(sizeof(EventLeaderboardScreen_C_InitializeTabButton) == 0x000020, "Wrong size on EventLeaderboardScreen_C_InitializeTabButton");
static_assert(offsetof(EventLeaderboardScreen_C_InitializeTabButton, TabButton) == 0x000000, "Member 'EventLeaderboardScreen_C_InitializeTabButton::TabButton' has a wrong offset!");
static_assert(offsetof(EventLeaderboardScreen_C_InitializeTabButton, TabText) == 0x000008, "Member 'EventLeaderboardScreen_C_InitializeTabButton::TabText' has a wrong offset!");

// Function EventLeaderboardScreen.EventLeaderboardScreen_C.Item Double-Clicked
// 0x0008 (0x0008 - 0x0000)
struct EventLeaderboardScreen_C_Item_Double_Clicked final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EventLeaderboardScreen_C_Item_Double_Clicked) == 0x000008, "Wrong alignment on EventLeaderboardScreen_C_Item_Double_Clicked");
static_assert(sizeof(EventLeaderboardScreen_C_Item_Double_Clicked) == 0x000008, "Wrong size on EventLeaderboardScreen_C_Item_Double_Clicked");
static_assert(offsetof(EventLeaderboardScreen_C_Item_Double_Clicked, Item) == 0x000000, "Member 'EventLeaderboardScreen_C_Item_Double_Clicked::Item' has a wrong offset!");

// Function EventLeaderboardScreen.EventLeaderboardScreen_C.OnDetailsPanelUpdate
// 0x0001 (0x0001 - 0x0000)
struct EventLeaderboardScreen_C_OnDetailsPanelUpdate final
{
public:
	bool                                          bShowDetailsPanel;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EventLeaderboardScreen_C_OnDetailsPanelUpdate) == 0x000001, "Wrong alignment on EventLeaderboardScreen_C_OnDetailsPanelUpdate");
static_assert(sizeof(EventLeaderboardScreen_C_OnDetailsPanelUpdate) == 0x000001, "Wrong size on EventLeaderboardScreen_C_OnDetailsPanelUpdate");
static_assert(offsetof(EventLeaderboardScreen_C_OnDetailsPanelUpdate, bShowDetailsPanel) == 0x000000, "Member 'EventLeaderboardScreen_C_OnDetailsPanelUpdate::bShowDetailsPanel' has a wrong offset!");

// Function EventLeaderboardScreen.EventLeaderboardScreen_C.OnLeaderboardDisplayTypeChanged
// 0x0001 (0x0001 - 0x0000)
struct EventLeaderboardScreen_C_OnLeaderboardDisplayTypeChanged final
{
public:
	ELeaderboardDisplayType                       NewDisplayType;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EventLeaderboardScreen_C_OnLeaderboardDisplayTypeChanged) == 0x000001, "Wrong alignment on EventLeaderboardScreen_C_OnLeaderboardDisplayTypeChanged");
static_assert(sizeof(EventLeaderboardScreen_C_OnLeaderboardDisplayTypeChanged) == 0x000001, "Wrong size on EventLeaderboardScreen_C_OnLeaderboardDisplayTypeChanged");
static_assert(offsetof(EventLeaderboardScreen_C_OnLeaderboardDisplayTypeChanged, NewDisplayType) == 0x000000, "Member 'EventLeaderboardScreen_C_OnLeaderboardDisplayTypeChanged::NewDisplayType' has a wrong offset!");

// Function EventLeaderboardScreen.EventLeaderboardScreen_C.OnLeaderboardEntrySelected
// 0x0008 (0x0008 - 0x0000)
struct EventLeaderboardScreen_C_OnLeaderboardEntrySelected final
{
public:
	const class UFortEventLeaderboardEntryData*   EntryData;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EventLeaderboardScreen_C_OnLeaderboardEntrySelected) == 0x000008, "Wrong alignment on EventLeaderboardScreen_C_OnLeaderboardEntrySelected");
static_assert(sizeof(EventLeaderboardScreen_C_OnLeaderboardEntrySelected) == 0x000008, "Wrong size on EventLeaderboardScreen_C_OnLeaderboardEntrySelected");
static_assert(offsetof(EventLeaderboardScreen_C_OnLeaderboardEntrySelected, EntryData) == 0x000000, "Member 'EventLeaderboardScreen_C_OnLeaderboardEntrySelected::EntryData' has a wrong offset!");

// Function EventLeaderboardScreen.EventLeaderboardScreen_C.OnTabVisibilityChange
// 0x0001 (0x0001 - 0x0000)
struct EventLeaderboardScreen_C_OnTabVisibilityChange final
{
public:
	bool                                          bIsVisible;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EventLeaderboardScreen_C_OnTabVisibilityChange) == 0x000001, "Wrong alignment on EventLeaderboardScreen_C_OnTabVisibilityChange");
static_assert(sizeof(EventLeaderboardScreen_C_OnTabVisibilityChange) == 0x000001, "Wrong size on EventLeaderboardScreen_C_OnTabVisibilityChange");
static_assert(offsetof(EventLeaderboardScreen_C_OnTabVisibilityChange, bIsVisible) == 0x000000, "Member 'EventLeaderboardScreen_C_OnTabVisibilityChange::bIsVisible' has a wrong offset!");

// Function EventLeaderboardScreen.EventLeaderboardScreen_C.ShowMyStats
// 0x0008 (0x0008 - 0x0000)
struct EventLeaderboardScreen_C_ShowMyStats final
{
public:
	class UCommonButtonLegacy*                    Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EventLeaderboardScreen_C_ShowMyStats) == 0x000008, "Wrong alignment on EventLeaderboardScreen_C_ShowMyStats");
static_assert(sizeof(EventLeaderboardScreen_C_ShowMyStats) == 0x000008, "Wrong size on EventLeaderboardScreen_C_ShowMyStats");
static_assert(offsetof(EventLeaderboardScreen_C_ShowMyStats, Button) == 0x000000, "Member 'EventLeaderboardScreen_C_ShowMyStats::Button' has a wrong offset!");

}

