#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProgressiveItemScreen

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ProgressiveItemScreen.ProgressiveItemScreen_C.BlockScreenContent
// 0x0020 (0x0020 - 0x0000)
struct ProgressiveItemScreen_C_BlockScreenContent final
{
public:
	bool                                          bBlockScreen;                                      // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ContentBlockedText;                                // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(ProgressiveItemScreen_C_BlockScreenContent) == 0x000008, "Wrong alignment on ProgressiveItemScreen_C_BlockScreenContent");
static_assert(sizeof(ProgressiveItemScreen_C_BlockScreenContent) == 0x000020, "Wrong size on ProgressiveItemScreen_C_BlockScreenContent");
static_assert(offsetof(ProgressiveItemScreen_C_BlockScreenContent, bBlockScreen) == 0x000000, "Member 'ProgressiveItemScreen_C_BlockScreenContent::bBlockScreen' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_BlockScreenContent, ContentBlockedText) == 0x000008, "Member 'ProgressiveItemScreen_C_BlockScreenContent::ContentBlockedText' has a wrong offset!");

// Function ProgressiveItemScreen.ProgressiveItemScreen_C.BP_OnContainerTabVisibilityUpdated
// 0x0008 (0x0008 - 0x0000)
struct ProgressiveItemScreen_C_BP_OnContainerTabVisibilityUpdated final
{
public:
	bool                                          bTabsVisible;                                      // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpacingAdjustmentForTabs;                          // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressiveItemScreen_C_BP_OnContainerTabVisibilityUpdated) == 0x000004, "Wrong alignment on ProgressiveItemScreen_C_BP_OnContainerTabVisibilityUpdated");
static_assert(sizeof(ProgressiveItemScreen_C_BP_OnContainerTabVisibilityUpdated) == 0x000008, "Wrong size on ProgressiveItemScreen_C_BP_OnContainerTabVisibilityUpdated");
static_assert(offsetof(ProgressiveItemScreen_C_BP_OnContainerTabVisibilityUpdated, bTabsVisible) == 0x000000, "Member 'ProgressiveItemScreen_C_BP_OnContainerTabVisibilityUpdated::bTabsVisible' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_BP_OnContainerTabVisibilityUpdated, SpacingAdjustmentForTabs) == 0x000004, "Member 'ProgressiveItemScreen_C_BP_OnContainerTabVisibilityUpdated::SpacingAdjustmentForTabs' has a wrong offset!");

// Function ProgressiveItemScreen.ProgressiveItemScreen_C.ContentBlocking
// 0x0028 (0x0028 - 0x0000)
struct ProgressiveItemScreen_C_ContentBlocking final
{
public:
	bool                                          isContentBlocked;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ContentBlockedText;                                // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressiveItemScreen_C_ContentBlocking) == 0x000008, "Wrong alignment on ProgressiveItemScreen_C_ContentBlocking");
static_assert(sizeof(ProgressiveItemScreen_C_ContentBlocking) == 0x000028, "Wrong size on ProgressiveItemScreen_C_ContentBlocking");
static_assert(offsetof(ProgressiveItemScreen_C_ContentBlocking, isContentBlocked) == 0x000000, "Member 'ProgressiveItemScreen_C_ContentBlocking::isContentBlocked' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ContentBlocking, ContentBlockedText) == 0x000008, "Member 'ProgressiveItemScreen_C_ContentBlocking::ContentBlockedText' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ContentBlocking, Temp_bool_Variable) == 0x000020, "Member 'ProgressiveItemScreen_C_ContentBlocking::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ContentBlocking, Temp_byte_Variable) == 0x000021, "Member 'ProgressiveItemScreen_C_ContentBlocking::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ContentBlocking, Temp_byte_Variable_1) == 0x000022, "Member 'ProgressiveItemScreen_C_ContentBlocking::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ContentBlocking, Temp_bool_Variable_1) == 0x000023, "Member 'ProgressiveItemScreen_C_ContentBlocking::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ContentBlocking, K2Node_Select_Default) == 0x000024, "Member 'ProgressiveItemScreen_C_ContentBlocking::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ContentBlocking, Temp_byte_Variable_2) == 0x000025, "Member 'ProgressiveItemScreen_C_ContentBlocking::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ContentBlocking, Temp_byte_Variable_3) == 0x000026, "Member 'ProgressiveItemScreen_C_ContentBlocking::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ContentBlocking, K2Node_Select_Default_1) == 0x000027, "Member 'ProgressiveItemScreen_C_ContentBlocking::K2Node_Select_Default_1' has a wrong offset!");

// Function ProgressiveItemScreen.ProgressiveItemScreen_C.ExecuteUbergraph_ProgressiveItemScreen
// 0x00E0 (0x00E0 - 0x0000)
struct ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_ErrorStateText;                       // 0x0048(0x0018)(ConstParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInIsSoloScreen;                      // 0x0068(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSubscribed;                          // 0x0069(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0070(0x0018)()
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bTabsVisible;                         // 0x0089(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_SpacingAdjustmentForTabs;             // 0x008C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_RowDisplayName;                       // 0x0090(0x0018)(ConstParm)
	class UWBP_UIKit_ButtonCTA_Base_C*            K2Node_DynamicCast_AsWBP_UIKit_Button_CTA_Base;    // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B3[0x5];                                       // 0x00B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_UIKit_ButtonCTA_Base_C*            K2Node_DynamicCast_AsWBP_UIKit_Button_CTA_Base_1;  // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bBlockScreen;                         // 0x00C2(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C3[0x5];                                       // 0x00C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_ContentBlockedText;                   // 0x00C8(0x0018)(ConstParm)
};
static_assert(alignof(ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen) == 0x000008, "Wrong alignment on ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen");
static_assert(sizeof(ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen) == 0x0000E0, "Wrong size on ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen");
static_assert(offsetof(ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen, EntryPoint) == 0x000000, "Member 'ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen, Temp_byte_Variable) == 0x000004, "Member 'ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen, Temp_byte_Variable_1) == 0x000005, "Member 'ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen, Temp_bool_Variable) == 0x000006, "Member 'ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen, Temp_text_Variable) == 0x000008, "Member 'ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen, Temp_text_Variable_1) == 0x000020, "Member 'ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen, Temp_bool_Variable_1) == 0x000038, "Member 'ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen, Temp_byte_Variable_2) == 0x000039, "Member 'ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen, Temp_byte_Variable_3) == 0x00003A, "Member 'ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen, CallFunc_PlayAnimation_ReturnValue) == 0x000040, "Member 'ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen, K2Node_Event_ErrorStateText) == 0x000048, "Member 'ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen::K2Node_Event_ErrorStateText' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen, CallFunc_PlayAnimation_ReturnValue_1) == 0x000060, "Member 'ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen, K2Node_Event_bInIsSoloScreen) == 0x000068, "Member 'ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen::K2Node_Event_bInIsSoloScreen' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen, K2Node_Event_bSubscribed) == 0x000069, "Member 'ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen::K2Node_Event_bSubscribed' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen, K2Node_Select_Default) == 0x000070, "Member 'ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen, K2Node_Select_Default_1) == 0x000088, "Member 'ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen, K2Node_Event_bTabsVisible) == 0x000089, "Member 'ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen::K2Node_Event_bTabsVisible' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen, K2Node_Event_SpacingAdjustmentForTabs) == 0x00008C, "Member 'ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen::K2Node_Event_SpacingAdjustmentForTabs' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen, K2Node_Event_RowDisplayName) == 0x000090, "Member 'ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen::K2Node_Event_RowDisplayName' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen, K2Node_DynamicCast_AsWBP_UIKit_Button_CTA_Base) == 0x0000A8, "Member 'ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen::K2Node_DynamicCast_AsWBP_UIKit_Button_CTA_Base' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen, CallFunc_TextIsEmpty_ReturnValue) == 0x0000B1, "Member 'ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen, Temp_bool_Variable_2) == 0x0000B2, "Member 'ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen, K2Node_DynamicCast_AsWBP_UIKit_Button_CTA_Base_1) == 0x0000B8, "Member 'ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen::K2Node_DynamicCast_AsWBP_UIKit_Button_CTA_Base_1' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen, K2Node_DynamicCast_bSuccess_1) == 0x0000C0, "Member 'ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen, K2Node_Select_Default_2) == 0x0000C1, "Member 'ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen, K2Node_Event_bBlockScreen) == 0x0000C2, "Member 'ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen::K2Node_Event_bBlockScreen' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen, K2Node_Event_ContentBlockedText) == 0x0000C8, "Member 'ProgressiveItemScreen_C_ExecuteUbergraph_ProgressiveItemScreen::K2Node_Event_ContentBlockedText' has a wrong offset!");

// Function ProgressiveItemScreen.ProgressiveItemScreen_C.Navigate Right from Items List
// 0x0010 (0x0010 - 0x0000)
struct ProgressiveItemScreen_C_Navigate_Right_from_Items_List final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressiveItemScreen_C_Navigate_Right_from_Items_List) == 0x000008, "Wrong alignment on ProgressiveItemScreen_C_Navigate_Right_from_Items_List");
static_assert(sizeof(ProgressiveItemScreen_C_Navigate_Right_from_Items_List) == 0x000010, "Wrong size on ProgressiveItemScreen_C_Navigate_Right_from_Items_List");
static_assert(offsetof(ProgressiveItemScreen_C_Navigate_Right_from_Items_List, Navigation_0) == 0x000000, "Member 'ProgressiveItemScreen_C_Navigate_Right_from_Items_List::Navigation_0' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_Navigate_Right_from_Items_List, ReturnValue) == 0x000008, "Member 'ProgressiveItemScreen_C_Navigate_Right_from_Items_List::ReturnValue' has a wrong offset!");

// Function ProgressiveItemScreen.ProgressiveItemScreen_C.OnErrorStateTextUpdated
// 0x0018 (0x0018 - 0x0000)
struct ProgressiveItemScreen_C_OnErrorStateTextUpdated final
{
public:
	class FText                                   ErrorStateText;                                    // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(ProgressiveItemScreen_C_OnErrorStateTextUpdated) == 0x000008, "Wrong alignment on ProgressiveItemScreen_C_OnErrorStateTextUpdated");
static_assert(sizeof(ProgressiveItemScreen_C_OnErrorStateTextUpdated) == 0x000018, "Wrong size on ProgressiveItemScreen_C_OnErrorStateTextUpdated");
static_assert(offsetof(ProgressiveItemScreen_C_OnErrorStateTextUpdated, ErrorStateText) == 0x000000, "Member 'ProgressiveItemScreen_C_OnErrorStateTextUpdated::ErrorStateText' has a wrong offset!");

// Function ProgressiveItemScreen.ProgressiveItemScreen_C.OnPreviewActionButtonUpdated
// 0x0018 (0x0018 - 0x0000)
struct ProgressiveItemScreen_C_OnPreviewActionButtonUpdated final
{
public:
	class FText                                   RowDisplayName;                                    // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(ProgressiveItemScreen_C_OnPreviewActionButtonUpdated) == 0x000008, "Wrong alignment on ProgressiveItemScreen_C_OnPreviewActionButtonUpdated");
static_assert(sizeof(ProgressiveItemScreen_C_OnPreviewActionButtonUpdated) == 0x000018, "Wrong size on ProgressiveItemScreen_C_OnPreviewActionButtonUpdated");
static_assert(offsetof(ProgressiveItemScreen_C_OnPreviewActionButtonUpdated, RowDisplayName) == 0x000000, "Member 'ProgressiveItemScreen_C_OnPreviewActionButtonUpdated::RowDisplayName' has a wrong offset!");

// Function ProgressiveItemScreen.ProgressiveItemScreen_C.OnSetIsSoloScreen
// 0x0001 (0x0001 - 0x0000)
struct ProgressiveItemScreen_C_OnSetIsSoloScreen final
{
public:
	bool                                          bInIsSoloScreen;                                   // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressiveItemScreen_C_OnSetIsSoloScreen) == 0x000001, "Wrong alignment on ProgressiveItemScreen_C_OnSetIsSoloScreen");
static_assert(sizeof(ProgressiveItemScreen_C_OnSetIsSoloScreen) == 0x000001, "Wrong size on ProgressiveItemScreen_C_OnSetIsSoloScreen");
static_assert(offsetof(ProgressiveItemScreen_C_OnSetIsSoloScreen, bInIsSoloScreen) == 0x000000, "Member 'ProgressiveItemScreen_C_OnSetIsSoloScreen::bInIsSoloScreen' has a wrong offset!");

// Function ProgressiveItemScreen.ProgressiveItemScreen_C.OnUpdateSubscriptionState
// 0x0001 (0x0001 - 0x0000)
struct ProgressiveItemScreen_C_OnUpdateSubscriptionState final
{
public:
	bool                                          bSubscribed;                                       // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressiveItemScreen_C_OnUpdateSubscriptionState) == 0x000001, "Wrong alignment on ProgressiveItemScreen_C_OnUpdateSubscriptionState");
static_assert(sizeof(ProgressiveItemScreen_C_OnUpdateSubscriptionState) == 0x000001, "Wrong size on ProgressiveItemScreen_C_OnUpdateSubscriptionState");
static_assert(offsetof(ProgressiveItemScreen_C_OnUpdateSubscriptionState, bSubscribed) == 0x000000, "Member 'ProgressiveItemScreen_C_OnUpdateSubscriptionState::bSubscribed' has a wrong offset!");

// Function ProgressiveItemScreen.ProgressiveItemScreen_C.UpdateLayoutForTabs
// 0x0088 (0x0088 - 0x0000)
struct ProgressiveItemScreen_C_UpdateLayoutForTabs final
{
public:
	bool                                          bTabsVisible;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Spacing_Adjustment_For_Tabs;                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_1;          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_MakeStruct_Top_ImplicitCast;                // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Top_ImplicitCast_1;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressiveItemScreen_C_UpdateLayoutForTabs) == 0x000008, "Wrong alignment on ProgressiveItemScreen_C_UpdateLayoutForTabs");
static_assert(sizeof(ProgressiveItemScreen_C_UpdateLayoutForTabs) == 0x000088, "Wrong size on ProgressiveItemScreen_C_UpdateLayoutForTabs");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateLayoutForTabs, bTabsVisible) == 0x000000, "Member 'ProgressiveItemScreen_C_UpdateLayoutForTabs::bTabsVisible' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateLayoutForTabs, Spacing_Adjustment_For_Tabs) == 0x000008, "Member 'ProgressiveItemScreen_C_UpdateLayoutForTabs::Spacing_Adjustment_For_Tabs' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateLayoutForTabs, Temp_real_Variable) == 0x000010, "Member 'ProgressiveItemScreen_C_UpdateLayoutForTabs::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateLayoutForTabs, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000018, "Member 'ProgressiveItemScreen_C_UpdateLayoutForTabs::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateLayoutForTabs, Temp_bool_Variable) == 0x000020, "Member 'ProgressiveItemScreen_C_UpdateLayoutForTabs::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateLayoutForTabs, Temp_real_Variable_1) == 0x000028, "Member 'ProgressiveItemScreen_C_UpdateLayoutForTabs::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateLayoutForTabs, K2Node_Select_Default) == 0x000030, "Member 'ProgressiveItemScreen_C_UpdateLayoutForTabs::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateLayoutForTabs, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'ProgressiveItemScreen_C_UpdateLayoutForTabs::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateLayoutForTabs, Temp_bool_Variable_1) == 0x000040, "Member 'ProgressiveItemScreen_C_UpdateLayoutForTabs::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateLayoutForTabs, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000048, "Member 'ProgressiveItemScreen_C_UpdateLayoutForTabs::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateLayoutForTabs, K2Node_Select_Default_1) == 0x000050, "Member 'ProgressiveItemScreen_C_UpdateLayoutForTabs::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateLayoutForTabs, CallFunc_SlotAsOverlaySlot_ReturnValue_1) == 0x000058, "Member 'ProgressiveItemScreen_C_UpdateLayoutForTabs::CallFunc_SlotAsOverlaySlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateLayoutForTabs, K2Node_MakeStruct_Margin) == 0x000060, "Member 'ProgressiveItemScreen_C_UpdateLayoutForTabs::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateLayoutForTabs, K2Node_MakeStruct_Margin_1) == 0x000070, "Member 'ProgressiveItemScreen_C_UpdateLayoutForTabs::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateLayoutForTabs, K2Node_MakeStruct_Top_ImplicitCast) == 0x000080, "Member 'ProgressiveItemScreen_C_UpdateLayoutForTabs::K2Node_MakeStruct_Top_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateLayoutForTabs, K2Node_MakeStruct_Top_ImplicitCast_1) == 0x000084, "Member 'ProgressiveItemScreen_C_UpdateLayoutForTabs::K2Node_MakeStruct_Top_ImplicitCast_1' has a wrong offset!");

// Function ProgressiveItemScreen.ProgressiveItemScreen_C.UpdateSubscribedVisuals
// 0x00C8 (0x00C8 - 0x0000)
struct ProgressiveItemScreen_C_UpdateSubscribedVisuals final
{
public:
	bool                                          Subscribed;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            SubscribedTextColor_Legal;                         // 0x0004(0x0014)(Edit, BlueprintVisible)
	struct FSlateColor                            UnsubscribedTextColor_Legal;                       // 0x0018(0x0014)(Edit, BlueprintVisible)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UProgressiveStageListView_C*            K2Node_DynamicCast_AsProgressive_Stage_List_View;  // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProgressiveItemDetails_C*              K2Node_DynamicCast_AsProgressive_Item_Details;     // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_2;                // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue;                // 0x0080(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNoInputActionPipButton_C*              K2Node_DynamicCast_AsNo_Input_Action_Pip_Button;   // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressiveItemScreen_C_UpdateSubscribedVisuals) == 0x000008, "Wrong alignment on ProgressiveItemScreen_C_UpdateSubscribedVisuals");
static_assert(sizeof(ProgressiveItemScreen_C_UpdateSubscribedVisuals) == 0x0000C8, "Wrong size on ProgressiveItemScreen_C_UpdateSubscribedVisuals");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateSubscribedVisuals, Subscribed) == 0x000000, "Member 'ProgressiveItemScreen_C_UpdateSubscribedVisuals::Subscribed' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateSubscribedVisuals, SubscribedTextColor_Legal) == 0x000004, "Member 'ProgressiveItemScreen_C_UpdateSubscribedVisuals::SubscribedTextColor_Legal' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateSubscribedVisuals, UnsubscribedTextColor_Legal) == 0x000018, "Member 'ProgressiveItemScreen_C_UpdateSubscribedVisuals::UnsubscribedTextColor_Legal' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateSubscribedVisuals, K2Node_DynamicCast_AsProgressive_Stage_List_View) == 0x000030, "Member 'ProgressiveItemScreen_C_UpdateSubscribedVisuals::K2Node_DynamicCast_AsProgressive_Stage_List_View' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateSubscribedVisuals, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'ProgressiveItemScreen_C_UpdateSubscribedVisuals::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateSubscribedVisuals, K2Node_DynamicCast_AsProgressive_Item_Details) == 0x000040, "Member 'ProgressiveItemScreen_C_UpdateSubscribedVisuals::K2Node_DynamicCast_AsProgressive_Item_Details' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateSubscribedVisuals, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'ProgressiveItemScreen_C_UpdateSubscribedVisuals::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateSubscribedVisuals, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'ProgressiveItemScreen_C_UpdateSubscribedVisuals::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateSubscribedVisuals, CallFunc_SelectColor_ReturnValue) == 0x000050, "Member 'ProgressiveItemScreen_C_UpdateSubscribedVisuals::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateSubscribedVisuals, CallFunc_SelectColor_ReturnValue_1) == 0x000060, "Member 'ProgressiveItemScreen_C_UpdateSubscribedVisuals::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateSubscribedVisuals, CallFunc_SelectColor_ReturnValue_2) == 0x000070, "Member 'ProgressiveItemScreen_C_UpdateSubscribedVisuals::CallFunc_SelectColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateSubscribedVisuals, CallFunc_GetAllEntries_ReturnValue) == 0x000080, "Member 'ProgressiveItemScreen_C_UpdateSubscribedVisuals::CallFunc_GetAllEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateSubscribedVisuals, CallFunc_Array_Get_Item) == 0x000090, "Member 'ProgressiveItemScreen_C_UpdateSubscribedVisuals::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateSubscribedVisuals, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'ProgressiveItemScreen_C_UpdateSubscribedVisuals::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateSubscribedVisuals, K2Node_DynamicCast_AsNo_Input_Action_Pip_Button) == 0x0000A0, "Member 'ProgressiveItemScreen_C_UpdateSubscribedVisuals::K2Node_DynamicCast_AsNo_Input_Action_Pip_Button' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateSubscribedVisuals, K2Node_DynamicCast_bSuccess_2) == 0x0000A8, "Member 'ProgressiveItemScreen_C_UpdateSubscribedVisuals::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateSubscribedVisuals, Temp_int_Loop_Counter_Variable) == 0x0000AC, "Member 'ProgressiveItemScreen_C_UpdateSubscribedVisuals::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateSubscribedVisuals, CallFunc_Less_IntInt_ReturnValue) == 0x0000B0, "Member 'ProgressiveItemScreen_C_UpdateSubscribedVisuals::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateSubscribedVisuals, CallFunc_Add_IntInt_ReturnValue) == 0x0000B4, "Member 'ProgressiveItemScreen_C_UpdateSubscribedVisuals::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateSubscribedVisuals, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0000B8, "Member 'ProgressiveItemScreen_C_UpdateSubscribedVisuals::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressiveItemScreen_C_UpdateSubscribedVisuals, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x0000C0, "Member 'ProgressiveItemScreen_C_UpdateSubscribedVisuals::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");

}

