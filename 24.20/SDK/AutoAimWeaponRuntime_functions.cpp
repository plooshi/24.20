#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AutoAimWeaponRuntime

#include "Basic.hpp"

#include "AutoAimWeaponRuntime_classes.hpp"
#include "AutoAimWeaponRuntime_parameters.hpp"


namespace SDK
{

// Function AutoAimWeaponRuntime.AutoAimWeaponKismetLibrary.DoesAutoAimWeaponHaveLineOfSight
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AFortPawn*                        SourcePawn                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPawn*                        TargetPawn                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAutoAimWeaponKismetLibrary::DoesAutoAimWeaponHaveLineOfSight(class AFortPawn* SourcePawn, class AFortPawn* TargetPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AutoAimWeaponKismetLibrary", "DoesAutoAimWeaponHaveLineOfSight");

	Params::AutoAimWeaponKismetLibrary_DoesAutoAimWeaponHaveLineOfSight Parms{};

	Parms.SourcePawn = SourcePawn;
	Parms.TargetPawn = TargetPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AutoAimWeaponRuntime.AutoAimWeaponKismetLibrary.DoesAutoAimWeaponReticleIntersectTarget
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   OutReticleDistance                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPawn*                        SourcePawn                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPawn*                        TargetPawn                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReticleSize                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAutoAimWeaponKismetLibrary::DoesAutoAimWeaponReticleIntersectTarget(float* OutReticleDistance, class AFortPawn* SourcePawn, class AFortPawn* TargetPawn, const float ReticleSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AutoAimWeaponKismetLibrary", "DoesAutoAimWeaponReticleIntersectTarget");

	Params::AutoAimWeaponKismetLibrary_DoesAutoAimWeaponReticleIntersectTarget Parms{};

	Parms.SourcePawn = SourcePawn;
	Parms.TargetPawn = TargetPawn;
	Parms.ReticleSize = ReticleSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutReticleDistance != nullptr)
		*OutReticleDistance = Parms.OutReticleDistance;

	return Parms.ReturnValue;
}


// Function AutoAimWeaponRuntime.AutoAimWeaponKismetLibrary.FindBestAutoAimTarget
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPawn*                        OutTargetPawn                                          (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutReticleDistance                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerPawn*                  SourcePawn                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReticleSize                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Range                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAutoAimWeaponKismetLibrary::FindBestAutoAimTarget(class AFortPawn** OutTargetPawn, float* OutReticleDistance, class AFortPlayerPawn* SourcePawn, const float ReticleSize, const float Range)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AutoAimWeaponKismetLibrary", "FindBestAutoAimTarget");

	Params::AutoAimWeaponKismetLibrary_FindBestAutoAimTarget Parms{};

	Parms.SourcePawn = SourcePawn;
	Parms.ReticleSize = ReticleSize;
	Parms.Range = Range;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTargetPawn != nullptr)
		*OutTargetPawn = Parms.OutTargetPawn;

	if (OutReticleDistance != nullptr)
		*OutReticleDistance = Parms.OutReticleDistance;
}


// Function AutoAimWeaponRuntime.AutoAimWeaponKismetLibrary.GetAutoAimWeaponPawnComponent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AFortPawn*                        SourcePawn                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAutoAimWeaponPawnComponent*      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAutoAimWeaponPawnComponent* UAutoAimWeaponKismetLibrary::GetAutoAimWeaponPawnComponent(class AFortPawn* SourcePawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AutoAimWeaponKismetLibrary", "GetAutoAimWeaponPawnComponent");

	Params::AutoAimWeaponKismetLibrary_GetAutoAimWeaponPawnComponent Parms{};

	Parms.SourcePawn = SourcePawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AutoAimWeaponRuntime.AutoAimWeaponPawnComponent.GetCurrentLockOnCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAutoAimWeaponPawnComponent::GetCurrentLockOnCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AutoAimWeaponPawnComponent", "GetCurrentLockOnCount");

	Params::AutoAimWeaponPawnComponent_GetCurrentLockOnCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AutoAimWeaponRuntime.AutoAimWeaponPawnComponent.GetLockOnProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAutoAimWeaponPawnComponent::GetLockOnProgress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AutoAimWeaponPawnComponent", "GetLockOnProgress");

	Params::AutoAimWeaponPawnComponent_GetLockOnProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function AutoAimWeaponRuntime.AutoAimWeaponPawnComponent.GetLockOnTargetLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// struct FVector                          OutLockTargetLocation                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAutoAimWeaponPawnComponent::GetLockOnTargetLocation(struct FVector* OutLockTargetLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AutoAimWeaponPawnComponent", "GetLockOnTargetLocation");

	Params::AutoAimWeaponPawnComponent_GetLockOnTargetLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLockTargetLocation != nullptr)
		*OutLockTargetLocation = std::move(Parms.OutLockTargetLocation);

	return Parms.ReturnValue;
}


// Function AutoAimWeaponRuntime.AutoAimWeaponPawnComponent.GetTargetToReticleDistanceNormalized
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAutoAimWeaponPawnComponent::GetTargetToReticleDistanceNormalized() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AutoAimWeaponPawnComponent", "GetTargetToReticleDistanceNormalized");

	Params::AutoAimWeaponPawnComponent_GetTargetToReticleDistanceNormalized Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

