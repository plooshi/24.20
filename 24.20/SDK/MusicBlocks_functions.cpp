#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MusicBlocks

#include "Basic.hpp"

#include "MusicBlocks_classes.hpp"
#include "MusicBlocks_parameters.hpp"


namespace SDK
{

// Function MusicBlocks.MusicSequencerHitComponent.RegisterMusicSequencerActor
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TScriptInterface<class IFortMusicSequencerInterface>Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMusicSequencerHitComponent::RegisterMusicSequencerActor(const class UObject* WorldContextObject, TScriptInterface<class IFortMusicSequencerInterface> Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MusicSequencerHitComponent", "RegisterMusicSequencerActor");

	Params::MusicSequencerHitComponent_RegisterMusicSequencerActor Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MusicBlocks.MusicSequencerHitComponent.ReplicateMusicSequencerHit
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TScriptInterface<class IFortMusicSequencerInterface>HitInterface                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      Instigator                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMusicSequencerHitComponent::ReplicateMusicSequencerHit(const class UObject* WorldContextObject, TScriptInterface<class IFortMusicSequencerInterface> HitInterface, const class AController* Instigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MusicSequencerHitComponent", "ReplicateMusicSequencerHit");

	Params::MusicSequencerHitComponent_ReplicateMusicSequencerHit Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.HitInterface = HitInterface;
	Parms.Instigator = Instigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MusicBlocks.MusicSequencerHitComponent.AddMusicSequencerActor
// (Final, Native, Protected)
// Parameters:
// TScriptInterface<class IFortMusicSequencerInterface>HitInterface                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMusicSequencerHitComponent::AddMusicSequencerActor(TScriptInterface<class IFortMusicSequencerInterface> HitInterface)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MusicSequencerHitComponent", "AddMusicSequencerActor");

	Params::MusicSequencerHitComponent_AddMusicSequencerActor Parms{};

	Parms.HitInterface = HitInterface;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MusicBlocks.MusicSequencerHitComponent.AddSequenceHitEvent
// (Final, Native, Protected)
// Parameters:
// TScriptInterface<class IFortMusicSequencerInterface>HitInterface                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      Instigator                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMusicSequencerHitComponent::AddSequenceHitEvent(TScriptInterface<class IFortMusicSequencerInterface> HitInterface, const class AController* Instigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MusicSequencerHitComponent", "AddSequenceHitEvent");

	Params::MusicSequencerHitComponent_AddSequenceHitEvent Parms{};

	Parms.HitInterface = HitInterface;
	Parms.Instigator = Instigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MusicBlocks.MusicSequencerHitComponent.OnSequenceHitEventExpired
// (Final, Native, Protected)
// Parameters:
// struct FMusicSequencerHitHandle         ExpiredHandle                                          (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UMusicSequencerHitComponent::OnSequenceHitEventExpired(const struct FMusicSequencerHitHandle& ExpiredHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MusicSequencerHitComponent", "OnSequenceHitEventExpired");

	Params::MusicSequencerHitComponent_OnSequenceHitEventExpired Parms{};

	Parms.ExpiredHandle = std::move(ExpiredHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MusicBlocks.MusicSequencerHitComponent.ProcessSequenceHitEvent
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FMusicSequencerHitEntry          Event                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMusicSequencerHitComponent::ProcessSequenceHitEvent(const struct FMusicSequencerHitEntry& Event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MusicSequencerHitComponent", "ProcessSequenceHitEvent");

	Params::MusicSequencerHitComponent_ProcessSequenceHitEvent Parms{};

	Parms.Event = std::move(Event);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MusicBlocks.MusicSequencerHitActor.GetMusicSequencerHitComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMusicSequencerHitComponent*      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMusicSequencerHitComponent* AMusicSequencerHitActor::GetMusicSequencerHitComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MusicSequencerHitActor", "GetMusicSequencerHitComponent");

	Params::MusicSequencerHitActor_GetMusicSequencerHitComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MusicBlocks.MusicSequencerHitAdderComponent.GetMusicSequencerHitActor
// (Final, Native, Public, Const)
// Parameters:
// class AMusicSequencerHitActor*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMusicSequencerHitActor* UMusicSequencerHitAdderComponent::GetMusicSequencerHitActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MusicSequencerHitAdderComponent", "GetMusicSequencerHitActor");

	Params::MusicSequencerHitAdderComponent_GetMusicSequencerHitActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

