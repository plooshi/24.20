#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MassEntity

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "DeveloperSettings_classes.hpp"
#include "MassEntity_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class MassEntity.MassModuleSettings
// 0x0000 (0x0028 - 0x0028)
class UMassModuleSettings : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassModuleSettings">();
	}
	static class UMassModuleSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassModuleSettings>();
	}
};
static_assert(alignof(UMassModuleSettings) == 0x000008, "Wrong alignment on UMassModuleSettings");
static_assert(sizeof(UMassModuleSettings) == 0x000028, "Wrong size on UMassModuleSettings");

// Class MassEntity.MassEntitySettings
// 0x00E8 (0x0110 - 0x0028)
class UMassEntitySettings final : public UMassModuleSettings
{
public:
	class FString                                 DumpDependencyGraphFileName;                       // 0x0028(0x0010)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMassProcessingPhaseConfig             ProcessingPhasesConfig[0x6];                       // 0x0038(0x0020)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UMassProcessor*>                 ProcessorCDOs;                                     // 0x00F8(0x0010)(Edit, ExportObject, EditFixedSize, ZeroConstructor, Transient, EditConst, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_108[0x8];                                      // 0x0108(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassEntitySettings">();
	}
	static class UMassEntitySettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassEntitySettings>();
	}
};
static_assert(alignof(UMassEntitySettings) == 0x000008, "Wrong alignment on UMassEntitySettings");
static_assert(sizeof(UMassEntitySettings) == 0x000110, "Wrong size on UMassEntitySettings");
static_assert(offsetof(UMassEntitySettings, DumpDependencyGraphFileName) == 0x000028, "Member 'UMassEntitySettings::DumpDependencyGraphFileName' has a wrong offset!");
static_assert(offsetof(UMassEntitySettings, ProcessingPhasesConfig) == 0x000038, "Member 'UMassEntitySettings::ProcessingPhasesConfig' has a wrong offset!");
static_assert(offsetof(UMassEntitySettings, ProcessorCDOs) == 0x0000F8, "Member 'UMassEntitySettings::ProcessorCDOs' has a wrong offset!");

// Class MassEntity.MassEntitySubsystem
// 0x0010 (0x0040 - 0x0030)
class UMassEntitySubsystem final : public UWorldSubsystem
{
public:
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassEntitySubsystem">();
	}
	static class UMassEntitySubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassEntitySubsystem>();
	}
};
static_assert(alignof(UMassEntitySubsystem) == 0x000008, "Wrong alignment on UMassEntitySubsystem");
static_assert(sizeof(UMassEntitySubsystem) == 0x000040, "Wrong size on UMassEntitySubsystem");

// Class MassEntity.MassProcessor
// 0x0090 (0x00B8 - 0x0028)
class UMassProcessor : public UObject
{
public:
	int32                                         ExecutionFlags;                                    // 0x0028(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EMassProcessingPhase                          ProcessingPhase;                                   // 0x002C(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMassProcessorExecutionOrder           ExecutionOrder;                                    // 0x0030(0x0028)(Edit, Config, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                          bAutoRegisterWithProcessingPhases;                 // 0x0058(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_59[0x2];                                       // 0x0059(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bRequiresGameThreadExecution;                      // 0x005B(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5C[0x5C];                                      // 0x005C(0x005C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassProcessor">();
	}
	static class UMassProcessor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassProcessor>();
	}
};
static_assert(alignof(UMassProcessor) == 0x000008, "Wrong alignment on UMassProcessor");
static_assert(sizeof(UMassProcessor) == 0x0000B8, "Wrong size on UMassProcessor");
static_assert(offsetof(UMassProcessor, ExecutionFlags) == 0x000028, "Member 'UMassProcessor::ExecutionFlags' has a wrong offset!");
static_assert(offsetof(UMassProcessor, ProcessingPhase) == 0x00002C, "Member 'UMassProcessor::ProcessingPhase' has a wrong offset!");
static_assert(offsetof(UMassProcessor, ExecutionOrder) == 0x000030, "Member 'UMassProcessor::ExecutionOrder' has a wrong offset!");
static_assert(offsetof(UMassProcessor, bAutoRegisterWithProcessingPhases) == 0x000058, "Member 'UMassProcessor::bAutoRegisterWithProcessingPhases' has a wrong offset!");
static_assert(offsetof(UMassProcessor, bRequiresGameThreadExecution) == 0x00005B, "Member 'UMassProcessor::bRequiresGameThreadExecution' has a wrong offset!");

// Class MassEntity.MassObserverProcessor
// 0x0010 (0x00C8 - 0x00B8)
class UMassObserverProcessor final : public UMassProcessor
{
public:
	class UScriptStruct*                          ObservedType;                                      // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C0[0x8];                                       // 0x00C0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassObserverProcessor">();
	}
	static class UMassObserverProcessor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassObserverProcessor>();
	}
};
static_assert(alignof(UMassObserverProcessor) == 0x000008, "Wrong alignment on UMassObserverProcessor");
static_assert(sizeof(UMassObserverProcessor) == 0x0000C8, "Wrong size on UMassObserverProcessor");
static_assert(offsetof(UMassObserverProcessor, ObservedType) == 0x0000B8, "Member 'UMassObserverProcessor::ObservedType' has a wrong offset!");

// Class MassEntity.MassObserverRegistry
// 0x0140 (0x0168 - 0x0028)
class UMassObserverRegistry final : public UObject
{
public:
	struct FMassEntityObserverClassesMap          FragmentObservers[0x2];                            // 0x0028(0x0050)(Protected, NativeAccessSpecifierProtected)
	struct FMassEntityObserverClassesMap          TagObservers[0x2];                                 // 0x00C8(0x0050)(Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassObserverRegistry">();
	}
	static class UMassObserverRegistry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassObserverRegistry>();
	}
};
static_assert(alignof(UMassObserverRegistry) == 0x000008, "Wrong alignment on UMassObserverRegistry");
static_assert(sizeof(UMassObserverRegistry) == 0x000168, "Wrong size on UMassObserverRegistry");
static_assert(offsetof(UMassObserverRegistry, FragmentObservers) == 0x000028, "Member 'UMassObserverRegistry::FragmentObservers' has a wrong offset!");
static_assert(offsetof(UMassObserverRegistry, TagObservers) == 0x0000C8, "Member 'UMassObserverRegistry::TagObservers' has a wrong offset!");

// Class MassEntity.MassCompositeProcessor
// 0x0038 (0x00F0 - 0x00B8)
class UMassCompositeProcessor final : public UMassProcessor
{
public:
	struct FMassRuntimePipeline                   ChildPipeline;                                     // 0x00B8(0x0010)(Edit, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   GroupName;                                         // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_CC[0x24];                                      // 0x00CC(0x0024)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassCompositeProcessor">();
	}
	static class UMassCompositeProcessor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassCompositeProcessor>();
	}
};
static_assert(alignof(UMassCompositeProcessor) == 0x000008, "Wrong alignment on UMassCompositeProcessor");
static_assert(sizeof(UMassCompositeProcessor) == 0x0000F0, "Wrong size on UMassCompositeProcessor");
static_assert(offsetof(UMassCompositeProcessor, ChildPipeline) == 0x0000B8, "Member 'UMassCompositeProcessor::ChildPipeline' has a wrong offset!");
static_assert(offsetof(UMassCompositeProcessor, GroupName) == 0x0000C8, "Member 'UMassCompositeProcessor::GroupName' has a wrong offset!");

// Class MassEntity.MassSettings
// 0x0050 (0x0080 - 0x0030)
class UMassSettings final : public UDeveloperSettings
{
public:
	TMap<class FName, class UMassModuleSettings*> ModuleSettings;                                    // 0x0030(0x0050)(Edit, EditFixedSize, EditConst, NoClear, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MassSettings">();
	}
	static class UMassSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMassSettings>();
	}
};
static_assert(alignof(UMassSettings) == 0x000008, "Wrong alignment on UMassSettings");
static_assert(sizeof(UMassSettings) == 0x000080, "Wrong size on UMassSettings");
static_assert(offsetof(UMassSettings, ModuleSettings) == 0x000030, "Member 'UMassSettings::ModuleSettings' has a wrong offset!");

}

