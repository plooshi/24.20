#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CRD_ModalDialogUI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "UMG_structs.hpp"
#include "CRD_ModalDialogUI_structs.hpp"
#include "CommonUI_classes.hpp"
#include "CRD_ModalDialogRuntime_structs.hpp"
#include "ModelViewViewModel_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// Class CRD_ModalDialogUI.CreativeModalDialogAllowedConversionFunction
// 0x0000 (0x0028 - 0x0028)
class UCreativeModalDialogAllowedConversionFunction : public UBlueprintFunctionLibrary
{
public:
	static ECreativeModalDialogViewmodelResponse GetResponseButton1(const struct FWidgetEventField& Field);
	static ECreativeModalDialogViewmodelResponse GetResponseButton2(const struct FWidgetEventField& Field);
	static ECreativeModalDialogViewmodelResponse GetResponseButton3(const struct FWidgetEventField& Field);
	static ECreativeModalDialogViewmodelResponse GetResponseButton4(const struct FWidgetEventField& Field);
	static ECreativeModalDialogViewmodelResponse GetResponseButton5(const struct FWidgetEventField& Field);
	static ECreativeModalDialogViewmodelResponse GetResponseButton6(const struct FWidgetEventField& Field);
	static ECreativeModalDialogViewmodelResponse GetResponseNone(const struct FWidgetEventField& Field);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CreativeModalDialogAllowedConversionFunction">();
	}
	static class UCreativeModalDialogAllowedConversionFunction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCreativeModalDialogAllowedConversionFunction>();
	}
};
static_assert(alignof(UCreativeModalDialogAllowedConversionFunction) == 0x000008, "Wrong alignment on UCreativeModalDialogAllowedConversionFunction");
static_assert(sizeof(UCreativeModalDialogAllowedConversionFunction) == 0x000028, "Wrong size on UCreativeModalDialogAllowedConversionFunction");

// Class CRD_ModalDialogUI.CreativeModalDialogConversionFunction
// 0x0000 (0x0028 - 0x0028)
class UCreativeModalDialogConversionFunction final : public UCreativeModalDialogAllowedConversionFunction
{
public:
	static ECreativeModalDialogViewmodelResponse AssignCreativeModalDialogViewmodelResponse(const struct FMVVMEventField& Field, ECreativeModalDialogViewmodelResponse Response);
	static int32 GetColumnIndexForButtonFromContentAlignment(const ECreativeModalDialogAlignmentOption AlignmentOption, const int32 ButtonIndex, const int32 WideMaxColumns, const int32 TallMaxColumns, const int32 DefaultMaxColumns);
	static float GetFloatingValueFromContentAlignment(const ECreativeModalDialogAlignmentOption AlignmentOption, const float TallValue, const float WideValue, const float CenteredFullValue, const float DefaultValue);
	static struct FMargin GetMarginFromContentAlignment(const ECreativeModalDialogAlignmentOption AlignmentOption, const float TallMarginAmount, const float WideMarginAmount, const float CenteredFullMarginAmount, const float DefaultMarginAmount);
	static int32 GetRowIndexForButtonFromContentAlignment(const ECreativeModalDialogAlignmentOption AlignmentOption, const int32 ButtonIndex, const int32 WideMaxColumns, const int32 TallMaxColumns, const int32 DefaultMaxColumns);
	static ECreativeModalDialogViewmodelResponse TranslateResponse(const struct FWidgetEventField& Field, ECreativeModalDialogViewmodelResponse Response);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CreativeModalDialogConversionFunction">();
	}
	static class UCreativeModalDialogConversionFunction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCreativeModalDialogConversionFunction>();
	}
};
static_assert(alignof(UCreativeModalDialogConversionFunction) == 0x000008, "Wrong alignment on UCreativeModalDialogConversionFunction");
static_assert(sizeof(UCreativeModalDialogConversionFunction) == 0x000028, "Wrong size on UCreativeModalDialogConversionFunction");

// Class CRD_ModalDialogUI.CreativeModalDialogViewmodel
// 0x0188 (0x01F0 - 0x0068)
class UCreativeModalDialogViewmodel final : public UMVVMViewModelBase
{
public:
	class FText                                   Title;                                             // 0x0068(0x0018)(BlueprintVisible, ExposeOnSpawn, NativeAccessSpecifierPrivate)
	class FText                                   Body;                                              // 0x0080(0x0018)(BlueprintVisible, ExposeOnSpawn, NativeAccessSpecifierPrivate)
	class UDataTable*                             TextStyleSet;                                      // 0x0098(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FText                                   Button01_MainText;                                 // 0x00A0(0x0018)(BlueprintVisible, ExposeOnSpawn, NativeAccessSpecifierPrivate)
	class FText                                   Button02_MainText;                                 // 0x00B8(0x0018)(BlueprintVisible, ExposeOnSpawn, NativeAccessSpecifierPrivate)
	class FText                                   Button03_MainText;                                 // 0x00D0(0x0018)(BlueprintVisible, ExposeOnSpawn, NativeAccessSpecifierPrivate)
	class FText                                   Button04_MainText;                                 // 0x00E8(0x0018)(BlueprintVisible, ExposeOnSpawn, NativeAccessSpecifierPrivate)
	class FText                                   Button05_MainText;                                 // 0x0100(0x0018)(BlueprintVisible, ExposeOnSpawn, NativeAccessSpecifierPrivate)
	class FText                                   Button06_MainText;                                 // 0x0118(0x0018)(BlueprintVisible, ExposeOnSpawn, NativeAccessSpecifierPrivate)
	class FText                                   Button01_SubText;                                  // 0x0130(0x0018)(BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn, NativeAccessSpecifierPrivate)
	class FText                                   Button02_SubText;                                  // 0x0148(0x0018)(BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn, NativeAccessSpecifierPrivate)
	class FText                                   Button03_SubText;                                  // 0x0160(0x0018)(BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn, NativeAccessSpecifierPrivate)
	class FText                                   Button04_SubText;                                  // 0x0178(0x0018)(BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn, NativeAccessSpecifierPrivate)
	class FText                                   Button05_SubText;                                  // 0x0190(0x0018)(BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn, NativeAccessSpecifierPrivate)
	class FText                                   Button06_SubText;                                  // 0x01A8(0x0018)(BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn, NativeAccessSpecifierPrivate)
	class UTexture2D*                             Art01_Image;                                       // 0x01C0(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTexture2D*                             Art02_Image;                                       // 0x01C8(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ECreativeModalDialogAlignmentOption           ContentAlignment;                                  // 0x01D0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bShowBackground;                                   // 0x01D1(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1D2[0x2];                                      // 0x01D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DialogBackgroundAlpha;                             // 0x01D4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ECreativeModalDialogTimerOption               TimerOption;                                       // 0x01D8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Timeout;                                           // 0x01DC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         RemainingTimeForTimeout;                           // 0x01E0(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         NumberOfButtons;                                   // 0x01E4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ECreativeModalBackActionBoundButtonOption     BackActionBoundButton;                             // 0x01E8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ECreativeModalDialogViewmodelResponse         Response;                                          // 0x01E9(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1EA[0x6];                                      // 0x01EA(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	ESlateVisibility GetBackgroundVisibility() const;
	struct FDataTableRowHandle GetButton1TriggeringInputAction() const;
	ESlateVisibility GetButton1Visibility() const;
	struct FDataTableRowHandle GetButton2TriggeringInputAction() const;
	ESlateVisibility GetButton2Visibility() const;
	struct FDataTableRowHandle GetButton3TriggeringInputAction() const;
	ESlateVisibility GetButton3Visibility() const;
	struct FDataTableRowHandle GetButton4TriggeringInputAction() const;
	ESlateVisibility GetButton4Visibility() const;
	struct FDataTableRowHandle GetButton5TriggeringInputAction() const;
	ESlateVisibility GetButton5Visibility() const;
	struct FDataTableRowHandle GetButton6TriggeringInputAction() const;
	ESlateVisibility GetButton6Visibility() const;
	EHorizontalAlignment GetHorizontalAlignment() const;
	float GetTimeoutProgress() const;
	ESlateVisibility GetTimerVisibility() const;
	EVerticalAlignment GetVerticalAlignment() const;
	bool IsButton1Visible() const;
	bool IsButton2Visible() const;
	bool IsButton3Visible() const;
	bool IsButton4Visible() const;
	bool IsButton5Visible() const;
	bool IsButton6Visible() const;
	bool IsTimerVisible() const;
	bool ShouldButton1UseFallbackDefaultInputAction() const;
	bool ShouldButton2UseFallbackDefaultInputAction() const;
	bool ShouldButton3UseFallbackDefaultInputAction() const;
	bool ShouldButton4UseFallbackDefaultInputAction() const;
	bool ShouldButton5UseFallbackDefaultInputAction() const;
	bool ShouldButton6UseFallbackDefaultInputAction() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CreativeModalDialogViewmodel">();
	}
	static class UCreativeModalDialogViewmodel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCreativeModalDialogViewmodel>();
	}
};
static_assert(alignof(UCreativeModalDialogViewmodel) == 0x000008, "Wrong alignment on UCreativeModalDialogViewmodel");
static_assert(sizeof(UCreativeModalDialogViewmodel) == 0x0001F0, "Wrong size on UCreativeModalDialogViewmodel");
static_assert(offsetof(UCreativeModalDialogViewmodel, Title) == 0x000068, "Member 'UCreativeModalDialogViewmodel::Title' has a wrong offset!");
static_assert(offsetof(UCreativeModalDialogViewmodel, Body) == 0x000080, "Member 'UCreativeModalDialogViewmodel::Body' has a wrong offset!");
static_assert(offsetof(UCreativeModalDialogViewmodel, TextStyleSet) == 0x000098, "Member 'UCreativeModalDialogViewmodel::TextStyleSet' has a wrong offset!");
static_assert(offsetof(UCreativeModalDialogViewmodel, Button01_MainText) == 0x0000A0, "Member 'UCreativeModalDialogViewmodel::Button01_MainText' has a wrong offset!");
static_assert(offsetof(UCreativeModalDialogViewmodel, Button02_MainText) == 0x0000B8, "Member 'UCreativeModalDialogViewmodel::Button02_MainText' has a wrong offset!");
static_assert(offsetof(UCreativeModalDialogViewmodel, Button03_MainText) == 0x0000D0, "Member 'UCreativeModalDialogViewmodel::Button03_MainText' has a wrong offset!");
static_assert(offsetof(UCreativeModalDialogViewmodel, Button04_MainText) == 0x0000E8, "Member 'UCreativeModalDialogViewmodel::Button04_MainText' has a wrong offset!");
static_assert(offsetof(UCreativeModalDialogViewmodel, Button05_MainText) == 0x000100, "Member 'UCreativeModalDialogViewmodel::Button05_MainText' has a wrong offset!");
static_assert(offsetof(UCreativeModalDialogViewmodel, Button06_MainText) == 0x000118, "Member 'UCreativeModalDialogViewmodel::Button06_MainText' has a wrong offset!");
static_assert(offsetof(UCreativeModalDialogViewmodel, Button01_SubText) == 0x000130, "Member 'UCreativeModalDialogViewmodel::Button01_SubText' has a wrong offset!");
static_assert(offsetof(UCreativeModalDialogViewmodel, Button02_SubText) == 0x000148, "Member 'UCreativeModalDialogViewmodel::Button02_SubText' has a wrong offset!");
static_assert(offsetof(UCreativeModalDialogViewmodel, Button03_SubText) == 0x000160, "Member 'UCreativeModalDialogViewmodel::Button03_SubText' has a wrong offset!");
static_assert(offsetof(UCreativeModalDialogViewmodel, Button04_SubText) == 0x000178, "Member 'UCreativeModalDialogViewmodel::Button04_SubText' has a wrong offset!");
static_assert(offsetof(UCreativeModalDialogViewmodel, Button05_SubText) == 0x000190, "Member 'UCreativeModalDialogViewmodel::Button05_SubText' has a wrong offset!");
static_assert(offsetof(UCreativeModalDialogViewmodel, Button06_SubText) == 0x0001A8, "Member 'UCreativeModalDialogViewmodel::Button06_SubText' has a wrong offset!");
static_assert(offsetof(UCreativeModalDialogViewmodel, Art01_Image) == 0x0001C0, "Member 'UCreativeModalDialogViewmodel::Art01_Image' has a wrong offset!");
static_assert(offsetof(UCreativeModalDialogViewmodel, Art02_Image) == 0x0001C8, "Member 'UCreativeModalDialogViewmodel::Art02_Image' has a wrong offset!");
static_assert(offsetof(UCreativeModalDialogViewmodel, ContentAlignment) == 0x0001D0, "Member 'UCreativeModalDialogViewmodel::ContentAlignment' has a wrong offset!");
static_assert(offsetof(UCreativeModalDialogViewmodel, bShowBackground) == 0x0001D1, "Member 'UCreativeModalDialogViewmodel::bShowBackground' has a wrong offset!");
static_assert(offsetof(UCreativeModalDialogViewmodel, DialogBackgroundAlpha) == 0x0001D4, "Member 'UCreativeModalDialogViewmodel::DialogBackgroundAlpha' has a wrong offset!");
static_assert(offsetof(UCreativeModalDialogViewmodel, TimerOption) == 0x0001D8, "Member 'UCreativeModalDialogViewmodel::TimerOption' has a wrong offset!");
static_assert(offsetof(UCreativeModalDialogViewmodel, Timeout) == 0x0001DC, "Member 'UCreativeModalDialogViewmodel::Timeout' has a wrong offset!");
static_assert(offsetof(UCreativeModalDialogViewmodel, RemainingTimeForTimeout) == 0x0001E0, "Member 'UCreativeModalDialogViewmodel::RemainingTimeForTimeout' has a wrong offset!");
static_assert(offsetof(UCreativeModalDialogViewmodel, NumberOfButtons) == 0x0001E4, "Member 'UCreativeModalDialogViewmodel::NumberOfButtons' has a wrong offset!");
static_assert(offsetof(UCreativeModalDialogViewmodel, BackActionBoundButton) == 0x0001E8, "Member 'UCreativeModalDialogViewmodel::BackActionBoundButton' has a wrong offset!");
static_assert(offsetof(UCreativeModalDialogViewmodel, Response) == 0x0001E9, "Member 'UCreativeModalDialogViewmodel::Response' has a wrong offset!");

// Class CRD_ModalDialogUI.CreativeModalDialogWidget
// 0x0010 (0x03B8 - 0x03A8)
class UCreativeModalDialogWidget final : public UCommonActivatableWidget
{
public:
	struct FDataTableRowHandle                    MainMenuInputRowHandle;                            // 0x03A8(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CreativeModalDialogWidget">();
	}
	static class UCreativeModalDialogWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCreativeModalDialogWidget>();
	}
};
static_assert(alignof(UCreativeModalDialogWidget) == 0x000008, "Wrong alignment on UCreativeModalDialogWidget");
static_assert(sizeof(UCreativeModalDialogWidget) == 0x0003B8, "Wrong size on UCreativeModalDialogWidget");
static_assert(offsetof(UCreativeModalDialogWidget, MainMenuInputRowHandle) == 0x0003A8, "Member 'UCreativeModalDialogWidget::MainMenuInputRowHandle' has a wrong offset!");

}

