#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameplayEventRouter

#include "Basic.hpp"

#include "GameplayEventRouter_classes.hpp"
#include "GameplayEventRouter_parameters.hpp"


namespace SDK
{

// Function GameplayEventRouter.AsyncAction_StartListeningToEvent.StartListeningToEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGameplayEventRouterComponent*    Target                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UScriptStruct*                    EventType                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEventBubblingRule                      EventBubblingRule                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAsyncAction_StartListeningToEvent*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAsyncAction_StartListeningToEvent* UAsyncAction_StartListeningToEvent::StartListeningToEvent(class UObject* WorldContextObject, class UGameplayEventRouterComponent* Target, class UScriptStruct* EventType, class UObject* Context, EEventBubblingRule EventBubblingRule)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AsyncAction_StartListeningToEvent", "StartListeningToEvent");

	Params::AsyncAction_StartListeningToEvent_StartListeningToEvent Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Target = Target;
	Parms.EventType = EventType;
	Parms.Context = Context;
	Parms.EventBubblingRule = EventBubblingRule;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameplayEventRouter.AsyncAction_StartListeningToEvent.GetPayload
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   OutPayload                                             (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAsyncAction_StartListeningToEvent::GetPayload(int32& OutPayload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AsyncAction_StartListeningToEvent", "GetPayload");

	Params::AsyncAction_StartListeningToEvent_GetPayload Parms{};

	Parms.OutPayload = OutPayload;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	OutPayload = Parms.OutPayload;

	return Parms.ReturnValue;
}


// Function GameplayEventRouter.AsyncAction_StartListeningToEvent.StopListeningToEvent
// (Final, Native, Public, BlueprintCallable)

void UAsyncAction_StartListeningToEvent::StopListeningToEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AsyncAction_StartListeningToEvent", "StopListeningToEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameplayEventRouter.AsyncAction_StartListeningToStatefulEvent.StartListeningToStatefulEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGameplayEventRouterComponent*    Target                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UScriptStruct*                    EventType                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEventBubblingRule                      EventBubblingRule                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAsyncAction_StartListeningToStatefulEvent*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAsyncAction_StartListeningToStatefulEvent* UAsyncAction_StartListeningToStatefulEvent::StartListeningToStatefulEvent(class UObject* WorldContextObject, class UGameplayEventRouterComponent* Target, class UScriptStruct* EventType, class UObject* Context, EEventBubblingRule EventBubblingRule)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AsyncAction_StartListeningToStatefulEvent", "StartListeningToStatefulEvent");

	Params::AsyncAction_StartListeningToStatefulEvent_StartListeningToStatefulEvent Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Target = Target;
	Parms.EventType = EventType;
	Parms.Context = Context;
	Parms.EventBubblingRule = EventBubblingRule;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameplayEventRouter.AsyncAction_StartListeningToStatefulEvent.GetPayload
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   OutPayload                                             (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAsyncAction_StartListeningToStatefulEvent::GetPayload(int32& OutPayload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AsyncAction_StartListeningToStatefulEvent", "GetPayload");

	Params::AsyncAction_StartListeningToStatefulEvent_GetPayload Parms{};

	Parms.OutPayload = OutPayload;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	OutPayload = Parms.OutPayload;

	return Parms.ReturnValue;
}


// Function GameplayEventRouter.AsyncAction_StartListeningToStatefulEvent.StopListeningToStatefulEvent
// (Final, Native, Public, BlueprintCallable)

void UAsyncAction_StartListeningToStatefulEvent::StopListeningToStatefulEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AsyncAction_StartListeningToStatefulEvent", "StopListeningToStatefulEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GameplayEventRouter.GameplayEventRouterComponent.ClearEventState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UScriptStruct*                    EventType                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameplayEventRouterComponent::ClearEventState(const class UScriptStruct* EventType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameplayEventRouterComponent", "ClearEventState");

	Params::GameplayEventRouterComponent_ClearEventState Parms{};

	Parms.EventType = EventType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameplayEventRouter.GameplayEventRouterComponent.ClearEventStateByContext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UScriptStruct*                    EventType                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Context                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameplayEventRouterComponent::ClearEventStateByContext(const class UScriptStruct* EventType, const class UObject* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameplayEventRouterComponent", "ClearEventStateByContext");

	Params::GameplayEventRouterComponent_ClearEventStateByContext Parms{};

	Parms.EventType = EventType;
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GameplayEventRouter.GameplayEventRouterComponent.K2_BroadcastEvent
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   EventData                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          EventContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameplayEventRouterComponent::K2_BroadcastEvent(const int32& EventData, class UObject* EventContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameplayEventRouterComponent", "K2_BroadcastEvent");

	Params::GameplayEventRouterComponent_K2_BroadcastEvent Parms{};

	Parms.EventData = EventData;
	Parms.EventContext = EventContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameplayEventRouter.GameplayEventRouterComponent.K2_BroadcastStatefulEvent
// (Final, Native, Protected, HasOutParams)
// Parameters:
// int32                                   EventData                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          EventContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameplayEventRouterComponent::K2_BroadcastStatefulEvent(const int32& EventData, class UObject* EventContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameplayEventRouterComponent", "K2_BroadcastStatefulEvent");

	Params::GameplayEventRouterComponent_K2_BroadcastStatefulEvent Parms{};

	Parms.EventData = EventData;
	Parms.EventContext = EventContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameplayEventRouter.GameplayEventRouterComponent.StopListeningToEvent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayEventListenerHandle     HandleToRemove                                         (Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGameplayEventRouterComponent::StopListeningToEvent(struct FGameplayEventListenerHandle& HandleToRemove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameplayEventRouterComponent", "StopListeningToEvent");

	Params::GameplayEventRouterComponent_StopListeningToEvent Parms{};

	Parms.HandleToRemove = std::move(HandleToRemove);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	HandleToRemove = std::move(Parms.HandleToRemove);
}


// Function GameplayEventRouter.GameplayEventRouterComponent.HasValidEventState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UScriptStruct*                    EventType                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGameplayEventRouterComponent::HasValidEventState(const class UScriptStruct* EventType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameplayEventRouterComponent", "HasValidEventState");

	Params::GameplayEventRouterComponent_HasValidEventState Parms{};

	Parms.EventType = EventType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameplayEventRouter.GameplayEventRouterOwnerInterface.GetEventRouterClass
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// TSubclassOf<class UGameplayEventRouterComponent>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UGameplayEventRouterComponent> IGameplayEventRouterOwnerInterface::GetEventRouterClass() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameplayEventRouterOwnerInterface", "GetEventRouterClass");

	Params::GameplayEventRouterOwnerInterface_GetEventRouterClass Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameplayEventRouter.GameplayEventRouterSubsytem.GetEventRouter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UClass*                           Scope                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ContextActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGameplayEventRouterComponent*    ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGameplayEventRouterComponent* UGameplayEventRouterSubsytem::GetEventRouter(class UClass* Scope, class AActor* ContextActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GameplayEventRouterSubsytem", "GetEventRouter");

	Params::GameplayEventRouterSubsytem_GetEventRouter Parms{};

	Parms.Scope = Scope;
	Parms.ContextActor = ContextActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GameplayEventRouter.GameplayEventRouterSubsytem.GetGlobalEventRouter
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGameplayEventRouterComponent*    ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGameplayEventRouterComponent* UGameplayEventRouterSubsytem::GetGlobalEventRouter(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GameplayEventRouterSubsytem", "GetGlobalEventRouter");

	Params::GameplayEventRouterSubsytem_GetGlobalEventRouter Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

