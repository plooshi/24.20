#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Verse

#include "Basic.hpp"

#include "VerseNative_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Verse_structs.hpp"
#include "VerseNative_0_classes.hpp"


namespace SDK
{

// VerseClass Verse.$SolarisSignatureFunctionOuter
// 0x0000 (0x0028 - 0x0028)
class Verse::U_SolarisSignatureFunctionOuter final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseClass Verse.$SolarisSignatureFunctionOuter", true>();
	}
	static class Verse::U_SolarisSignatureFunctionOuter* GetDefaultObj()
	{
		return GetDefaultObjImpl<Verse::U_SolarisSignatureFunctionOuter>();
	}
};
static_assert(alignof(Verse::U_SolarisSignatureFunctionOuter) == 0x000008, "Wrong alignment on Verse::U_SolarisSignatureFunctionOuter");
static_assert(sizeof(Verse::U_SolarisSignatureFunctionOuter) == 0x000028, "Wrong size on Verse::U_SolarisSignatureFunctionOuter");

// VerseClass Verse.Verse_cancelable
// 0x0000 (0x0028 - 0x0028)
class UVerse_cancelable final : public UObject
{
public:
	void _L_2fVerse_2eorg_2fVerse_2fcancelable_N_RCancel(const struct Verse::Ftuple_L_R& __verse_0xB2CDDD72_Argument);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Verse_cancelable">();
	}
	static class UVerse_cancelable* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerse_cancelable>();
	}
};
static_assert(alignof(UVerse_cancelable) == 0x000008, "Wrong alignment on UVerse_cancelable");
static_assert(sizeof(UVerse_cancelable) == 0x000028, "Wrong size on UVerse_cancelable");

// VerseClass Verse.Verse_localizable_string
// 0x0020 (0x0048 - 0x0028)
class UVerse_localizable_string final : public UObject
{
public:
	FVerseStringProperty_                         __verse_0x31A8F10C_Value;                          // 0x0028(0x0010)(InstancedReference, HasGetValueTypeHash)
	FVerseFunctionProperty_                       __verse_0x3FB03556__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R; // 0x0038(0x0010)(InstancedReference, HasGetValueTypeHash)

public:
	void _Block();
	void _InitCDO();
	void _InitInstance();
	FVerseStringProperty_ _L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R(const struct FVerse_locale& __verse_0xB2CDDD72_Argument);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Verse_localizable_string">();
	}
	static class UVerse_localizable_string* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerse_localizable_string>();
	}
};
static_assert(alignof(UVerse_localizable_string) == 0x000008, "Wrong alignment on UVerse_localizable_string");
static_assert(sizeof(UVerse_localizable_string) == 0x000048, "Wrong size on UVerse_localizable_string");
static_assert(offsetof(UVerse_localizable_string, __verse_0x31A8F10C_Value) == 0x000028, "Member 'UVerse_localizable_string::__verse_0x31A8F10C_Value' has a wrong offset!");
static_assert(offsetof(UVerse_localizable_string, __verse_0x3FB03556__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R) == 0x000038, "Member 'UVerse_localizable_string::__verse_0x3FB03556__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R' has a wrong offset!");

// VerseClass Verse.Colors
// 0x0000 (0x0028 - 0x0028)
class UColors final : public UObject
{
public:
	static struct FColors_color _L_2fVerse_2eorg_2fColors_N_RMakeColorFromHex_L_N_Kchar_R(FVerseStringProperty_ __verse_0xB2CDDD72_Argument);
	static struct FColors_color _L_2fVerse_2eorg_2fColors_N_RMakeColorFromHSV_L_Nfloat_M_Nfloat_M_Nfloat_R(const struct Verse::Ftuple_Lfloat_Mfloat_Mfloat_R& __verse_0xB2CDDD72_Argument);
	static struct FColors_color _L_2fVerse_2eorg_2fColors_N_RMakeColorFromSRGB_L_Nfloat_M_Nfloat_M_Nfloat_R(const struct Verse::Ftuple_Lfloat_Mfloat_Mfloat_R& __verse_0xB2CDDD72_Argument);
	static struct FColors_color _L_2fVerse_2eorg_2fColors_N_RMakeColorFromSRGBValues_L_Nint_M_Nint_M_Nint_R(const struct Ftuple_Lint_Mint_Mint_R& __verse_0xB2CDDD72_Argument);
	static struct FColors_color _L_2fVerse_2eorg_2fColors_N_RMakeColorFromTemperature_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static struct Verse::Ftuple_Lfloat_Mfloat_Mfloat_R _L_2fVerse_2eorg_2fColors_N_RMakeHSVFromColor_L_Ncolor_R(const struct FColors_color& __verse_0xB2CDDD72_Argument);
	static struct Verse::Ftuple_Lfloat_Mfloat_Mfloat_R _L_2fVerse_2eorg_2fColors_N_RMakeSRGBFromColor_L_Ncolor_R(const struct FColors_color& __verse_0xB2CDDD72_Argument);
	static struct FColors_color _L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Ncolor_M_Ncolor_R(const struct Ftuple_Lcolor_Mcolor_R& __verse_0xB2CDDD72_Argument);
	static struct FColors_color _L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Ncolor_M_Nfloat_R(const struct Ftuple_Lcolor_Mfloat_R& __verse_0xB2CDDD72_Argument);
	static struct FColors_color _L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Ncolor_M_Nint_R(const struct Ftuple_Lcolor_Mint_R& __verse_0xB2CDDD72_Argument);
	static struct FColors_color _L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Nfloat_M_Ncolor_R(const struct Ftuple_Lfloat_Mcolor_R& __verse_0xB2CDDD72_Argument);
	static struct FColors_color _L_2fVerse_2eorg_2fColors_N_Roperator_U_2a_U_L_Nint_M_Ncolor_R(const struct Ftuple_Lint_Mcolor_R& __verse_0xB2CDDD72_Argument);
	static struct FColors_color _L_2fVerse_2eorg_2fColors_N_Roperator_U_2b_U_L_Ncolor_M_Ncolor_R(const struct Ftuple_Lcolor_Mcolor_R& __verse_0xB2CDDD72_Argument);
	static struct FColors_color _L_2fVerse_2eorg_2fColors_N_Roperator_U_2d_U_L_Ncolor_M_Ncolor_R(const struct Ftuple_Lcolor_Mcolor_R& __verse_0xB2CDDD72_Argument);
	static FOptionProperty_ _L_2fVerse_2eorg_2fColors_N_Roperator_U_2f_U_L_Ncolor_M_Nfloat_R(const struct Ftuple_Lcolor_Mfloat_R& __verse_0xB2CDDD72_Argument);
	static FOptionProperty_ _L_2fVerse_2eorg_2fColors_N_Roperator_U_2f_U_L_Ncolor_M_Nint_R(const struct Ftuple_Lcolor_Mint_R& __verse_0xB2CDDD72_Argument);
	static struct FColors_color Colors_color_Factory();

	void _InitCDO();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Colors">();
	}
	static class UColors* GetDefaultObj()
	{
		return GetDefaultObjImpl<UColors>();
	}
};
static_assert(alignof(UColors) == 0x000008, "Wrong alignment on UColors");
static_assert(sizeof(UColors) == 0x000028, "Wrong size on UColors");

// VerseClass Verse.Colors_NamedColors
// 0x0DC8 (0x0DF0 - 0x0028)
class UColors_NamedColors final : public UObject
{
public:
	struct FColors_color                          __verse_0x9FBDE6AE_AliceBlue;                      // 0x0028(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xB3F7599D_AntiqueWhite;                   // 0x0040(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x37EE68B4_Aqua;                           // 0x0058(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xA52EBB79_Aquamarine;                     // 0x0070(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xD06EFB2A_Azure;                          // 0x0088(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x8CE5D6D0_Beige;                          // 0x00A0(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xC6B3972A_Bisque;                         // 0x00B8(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x65E4346F_Black;                          // 0x00D0(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x513D3B5F_BlanchedAlmond;                 // 0x00E8(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x80217580_Blue;                           // 0x0100(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x31D0653D_BlueViolet;                     // 0x0118(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xAD308F8F_Brown;                          // 0x0130(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xED3A42A8_Burlywood;                      // 0x0148(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x921A6303_CadetBlue;                      // 0x0160(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x9E2BDE1B_Chartreuse;                     // 0x0178(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x082AED19_Chocolate;                      // 0x0190(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x196BEF87_Coral;                          // 0x01A8(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xC6BCD84F_CornflowerBlue;                 // 0x01C0(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xEE818697_Cornsilk;                       // 0x01D8(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x6733DEF7_Crimson;                        // 0x01F0(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x2D925695_Cyan;                           // 0x0208(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x935B7248_DarkBlue;                       // 0x0220(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x3EE8515D_DarkCyan;                       // 0x0238(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x5817F032_DarkGoldenrod;                  // 0x0250(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x916F3C35_DarkGray;                       // 0x0268(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x37F798B1_DarkGreen;                      // 0x0280(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x6B6176B1_DarkGrey;                       // 0x0298(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x9A5F61FB_DarkKhaki;                      // 0x02B0(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x97899EDF_DarkMagenta;                    // 0x02C8(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xC2E62C73_DarkOliveGreen;                 // 0x02E0(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x7431D49D_DarkOrange;                     // 0x02F8(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xA0C47F58_DarkOrchid;                     // 0x0310(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xA3246E28_DarkRed;                        // 0x0328(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x5A06EB6C_DarkSalmon;                     // 0x0340(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xF141484E_DarkSeaGreen;                   // 0x0358(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x4167AB57_DarkSlateBlue;                  // 0x0370(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x4353E52A_DarkSlateGray;                  // 0x0388(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xB95DAFAE_DarkSlateGrey;                  // 0x03A0(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x26DA5155_DarkTurquoise;                  // 0x03B8(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x3E781A05_DarkViolet;                     // 0x03D0(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x53E148EA_DeepPink;                       // 0x03E8(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xA474CD21_DeepSkyBlue;                    // 0x0400(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xEC312FE8_DimGray;                        // 0x0418(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x163F656C_DimGrey;                        // 0x0430(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x617B6862_DodgerBlue;                     // 0x0448(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xC636E104_Firebrick;                      // 0x0460(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x06164DB2_FloralWhite;                    // 0x0478(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x4939E624_ForestGreen;                    // 0x0490(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x8069E472_Fuchsia;                        // 0x04A8(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x71D0705F_Gainsboro;                      // 0x04C0(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x1EDD5A5B_GhostWhite;                     // 0x04D8(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x0363FA56_Gold;                           // 0x04F0(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x13A0B098_Goldenrod;                      // 0x0508(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x82153BFD_Gray;                           // 0x0520(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x853EAC70_Green;                          // 0x0538(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x94CAEBA0_GreenYellow;                    // 0x0550(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x781B7179_Grey;                           // 0x0568(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x6FB30324_Honeydew;                       // 0x0580(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x2D404B19_Hotpink;                        // 0x0598(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x2CE09720_IndianRed;                      // 0x05B0(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x180B2901_Indigo;                         // 0x05C8(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x1086E2EC_Ivory;                          // 0x05E0(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x2896553A_Khaki;                          // 0x05F8(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xB93AFCDC_Lavender;                       // 0x0610(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x4CF8F931_LavenderBlush;                  // 0x0628(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x08B4792E_LawnGreen;                      // 0x0640(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xCC22276F_LemonChiffon;                   // 0x0658(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x607C97F4_LightBlue;                      // 0x0670(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x89B3D40E_LightCoral;                     // 0x0688(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xCDCFB4E1_LightCyan;                      // 0x06A0(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x6C11FD65_LightGoldenrodYellow;           // 0x06B8(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x6248D989_LightGray;                      // 0x06D0(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x15E697F9_LightGreen;                     // 0x06E8(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x9846930D_LightGrey;                      // 0x0700(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xC34ABDCC_LightPink;                      // 0x0718(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xC57DAB84_LightSalmon;                    // 0x0730(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x0FE57B41_LightSeaGreen;                  // 0x0748(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x4077C098_LightSkyBlue;                   // 0x0760(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xCABFF9F6_LightSlateGray;                 // 0x0778(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x30B1B372_LightSlateGrey;                 // 0x0790(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xEFD2DF75_LightSteelBlue;                 // 0x07A8(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x5732C477_LightYellow;                    // 0x07C0(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xA58A0A97_Lime;                           // 0x07D8(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xC8D6E552_LimeGreen;                      // 0x07F0(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xD014B08F_Linen;                          // 0x0808(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xC5065659_Magenta;                        // 0x0820(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x2C6B6225_Maroon;                         // 0x0838(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x603DC640_MediumAquamarine;               // 0x0850(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x03344EDD_MediumBlue;                     // 0x0868(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xEB235F60_MediumOrchid;                   // 0x0880(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x80AC62AF_MediumPurple;                   // 0x0898(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xA2F1456A_MediumSeaGreen;                 // 0x08B0(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x81A3E0C2_MediumSlateBlue;                // 0x08C8(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x8259C923_MediumSpringGreen;              // 0x08E0(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xE61E1AC0_MediumTurquoise;                // 0x08F8(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x750A73D1_MediumVioletRed;                // 0x0910(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x54B068FD_MidnightBlue;                   // 0x0928(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x2D5517E3_MintCream;                      // 0x0940(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xC9B38859_MistyRose;                      // 0x0958(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x045E548D_Moccasin;                       // 0x0970(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x66A473BA_NavajoWhite;                    // 0x0988(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x621CB82D_Navy;                           // 0x09A0(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x4433768E_OldLace;                        // 0x09B8(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x4ADCED0B_Olive;                          // 0x09D0(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x662F5053_OliveDrab;                      // 0x09E8(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x7B1B98E3_Orange;                         // 0x0A00(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x31DF128E_OrangeRed;                      // 0x0A18(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xAFEE3326_Orchid;                         // 0x0A30(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xA90612F2_PaleGoldenrod;                  // 0x0A48(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x6494F519_PaleGreen;                      // 0x0A60(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xD7CBB395_PaleTurquoise;                  // 0x0A78(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xBC04EB9C_PaleVioletred;                  // 0x0A90(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x1267A5CE_PapayaWhip;                     // 0x0AA8(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x5B815063_PeachPuff;                      // 0x0AC0(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x6A5E8726_Peru;                           // 0x0AD8(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x23175FB8_Pink;                           // 0x0AF0(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x92124624_Plum;                           // 0x0B08(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x315A9690_PowderBlue;                     // 0x0B20(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xC4610EE9_Purple;                         // 0x0B38(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x77CCDA87_Red;                            // 0x0B50(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xFB01846B_RosyBrown;                      // 0x0B68(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xA95C80D8_RoyalBlue;                      // 0x0B80(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xFCC2BB8C_SaddleBrown;                    // 0x0B98(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x552CA712_Salmon;                         // 0x0BB0(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xE1C22521_SandyBrown;                     // 0x0BC8(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x36A1DDC2_SeaGreen;                       // 0x0BE0(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x58B624CB_SeaShell;                       // 0x0BF8(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x013650B1_Sienna;                         // 0x0C10(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xFA47F979_Silver;                         // 0x0C28(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x1EAB27FD_SkyBlue;                        // 0x0C40(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x0AD0EBFD_SlateBlue;                      // 0x0C58(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x08E4A580_SlateGray;                      // 0x0C70(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xF2EAEF04_SlateGrey;                      // 0x0C88(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xE7A26A33_Snow;                           // 0x0CA0(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x2CD5AEB9_SpringGreen;                    // 0x0CB8(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x2D898303_SteelBlue;                      // 0x0CD0(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x09871083_Tan;                            // 0x0CE8(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x303C932D_Teal;                           // 0x0D00(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x303F6677_Thistle;                        // 0x0D18(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x4DC64808_Tomato;                         // 0x0D30(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x6D6D11FF_Turquoise;                      // 0x0D48(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x3152567B_Violet;                         // 0x0D60(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x13A81039_Wheat;                          // 0x0D78(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0x27EAE4E0_White;                          // 0x0D90(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xBE90A762_WhiteSmoke;                     // 0x0DA8(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xC763C8E1_Yellow;                         // 0x0DC0(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FColors_color                          __verse_0xF10B434A_YellowGreen;                    // 0x0DD8(0x0018)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)

public:
	void _InitCDO();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Colors_NamedColors">();
	}
	static class UColors_NamedColors* GetDefaultObj()
	{
		return GetDefaultObjImpl<UColors_NamedColors>();
	}
};
static_assert(alignof(UColors_NamedColors) == 0x000008, "Wrong alignment on UColors_NamedColors");
static_assert(sizeof(UColors_NamedColors) == 0x000DF0, "Wrong size on UColors_NamedColors");
static_assert(offsetof(UColors_NamedColors, __verse_0x9FBDE6AE_AliceBlue) == 0x000028, "Member 'UColors_NamedColors::__verse_0x9FBDE6AE_AliceBlue' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xB3F7599D_AntiqueWhite) == 0x000040, "Member 'UColors_NamedColors::__verse_0xB3F7599D_AntiqueWhite' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x37EE68B4_Aqua) == 0x000058, "Member 'UColors_NamedColors::__verse_0x37EE68B4_Aqua' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xA52EBB79_Aquamarine) == 0x000070, "Member 'UColors_NamedColors::__verse_0xA52EBB79_Aquamarine' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xD06EFB2A_Azure) == 0x000088, "Member 'UColors_NamedColors::__verse_0xD06EFB2A_Azure' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x8CE5D6D0_Beige) == 0x0000A0, "Member 'UColors_NamedColors::__verse_0x8CE5D6D0_Beige' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xC6B3972A_Bisque) == 0x0000B8, "Member 'UColors_NamedColors::__verse_0xC6B3972A_Bisque' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x65E4346F_Black) == 0x0000D0, "Member 'UColors_NamedColors::__verse_0x65E4346F_Black' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x513D3B5F_BlanchedAlmond) == 0x0000E8, "Member 'UColors_NamedColors::__verse_0x513D3B5F_BlanchedAlmond' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x80217580_Blue) == 0x000100, "Member 'UColors_NamedColors::__verse_0x80217580_Blue' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x31D0653D_BlueViolet) == 0x000118, "Member 'UColors_NamedColors::__verse_0x31D0653D_BlueViolet' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xAD308F8F_Brown) == 0x000130, "Member 'UColors_NamedColors::__verse_0xAD308F8F_Brown' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xED3A42A8_Burlywood) == 0x000148, "Member 'UColors_NamedColors::__verse_0xED3A42A8_Burlywood' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x921A6303_CadetBlue) == 0x000160, "Member 'UColors_NamedColors::__verse_0x921A6303_CadetBlue' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x9E2BDE1B_Chartreuse) == 0x000178, "Member 'UColors_NamedColors::__verse_0x9E2BDE1B_Chartreuse' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x082AED19_Chocolate) == 0x000190, "Member 'UColors_NamedColors::__verse_0x082AED19_Chocolate' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x196BEF87_Coral) == 0x0001A8, "Member 'UColors_NamedColors::__verse_0x196BEF87_Coral' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xC6BCD84F_CornflowerBlue) == 0x0001C0, "Member 'UColors_NamedColors::__verse_0xC6BCD84F_CornflowerBlue' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xEE818697_Cornsilk) == 0x0001D8, "Member 'UColors_NamedColors::__verse_0xEE818697_Cornsilk' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x6733DEF7_Crimson) == 0x0001F0, "Member 'UColors_NamedColors::__verse_0x6733DEF7_Crimson' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x2D925695_Cyan) == 0x000208, "Member 'UColors_NamedColors::__verse_0x2D925695_Cyan' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x935B7248_DarkBlue) == 0x000220, "Member 'UColors_NamedColors::__verse_0x935B7248_DarkBlue' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x3EE8515D_DarkCyan) == 0x000238, "Member 'UColors_NamedColors::__verse_0x3EE8515D_DarkCyan' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x5817F032_DarkGoldenrod) == 0x000250, "Member 'UColors_NamedColors::__verse_0x5817F032_DarkGoldenrod' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x916F3C35_DarkGray) == 0x000268, "Member 'UColors_NamedColors::__verse_0x916F3C35_DarkGray' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x37F798B1_DarkGreen) == 0x000280, "Member 'UColors_NamedColors::__verse_0x37F798B1_DarkGreen' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x6B6176B1_DarkGrey) == 0x000298, "Member 'UColors_NamedColors::__verse_0x6B6176B1_DarkGrey' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x9A5F61FB_DarkKhaki) == 0x0002B0, "Member 'UColors_NamedColors::__verse_0x9A5F61FB_DarkKhaki' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x97899EDF_DarkMagenta) == 0x0002C8, "Member 'UColors_NamedColors::__verse_0x97899EDF_DarkMagenta' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xC2E62C73_DarkOliveGreen) == 0x0002E0, "Member 'UColors_NamedColors::__verse_0xC2E62C73_DarkOliveGreen' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x7431D49D_DarkOrange) == 0x0002F8, "Member 'UColors_NamedColors::__verse_0x7431D49D_DarkOrange' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xA0C47F58_DarkOrchid) == 0x000310, "Member 'UColors_NamedColors::__verse_0xA0C47F58_DarkOrchid' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xA3246E28_DarkRed) == 0x000328, "Member 'UColors_NamedColors::__verse_0xA3246E28_DarkRed' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x5A06EB6C_DarkSalmon) == 0x000340, "Member 'UColors_NamedColors::__verse_0x5A06EB6C_DarkSalmon' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xF141484E_DarkSeaGreen) == 0x000358, "Member 'UColors_NamedColors::__verse_0xF141484E_DarkSeaGreen' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x4167AB57_DarkSlateBlue) == 0x000370, "Member 'UColors_NamedColors::__verse_0x4167AB57_DarkSlateBlue' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x4353E52A_DarkSlateGray) == 0x000388, "Member 'UColors_NamedColors::__verse_0x4353E52A_DarkSlateGray' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xB95DAFAE_DarkSlateGrey) == 0x0003A0, "Member 'UColors_NamedColors::__verse_0xB95DAFAE_DarkSlateGrey' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x26DA5155_DarkTurquoise) == 0x0003B8, "Member 'UColors_NamedColors::__verse_0x26DA5155_DarkTurquoise' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x3E781A05_DarkViolet) == 0x0003D0, "Member 'UColors_NamedColors::__verse_0x3E781A05_DarkViolet' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x53E148EA_DeepPink) == 0x0003E8, "Member 'UColors_NamedColors::__verse_0x53E148EA_DeepPink' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xA474CD21_DeepSkyBlue) == 0x000400, "Member 'UColors_NamedColors::__verse_0xA474CD21_DeepSkyBlue' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xEC312FE8_DimGray) == 0x000418, "Member 'UColors_NamedColors::__verse_0xEC312FE8_DimGray' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x163F656C_DimGrey) == 0x000430, "Member 'UColors_NamedColors::__verse_0x163F656C_DimGrey' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x617B6862_DodgerBlue) == 0x000448, "Member 'UColors_NamedColors::__verse_0x617B6862_DodgerBlue' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xC636E104_Firebrick) == 0x000460, "Member 'UColors_NamedColors::__verse_0xC636E104_Firebrick' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x06164DB2_FloralWhite) == 0x000478, "Member 'UColors_NamedColors::__verse_0x06164DB2_FloralWhite' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x4939E624_ForestGreen) == 0x000490, "Member 'UColors_NamedColors::__verse_0x4939E624_ForestGreen' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x8069E472_Fuchsia) == 0x0004A8, "Member 'UColors_NamedColors::__verse_0x8069E472_Fuchsia' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x71D0705F_Gainsboro) == 0x0004C0, "Member 'UColors_NamedColors::__verse_0x71D0705F_Gainsboro' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x1EDD5A5B_GhostWhite) == 0x0004D8, "Member 'UColors_NamedColors::__verse_0x1EDD5A5B_GhostWhite' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x0363FA56_Gold) == 0x0004F0, "Member 'UColors_NamedColors::__verse_0x0363FA56_Gold' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x13A0B098_Goldenrod) == 0x000508, "Member 'UColors_NamedColors::__verse_0x13A0B098_Goldenrod' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x82153BFD_Gray) == 0x000520, "Member 'UColors_NamedColors::__verse_0x82153BFD_Gray' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x853EAC70_Green) == 0x000538, "Member 'UColors_NamedColors::__verse_0x853EAC70_Green' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x94CAEBA0_GreenYellow) == 0x000550, "Member 'UColors_NamedColors::__verse_0x94CAEBA0_GreenYellow' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x781B7179_Grey) == 0x000568, "Member 'UColors_NamedColors::__verse_0x781B7179_Grey' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x6FB30324_Honeydew) == 0x000580, "Member 'UColors_NamedColors::__verse_0x6FB30324_Honeydew' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x2D404B19_Hotpink) == 0x000598, "Member 'UColors_NamedColors::__verse_0x2D404B19_Hotpink' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x2CE09720_IndianRed) == 0x0005B0, "Member 'UColors_NamedColors::__verse_0x2CE09720_IndianRed' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x180B2901_Indigo) == 0x0005C8, "Member 'UColors_NamedColors::__verse_0x180B2901_Indigo' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x1086E2EC_Ivory) == 0x0005E0, "Member 'UColors_NamedColors::__verse_0x1086E2EC_Ivory' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x2896553A_Khaki) == 0x0005F8, "Member 'UColors_NamedColors::__verse_0x2896553A_Khaki' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xB93AFCDC_Lavender) == 0x000610, "Member 'UColors_NamedColors::__verse_0xB93AFCDC_Lavender' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x4CF8F931_LavenderBlush) == 0x000628, "Member 'UColors_NamedColors::__verse_0x4CF8F931_LavenderBlush' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x08B4792E_LawnGreen) == 0x000640, "Member 'UColors_NamedColors::__verse_0x08B4792E_LawnGreen' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xCC22276F_LemonChiffon) == 0x000658, "Member 'UColors_NamedColors::__verse_0xCC22276F_LemonChiffon' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x607C97F4_LightBlue) == 0x000670, "Member 'UColors_NamedColors::__verse_0x607C97F4_LightBlue' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x89B3D40E_LightCoral) == 0x000688, "Member 'UColors_NamedColors::__verse_0x89B3D40E_LightCoral' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xCDCFB4E1_LightCyan) == 0x0006A0, "Member 'UColors_NamedColors::__verse_0xCDCFB4E1_LightCyan' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x6C11FD65_LightGoldenrodYellow) == 0x0006B8, "Member 'UColors_NamedColors::__verse_0x6C11FD65_LightGoldenrodYellow' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x6248D989_LightGray) == 0x0006D0, "Member 'UColors_NamedColors::__verse_0x6248D989_LightGray' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x15E697F9_LightGreen) == 0x0006E8, "Member 'UColors_NamedColors::__verse_0x15E697F9_LightGreen' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x9846930D_LightGrey) == 0x000700, "Member 'UColors_NamedColors::__verse_0x9846930D_LightGrey' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xC34ABDCC_LightPink) == 0x000718, "Member 'UColors_NamedColors::__verse_0xC34ABDCC_LightPink' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xC57DAB84_LightSalmon) == 0x000730, "Member 'UColors_NamedColors::__verse_0xC57DAB84_LightSalmon' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x0FE57B41_LightSeaGreen) == 0x000748, "Member 'UColors_NamedColors::__verse_0x0FE57B41_LightSeaGreen' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x4077C098_LightSkyBlue) == 0x000760, "Member 'UColors_NamedColors::__verse_0x4077C098_LightSkyBlue' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xCABFF9F6_LightSlateGray) == 0x000778, "Member 'UColors_NamedColors::__verse_0xCABFF9F6_LightSlateGray' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x30B1B372_LightSlateGrey) == 0x000790, "Member 'UColors_NamedColors::__verse_0x30B1B372_LightSlateGrey' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xEFD2DF75_LightSteelBlue) == 0x0007A8, "Member 'UColors_NamedColors::__verse_0xEFD2DF75_LightSteelBlue' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x5732C477_LightYellow) == 0x0007C0, "Member 'UColors_NamedColors::__verse_0x5732C477_LightYellow' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xA58A0A97_Lime) == 0x0007D8, "Member 'UColors_NamedColors::__verse_0xA58A0A97_Lime' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xC8D6E552_LimeGreen) == 0x0007F0, "Member 'UColors_NamedColors::__verse_0xC8D6E552_LimeGreen' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xD014B08F_Linen) == 0x000808, "Member 'UColors_NamedColors::__verse_0xD014B08F_Linen' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xC5065659_Magenta) == 0x000820, "Member 'UColors_NamedColors::__verse_0xC5065659_Magenta' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x2C6B6225_Maroon) == 0x000838, "Member 'UColors_NamedColors::__verse_0x2C6B6225_Maroon' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x603DC640_MediumAquamarine) == 0x000850, "Member 'UColors_NamedColors::__verse_0x603DC640_MediumAquamarine' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x03344EDD_MediumBlue) == 0x000868, "Member 'UColors_NamedColors::__verse_0x03344EDD_MediumBlue' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xEB235F60_MediumOrchid) == 0x000880, "Member 'UColors_NamedColors::__verse_0xEB235F60_MediumOrchid' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x80AC62AF_MediumPurple) == 0x000898, "Member 'UColors_NamedColors::__verse_0x80AC62AF_MediumPurple' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xA2F1456A_MediumSeaGreen) == 0x0008B0, "Member 'UColors_NamedColors::__verse_0xA2F1456A_MediumSeaGreen' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x81A3E0C2_MediumSlateBlue) == 0x0008C8, "Member 'UColors_NamedColors::__verse_0x81A3E0C2_MediumSlateBlue' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x8259C923_MediumSpringGreen) == 0x0008E0, "Member 'UColors_NamedColors::__verse_0x8259C923_MediumSpringGreen' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xE61E1AC0_MediumTurquoise) == 0x0008F8, "Member 'UColors_NamedColors::__verse_0xE61E1AC0_MediumTurquoise' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x750A73D1_MediumVioletRed) == 0x000910, "Member 'UColors_NamedColors::__verse_0x750A73D1_MediumVioletRed' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x54B068FD_MidnightBlue) == 0x000928, "Member 'UColors_NamedColors::__verse_0x54B068FD_MidnightBlue' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x2D5517E3_MintCream) == 0x000940, "Member 'UColors_NamedColors::__verse_0x2D5517E3_MintCream' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xC9B38859_MistyRose) == 0x000958, "Member 'UColors_NamedColors::__verse_0xC9B38859_MistyRose' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x045E548D_Moccasin) == 0x000970, "Member 'UColors_NamedColors::__verse_0x045E548D_Moccasin' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x66A473BA_NavajoWhite) == 0x000988, "Member 'UColors_NamedColors::__verse_0x66A473BA_NavajoWhite' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x621CB82D_Navy) == 0x0009A0, "Member 'UColors_NamedColors::__verse_0x621CB82D_Navy' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x4433768E_OldLace) == 0x0009B8, "Member 'UColors_NamedColors::__verse_0x4433768E_OldLace' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x4ADCED0B_Olive) == 0x0009D0, "Member 'UColors_NamedColors::__verse_0x4ADCED0B_Olive' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x662F5053_OliveDrab) == 0x0009E8, "Member 'UColors_NamedColors::__verse_0x662F5053_OliveDrab' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x7B1B98E3_Orange) == 0x000A00, "Member 'UColors_NamedColors::__verse_0x7B1B98E3_Orange' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x31DF128E_OrangeRed) == 0x000A18, "Member 'UColors_NamedColors::__verse_0x31DF128E_OrangeRed' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xAFEE3326_Orchid) == 0x000A30, "Member 'UColors_NamedColors::__verse_0xAFEE3326_Orchid' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xA90612F2_PaleGoldenrod) == 0x000A48, "Member 'UColors_NamedColors::__verse_0xA90612F2_PaleGoldenrod' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x6494F519_PaleGreen) == 0x000A60, "Member 'UColors_NamedColors::__verse_0x6494F519_PaleGreen' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xD7CBB395_PaleTurquoise) == 0x000A78, "Member 'UColors_NamedColors::__verse_0xD7CBB395_PaleTurquoise' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xBC04EB9C_PaleVioletred) == 0x000A90, "Member 'UColors_NamedColors::__verse_0xBC04EB9C_PaleVioletred' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x1267A5CE_PapayaWhip) == 0x000AA8, "Member 'UColors_NamedColors::__verse_0x1267A5CE_PapayaWhip' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x5B815063_PeachPuff) == 0x000AC0, "Member 'UColors_NamedColors::__verse_0x5B815063_PeachPuff' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x6A5E8726_Peru) == 0x000AD8, "Member 'UColors_NamedColors::__verse_0x6A5E8726_Peru' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x23175FB8_Pink) == 0x000AF0, "Member 'UColors_NamedColors::__verse_0x23175FB8_Pink' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x92124624_Plum) == 0x000B08, "Member 'UColors_NamedColors::__verse_0x92124624_Plum' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x315A9690_PowderBlue) == 0x000B20, "Member 'UColors_NamedColors::__verse_0x315A9690_PowderBlue' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xC4610EE9_Purple) == 0x000B38, "Member 'UColors_NamedColors::__verse_0xC4610EE9_Purple' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x77CCDA87_Red) == 0x000B50, "Member 'UColors_NamedColors::__verse_0x77CCDA87_Red' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xFB01846B_RosyBrown) == 0x000B68, "Member 'UColors_NamedColors::__verse_0xFB01846B_RosyBrown' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xA95C80D8_RoyalBlue) == 0x000B80, "Member 'UColors_NamedColors::__verse_0xA95C80D8_RoyalBlue' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xFCC2BB8C_SaddleBrown) == 0x000B98, "Member 'UColors_NamedColors::__verse_0xFCC2BB8C_SaddleBrown' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x552CA712_Salmon) == 0x000BB0, "Member 'UColors_NamedColors::__verse_0x552CA712_Salmon' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xE1C22521_SandyBrown) == 0x000BC8, "Member 'UColors_NamedColors::__verse_0xE1C22521_SandyBrown' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x36A1DDC2_SeaGreen) == 0x000BE0, "Member 'UColors_NamedColors::__verse_0x36A1DDC2_SeaGreen' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x58B624CB_SeaShell) == 0x000BF8, "Member 'UColors_NamedColors::__verse_0x58B624CB_SeaShell' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x013650B1_Sienna) == 0x000C10, "Member 'UColors_NamedColors::__verse_0x013650B1_Sienna' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xFA47F979_Silver) == 0x000C28, "Member 'UColors_NamedColors::__verse_0xFA47F979_Silver' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x1EAB27FD_SkyBlue) == 0x000C40, "Member 'UColors_NamedColors::__verse_0x1EAB27FD_SkyBlue' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x0AD0EBFD_SlateBlue) == 0x000C58, "Member 'UColors_NamedColors::__verse_0x0AD0EBFD_SlateBlue' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x08E4A580_SlateGray) == 0x000C70, "Member 'UColors_NamedColors::__verse_0x08E4A580_SlateGray' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xF2EAEF04_SlateGrey) == 0x000C88, "Member 'UColors_NamedColors::__verse_0xF2EAEF04_SlateGrey' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xE7A26A33_Snow) == 0x000CA0, "Member 'UColors_NamedColors::__verse_0xE7A26A33_Snow' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x2CD5AEB9_SpringGreen) == 0x000CB8, "Member 'UColors_NamedColors::__verse_0x2CD5AEB9_SpringGreen' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x2D898303_SteelBlue) == 0x000CD0, "Member 'UColors_NamedColors::__verse_0x2D898303_SteelBlue' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x09871083_Tan) == 0x000CE8, "Member 'UColors_NamedColors::__verse_0x09871083_Tan' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x303C932D_Teal) == 0x000D00, "Member 'UColors_NamedColors::__verse_0x303C932D_Teal' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x303F6677_Thistle) == 0x000D18, "Member 'UColors_NamedColors::__verse_0x303F6677_Thistle' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x4DC64808_Tomato) == 0x000D30, "Member 'UColors_NamedColors::__verse_0x4DC64808_Tomato' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x6D6D11FF_Turquoise) == 0x000D48, "Member 'UColors_NamedColors::__verse_0x6D6D11FF_Turquoise' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x3152567B_Violet) == 0x000D60, "Member 'UColors_NamedColors::__verse_0x3152567B_Violet' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x13A81039_Wheat) == 0x000D78, "Member 'UColors_NamedColors::__verse_0x13A81039_Wheat' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0x27EAE4E0_White) == 0x000D90, "Member 'UColors_NamedColors::__verse_0x27EAE4E0_White' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xBE90A762_WhiteSmoke) == 0x000DA8, "Member 'UColors_NamedColors::__verse_0xBE90A762_WhiteSmoke' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xC763C8E1_Yellow) == 0x000DC0, "Member 'UColors_NamedColors::__verse_0xC763C8E1_Yellow' has a wrong offset!");
static_assert(offsetof(UColors_NamedColors, __verse_0xF10B434A_YellowGreen) == 0x000DD8, "Member 'UColors_NamedColors::__verse_0xF10B434A_YellowGreen' has a wrong offset!");

// VerseClass Verse.Random
// 0x0000 (0x0028 - 0x0028)
class URandom final : public UObject
{
public:
	static double _L_2fVerse_2eorg_2fRandom_N_RGetRandomFloat_L_Nfloat_M_Nfloat_R(const struct Verse::Ftuple_Lfloat_Mfloat_R& __verse_0xB2CDDD72_Argument);
	static int64 _L_2fVerse_2eorg_2fRandom_N_RGetRandomInt_L_Nint_M_Nint_R(const struct Verse::Ftuple_Lint_Mint_R& __verse_0xB2CDDD72_Argument);
	static TArray<FVerseDynamicProperty_> _L_2fVerse_2eorg_2fRandom_N_RShuffle_L_N_Kt_20where_20t_R(const TArray<FVerseDynamicProperty_>& __verse_0xB2CDDD72_Argument);

	void _InitCDO();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Random">();
	}
	static class URandom* GetDefaultObj()
	{
		return GetDefaultObjImpl<URandom>();
	}
};
static_assert(alignof(URandom) == 0x000008, "Wrong alignment on URandom");
static_assert(sizeof(URandom) == 0x000028, "Wrong size on URandom");

// VerseClass Verse.Verse_disposable
// 0x0000 (0x0028 - 0x0028)
class UVerse_disposable final : public UObject
{
public:
	void _L_2fVerse_2eorg_2fVerse_2fdisposable_N_RDispose(const struct Verse::Ftuple_L_R& __verse_0xB2CDDD72_Argument);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Verse_disposable">();
	}
	static class UVerse_disposable* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerse_disposable>();
	}
};
static_assert(alignof(UVerse_disposable) == 0x000008, "Wrong alignment on UVerse_disposable");
static_assert(sizeof(UVerse_disposable) == 0x000028, "Wrong size on UVerse_disposable");

// VerseClass Verse.task_Verse_event$Await
// 0x0020 (0x0168 - 0x0148)
class Utask_Verse_event_Await final : public UConcurrency_task
{
public:
	class UVerse_event*                           _Self;                                             // 0x0148(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct Verse::Ftuple_L_R                      __verse_0xB2CDDD72_Argument;                       // 0x0150(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseDynamicProperty_                        _RetVal;                                           // 0x0158(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)

public:
	int64 Update();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"task_Verse_event$Await">();
	}
	static class Utask_Verse_event_Await* GetDefaultObj()
	{
		return GetDefaultObjImpl<Utask_Verse_event_Await>();
	}
};
static_assert(alignof(Utask_Verse_event_Await) == 0x000008, "Wrong alignment on Utask_Verse_event_Await");
static_assert(sizeof(Utask_Verse_event_Await) == 0x000168, "Wrong size on Utask_Verse_event_Await");
static_assert(offsetof(Utask_Verse_event_Await, _Self) == 0x000148, "Member 'Utask_Verse_event_Await::_Self' has a wrong offset!");
static_assert(offsetof(Utask_Verse_event_Await, __verse_0xB2CDDD72_Argument) == 0x000150, "Member 'Utask_Verse_event_Await::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Utask_Verse_event_Await, _RetVal) == 0x000158, "Member 'Utask_Verse_event_Await::_RetVal' has a wrong offset!");

// VerseClass Verse.Verse
// 0x0008 (0x0030 - 0x0028)
class UVerse final : public UObject
{
public:
	double                                        __verse_0x34BB10F0_PiFloat;                        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static double _L_2fVerse_2eorg_2fVerse_N_RArcCos_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RArCosh_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RArcSin_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RArcTan_L_Nfloat_M_Nfloat_R(const struct Verse::Ftuple_Lfloat_Mfloat_R& __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RArcTan_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RArSinh_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RArTanh_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static FOptionProperty_ _L_2fVerse_2eorg_2fVerse_N_RCeil_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nfloat_M_Nfloat_M_Nfloat_R(const struct Verse::Ftuple_Lfloat_Mfloat_Mfloat_R& __verse_0xB2CDDD72_Argument);
	static int64 _L_2fVerse_2eorg_2fVerse_N_RClamp_L_Nint_M_Nint_M_Nint_R(const struct Ftuple_Lint_Mint_Mint_R& __verse_0xB2CDDD72_Argument);
	static TArray<FVerseDynamicProperty_> _L_2fVerse_2eorg_2fVerse_N_RConcatenate_L_N_K_Kt_20where_20t_R(const TArray<TArray<FVerseDynamicProperty_>>& __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RCos_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RCosh_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static EVerseFalse _L_2fVerse_2eorg_2fVerse_N_RErr_L_N_Kchar_R(FVerseStringProperty_ __verse_0xB2CDDD72_Argument);
	static class UClass* _L_2fVerse_2eorg_2fVerse_N_Revent(const struct Verse::Ftuple_L_R& __verse_0xB2CDDD72_Argument);
	static class UClass* _L_2fVerse_2eorg_2fVerse_N_Revent_L_Nany_R(class UClass* __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RExp_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static FOptionProperty_ _L_2fVerse_2eorg_2fVerse_N_RFloor_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static FOptionProperty_ _L_2fVerse_2eorg_2fVerse_N_RInt_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static FOptionProperty_ _L_2fVerse_2eorg_2fVerse_N_RIsAlmostEqual_L_Nfloat_M_Nfloat_M_Nfloat_R(const struct Verse::Ftuple_Lfloat_Mfloat_Mfloat_R& __verse_0xB2CDDD72_Argument);
	static FVerseStringProperty_ _L_2fVerse_2eorg_2fVerse_N_RJoin_L_N_K_Kchar_M_N_Kchar_R(const struct Ftuple_L_K_Kchar_M_Kchar_R& __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RLerp_L_Nfloat_M_Nfloat_M_Nfloat_R(const struct Verse::Ftuple_Lfloat_Mfloat_Mfloat_R& __verse_0xB2CDDD72_Argument);
	static class UClass* _L_2fVerse_2eorg_2fVerse_N_Rlistenable(const struct Verse::Ftuple_L_R& __verse_0xB2CDDD72_Argument);
	static class UClass* _L_2fVerse_2eorg_2fVerse_N_Rlistenable_L_Nany_R(class UClass* __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RLn_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static FVerseStringProperty_ _L_2fVerse_2eorg_2fVerse_N_RLocalize_L_N_Kchar_M_Nlocale_R(const struct Ftuple_L_Kchar_M_QWhere_Nlocale_R& __verse_0xB2CDDD72_Argument);
	static FVerseStringProperty_ _L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nfloat_M_Nlocale_R(const struct Ftuple_Lfloat_M_QWhere_Nlocale_R& __verse_0xB2CDDD72_Argument);
	static FVerseStringProperty_ _L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nint_M_Nlocale_R(const struct Ftuple_Lint_M_QWhere_Nlocale_R& __verse_0xB2CDDD72_Argument);
	static FVerseStringProperty_ _L_2fVerse_2eorg_2fVerse_N_RLocalize_L_Nmessage_R(class UVerse_message* __verse_0xB2CDDD72_Argument);
	static FVerseStringProperty_ _L_2fVerse_2eorg_2fVerse_N_RLocalizeInternal_L_N_Kchar_M_N_Kchar_M_N_Ktuple_L_Kchar_M_Kchar_R_M_Nlocale_R(const struct Ftuple_L_Kchar_M_Kchar_M_Ktuple_L_Kchar_M_Kchar_R_Mlocale_R& __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RLog_L_Nfloat_M_Nfloat_R(const struct Verse::Ftuple_Lfloat_Mfloat_R& __verse_0xB2CDDD72_Argument);
	static class UVerse_localizable_string* _L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_N_Kchar_R(FVerseStringProperty_ __verse_0xB2CDDD72_Argument);
	static class UVerse_localizable_float* _L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static class UVerse_localizable_int* _L_2fVerse_2eorg_2fVerse_N_RMakeLocalizableValue_L_Nint_R(int64 __verse_0xB2CDDD72_Argument);
	static class UVerse_message* _L_2fVerse_2eorg_2fVerse_N_RMakeMessageInternal_L_N_Kchar_M_N_Kchar_M_N_5b_Kchar_5dlocalizable__value_R(const struct Verse::Ftuple_L_Kchar_M_Kchar_M_5b_Kchar_5dlocalizable__value_R& __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RMax_L_Nfloat_M_Nfloat_R(const struct Verse::Ftuple_Lfloat_Mfloat_R& __verse_0xB2CDDD72_Argument);
	static int64 _L_2fVerse_2eorg_2fVerse_N_RMax_L_Nint_M_Nint_R(const struct Verse::Ftuple_Lint_Mint_R& __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RMin_L_Nfloat_M_Nfloat_R(const struct Verse::Ftuple_Lfloat_Mfloat_R& __verse_0xB2CDDD72_Argument);
	static int64 _L_2fVerse_2eorg_2fVerse_N_RMin_L_Nint_M_Nint_R(const struct Verse::Ftuple_Lint_Mint_R& __verse_0xB2CDDD72_Argument);
	static FOptionProperty_ _L_2fVerse_2eorg_2fVerse_N_RMod_L_Nint_M_Nint_R(const struct Verse::Ftuple_Lint_Mint_R& __verse_0xB2CDDD72_Argument);
	static FOptionProperty_ _L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eFind_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R(const struct Ftuple_L_Kany_Mtuple_L_R_Many_R& __verse_0xB2CDDD72_Argument);
	static FOptionProperty_ _L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eInsert_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_N_Kt_20where_20t_R(const struct Ftuple_L_Kany_Mtuple_L_R_Mtuple_Lint_M_Kany_R_R& __verse_0xB2CDDD72_Argument);
	static FOptionProperty_ _L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eIsAlmostZero_U_L_Nfloat_M_Ntuple_L_R_M_Nfloat_R(const struct Ftuple_Lfloat_Mtuple_L_R_Mfloat_R& __verse_0xB2CDDD72_Argument);
	static FOptionProperty_ _L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eIsFinite_U_L_Nfloat_M_Ntuple_L_R_R(const struct Verse::Ftuple_Lfloat_Mtuple_L_R_Mtuple_L_R_R& __verse_0xB2CDDD72_Argument);
	static FOptionProperty_ _L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemove_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R(const struct Ftuple_L_Kany_Mtuple_L_R_Mtuple_Lint_Mint_R_R& __verse_0xB2CDDD72_Argument);
	static TArray<FVerseDynamicProperty_> _L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R(const struct Ftuple_L_Kany_Mtuple_L_R_Many_R& __verse_0xB2CDDD72_Argument);
	static FOptionProperty_ _L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R(const struct Ftuple_L_Kany_Mtuple_L_R_Mint_R& __verse_0xB2CDDD72_Argument);
	static FOptionProperty_ _L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eRemoveFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_20where_20t_R(const struct Ftuple_L_Kany_Mtuple_L_R_Many_R& __verse_0xB2CDDD72_Argument);
	static TArray<FVerseDynamicProperty_> _L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAll_U_L_N_Kt_M_Ntuple_L_R_M_N_Kt_M_N_Kt_20where_20t_R(const struct Ftuple_L_Kany_Mtuple_L_R_Mtuple_L_Kany_M_Kany_R_R& __verse_0xB2CDDD72_Argument);
	static TArray<FVerseDynamicProperty_> _L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceAllElements_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R(const struct Ftuple_L_Kany_Mtuple_L_R_Mtuple_Lany_Many_R_R& __verse_0xB2CDDD72_Argument);
	static FOptionProperty_ _L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceElement_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nt_20where_20t_R(const struct Ftuple_L_Kany_Mtuple_L_R_Mtuple_Lint_Many_R_R& __verse_0xB2CDDD72_Argument);
	static FOptionProperty_ _L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eReplaceFirstElement_U_L_N_Kt_M_Ntuple_L_R_M_Nt_M_Nt_20where_20t_R(const struct Ftuple_L_Kany_Mtuple_L_R_Mtuple_Lany_Many_R_R& __verse_0xB2CDDD72_Argument);
	static FOptionProperty_ _L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_20where_20t_R(const struct Ftuple_L_Kany_Mtuple_L_R_Mint_R& __verse_0xB2CDDD72_Argument);
	static FOptionProperty_ _L_2fVerse_2eorg_2fVerse_N_Roperator_U_2eSlice_U_L_N_Kt_M_Ntuple_L_R_M_Nint_M_Nint_20where_20t_R(const struct Ftuple_L_Kany_Mtuple_L_R_Mtuple_Lint_Mint_R_R& __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RPow_L_Nfloat_M_Nfloat_R(const struct Verse::Ftuple_Lfloat_Mfloat_R& __verse_0xB2CDDD72_Argument);
	static void _L_2fVerse_2eorg_2fVerse_N_RPrint_L_N_Kchar_M_Nfloat_M_Ncolor_R(const struct Verse::Ftuple_L_Kchar_M_QDuration_Nfloat_20_3d_20_2e_2e_2e_M_QColor_Ncolor_20_3d_20_2e_2e_2e_R& __verse_0xB2CDDD72_Argument);
	static FOptionProperty_ _L_2fVerse_2eorg_2fVerse_N_RQuotient_L_Nint_M_Nint_R(const struct Verse::Ftuple_Lint_Mint_R& __verse_0xB2CDDD72_Argument);
	static FOptionProperty_ _L_2fVerse_2eorg_2fVerse_N_RRound_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static int64 _L_2fVerse_2eorg_2fVerse_N_RSgn_L_Nint_R(int64 __verse_0xB2CDDD72_Argument);
	static class UClass* _L_2fVerse_2eorg_2fVerse_N_Rsignalable_L_Nany_R(class UClass* __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RSin_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RSinh_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RSqrt_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static class UClass* _L_2fVerse_2eorg_2fVerse_N_Rsubscribable(const struct Verse::Ftuple_L_R& __verse_0xB2CDDD72_Argument);
	static class UClass* _L_2fVerse_2eorg_2fVerse_N_Rsubscribable_L_Nany_R(class UClass* __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RTan_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static double _L_2fVerse_2eorg_2fVerse_N_RTanh_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static FVerseStringProperty_ _L_2fVerse_2eorg_2fVerse_N_RToString_L_N_Kchar_R(FVerseStringProperty_ __verse_0xB2CDDD72_Argument);
	static FVerseStringProperty_ _L_2fVerse_2eorg_2fVerse_N_RToString_L_Nchar32_R(int32 __verse_0xB2CDDD72_Argument);
	static FVerseStringProperty_ _L_2fVerse_2eorg_2fVerse_N_RToString_L_Nchar_R(uint8 __verse_0xB2CDDD72_Argument);
	static FVerseStringProperty_ _L_2fVerse_2eorg_2fVerse_N_RToString_L_Nfloat_R(double __verse_0xB2CDDD72_Argument);
	static FVerseStringProperty_ _L_2fVerse_2eorg_2fVerse_N_RToString_L_Nint_R(int64 __verse_0xB2CDDD72_Argument);
	static struct FVerse_locale Verse_locale_Factory();

	void _InitCDO();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Verse">();
	}
	static class UVerse* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerse>();
	}
};
static_assert(alignof(UVerse) == 0x000008, "Wrong alignment on UVerse");
static_assert(sizeof(UVerse) == 0x000030, "Wrong size on UVerse");
static_assert(offsetof(UVerse, __verse_0x34BB10F0_PiFloat) == 0x000028, "Member 'UVerse::__verse_0x34BB10F0_PiFloat' has a wrong offset!");

// VerseClass Verse.Verse_event
// 0x0058 (0x0080 - 0x0028)
class UVerse_event final : public UObject
{
public:
	FVerseFunctionProperty_                       __verse_0x57187737__L_2fVerse_2eorg_2fVerse_2fevent_2fevent_Lt_R_N_RGetAwaitCount; // 0x0028(0x0010)(InstancedReference, HasGetValueTypeHash)
	FVerseFunctionProperty_                       __verse_0x319692B4__L_2fVerse_2eorg_2fVerse_2fsignalable_2fsignalable_Lpayload_R_N_RSignal_L_Npayload_R; // 0x0038(0x0010)(InstancedReference, HasGetValueTypeHash)
	FVerseFunctionProperty_                       __verse_0x8DE7DBE5_Await;                          // 0x0048(0x0010)(InstancedReference, HasGetValueTypeHash)
	uint8                                         Pad_58[0x28];                                      // 0x0058(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void _Block();
	void _InitCDO();
	void _InitInstance();
	int64 _L_2fVerse_2eorg_2fVerse_2fevent_2fevent_Lt_R_N_RGetAwaitCount(const struct Verse::Ftuple_L_R& __verse_0xB2CDDD72_Argument);
	void _L_2fVerse_2eorg_2fVerse_2fsignalable_2fsignalable_Lpayload_R_N_RSignal_L_Npayload_R(FVerseDynamicProperty_ __verse_0xB2CDDD72_Argument);
	class UConcurrency_task* Await(class UConcurrency_task* __verse_0xC1E81372_CallingTask, int64 __verse_0xA3A00DDB_CallerResumeState, int64 __verse_0x2AC0E4D8_CallerCancelState, const struct Verse::Ftuple_L_R& __verse_0xB2CDDD72_Argument);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Verse_event">();
	}
	static class UVerse_event* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerse_event>();
	}
};
static_assert(alignof(UVerse_event) == 0x000008, "Wrong alignment on UVerse_event");
static_assert(sizeof(UVerse_event) == 0x000080, "Wrong size on UVerse_event");
static_assert(offsetof(UVerse_event, __verse_0x57187737__L_2fVerse_2eorg_2fVerse_2fevent_2fevent_Lt_R_N_RGetAwaitCount) == 0x000028, "Member 'UVerse_event::__verse_0x57187737__L_2fVerse_2eorg_2fVerse_2fevent_2fevent_Lt_R_N_RGetAwaitCount' has a wrong offset!");
static_assert(offsetof(UVerse_event, __verse_0x319692B4__L_2fVerse_2eorg_2fVerse_2fsignalable_2fsignalable_Lpayload_R_N_RSignal_L_Npayload_R) == 0x000038, "Member 'UVerse_event::__verse_0x319692B4__L_2fVerse_2eorg_2fVerse_2fsignalable_2fsignalable_Lpayload_R_N_RSignal_L_Npayload_R' has a wrong offset!");
static_assert(offsetof(UVerse_event, __verse_0x8DE7DBE5_Await) == 0x000048, "Member 'UVerse_event::__verse_0x8DE7DBE5_Await' has a wrong offset!");

// VerseClass Verse.Verse_invalidatable
// 0x0000 (0x0028 - 0x0028)
class UVerse_invalidatable final : public UObject
{
public:
	FOptionProperty_ _L_2fVerse_2eorg_2fVerse_2finvalidatable_N_RIsValid(const struct Verse::Ftuple_L_R& __verse_0xB2CDDD72_Argument);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Verse_invalidatable">();
	}
	static class UVerse_invalidatable* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerse_invalidatable>();
	}
};
static_assert(alignof(UVerse_invalidatable) == 0x000008, "Wrong alignment on UVerse_invalidatable");
static_assert(sizeof(UVerse_invalidatable) == 0x000028, "Wrong size on UVerse_invalidatable");

// VerseClass Verse.Verse_listenable
// 0x0000 (0x0028 - 0x0028)
class UVerse_listenable final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Verse_listenable">();
	}
	static class UVerse_listenable* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerse_listenable>();
	}
};
static_assert(alignof(UVerse_listenable) == 0x000008, "Wrong alignment on UVerse_listenable");
static_assert(sizeof(UVerse_listenable) == 0x000028, "Wrong size on UVerse_listenable");

// VerseClass Verse.Verse_localizable_float
// 0x0018 (0x0040 - 0x0028)
class UVerse_localizable_float final : public UObject
{
public:
	double                                        __verse_0x31A8F10C_Value;                          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FVerseFunctionProperty_                       __verse_0x3FB03556__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R; // 0x0030(0x0010)(InstancedReference, HasGetValueTypeHash)

public:
	void _Block();
	void _InitCDO();
	void _InitInstance();
	FVerseStringProperty_ _L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R(const struct FVerse_locale& __verse_0xB2CDDD72_Argument);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Verse_localizable_float">();
	}
	static class UVerse_localizable_float* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerse_localizable_float>();
	}
};
static_assert(alignof(UVerse_localizable_float) == 0x000008, "Wrong alignment on UVerse_localizable_float");
static_assert(sizeof(UVerse_localizable_float) == 0x000040, "Wrong size on UVerse_localizable_float");
static_assert(offsetof(UVerse_localizable_float, __verse_0x31A8F10C_Value) == 0x000028, "Member 'UVerse_localizable_float::__verse_0x31A8F10C_Value' has a wrong offset!");
static_assert(offsetof(UVerse_localizable_float, __verse_0x3FB03556__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R) == 0x000030, "Member 'UVerse_localizable_float::__verse_0x3FB03556__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R' has a wrong offset!");

// VerseClass Verse.Verse_localizable_int
// 0x0018 (0x0040 - 0x0028)
class UVerse_localizable_int final : public UObject
{
public:
	int64                                         __verse_0x31A8F10C_Value;                          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FVerseFunctionProperty_                       __verse_0x3FB03556__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R; // 0x0030(0x0010)(InstancedReference, HasGetValueTypeHash)

public:
	void _Block();
	void _InitCDO();
	void _InitInstance();
	FVerseStringProperty_ _L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R(const struct FVerse_locale& __verse_0xB2CDDD72_Argument);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Verse_localizable_int">();
	}
	static class UVerse_localizable_int* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerse_localizable_int>();
	}
};
static_assert(alignof(UVerse_localizable_int) == 0x000008, "Wrong alignment on UVerse_localizable_int");
static_assert(sizeof(UVerse_localizable_int) == 0x000040, "Wrong size on UVerse_localizable_int");
static_assert(offsetof(UVerse_localizable_int, __verse_0x31A8F10C_Value) == 0x000028, "Member 'UVerse_localizable_int::__verse_0x31A8F10C_Value' has a wrong offset!");
static_assert(offsetof(UVerse_localizable_int, __verse_0x3FB03556__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R) == 0x000030, "Member 'UVerse_localizable_int::__verse_0x3FB03556__L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R' has a wrong offset!");

// VerseClass Verse.Verse_localizable_value
// 0x0000 (0x0028 - 0x0028)
class UVerse_localizable_value final : public UObject
{
public:
	FVerseStringProperty_ _L_2fVerse_2eorg_2fVerse_2flocalizable__value_N_RLocalizeValue_L_Nlocale_R(const struct FVerse_locale& __verse_0xB2CDDD72_Argument);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Verse_localizable_value">();
	}
	static class UVerse_localizable_value* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerse_localizable_value>();
	}
};
static_assert(alignof(UVerse_localizable_value) == 0x000008, "Wrong alignment on UVerse_localizable_value");
static_assert(sizeof(UVerse_localizable_value) == 0x000028, "Wrong size on UVerse_localizable_value");

// VerseClass Verse.Verse_message
// 0x0070 (0x0098 - 0x0028)
class UVerse_message final : public UObject
{
public:
	FVerseStringProperty_                         __verse_0x589418B4_Key;                            // 0x0028(0x0010)(InstancedReference, HasGetValueTypeHash)
	FVerseStringProperty_                         __verse_0xEDB05B46_DefaultText;                    // 0x0038(0x0010)(InstancedReference, HasGetValueTypeHash)
	TMap<FVerseStringProperty_, class UObject*>   __verse_0x85420AD2_Substitutions;                  // 0x0048(0x0050)(InstancedReference, ContainsInstancedReference)

public:
	void _Block();
	void _InitCDO();
	void _InitInstance();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Verse_message">();
	}
	static class UVerse_message* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerse_message>();
	}
};
static_assert(alignof(UVerse_message) == 0x000008, "Wrong alignment on UVerse_message");
static_assert(sizeof(UVerse_message) == 0x000098, "Wrong size on UVerse_message");
static_assert(offsetof(UVerse_message, __verse_0x589418B4_Key) == 0x000028, "Member 'UVerse_message::__verse_0x589418B4_Key' has a wrong offset!");
static_assert(offsetof(UVerse_message, __verse_0xEDB05B46_DefaultText) == 0x000038, "Member 'UVerse_message::__verse_0xEDB05B46_DefaultText' has a wrong offset!");
static_assert(offsetof(UVerse_message, __verse_0x85420AD2_Substitutions) == 0x000048, "Member 'UVerse_message::__verse_0x85420AD2_Substitutions' has a wrong offset!");

// VerseClass Verse.Verse_signalable
// 0x0000 (0x0028 - 0x0028)
class UVerse_signalable final : public UObject
{
public:
	void _L_2fVerse_2eorg_2fVerse_2fsignalable_2fsignalable_Lpayload_R_N_RSignal_L_Npayload_R(FVerseDynamicProperty_ __verse_0xB2CDDD72_Argument);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Verse_signalable">();
	}
	static class UVerse_signalable* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerse_signalable>();
	}
};
static_assert(alignof(UVerse_signalable) == 0x000008, "Wrong alignment on UVerse_signalable");
static_assert(sizeof(UVerse_signalable) == 0x000028, "Wrong size on UVerse_signalable");

// VerseClass Verse.Verse_subscribable
// 0x0000 (0x0028 - 0x0028)
class UVerse_subscribable final : public UObject
{
public:
	class UObject* _L_2fVerse_2eorg_2fVerse_2fsubscribable_2fsubscribable_Lt_R_N_RSubscribe_L_Nt_Tvoid_R(FVerseFunctionProperty_ __verse_0xB2CDDD72_Argument);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Verse_subscribable">();
	}
	static class UVerse_subscribable* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerse_subscribable>();
	}
};
static_assert(alignof(UVerse_subscribable) == 0x000008, "Wrong alignment on UVerse_subscribable");
static_assert(sizeof(UVerse_subscribable) == 0x000028, "Wrong size on UVerse_subscribable");

}

