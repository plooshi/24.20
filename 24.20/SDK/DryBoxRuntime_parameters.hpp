#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DryBoxRuntime

#include "Basic.hpp"

#include "DryBoxRuntime_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function DryBoxRuntime.NyxGlassWeaponComponent_Swinging.IsAttacking
// 0x0001 (0x0001 - 0x0000)
struct NyxGlassWeaponComponent_Swinging_IsAttacking final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NyxGlassWeaponComponent_Swinging_IsAttacking) == 0x000001, "Wrong alignment on NyxGlassWeaponComponent_Swinging_IsAttacking");
static_assert(sizeof(NyxGlassWeaponComponent_Swinging_IsAttacking) == 0x000001, "Wrong size on NyxGlassWeaponComponent_Swinging_IsAttacking");
static_assert(offsetof(NyxGlassWeaponComponent_Swinging_IsAttacking, ReturnValue) == 0x000000, "Member 'NyxGlassWeaponComponent_Swinging_IsAttacking::ReturnValue' has a wrong offset!");

// Function DryBoxRuntime.NyxGlassWeaponComponent_Swinging.Multicast_SetTargetingDataOnRemoteClients
// 0x0048 (0x0048 - 0x0000)
struct NyxGlassWeaponComponent_Swinging_Multicast_SetTargetingDataOnRemoteClients final
{
public:
	struct FNyxGlassTargetingData                 NewData;                                           // 0x0000(0x0048)(ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(NyxGlassWeaponComponent_Swinging_Multicast_SetTargetingDataOnRemoteClients) == 0x000008, "Wrong alignment on NyxGlassWeaponComponent_Swinging_Multicast_SetTargetingDataOnRemoteClients");
static_assert(sizeof(NyxGlassWeaponComponent_Swinging_Multicast_SetTargetingDataOnRemoteClients) == 0x000048, "Wrong size on NyxGlassWeaponComponent_Swinging_Multicast_SetTargetingDataOnRemoteClients");
static_assert(offsetof(NyxGlassWeaponComponent_Swinging_Multicast_SetTargetingDataOnRemoteClients, NewData) == 0x000000, "Member 'NyxGlassWeaponComponent_Swinging_Multicast_SetTargetingDataOnRemoteClients::NewData' has a wrong offset!");

// Function DryBoxRuntime.NyxGlassWeaponComponent_Swinging.OnNyxGlassStateChanged
// 0x0002 (0x0002 - 0x0000)
struct NyxGlassWeaponComponent_Swinging_OnNyxGlassStateChanged final
{
public:
	ENyxGlassState                                OldState;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ENyxGlassState                                NewState;                                          // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NyxGlassWeaponComponent_Swinging_OnNyxGlassStateChanged) == 0x000001, "Wrong alignment on NyxGlassWeaponComponent_Swinging_OnNyxGlassStateChanged");
static_assert(sizeof(NyxGlassWeaponComponent_Swinging_OnNyxGlassStateChanged) == 0x000002, "Wrong size on NyxGlassWeaponComponent_Swinging_OnNyxGlassStateChanged");
static_assert(offsetof(NyxGlassWeaponComponent_Swinging_OnNyxGlassStateChanged, OldState) == 0x000000, "Member 'NyxGlassWeaponComponent_Swinging_OnNyxGlassStateChanged::OldState' has a wrong offset!");
static_assert(offsetof(NyxGlassWeaponComponent_Swinging_OnNyxGlassStateChanged, NewState) == 0x000001, "Member 'NyxGlassWeaponComponent_Swinging_OnNyxGlassStateChanged::NewState' has a wrong offset!");

// Function DryBoxRuntime.NyxGlassWeaponComponent_Swinging.OnTargetingComplete
// 0x0048 (0x0048 - 0x0000)
struct NyxGlassWeaponComponent_Swinging_OnTargetingComplete final
{
public:
	struct FNyxGlassTargetingData                 TargetingData;                                     // 0x0000(0x0048)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(NyxGlassWeaponComponent_Swinging_OnTargetingComplete) == 0x000008, "Wrong alignment on NyxGlassWeaponComponent_Swinging_OnTargetingComplete");
static_assert(sizeof(NyxGlassWeaponComponent_Swinging_OnTargetingComplete) == 0x000048, "Wrong size on NyxGlassWeaponComponent_Swinging_OnTargetingComplete");
static_assert(offsetof(NyxGlassWeaponComponent_Swinging_OnTargetingComplete, TargetingData) == 0x000000, "Member 'NyxGlassWeaponComponent_Swinging_OnTargetingComplete::TargetingData' has a wrong offset!");

// Function DryBoxRuntime.NyxGlassWeaponComponent_Swinging.OnWeaponUnequip
// 0x0008 (0x0008 - 0x0000)
struct NyxGlassWeaponComponent_Swinging_OnWeaponUnequip final
{
public:
	class AFortWeapon*                            Weapon;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NyxGlassWeaponComponent_Swinging_OnWeaponUnequip) == 0x000008, "Wrong alignment on NyxGlassWeaponComponent_Swinging_OnWeaponUnequip");
static_assert(sizeof(NyxGlassWeaponComponent_Swinging_OnWeaponUnequip) == 0x000008, "Wrong size on NyxGlassWeaponComponent_Swinging_OnWeaponUnequip");
static_assert(offsetof(NyxGlassWeaponComponent_Swinging_OnWeaponUnequip, Weapon) == 0x000000, "Member 'NyxGlassWeaponComponent_Swinging_OnWeaponUnequip::Weapon' has a wrong offset!");

// Function DryBoxRuntime.NyxGlassWeaponComponent_Swinging.Server_SetTargetingData
// 0x0048 (0x0048 - 0x0000)
struct NyxGlassWeaponComponent_Swinging_Server_SetTargetingData final
{
public:
	struct FNyxGlassTargetingData                 NewData;                                           // 0x0000(0x0048)(ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(NyxGlassWeaponComponent_Swinging_Server_SetTargetingData) == 0x000008, "Wrong alignment on NyxGlassWeaponComponent_Swinging_Server_SetTargetingData");
static_assert(sizeof(NyxGlassWeaponComponent_Swinging_Server_SetTargetingData) == 0x000048, "Wrong size on NyxGlassWeaponComponent_Swinging_Server_SetTargetingData");
static_assert(offsetof(NyxGlassWeaponComponent_Swinging_Server_SetTargetingData, NewData) == 0x000000, "Member 'NyxGlassWeaponComponent_Swinging_Server_SetTargetingData::NewData' has a wrong offset!");

// Function DryBoxRuntime.NyxGlassWeaponComponent_Swinging.ShouldUpdateTargeting
// 0x0001 (0x0001 - 0x0000)
struct NyxGlassWeaponComponent_Swinging_ShouldUpdateTargeting final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NyxGlassWeaponComponent_Swinging_ShouldUpdateTargeting) == 0x000001, "Wrong alignment on NyxGlassWeaponComponent_Swinging_ShouldUpdateTargeting");
static_assert(sizeof(NyxGlassWeaponComponent_Swinging_ShouldUpdateTargeting) == 0x000001, "Wrong size on NyxGlassWeaponComponent_Swinging_ShouldUpdateTargeting");
static_assert(offsetof(NyxGlassWeaponComponent_Swinging_ShouldUpdateTargeting, ReturnValue) == 0x000000, "Member 'NyxGlassWeaponComponent_Swinging_ShouldUpdateTargeting::ReturnValue' has a wrong offset!");

// Function DryBoxRuntime.NyxGlassWeaponComponent_Swinging.CalcInitialAccelerationAlpha
// 0x0004 (0x0004 - 0x0000)
struct NyxGlassWeaponComponent_Swinging_CalcInitialAccelerationAlpha final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NyxGlassWeaponComponent_Swinging_CalcInitialAccelerationAlpha) == 0x000004, "Wrong alignment on NyxGlassWeaponComponent_Swinging_CalcInitialAccelerationAlpha");
static_assert(sizeof(NyxGlassWeaponComponent_Swinging_CalcInitialAccelerationAlpha) == 0x000004, "Wrong size on NyxGlassWeaponComponent_Swinging_CalcInitialAccelerationAlpha");
static_assert(offsetof(NyxGlassWeaponComponent_Swinging_CalcInitialAccelerationAlpha, ReturnValue) == 0x000000, "Member 'NyxGlassWeaponComponent_Swinging_CalcInitialAccelerationAlpha::ReturnValue' has a wrong offset!");

// Function DryBoxRuntime.NyxGlassWeaponComponent_Swinging.GetNyxGlassSlashSubstate
// 0x0001 (0x0001 - 0x0000)
struct NyxGlassWeaponComponent_Swinging_GetNyxGlassSlashSubstate final
{
public:
	ENyxGlassSlashSubstate                        ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NyxGlassWeaponComponent_Swinging_GetNyxGlassSlashSubstate) == 0x000001, "Wrong alignment on NyxGlassWeaponComponent_Swinging_GetNyxGlassSlashSubstate");
static_assert(sizeof(NyxGlassWeaponComponent_Swinging_GetNyxGlassSlashSubstate) == 0x000001, "Wrong size on NyxGlassWeaponComponent_Swinging_GetNyxGlassSlashSubstate");
static_assert(offsetof(NyxGlassWeaponComponent_Swinging_GetNyxGlassSlashSubstate, ReturnValue) == 0x000000, "Member 'NyxGlassWeaponComponent_Swinging_GetNyxGlassSlashSubstate::ReturnValue' has a wrong offset!");

// Function DryBoxRuntime.NyxGlassWeaponComponent_Swinging.GetNyxGlassState
// 0x0001 (0x0001 - 0x0000)
struct NyxGlassWeaponComponent_Swinging_GetNyxGlassState final
{
public:
	ENyxGlassState                                ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NyxGlassWeaponComponent_Swinging_GetNyxGlassState) == 0x000001, "Wrong alignment on NyxGlassWeaponComponent_Swinging_GetNyxGlassState");
static_assert(sizeof(NyxGlassWeaponComponent_Swinging_GetNyxGlassState) == 0x000001, "Wrong size on NyxGlassWeaponComponent_Swinging_GetNyxGlassState");
static_assert(offsetof(NyxGlassWeaponComponent_Swinging_GetNyxGlassState, ReturnValue) == 0x000000, "Member 'NyxGlassWeaponComponent_Swinging_GetNyxGlassState::ReturnValue' has a wrong offset!");

// Function DryBoxRuntime.NyxGlassWeaponComponent_Swinging.OnVelocityCalculated
// 0x0058 (0x0058 - 0x0000)
struct NyxGlassWeaponComponent_Swinging_OnVelocityCalculated final
{
public:
	struct FNyxGlassVelocityMetadata              VelocityMetadata;                                  // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(NyxGlassWeaponComponent_Swinging_OnVelocityCalculated) == 0x000008, "Wrong alignment on NyxGlassWeaponComponent_Swinging_OnVelocityCalculated");
static_assert(sizeof(NyxGlassWeaponComponent_Swinging_OnVelocityCalculated) == 0x000058, "Wrong size on NyxGlassWeaponComponent_Swinging_OnVelocityCalculated");
static_assert(offsetof(NyxGlassWeaponComponent_Swinging_OnVelocityCalculated, VelocityMetadata) == 0x000000, "Member 'NyxGlassWeaponComponent_Swinging_OnVelocityCalculated::VelocityMetadata' has a wrong offset!");

// Function DryBoxRuntime.NyxGlassFuelAttributeSet.OnRep_Fuel
// 0x0028 (0x0028 - 0x0000)
struct NyxGlassFuelAttributeSet_OnRep_Fuel final
{
public:
	struct FFortGameplayAttributeData             OldValue;                                          // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(NyxGlassFuelAttributeSet_OnRep_Fuel) == 0x000008, "Wrong alignment on NyxGlassFuelAttributeSet_OnRep_Fuel");
static_assert(sizeof(NyxGlassFuelAttributeSet_OnRep_Fuel) == 0x000028, "Wrong size on NyxGlassFuelAttributeSet_OnRep_Fuel");
static_assert(offsetof(NyxGlassFuelAttributeSet_OnRep_Fuel, OldValue) == 0x000000, "Member 'NyxGlassFuelAttributeSet_OnRep_Fuel::OldValue' has a wrong offset!");

// Function DryBoxRuntime.NyxGlassFuelAttributeSet.OnRep_LocalFuel
// 0x0028 (0x0028 - 0x0000)
struct NyxGlassFuelAttributeSet_OnRep_LocalFuel final
{
public:
	struct FFortGameplayAttributeData             OldValue;                                          // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(NyxGlassFuelAttributeSet_OnRep_LocalFuel) == 0x000008, "Wrong alignment on NyxGlassFuelAttributeSet_OnRep_LocalFuel");
static_assert(sizeof(NyxGlassFuelAttributeSet_OnRep_LocalFuel) == 0x000028, "Wrong size on NyxGlassFuelAttributeSet_OnRep_LocalFuel");
static_assert(offsetof(NyxGlassFuelAttributeSet_OnRep_LocalFuel, OldValue) == 0x000000, "Member 'NyxGlassFuelAttributeSet_OnRep_LocalFuel::OldValue' has a wrong offset!");

}

