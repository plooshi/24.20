#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortniteConversationRuntime

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "CommonConversationRuntime_classes.hpp"


namespace SDK
{

// Class FortniteConversationRuntime.FortConversationMarkerInterface
// 0x0000 (0x0028 - 0x0028)
class IFortConversationMarkerInterface final : public IInterface
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortConversationMarkerInterface">();
	}
	static class IFortConversationMarkerInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IFortConversationMarkerInterface>();
	}
};
static_assert(alignof(IFortConversationMarkerInterface) == 0x000008, "Wrong alignment on IFortConversationMarkerInterface");
static_assert(sizeof(IFortConversationMarkerInterface) == 0x000028, "Wrong size on IFortConversationMarkerInterface");

// Class FortniteConversationRuntime.FortConversationParticipantComponent
// 0x0000 (0x01A0 - 0x01A0)
class UFortConversationParticipantComponent : public UConversationParticipantComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortConversationParticipantComponent">();
	}
	static class UFortConversationParticipantComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortConversationParticipantComponent>();
	}
};
static_assert(alignof(UFortConversationParticipantComponent) == 0x000008, "Wrong alignment on UFortConversationParticipantComponent");
static_assert(sizeof(UFortConversationParticipantComponent) == 0x0001A0, "Wrong size on UFortConversationParticipantComponent");

// Class FortniteConversationRuntime.FortConversationContextCondition
// 0x0000 (0x0028 - 0x0028)
class UFortConversationContextCondition : public UObject
{
public:
	bool DoesContextPass(const struct FConversationContext& Context) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortConversationContextCondition">();
	}
	static class UFortConversationContextCondition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortConversationContextCondition>();
	}
};
static_assert(alignof(UFortConversationContextCondition) == 0x000008, "Wrong alignment on UFortConversationContextCondition");
static_assert(sizeof(UFortConversationContextCondition) == 0x000028, "Wrong size on UFortConversationContextCondition");

// Class FortniteConversationRuntime.FortConversationContextCondition_ParticipantHasCID
// 0x0018 (0x0040 - 0x0028)
class UFortConversationContextCondition_ParticipantHasCID final : public UFortConversationContextCondition
{
public:
	struct FGameplayTag                           ParticipantID;                                     // 0x0028(0x0004)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSoftObjectPath>                AllowedCIDs;                                       // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortConversationContextCondition_ParticipantHasCID">();
	}
	static class UFortConversationContextCondition_ParticipantHasCID* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortConversationContextCondition_ParticipantHasCID>();
	}
};
static_assert(alignof(UFortConversationContextCondition_ParticipantHasCID) == 0x000008, "Wrong alignment on UFortConversationContextCondition_ParticipantHasCID");
static_assert(sizeof(UFortConversationContextCondition_ParticipantHasCID) == 0x000040, "Wrong size on UFortConversationContextCondition_ParticipantHasCID");
static_assert(offsetof(UFortConversationContextCondition_ParticipantHasCID, ParticipantID) == 0x000028, "Member 'UFortConversationContextCondition_ParticipantHasCID::ParticipantID' has a wrong offset!");
static_assert(offsetof(UFortConversationContextCondition_ParticipantHasCID, AllowedCIDs) == 0x000030, "Member 'UFortConversationContextCondition_ParticipantHasCID::AllowedCIDs' has a wrong offset!");

// Class FortniteConversationRuntime.FortConversationContextCondition_ParticipantHasMetaTag
// 0x0008 (0x0030 - 0x0028)
class UFortConversationContextCondition_ParticipantHasMetaTag final : public UFortConversationContextCondition
{
public:
	struct FGameplayTag                           ParticipantID;                                     // 0x0028(0x0004)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                           MetaTag;                                           // 0x002C(0x0004)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortConversationContextCondition_ParticipantHasMetaTag">();
	}
	static class UFortConversationContextCondition_ParticipantHasMetaTag* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortConversationContextCondition_ParticipantHasMetaTag>();
	}
};
static_assert(alignof(UFortConversationContextCondition_ParticipantHasMetaTag) == 0x000008, "Wrong alignment on UFortConversationContextCondition_ParticipantHasMetaTag");
static_assert(sizeof(UFortConversationContextCondition_ParticipantHasMetaTag) == 0x000030, "Wrong size on UFortConversationContextCondition_ParticipantHasMetaTag");
static_assert(offsetof(UFortConversationContextCondition_ParticipantHasMetaTag, ParticipantID) == 0x000028, "Member 'UFortConversationContextCondition_ParticipantHasMetaTag::ParticipantID' has a wrong offset!");
static_assert(offsetof(UFortConversationContextCondition_ParticipantHasMetaTag, MetaTag) == 0x00002C, "Member 'UFortConversationContextCondition_ParticipantHasMetaTag::MetaTag' has a wrong offset!");

// Class FortniteConversationRuntime.FortConversationContextCondition_ParticipantHasOwnedTag
// 0x0008 (0x0030 - 0x0028)
class UFortConversationContextCondition_ParticipantHasOwnedTag final : public UFortConversationContextCondition
{
public:
	struct FGameplayTag                           ParticipantID;                                     // 0x0028(0x0004)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                           OwnedTag;                                          // 0x002C(0x0004)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortConversationContextCondition_ParticipantHasOwnedTag">();
	}
	static class UFortConversationContextCondition_ParticipantHasOwnedTag* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortConversationContextCondition_ParticipantHasOwnedTag>();
	}
};
static_assert(alignof(UFortConversationContextCondition_ParticipantHasOwnedTag) == 0x000008, "Wrong alignment on UFortConversationContextCondition_ParticipantHasOwnedTag");
static_assert(sizeof(UFortConversationContextCondition_ParticipantHasOwnedTag) == 0x000030, "Wrong size on UFortConversationContextCondition_ParticipantHasOwnedTag");
static_assert(offsetof(UFortConversationContextCondition_ParticipantHasOwnedTag, ParticipantID) == 0x000028, "Member 'UFortConversationContextCondition_ParticipantHasOwnedTag::ParticipantID' has a wrong offset!");
static_assert(offsetof(UFortConversationContextCondition_ParticipantHasOwnedTag, OwnedTag) == 0x00002C, "Member 'UFortConversationContextCondition_ParticipantHasOwnedTag::OwnedTag' has a wrong offset!");

// Class FortniteConversationRuntime.FortConversationContextCondition_ParticipantControllerMeetsRequirement
// 0x0010 (0x0038 - 0x0028)
class UFortConversationContextCondition_ParticipantControllerMeetsRequirement final : public UFortConversationContextCondition
{
public:
	struct FGameplayTag                           ParticipantID;                                     // 0x0028(0x0004)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortControllerRequirement*             Requirement;                                       // 0x0030(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortConversationContextCondition_ParticipantControllerMeetsRequirement">();
	}
	static class UFortConversationContextCondition_ParticipantControllerMeetsRequirement* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortConversationContextCondition_ParticipantControllerMeetsRequirement>();
	}
};
static_assert(alignof(UFortConversationContextCondition_ParticipantControllerMeetsRequirement) == 0x000008, "Wrong alignment on UFortConversationContextCondition_ParticipantControllerMeetsRequirement");
static_assert(sizeof(UFortConversationContextCondition_ParticipantControllerMeetsRequirement) == 0x000038, "Wrong size on UFortConversationContextCondition_ParticipantControllerMeetsRequirement");
static_assert(offsetof(UFortConversationContextCondition_ParticipantControllerMeetsRequirement, ParticipantID) == 0x000028, "Member 'UFortConversationContextCondition_ParticipantControllerMeetsRequirement::ParticipantID' has a wrong offset!");
static_assert(offsetof(UFortConversationContextCondition_ParticipantControllerMeetsRequirement, Requirement) == 0x000030, "Member 'UFortConversationContextCondition_ParticipantControllerMeetsRequirement::Requirement' has a wrong offset!");

// Class FortniteConversationRuntime.FortConversationContextConditionHelpers
// 0x0000 (0x0028 - 0x0028)
class UFortConversationContextConditionHelpers final : public UBlueprintFunctionLibrary
{
public:
	static bool GetMessageForContext(const struct FFortConversationNodeConditionalMessages& Messages, const struct FConversationContext& Context, class FText* OutText);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortConversationContextConditionHelpers">();
	}
	static class UFortConversationContextConditionHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortConversationContextConditionHelpers>();
	}
};
static_assert(alignof(UFortConversationContextConditionHelpers) == 0x000008, "Wrong alignment on UFortConversationContextConditionHelpers");
static_assert(sizeof(UFortConversationContextConditionHelpers) == 0x000028, "Wrong size on UFortConversationContextConditionHelpers");

// Class FortniteConversationRuntime.FortConversationParamLibrary
// 0x0000 (0x0028 - 0x0028)
class UFortConversationParamLibrary final : public UBlueprintFunctionLibrary
{
public:
	static bool ExtractConversationParameterValue(const TArray<struct FConversationNodeParameterPair>& ConversationParameters, const class FString& DesiredParameterName, class FString* ParameterValueOut);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortConversationParamLibrary">();
	}
	static class UFortConversationParamLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortConversationParamLibrary>();
	}
};
static_assert(alignof(UFortConversationParamLibrary) == 0x000008, "Wrong alignment on UFortConversationParamLibrary");
static_assert(sizeof(UFortConversationParamLibrary) == 0x000028, "Wrong size on UFortConversationParamLibrary");

// Class FortniteConversationRuntime.FortniteConversationGlobals
// 0x0000 (0x0028 - 0x0028)
class UFortniteConversationGlobals final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortniteConversationGlobals">();
	}
	static class UFortniteConversationGlobals* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortniteConversationGlobals>();
	}
};
static_assert(alignof(UFortniteConversationGlobals) == 0x000008, "Wrong alignment on UFortniteConversationGlobals");
static_assert(sizeof(UFortniteConversationGlobals) == 0x000028, "Wrong size on UFortniteConversationGlobals");

// Class FortniteConversationRuntime.FortPlayerConversationComponent
// 0x0128 (0x02C8 - 0x01A0)
class UFortPlayerConversationComponent : public UFortConversationParticipantComponent
{
public:
	TArray<class UFortNonPlayerConversationParticipantComponent*> ConversationParticipantsInRange;                   // 0x01A0(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	float                                         GreetSphereRadius;                                 // 0x01B0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         IconVisibilityRadius;                              // 0x01B4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         AbortConversationRange;                            // 0x01B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1BC[0x3C];                                     // 0x01BC(0x003C)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class UFortNonPlayerConversationParticipantComponent*> IndicatedNPCConversationComponents;                // 0x01F8(0x0050)(ExportObject, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_248[0x8];                                      // 0x0248(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bMoveShouldAbortConversation;                      // 0x0250(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_251[0x77];                                     // 0x0251(0x0077)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ClientReceiveConversationGiftUINotification(const struct FGiftUINotificationInfo& ConversationGiftUINotification);
	void ClientSpectatorCloseUI();
	void ClientSpectatorOpenUI();
	void HandleDBNOChanged(class AFortPawn* Pawn, bool bIsDBNO);
	void HandleFollowedPlayerChanged(class AFortPlayerControllerSpectating* SpectatingPC, class AFortPlayerState* FollowedPlayerState);
	void HandleViewTargetChanged();
	void HandleWaponEquipped(class AFortWeapon* NewWeapon, class AFortWeapon* PrevWeapon);
	void RequestServerAbortConversation();
	void RequestServerAbortConversationWithParticipant(const class UFortNonPlayerConversationParticipantComponent* Participant);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortPlayerConversationComponent">();
	}
	static class UFortPlayerConversationComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortPlayerConversationComponent>();
	}
};
static_assert(alignof(UFortPlayerConversationComponent) == 0x000008, "Wrong alignment on UFortPlayerConversationComponent");
static_assert(sizeof(UFortPlayerConversationComponent) == 0x0002C8, "Wrong size on UFortPlayerConversationComponent");
static_assert(offsetof(UFortPlayerConversationComponent, ConversationParticipantsInRange) == 0x0001A0, "Member 'UFortPlayerConversationComponent::ConversationParticipantsInRange' has a wrong offset!");
static_assert(offsetof(UFortPlayerConversationComponent, GreetSphereRadius) == 0x0001B0, "Member 'UFortPlayerConversationComponent::GreetSphereRadius' has a wrong offset!");
static_assert(offsetof(UFortPlayerConversationComponent, IconVisibilityRadius) == 0x0001B4, "Member 'UFortPlayerConversationComponent::IconVisibilityRadius' has a wrong offset!");
static_assert(offsetof(UFortPlayerConversationComponent, AbortConversationRange) == 0x0001B8, "Member 'UFortPlayerConversationComponent::AbortConversationRange' has a wrong offset!");
static_assert(offsetof(UFortPlayerConversationComponent, IndicatedNPCConversationComponents) == 0x0001F8, "Member 'UFortPlayerConversationComponent::IndicatedNPCConversationComponents' has a wrong offset!");
static_assert(offsetof(UFortPlayerConversationComponent, bMoveShouldAbortConversation) == 0x000250, "Member 'UFortPlayerConversationComponent::bMoveShouldAbortConversation' has a wrong offset!");

}

