#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCNL_EnvCampFire_Stoke

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GCNL_EnvCampFire_Stoke.GCNL_EnvCampFire_Stoke_C.ExecuteUbergraph_GCNL_EnvCampFire_Stoke
// 0x0230 (0x0230 - 0x0000)
struct GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_MyTarget;                             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters;                           // 0x0018(0x00D0)(ConstParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       K2Node_Event_ParticleComponents;                   // 0x00E8(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                K2Node_Event_AudioComponents;                      // 0x00F8(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TScriptInterface<class ICampfire_Interface_C> K2Node_DynamicCast_AsCampfire_Interface;           // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_Array_Get_Item;                           // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationToSpawnFireVFX_WorldLocation;  // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0148(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke) == 0x000008, "Wrong alignment on GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke");
static_assert(sizeof(GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke) == 0x000230, "Wrong size on GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke");
static_assert(offsetof(GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke, EntryPoint) == 0x000000, "Member 'GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke::EntryPoint' has a wrong offset!");
static_assert(offsetof(GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke, Temp_int_Array_Index_Variable) == 0x000008, "Member 'GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke, K2Node_Event_MyTarget) == 0x000010, "Member 'GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke::K2Node_Event_MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke, K2Node_Event_Parameters) == 0x000018, "Member 'GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke::K2Node_Event_Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke, K2Node_Event_ParticleComponents) == 0x0000E8, "Member 'GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke::K2Node_Event_ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke, K2Node_Event_AudioComponents) == 0x0000F8, "Member 'GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke::K2Node_Event_AudioComponents' has a wrong offset!");
static_assert(offsetof(GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke, K2Node_DynamicCast_AsCampfire_Interface) == 0x000108, "Member 'GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke::K2Node_DynamicCast_AsCampfire_Interface' has a wrong offset!");
static_assert(offsetof(GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke, K2Node_DynamicCast_bSuccess) == 0x000118, "Member 'GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke, CallFunc_Array_Get_Item) == 0x000120, "Member 'GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke, CallFunc_GetLocationToSpawnFireVFX_WorldLocation) == 0x000128, "Member 'GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke::CallFunc_GetLocationToSpawnFireVFX_WorldLocation' has a wrong offset!");
static_assert(offsetof(GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke, CallFunc_Array_Length_ReturnValue) == 0x000140, "Member 'GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000148, "Member 'GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke, CallFunc_Less_IntInt_ReturnValue) == 0x000228, "Member 'GCNL_EnvCampFire_Stoke_C_ExecuteUbergraph_GCNL_EnvCampFire_Stoke::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function GCNL_EnvCampFire_Stoke.GCNL_EnvCampFire_Stoke_C.OnLoopingStart
// 0x00F8 (0x00F8 - 0x0000)
struct GCNL_EnvCampFire_Stoke_C_OnLoopingStart final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       ParticleComponents;                                // 0x00D8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x00E8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GCNL_EnvCampFire_Stoke_C_OnLoopingStart) == 0x000008, "Wrong alignment on GCNL_EnvCampFire_Stoke_C_OnLoopingStart");
static_assert(sizeof(GCNL_EnvCampFire_Stoke_C_OnLoopingStart) == 0x0000F8, "Wrong size on GCNL_EnvCampFire_Stoke_C_OnLoopingStart");
static_assert(offsetof(GCNL_EnvCampFire_Stoke_C_OnLoopingStart, MyTarget) == 0x000000, "Member 'GCNL_EnvCampFire_Stoke_C_OnLoopingStart::MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_EnvCampFire_Stoke_C_OnLoopingStart, Parameters) == 0x000008, "Member 'GCNL_EnvCampFire_Stoke_C_OnLoopingStart::Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_EnvCampFire_Stoke_C_OnLoopingStart, ParticleComponents) == 0x0000D8, "Member 'GCNL_EnvCampFire_Stoke_C_OnLoopingStart::ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNL_EnvCampFire_Stoke_C_OnLoopingStart, AudioComponents) == 0x0000E8, "Member 'GCNL_EnvCampFire_Stoke_C_OnLoopingStart::AudioComponents' has a wrong offset!");

}

