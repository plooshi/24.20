#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaMatchmakingModeButton

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function AthenaMatchmakingModeButton.AthenaMatchmakingModeButton_C.ExecuteUbergraph_AthenaMatchmakingModeButton
// 0x0280 (0x0280 - 0x0000)
struct AthenaMatchmakingModeButton_C_ExecuteUbergraph_AthenaMatchmakingModeButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0xB];                                        // 0x0005(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortTabButtonLabelInfo                K2Node_Event_TabLabelInfo;                         // 0x0010(0x00F0)(ConstParm)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0100(0x0040)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0140(0x0098)(ConstParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x01E8(0x0098)(ConstParm)
};
static_assert(alignof(AthenaMatchmakingModeButton_C_ExecuteUbergraph_AthenaMatchmakingModeButton) == 0x000010, "Wrong alignment on AthenaMatchmakingModeButton_C_ExecuteUbergraph_AthenaMatchmakingModeButton");
static_assert(sizeof(AthenaMatchmakingModeButton_C_ExecuteUbergraph_AthenaMatchmakingModeButton) == 0x000280, "Wrong size on AthenaMatchmakingModeButton_C_ExecuteUbergraph_AthenaMatchmakingModeButton");
static_assert(offsetof(AthenaMatchmakingModeButton_C_ExecuteUbergraph_AthenaMatchmakingModeButton, EntryPoint) == 0x000000, "Member 'AthenaMatchmakingModeButton_C_ExecuteUbergraph_AthenaMatchmakingModeButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaMatchmakingModeButton_C_ExecuteUbergraph_AthenaMatchmakingModeButton, CallFunc_GetIsEnabled_ReturnValue) == 0x000004, "Member 'AthenaMatchmakingModeButton_C_ExecuteUbergraph_AthenaMatchmakingModeButton::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMatchmakingModeButton_C_ExecuteUbergraph_AthenaMatchmakingModeButton, K2Node_Event_TabLabelInfo) == 0x000010, "Member 'AthenaMatchmakingModeButton_C_ExecuteUbergraph_AthenaMatchmakingModeButton::K2Node_Event_TabLabelInfo' has a wrong offset!");
static_assert(offsetof(AthenaMatchmakingModeButton_C_ExecuteUbergraph_AthenaMatchmakingModeButton, K2Node_Event_MyGeometry) == 0x000100, "Member 'AthenaMatchmakingModeButton_C_ExecuteUbergraph_AthenaMatchmakingModeButton::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(AthenaMatchmakingModeButton_C_ExecuteUbergraph_AthenaMatchmakingModeButton, K2Node_Event_MouseEvent_1) == 0x000140, "Member 'AthenaMatchmakingModeButton_C_ExecuteUbergraph_AthenaMatchmakingModeButton::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(AthenaMatchmakingModeButton_C_ExecuteUbergraph_AthenaMatchmakingModeButton, CallFunc_PlayAnimationReverse_ReturnValue) == 0x0001D8, "Member 'AthenaMatchmakingModeButton_C_ExecuteUbergraph_AthenaMatchmakingModeButton::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMatchmakingModeButton_C_ExecuteUbergraph_AthenaMatchmakingModeButton, CallFunc_PlayAnimationForward_ReturnValue) == 0x0001E0, "Member 'AthenaMatchmakingModeButton_C_ExecuteUbergraph_AthenaMatchmakingModeButton::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaMatchmakingModeButton_C_ExecuteUbergraph_AthenaMatchmakingModeButton, K2Node_Event_MouseEvent) == 0x0001E8, "Member 'AthenaMatchmakingModeButton_C_ExecuteUbergraph_AthenaMatchmakingModeButton::K2Node_Event_MouseEvent' has a wrong offset!");

// Function AthenaMatchmakingModeButton.AthenaMatchmakingModeButton_C.OnMouseEnter
// 0x00D8 (0x00D8 - 0x0000)
struct AthenaMatchmakingModeButton_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0040(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(AthenaMatchmakingModeButton_C_OnMouseEnter) == 0x000008, "Wrong alignment on AthenaMatchmakingModeButton_C_OnMouseEnter");
static_assert(sizeof(AthenaMatchmakingModeButton_C_OnMouseEnter) == 0x0000D8, "Wrong size on AthenaMatchmakingModeButton_C_OnMouseEnter");
static_assert(offsetof(AthenaMatchmakingModeButton_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'AthenaMatchmakingModeButton_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(AthenaMatchmakingModeButton_C_OnMouseEnter, MouseEvent) == 0x000040, "Member 'AthenaMatchmakingModeButton_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function AthenaMatchmakingModeButton.AthenaMatchmakingModeButton_C.OnMouseLeave
// 0x0098 (0x0098 - 0x0000)
struct AthenaMatchmakingModeButton_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(AthenaMatchmakingModeButton_C_OnMouseLeave) == 0x000008, "Wrong alignment on AthenaMatchmakingModeButton_C_OnMouseLeave");
static_assert(sizeof(AthenaMatchmakingModeButton_C_OnMouseLeave) == 0x000098, "Wrong size on AthenaMatchmakingModeButton_C_OnMouseLeave");
static_assert(offsetof(AthenaMatchmakingModeButton_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'AthenaMatchmakingModeButton_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function AthenaMatchmakingModeButton.AthenaMatchmakingModeButton_C.PlaylistChanged
// 0x0020 (0x0020 - 0x0000)
struct AthenaMatchmakingModeButton_C_PlaylistChanged final
{
public:
	class UFortPlaylistAthena*                    NewPlaylist;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   OverrideName;                                      // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(AthenaMatchmakingModeButton_C_PlaylistChanged) == 0x000008, "Wrong alignment on AthenaMatchmakingModeButton_C_PlaylistChanged");
static_assert(sizeof(AthenaMatchmakingModeButton_C_PlaylistChanged) == 0x000020, "Wrong size on AthenaMatchmakingModeButton_C_PlaylistChanged");
static_assert(offsetof(AthenaMatchmakingModeButton_C_PlaylistChanged, NewPlaylist) == 0x000000, "Member 'AthenaMatchmakingModeButton_C_PlaylistChanged::NewPlaylist' has a wrong offset!");
static_assert(offsetof(AthenaMatchmakingModeButton_C_PlaylistChanged, OverrideName) == 0x000008, "Member 'AthenaMatchmakingModeButton_C_PlaylistChanged::OverrideName' has a wrong offset!");

// Function AthenaMatchmakingModeButton.AthenaMatchmakingModeButton_C.RefreshLimitedPoolWarning
// 0x0001 (0x0001 - 0x0000)
struct AthenaMatchmakingModeButton_C_RefreshLimitedPoolWarning final
{
public:
	bool                                          IsCrossplayEnabled;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMatchmakingModeButton_C_RefreshLimitedPoolWarning) == 0x000001, "Wrong alignment on AthenaMatchmakingModeButton_C_RefreshLimitedPoolWarning");
static_assert(sizeof(AthenaMatchmakingModeButton_C_RefreshLimitedPoolWarning) == 0x000001, "Wrong size on AthenaMatchmakingModeButton_C_RefreshLimitedPoolWarning");
static_assert(offsetof(AthenaMatchmakingModeButton_C_RefreshLimitedPoolWarning, IsCrossplayEnabled) == 0x000000, "Member 'AthenaMatchmakingModeButton_C_RefreshLimitedPoolWarning::IsCrossplayEnabled' has a wrong offset!");

// Function AthenaMatchmakingModeButton.AthenaMatchmakingModeButton_C.SetSquadFillText
// 0x0001 (0x0001 - 0x0000)
struct AthenaMatchmakingModeButton_C_SetSquadFillText final
{
public:
	bool                                          bFill;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaMatchmakingModeButton_C_SetSquadFillText) == 0x000001, "Wrong alignment on AthenaMatchmakingModeButton_C_SetSquadFillText");
static_assert(sizeof(AthenaMatchmakingModeButton_C_SetSquadFillText) == 0x000001, "Wrong size on AthenaMatchmakingModeButton_C_SetSquadFillText");
static_assert(offsetof(AthenaMatchmakingModeButton_C_SetSquadFillText, bFill) == 0x000000, "Member 'AthenaMatchmakingModeButton_C_SetSquadFillText::bFill' has a wrong offset!");

// Function AthenaMatchmakingModeButton.AthenaMatchmakingModeButton_C.SetTabLabelInfo
// 0x00F0 (0x00F0 - 0x0000)
struct AthenaMatchmakingModeButton_C_SetTabLabelInfo final
{
public:
	struct FFortTabButtonLabelInfo                TabLabelInfo;                                      // 0x0000(0x00F0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(AthenaMatchmakingModeButton_C_SetTabLabelInfo) == 0x000010, "Wrong alignment on AthenaMatchmakingModeButton_C_SetTabLabelInfo");
static_assert(sizeof(AthenaMatchmakingModeButton_C_SetTabLabelInfo) == 0x0000F0, "Wrong size on AthenaMatchmakingModeButton_C_SetTabLabelInfo");
static_assert(offsetof(AthenaMatchmakingModeButton_C_SetTabLabelInfo, TabLabelInfo) == 0x000000, "Member 'AthenaMatchmakingModeButton_C_SetTabLabelInfo::TabLabelInfo' has a wrong offset!");

}

