#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WindGustSettingStruct

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// UserDefinedStruct WindGustSettingStruct.WindGustSettingStruct
// 0x0078 (0x0078 - 0x0000)
struct FWindGustSettingStruct final
{
public:
	float                                         MinTimeBetweenGusts_25_6CD0864B4078D8378C061197E9B1B094; // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxTimeBetweenGusts_28_0D981B4E4039D5A0C6A4C78D6F09D510; // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinGustStrength_26_A5C4B017498D3154D76CECAB9AE7BDF2; // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxGustStrength_29_DACF320B4C03C6BD248A8E9B7B867FC7; // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinGustDuration_27_E5761CE84E8E52EEBD663B9DC3A0906F; // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxGustDuration_30_98974B1C4B5ABE4EA1CFF7A791319392; // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WindTurbulenceScalarA_48_A343D5A54D704F5B249C8E907DA80101; // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WindTurbulenceScalarB_47_E54C28B348B4C35A1D0817AFA9FF0423; // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinUpInterpSpeed_36_8E04A8E94B2040C7DBF93194733AC36A; // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxUpInterpSpeed_37_5108D5FA40140A1AAD38459100B14261; // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinDownInterpSpeed_40_C3AD555846C2AEB9625C4E93B6758BB8; // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxDownInterpSpeed_41_394B2B66448D9D21249A288C7DEC98F1; // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WindFrequency_51_9F209DFA4F7AB96CE220578516F0B4CF; // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WindAmplitude_54_E174BDEC415CE55F6A1475B799695475; // 0x0048(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WindOffset_55_91DD775940222EE47FDA3BA8695E8FE9;    // 0x0060(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FWindGustSettingStruct) == 0x000008, "Wrong alignment on FWindGustSettingStruct");
static_assert(sizeof(FWindGustSettingStruct) == 0x000078, "Wrong size on FWindGustSettingStruct");
static_assert(offsetof(FWindGustSettingStruct, MinTimeBetweenGusts_25_6CD0864B4078D8378C061197E9B1B094) == 0x000000, "Member 'FWindGustSettingStruct::MinTimeBetweenGusts_25_6CD0864B4078D8378C061197E9B1B094' has a wrong offset!");
static_assert(offsetof(FWindGustSettingStruct, MaxTimeBetweenGusts_28_0D981B4E4039D5A0C6A4C78D6F09D510) == 0x000004, "Member 'FWindGustSettingStruct::MaxTimeBetweenGusts_28_0D981B4E4039D5A0C6A4C78D6F09D510' has a wrong offset!");
static_assert(offsetof(FWindGustSettingStruct, MinGustStrength_26_A5C4B017498D3154D76CECAB9AE7BDF2) == 0x000008, "Member 'FWindGustSettingStruct::MinGustStrength_26_A5C4B017498D3154D76CECAB9AE7BDF2' has a wrong offset!");
static_assert(offsetof(FWindGustSettingStruct, MaxGustStrength_29_DACF320B4C03C6BD248A8E9B7B867FC7) == 0x00000C, "Member 'FWindGustSettingStruct::MaxGustStrength_29_DACF320B4C03C6BD248A8E9B7B867FC7' has a wrong offset!");
static_assert(offsetof(FWindGustSettingStruct, MinGustDuration_27_E5761CE84E8E52EEBD663B9DC3A0906F) == 0x000010, "Member 'FWindGustSettingStruct::MinGustDuration_27_E5761CE84E8E52EEBD663B9DC3A0906F' has a wrong offset!");
static_assert(offsetof(FWindGustSettingStruct, MaxGustDuration_30_98974B1C4B5ABE4EA1CFF7A791319392) == 0x000014, "Member 'FWindGustSettingStruct::MaxGustDuration_30_98974B1C4B5ABE4EA1CFF7A791319392' has a wrong offset!");
static_assert(offsetof(FWindGustSettingStruct, WindTurbulenceScalarA_48_A343D5A54D704F5B249C8E907DA80101) == 0x000018, "Member 'FWindGustSettingStruct::WindTurbulenceScalarA_48_A343D5A54D704F5B249C8E907DA80101' has a wrong offset!");
static_assert(offsetof(FWindGustSettingStruct, WindTurbulenceScalarB_47_E54C28B348B4C35A1D0817AFA9FF0423) == 0x00001C, "Member 'FWindGustSettingStruct::WindTurbulenceScalarB_47_E54C28B348B4C35A1D0817AFA9FF0423' has a wrong offset!");
static_assert(offsetof(FWindGustSettingStruct, MinUpInterpSpeed_36_8E04A8E94B2040C7DBF93194733AC36A) == 0x000020, "Member 'FWindGustSettingStruct::MinUpInterpSpeed_36_8E04A8E94B2040C7DBF93194733AC36A' has a wrong offset!");
static_assert(offsetof(FWindGustSettingStruct, MaxUpInterpSpeed_37_5108D5FA40140A1AAD38459100B14261) == 0x000024, "Member 'FWindGustSettingStruct::MaxUpInterpSpeed_37_5108D5FA40140A1AAD38459100B14261' has a wrong offset!");
static_assert(offsetof(FWindGustSettingStruct, MinDownInterpSpeed_40_C3AD555846C2AEB9625C4E93B6758BB8) == 0x000028, "Member 'FWindGustSettingStruct::MinDownInterpSpeed_40_C3AD555846C2AEB9625C4E93B6758BB8' has a wrong offset!");
static_assert(offsetof(FWindGustSettingStruct, MaxDownInterpSpeed_41_394B2B66448D9D21249A288C7DEC98F1) == 0x00002C, "Member 'FWindGustSettingStruct::MaxDownInterpSpeed_41_394B2B66448D9D21249A288C7DEC98F1' has a wrong offset!");
static_assert(offsetof(FWindGustSettingStruct, WindFrequency_51_9F209DFA4F7AB96CE220578516F0B4CF) == 0x000030, "Member 'FWindGustSettingStruct::WindFrequency_51_9F209DFA4F7AB96CE220578516F0B4CF' has a wrong offset!");
static_assert(offsetof(FWindGustSettingStruct, WindAmplitude_54_E174BDEC415CE55F6A1475B799695475) == 0x000048, "Member 'FWindGustSettingStruct::WindAmplitude_54_E174BDEC415CE55F6A1475B799695475' has a wrong offset!");
static_assert(offsetof(FWindGustSettingStruct, WindOffset_55_91DD775940222EE47FDA3BA8695E8FE9) == 0x000060, "Member 'FWindGustSettingStruct::WindOffset_55_91DD775940222EE47FDA3BA8695E8FE9' has a wrong offset!");

}

