#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortAudioClustersRuntime

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "DeveloperSettings_classes.hpp"
#include "FortAudioClustersRuntime_structs.hpp"
#include "GameFeatures_classes.hpp"


namespace SDK
{

// Class FortAudioClustersRuntime.FortAudioClustersSettings
// 0x0050 (0x0080 - 0x0030)
class UFortAudioClustersSettings final : public UDeveloperSettings
{
public:
	TMap<struct FGameplayTag, double>             ParameterDefaults;                                 // 0x0030(0x0050)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAudioClustersSettings">();
	}
	static class UFortAudioClustersSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortAudioClustersSettings>();
	}
};
static_assert(alignof(UFortAudioClustersSettings) == 0x000008, "Wrong alignment on UFortAudioClustersSettings");
static_assert(sizeof(UFortAudioClustersSettings) == 0x000080, "Wrong size on UFortAudioClustersSettings");
static_assert(offsetof(UFortAudioClustersSettings, ParameterDefaults) == 0x000030, "Member 'UFortAudioClustersSettings::ParameterDefaults' has a wrong offset!");

// Class FortAudioClustersRuntime.FortAudioClustersSubsystem
// 0x0000 (0x0040 - 0x0040)
class UFortAudioClustersSubsystem final : public UTickableWorldSubsystem
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortAudioClustersSubsystem">();
	}
	static class UFortAudioClustersSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortAudioClustersSubsystem>();
	}
};
static_assert(alignof(UFortAudioClustersSubsystem) == 0x000008, "Wrong alignment on UFortAudioClustersSubsystem");
static_assert(sizeof(UFortAudioClustersSubsystem) == 0x000040, "Wrong size on UFortAudioClustersSubsystem");

// Class FortAudioClustersRuntime.GameFeatureAction_AddAudioCluster
// 0x00C8 (0x00F0 - 0x0028)
class UGameFeatureAction_AddAudioCluster final : public UGameFeatureAction
{
public:
	TArray<struct FGameFeatureAudioClusterEntry>  Clusters;                                          // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class FName, struct FGameplayTag>        OverrideTable;                                     // 0x0038(0x0050)(Edit, NativeAccessSpecifierPublic)
	class FName                                   DisabledActorTag;                                  // 0x0088(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8C[0x64];                                      // 0x008C(0x0064)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleRegisteredActorDeath(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameFeatureAction_AddAudioCluster">();
	}
	static class UGameFeatureAction_AddAudioCluster* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameFeatureAction_AddAudioCluster>();
	}
};
static_assert(alignof(UGameFeatureAction_AddAudioCluster) == 0x000008, "Wrong alignment on UGameFeatureAction_AddAudioCluster");
static_assert(sizeof(UGameFeatureAction_AddAudioCluster) == 0x0000F0, "Wrong size on UGameFeatureAction_AddAudioCluster");
static_assert(offsetof(UGameFeatureAction_AddAudioCluster, Clusters) == 0x000028, "Member 'UGameFeatureAction_AddAudioCluster::Clusters' has a wrong offset!");
static_assert(offsetof(UGameFeatureAction_AddAudioCluster, OverrideTable) == 0x000038, "Member 'UGameFeatureAction_AddAudioCluster::OverrideTable' has a wrong offset!");
static_assert(offsetof(UGameFeatureAction_AddAudioCluster, DisabledActorTag) == 0x000088, "Member 'UGameFeatureAction_AddAudioCluster::DisabledActorTag' has a wrong offset!");

// Class FortAudioClustersRuntime.GameFeatureAction_AddAudioClusterConfigMaps
// 0x0060 (0x0088 - 0x0028)
class UGameFeatureAction_AddAudioClusterConfigMaps final : public UGameFeatureAction
{
public:
	TArray<class UAudioClusterConfigMap*>         ConfigMaps;                                        // 0x0028(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_38[0x50];                                      // 0x0038(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameFeatureAction_AddAudioClusterConfigMaps">();
	}
	static class UGameFeatureAction_AddAudioClusterConfigMaps* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameFeatureAction_AddAudioClusterConfigMaps>();
	}
};
static_assert(alignof(UGameFeatureAction_AddAudioClusterConfigMaps) == 0x000008, "Wrong alignment on UGameFeatureAction_AddAudioClusterConfigMaps");
static_assert(sizeof(UGameFeatureAction_AddAudioClusterConfigMaps) == 0x000088, "Wrong size on UGameFeatureAction_AddAudioClusterConfigMaps");
static_assert(offsetof(UGameFeatureAction_AddAudioClusterConfigMaps, ConfigMaps) == 0x000028, "Member 'UGameFeatureAction_AddAudioClusterConfigMaps::ConfigMaps' has a wrong offset!");

}

