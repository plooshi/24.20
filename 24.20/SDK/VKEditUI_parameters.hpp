#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VKEditUI

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function VKEditUI.VKConnectionIndicator.HandleMemorySamplerProgressUpdated
// 0x0004 (0x0004 - 0x0000)
struct VKConnectionIndicator_HandleMemorySamplerProgressUpdated final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VKConnectionIndicator_HandleMemorySamplerProgressUpdated) == 0x000004, "Wrong alignment on VKConnectionIndicator_HandleMemorySamplerProgressUpdated");
static_assert(sizeof(VKConnectionIndicator_HandleMemorySamplerProgressUpdated) == 0x000004, "Wrong size on VKConnectionIndicator_HandleMemorySamplerProgressUpdated");
static_assert(offsetof(VKConnectionIndicator_HandleMemorySamplerProgressUpdated, Progress) == 0x000000, "Member 'VKConnectionIndicator_HandleMemorySamplerProgressUpdated::Progress' has a wrong offset!");

// Function VKEditUI.VKConnectionIndicator.OnMinigameStateChanged
// 0x0002 (0x0002 - 0x0000)
struct VKConnectionIndicator_OnMinigameStateChanged final
{
public:
	EFortMinigameState                            MinigameState;                                     // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortMinigameState                            PreviousMinigameState;                             // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VKConnectionIndicator_OnMinigameStateChanged) == 0x000001, "Wrong alignment on VKConnectionIndicator_OnMinigameStateChanged");
static_assert(sizeof(VKConnectionIndicator_OnMinigameStateChanged) == 0x000002, "Wrong size on VKConnectionIndicator_OnMinigameStateChanged");
static_assert(offsetof(VKConnectionIndicator_OnMinigameStateChanged, MinigameState) == 0x000000, "Member 'VKConnectionIndicator_OnMinigameStateChanged::MinigameState' has a wrong offset!");
static_assert(offsetof(VKConnectionIndicator_OnMinigameStateChanged, PreviousMinigameState) == 0x000001, "Member 'VKConnectionIndicator_OnMinigameStateChanged::PreviousMinigameState' has a wrong offset!");

// Function VKEditUI.VKDebugMessagesBase.BP_OnGameStateInitialized
// 0x0008 (0x0008 - 0x0000)
struct VKDebugMessagesBase_BP_OnGameStateInitialized final
{
public:
	class AFortGameState*                         GameState;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VKDebugMessagesBase_BP_OnGameStateInitialized) == 0x000008, "Wrong alignment on VKDebugMessagesBase_BP_OnGameStateInitialized");
static_assert(sizeof(VKDebugMessagesBase_BP_OnGameStateInitialized) == 0x000008, "Wrong size on VKDebugMessagesBase_BP_OnGameStateInitialized");
static_assert(offsetof(VKDebugMessagesBase_BP_OnGameStateInitialized, GameState) == 0x000000, "Member 'VKDebugMessagesBase_BP_OnGameStateInitialized::GameState' has a wrong offset!");

// Function VKEditUI.VKDebugMessagesBase.HandleGameStateInitialized
// 0x0008 (0x0008 - 0x0000)
struct VKDebugMessagesBase_HandleGameStateInitialized final
{
public:
	class AFortGameState*                         GameState;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VKDebugMessagesBase_HandleGameStateInitialized) == 0x000008, "Wrong alignment on VKDebugMessagesBase_HandleGameStateInitialized");
static_assert(sizeof(VKDebugMessagesBase_HandleGameStateInitialized) == 0x000008, "Wrong size on VKDebugMessagesBase_HandleGameStateInitialized");
static_assert(offsetof(VKDebugMessagesBase_HandleGameStateInitialized, GameState) == 0x000000, "Member 'VKDebugMessagesBase_HandleGameStateInitialized::GameState' has a wrong offset!");

}

