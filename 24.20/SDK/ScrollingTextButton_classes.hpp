#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ScrollingTextButton

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CommonInput_structs.hpp"
#include "CommonUILegacy_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ScrollingTextButton.ScrollingTextButton_C
// 0x0120 (0x1550 - 0x1430)
class UScrollingTextButton_C final : public UCommonButtonLegacy
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1430(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonTextBlock*                       CenterButtonTextWidget;                            // 0x1438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                ContentBorder;                                     // 0x1440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LeftSideImage;                                     // 0x1448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   ButtonText;                                        // 0x1450(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	uint8                                         Pad_1468[0x8];                                     // 0x1468(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            IconBrush;                                         // 0x1470(0x00C0)(Edit, BlueprintVisible, ExposeOnSpawn)
	class UClass*                                 ControllerInputStyle;                              // 0x1530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UClass*                                 MouseKeyboardStyle;                                // 0x1538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          ContentAlignment;                                  // 0x1540(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMouseKeyboardStyleSet;                            // 0x1541(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__CommonActionWidgetAction_K2Node_ComponentBoundEvent_0_OnInputMethodChanged__DelegateSignature(bool bUsingGamepad);
	void Construct();
	void ExecuteUbergraph_ScrollingTextButton(int32 EntryPoint);
	void InitializeButton();
	void OnActionComplete();
	void OnActionProgress(float HeldPercent);
	void OnCurrentTextStyleChanged();
	void OnTriggeredInputActionChanged(const struct FDataTableRowHandle& NewTriggeredAction);
	void PreConstruct(bool IsDesignTime);
	void Set_Icon(const struct FSlateBrush& IconBrush_0);
	void Set_Text(const class FText& ButtonText_0);
	void SetContentAlignment(EHorizontalAlignment ContentAlignment_0);
	void SetControllerStyle(class UClass* ControllerInputStyle_0);
	void SetInitialMouseKeyboardStyle();
	void SetMouseKeyboardStyle(class UClass* ControllerInputStyle_0);
	void SetTabLabelInfo(const struct FFortTabButtonLabelInfo& TabLabelInfo);
	void UpdateContentAlignment();
	void UpdateStyle(bool UsingGamepad);
	void UpdateText();
	void UpdateTextAndStyle(bool bUsingGamepad);
	void UpdateTextStyle();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ScrollingTextButton_C">();
	}
	static class UScrollingTextButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScrollingTextButton_C>();
	}
};
static_assert(alignof(UScrollingTextButton_C) == 0x000010, "Wrong alignment on UScrollingTextButton_C");
static_assert(sizeof(UScrollingTextButton_C) == 0x001550, "Wrong size on UScrollingTextButton_C");
static_assert(offsetof(UScrollingTextButton_C, UberGraphFrame) == 0x001430, "Member 'UScrollingTextButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UScrollingTextButton_C, CenterButtonTextWidget) == 0x001438, "Member 'UScrollingTextButton_C::CenterButtonTextWidget' has a wrong offset!");
static_assert(offsetof(UScrollingTextButton_C, ContentBorder) == 0x001440, "Member 'UScrollingTextButton_C::ContentBorder' has a wrong offset!");
static_assert(offsetof(UScrollingTextButton_C, LeftSideImage) == 0x001448, "Member 'UScrollingTextButton_C::LeftSideImage' has a wrong offset!");
static_assert(offsetof(UScrollingTextButton_C, ButtonText) == 0x001450, "Member 'UScrollingTextButton_C::ButtonText' has a wrong offset!");
static_assert(offsetof(UScrollingTextButton_C, IconBrush) == 0x001470, "Member 'UScrollingTextButton_C::IconBrush' has a wrong offset!");
static_assert(offsetof(UScrollingTextButton_C, ControllerInputStyle) == 0x001530, "Member 'UScrollingTextButton_C::ControllerInputStyle' has a wrong offset!");
static_assert(offsetof(UScrollingTextButton_C, MouseKeyboardStyle) == 0x001538, "Member 'UScrollingTextButton_C::MouseKeyboardStyle' has a wrong offset!");
static_assert(offsetof(UScrollingTextButton_C, ContentAlignment) == 0x001540, "Member 'UScrollingTextButton_C::ContentAlignment' has a wrong offset!");
static_assert(offsetof(UScrollingTextButton_C, bMouseKeyboardStyleSet) == 0x001541, "Member 'UScrollingTextButton_C::bMouseKeyboardStyleSet' has a wrong offset!");

}

