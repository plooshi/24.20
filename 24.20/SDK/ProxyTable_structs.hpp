#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProxyTable

#include "Basic.hpp"

#include "Chooser_structs.hpp"
#include "StructUtils_structs.hpp"


namespace SDK
{

// ScriptStruct ProxyTable.ChooserParameterProxyTableBase
// 0x0000 (0x0008 - 0x0008)
struct FChooserParameterProxyTableBase : public FChooserParameterBase
{
};
static_assert(alignof(FChooserParameterProxyTableBase) == 0x000008, "Wrong alignment on FChooserParameterProxyTableBase");
static_assert(sizeof(FChooserParameterProxyTableBase) == 0x000008, "Wrong size on FChooserParameterProxyTableBase");

// ScriptStruct ProxyTable.ProxyEntry
// 0x0020 (0x0020 - 0x0000)
struct FProxyEntry final
{
public:
	class UProxyAsset*                            Proxy;                                             // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Key;                                               // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInstancedStruct                       ValueStruct;                                       // 0x0010(0x0010)(Edit, NativeAccessSpecifierPublic)
};
static_assert(alignof(FProxyEntry) == 0x000008, "Wrong alignment on FProxyEntry");
static_assert(sizeof(FProxyEntry) == 0x000020, "Wrong size on FProxyEntry");
static_assert(offsetof(FProxyEntry, Proxy) == 0x000000, "Member 'FProxyEntry::Proxy' has a wrong offset!");
static_assert(offsetof(FProxyEntry, Key) == 0x000008, "Member 'FProxyEntry::Key' has a wrong offset!");
static_assert(offsetof(FProxyEntry, ValueStruct) == 0x000010, "Member 'FProxyEntry::ValueStruct' has a wrong offset!");

// ScriptStruct ProxyTable.ProxyTableContextProperty
// 0x0010 (0x0018 - 0x0008)
struct FProxyTableContextProperty final : public FChooserParameterProxyTableBase
{
public:
	struct FChooserPropertyBinding                Binding;                                           // 0x0008(0x0010)(Edit, NativeAccessSpecifierPublic)
};
static_assert(alignof(FProxyTableContextProperty) == 0x000008, "Wrong alignment on FProxyTableContextProperty");
static_assert(sizeof(FProxyTableContextProperty) == 0x000018, "Wrong size on FProxyTableContextProperty");
static_assert(offsetof(FProxyTableContextProperty, Binding) == 0x000008, "Member 'FProxyTableContextProperty::Binding' has a wrong offset!");

// ScriptStruct ProxyTable.LookupProxy
// 0x0008 (0x0010 - 0x0008)
struct FLookupProxy final : public FObjectChooserBase
{
public:
	class UProxyAsset*                            Proxy;                                             // 0x0008(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FLookupProxy) == 0x000008, "Wrong alignment on FLookupProxy");
static_assert(sizeof(FLookupProxy) == 0x000010, "Wrong size on FLookupProxy");
static_assert(offsetof(FLookupProxy, Proxy) == 0x000008, "Member 'FLookupProxy::Proxy' has a wrong offset!");

}

