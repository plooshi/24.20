#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LootController

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// ScriptStruct LootController.BuildingContainersArrayEntry
// 0x00A0 (0x00A0 - 0x0000)
struct FBuildingContainersArrayEntry final
{
public:
	class ABuildingContainer*                     BuildingContainer;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SearchLootTierGroup;                               // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  GameplayTags;                                      // 0x0078(0x0020)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FBuildingContainersArrayEntry) == 0x000010, "Wrong alignment on FBuildingContainersArrayEntry");
static_assert(sizeof(FBuildingContainersArrayEntry) == 0x0000A0, "Wrong size on FBuildingContainersArrayEntry");
static_assert(offsetof(FBuildingContainersArrayEntry, BuildingContainer) == 0x000000, "Member 'FBuildingContainersArrayEntry::BuildingContainer' has a wrong offset!");
static_assert(offsetof(FBuildingContainersArrayEntry, Transform) == 0x000010, "Member 'FBuildingContainersArrayEntry::Transform' has a wrong offset!");
static_assert(offsetof(FBuildingContainersArrayEntry, SearchLootTierGroup) == 0x000070, "Member 'FBuildingContainersArrayEntry::SearchLootTierGroup' has a wrong offset!");
static_assert(offsetof(FBuildingContainersArrayEntry, GameplayTags) == 0x000078, "Member 'FBuildingContainersArrayEntry::GameplayTags' has a wrong offset!");

// ScriptStruct LootController.BuildingContainersFoundEntry
// 0x0018 (0x0018 - 0x0000)
struct FBuildingContainersFoundEntry final
{
public:
	struct FGameplayTag                           GameplayTag;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBuildingContainersArrayEntry>  BuildingContainers;                                // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FBuildingContainersFoundEntry) == 0x000008, "Wrong alignment on FBuildingContainersFoundEntry");
static_assert(sizeof(FBuildingContainersFoundEntry) == 0x000018, "Wrong size on FBuildingContainersFoundEntry");
static_assert(offsetof(FBuildingContainersFoundEntry, GameplayTag) == 0x000000, "Member 'FBuildingContainersFoundEntry::GameplayTag' has a wrong offset!");
static_assert(offsetof(FBuildingContainersFoundEntry, BuildingContainers) == 0x000008, "Member 'FBuildingContainersFoundEntry::BuildingContainers' has a wrong offset!");

}

