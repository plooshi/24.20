#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: M_MED_Lima_Bean_Pack_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "M_MED_Lima_Bean_Pack_AnimBP_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass M_MED_Lima_Bean_Pack_AnimBP.M_MED_Lima_Bean_Pack_AnimBP_C
// 0x15F0 (0x1CE0 - 0x06F0)
class UM_MED_Lima_Bean_Pack_AnimBP_C final : public UCustomCharacterPartAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct M_MED_Lima_Bean_Pack_AnimBP::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x06F8(0x0002)(HasGetValueTypeHash)
	uint8                                         Pad_6FA[0x6];                                      // 0x06FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0700(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0708(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0710(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x0730(0x00C0)()
	struct FAnimNode_Constraint                   AnimGraphNode_Constraint_4;                        // 0x07F0(0x0108)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x08F8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0918(0x0020)()
	uint8                                         Pad_938[0x8];                                      // 0x0938(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_1;                      // 0x0940(0x0510)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics;                        // 0x0E50(0x0510)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x1360(0x0128)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x1488(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x14B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x14D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x1500(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x1528(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x1550(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x1578(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x15A0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x15E8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x1608(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x1650(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1670(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x16B8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1700(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1748(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1768(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x17B0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x17D0(0x00C8)()
	struct FAnimNode_Constraint                   AnimGraphNode_Constraint_3;                        // 0x1898(0x0108)()
	struct FAnimNode_Constraint                   AnimGraphNode_Constraint_2;                        // 0x19A0(0x0108)()
	struct FAnimNode_Constraint                   AnimGraphNode_Constraint_1;                        // 0x1AA8(0x0108)()
	struct FAnimNode_Constraint                   AnimGraphNode_Constraint;                          // 0x1BB0(0x0108)()
	double                                        skydiveDampen;                                     // 0x1CB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x1CC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          YawDeltaPositive;                                  // 0x1CC8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          YawDeltaPositiveLastTick;                          // 0x1CC9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RunFacingRight;                                    // 0x1CCA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CCB[0x5];                                     // 0x1CCB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        isDBNOoff;                                         // 0x1CD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        IsDBNO;                                            // 0x1CD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(const struct FPoseLink& InPose, struct FPoseLink* AnimGraph_0);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_M_MED_Lima_Bean_Pack_AnimBP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"M_MED_Lima_Bean_Pack_AnimBP_C">();
	}
	static class UM_MED_Lima_Bean_Pack_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UM_MED_Lima_Bean_Pack_AnimBP_C>();
	}
};
static_assert(alignof(UM_MED_Lima_Bean_Pack_AnimBP_C) == 0x000010, "Wrong alignment on UM_MED_Lima_Bean_Pack_AnimBP_C");
static_assert(sizeof(UM_MED_Lima_Bean_Pack_AnimBP_C) == 0x001CE0, "Wrong size on UM_MED_Lima_Bean_Pack_AnimBP_C");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, UberGraphFrame) == 0x0006F0, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, __AnimBlueprintMutables) == 0x0006F8, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, AnimBlueprintExtension_PropertyAccess) == 0x000700, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, AnimBlueprintExtension_Base) == 0x000708, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, AnimGraphNode_Root) == 0x000710, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, AnimGraphNode_LinkedInputPose) == 0x000730, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, AnimGraphNode_Constraint_4) == 0x0007F0, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::AnimGraphNode_Constraint_4' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, AnimGraphNode_LocalToComponentSpace) == 0x0008F8, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, AnimGraphNode_ComponentToLocalSpace) == 0x000918, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, AnimGraphNode_AnimDynamics_1) == 0x000940, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::AnimGraphNode_AnimDynamics_1' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, AnimGraphNode_AnimDynamics) == 0x000E50, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::AnimGraphNode_AnimDynamics' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, AnimGraphNode_ModifyBone) == 0x001360, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, AnimGraphNode_TransitionResult_6) == 0x001488, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, AnimGraphNode_TransitionResult_5) == 0x0014B0, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, AnimGraphNode_TransitionResult_4) == 0x0014D8, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, AnimGraphNode_TransitionResult_3) == 0x001500, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, AnimGraphNode_TransitionResult_2) == 0x001528, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, AnimGraphNode_TransitionResult_1) == 0x001550, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, AnimGraphNode_TransitionResult) == 0x001578, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x0015A0, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, AnimGraphNode_StateResult_3) == 0x0015E8, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x001608, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, AnimGraphNode_StateResult_2) == 0x001650, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, AnimGraphNode_BlendListByBool) == 0x001670, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x0016B8, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x001700, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, AnimGraphNode_StateResult_1) == 0x001748, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x001768, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, AnimGraphNode_StateResult) == 0x0017B0, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, AnimGraphNode_StateMachine) == 0x0017D0, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, AnimGraphNode_Constraint_3) == 0x001898, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::AnimGraphNode_Constraint_3' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, AnimGraphNode_Constraint_2) == 0x0019A0, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::AnimGraphNode_Constraint_2' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, AnimGraphNode_Constraint_1) == 0x001AA8, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::AnimGraphNode_Constraint_1' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, AnimGraphNode_Constraint) == 0x001BB0, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::AnimGraphNode_Constraint' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, skydiveDampen) == 0x001CB8, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::skydiveDampen' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, PlayerPawn) == 0x001CC0, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, YawDeltaPositive) == 0x001CC8, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::YawDeltaPositive' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, YawDeltaPositiveLastTick) == 0x001CC9, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::YawDeltaPositiveLastTick' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, RunFacingRight) == 0x001CCA, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::RunFacingRight' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, isDBNOoff) == 0x001CD0, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::isDBNOoff' has a wrong offset!");
static_assert(offsetof(UM_MED_Lima_Bean_Pack_AnimBP_C, IsDBNO) == 0x001CD8, "Member 'UM_MED_Lima_Bean_Pack_AnimBP_C::IsDBNO' has a wrong offset!");

}

