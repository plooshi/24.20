#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaChallengeListEntry_NpcQuest

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "CommonInput_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function AthenaChallengeListEntry_NpcQuest.AthenaChallengeListEntry_NpcQuest_C.BP_FormatForChallengeOwnerLeftGame
// 0x0001 (0x0001 - 0x0000)
struct AthenaChallengeListEntry_NpcQuest_C_BP_FormatForChallengeOwnerLeftGame final
{
public:
	bool                                          bHasOwnerLeftGame;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengeListEntry_NpcQuest_C_BP_FormatForChallengeOwnerLeftGame) == 0x000001, "Wrong alignment on AthenaChallengeListEntry_NpcQuest_C_BP_FormatForChallengeOwnerLeftGame");
static_assert(sizeof(AthenaChallengeListEntry_NpcQuest_C_BP_FormatForChallengeOwnerLeftGame) == 0x000001, "Wrong size on AthenaChallengeListEntry_NpcQuest_C_BP_FormatForChallengeOwnerLeftGame");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_BP_FormatForChallengeOwnerLeftGame, bHasOwnerLeftGame) == 0x000000, "Member 'AthenaChallengeListEntry_NpcQuest_C_BP_FormatForChallengeOwnerLeftGame::bHasOwnerLeftGame' has a wrong offset!");

// Function AthenaChallengeListEntry_NpcQuest.AthenaChallengeListEntry_NpcQuest_C.BP_OnChallengeInfoSet
// 0x0001 (0x0001 - 0x0000)
struct AthenaChallengeListEntry_NpcQuest_C_BP_OnChallengeInfoSet final
{
public:
	bool                                          bDisabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengeListEntry_NpcQuest_C_BP_OnChallengeInfoSet) == 0x000001, "Wrong alignment on AthenaChallengeListEntry_NpcQuest_C_BP_OnChallengeInfoSet");
static_assert(sizeof(AthenaChallengeListEntry_NpcQuest_C_BP_OnChallengeInfoSet) == 0x000001, "Wrong size on AthenaChallengeListEntry_NpcQuest_C_BP_OnChallengeInfoSet");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_BP_OnChallengeInfoSet, bDisabled) == 0x000000, "Member 'AthenaChallengeListEntry_NpcQuest_C_BP_OnChallengeInfoSet::bDisabled' has a wrong offset!");

// Function AthenaChallengeListEntry_NpcQuest.AthenaChallengeListEntry_NpcQuest_C.BP_OnChallengeSeenChanged
// 0x0001 (0x0001 - 0x0000)
struct AthenaChallengeListEntry_NpcQuest_C_BP_OnChallengeSeenChanged final
{
public:
	bool                                          bChallengeSeen;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengeListEntry_NpcQuest_C_BP_OnChallengeSeenChanged) == 0x000001, "Wrong alignment on AthenaChallengeListEntry_NpcQuest_C_BP_OnChallengeSeenChanged");
static_assert(sizeof(AthenaChallengeListEntry_NpcQuest_C_BP_OnChallengeSeenChanged) == 0x000001, "Wrong size on AthenaChallengeListEntry_NpcQuest_C_BP_OnChallengeSeenChanged");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_BP_OnChallengeSeenChanged, bChallengeSeen) == 0x000000, "Member 'AthenaChallengeListEntry_NpcQuest_C_BP_OnChallengeSeenChanged::bChallengeSeen' has a wrong offset!");

// Function AthenaChallengeListEntry_NpcQuest.AthenaChallengeListEntry_NpcQuest_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct AthenaChallengeListEntry_NpcQuest_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengeListEntry_NpcQuest_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on AthenaChallengeListEntry_NpcQuest_C_BP_OnItemSelectionChanged");
static_assert(sizeof(AthenaChallengeListEntry_NpcQuest_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on AthenaChallengeListEntry_NpcQuest_C_BP_OnItemSelectionChanged");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'AthenaChallengeListEntry_NpcQuest_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function AthenaChallengeListEntry_NpcQuest.AthenaChallengeListEntry_NpcQuest_C.BP_OnRaritySet
// 0x0001 (0x0001 - 0x0000)
struct AthenaChallengeListEntry_NpcQuest_C_BP_OnRaritySet final
{
public:
	EFortRarity                                   Rarity;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengeListEntry_NpcQuest_C_BP_OnRaritySet) == 0x000001, "Wrong alignment on AthenaChallengeListEntry_NpcQuest_C_BP_OnRaritySet");
static_assert(sizeof(AthenaChallengeListEntry_NpcQuest_C_BP_OnRaritySet) == 0x000001, "Wrong size on AthenaChallengeListEntry_NpcQuest_C_BP_OnRaritySet");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_BP_OnRaritySet, Rarity) == 0x000000, "Member 'AthenaChallengeListEntry_NpcQuest_C_BP_OnRaritySet::Rarity' has a wrong offset!");

// Function AthenaChallengeListEntry_NpcQuest.AthenaChallengeListEntry_NpcQuest_C.BP_OnTimerSet
// 0x0001 (0x0001 - 0x0000)
struct AthenaChallengeListEntry_NpcQuest_C_BP_OnTimerSet final
{
public:
	EAthenaChallengeTimerState                    TimerState;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengeListEntry_NpcQuest_C_BP_OnTimerSet) == 0x000001, "Wrong alignment on AthenaChallengeListEntry_NpcQuest_C_BP_OnTimerSet");
static_assert(sizeof(AthenaChallengeListEntry_NpcQuest_C_BP_OnTimerSet) == 0x000001, "Wrong size on AthenaChallengeListEntry_NpcQuest_C_BP_OnTimerSet");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_BP_OnTimerSet, TimerState) == 0x000000, "Member 'AthenaChallengeListEntry_NpcQuest_C_BP_OnTimerSet::TimerState' has a wrong offset!");

// Function AthenaChallengeListEntry_NpcQuest.AthenaChallengeListEntry_NpcQuest_C.ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest
// 0x02B0 (0x02B0 - 0x0000)
struct AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0008(0x0008)(NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0018(0x0040)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0058(0x0098)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00F0(0x0098)(ConstParm)
	bool                                          K2Node_Event_bIsCompleted;                         // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsLocked;                            // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsPartyAssisted;                     // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsGroupChallenge;                    // 0x018B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingTouch_ReturnValue;                 // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingTouch_ReturnValue_1;               // 0x018D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingGamepad_Return_Value;              // 0x018E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingGamepad_Return_Value_1;            // 0x018F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_193[0x5];                                      // 0x0193(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EFortRarity                                   K2Node_Event_Rarity;                               // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAthenaChallengeTimerState                    K2Node_Event_TimerState;                           // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bChallengeSeen;                       // 0x01BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSelected;                          // 0x01BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_1;       // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSelected_ReturnValue;                   // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSelected_ReturnValue_1;                 // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bDisabled;                            // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x01DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHasOwnerLeftGame;                    // 0x01DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x01DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue_1;              // 0x01DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E2[0x6];                                      // 0x01E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortRarityItemData                    CallFunc_BPGetRarityData_ReturnValue;              // 0x01E8(0x0080)()
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0268(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0280(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetCharacterArrayFromString_ReturnValue;  // 0x0290(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A5[0x3];                                      // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class UWidget*                          K2Node_Select_Default_2;                           // 0x02A8(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest) == 0x000008, "Wrong alignment on AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest");
static_assert(sizeof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest) == 0x0002B0, "Wrong size on AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, EntryPoint) == 0x000000, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, Temp_byte_Variable) == 0x000004, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, Temp_byte_Variable_1) == 0x000005, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, Temp_bool_Variable) == 0x000006, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, CallFunc_GetVisibility_ReturnValue) == 0x000007, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, K2Node_Event_InFocusEvent) == 0x000008, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, K2Node_Event_MyGeometry) == 0x000018, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, K2Node_Event_MouseEvent_1) == 0x000058, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, K2Node_Event_MouseEvent) == 0x0000F0, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, K2Node_Event_bIsCompleted) == 0x000188, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::K2Node_Event_bIsCompleted' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, K2Node_Event_bIsLocked) == 0x000189, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::K2Node_Event_bIsLocked' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, K2Node_Event_bIsPartyAssisted) == 0x00018A, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::K2Node_Event_bIsPartyAssisted' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, K2Node_Event_bIsGroupChallenge) == 0x00018B, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::K2Node_Event_bIsGroupChallenge' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, CallFunc_IsUsingTouch_ReturnValue) == 0x00018C, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::CallFunc_IsUsingTouch_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, CallFunc_IsUsingTouch_ReturnValue_1) == 0x00018D, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::CallFunc_IsUsingTouch_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, CallFunc_IsUsingGamepad_Return_Value) == 0x00018E, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::CallFunc_IsUsingGamepad_Return_Value' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, CallFunc_IsUsingGamepad_Return_Value_1) == 0x00018F, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::CallFunc_IsUsingGamepad_Return_Value_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, CallFunc_BooleanOR_ReturnValue) == 0x000190, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, CallFunc_BooleanOR_ReturnValue_1) == 0x000191, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, Temp_bool_Variable_1) == 0x000192, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, CallFunc_PlayAnimation_ReturnValue) == 0x000198, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, CallFunc_PlayAnimationReverse_ReturnValue) == 0x0001A0, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, K2Node_Event_Rarity) == 0x0001A8, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::K2Node_Event_Rarity' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, CallFunc_PlayAnimation_ReturnValue_1) == 0x0001B0, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, Temp_byte_Variable_2) == 0x0001B8, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, K2Node_Event_TimerState) == 0x0001B9, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::K2Node_Event_TimerState' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, K2Node_Event_bChallengeSeen) == 0x0001BA, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::K2Node_Event_bChallengeSeen' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, K2Node_Event_bIsSelected) == 0x0001BB, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, CallFunc_PlayAnimationReverse_ReturnValue_1) == 0x0001C0, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::CallFunc_PlayAnimationReverse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, CallFunc_IsSelected_ReturnValue) == 0x0001C8, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::CallFunc_IsSelected_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, CallFunc_PlayAnimation_ReturnValue_2) == 0x0001D0, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, CallFunc_IsSelected_ReturnValue_1) == 0x0001D8, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::CallFunc_IsSelected_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, K2Node_Event_bDisabled) == 0x0001D9, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::K2Node_Event_bDisabled' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, CallFunc_IsMobileGame_ReturnValue) == 0x0001DA, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, K2Node_Select_Default) == 0x0001DB, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, Temp_byte_Variable_3) == 0x0001DC, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, K2Node_Event_bHasOwnerLeftGame) == 0x0001DD, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::K2Node_Event_bHasOwnerLeftGame' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, Temp_bool_Variable_2) == 0x0001DE, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, CallFunc_GetVisibility_ReturnValue_1) == 0x0001DF, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::CallFunc_GetVisibility_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0001E0, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, K2Node_Select_Default_1) == 0x0001E1, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, CallFunc_BPGetRarityData_ReturnValue) == 0x0001E8, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::CallFunc_BPGetRarityData_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, CallFunc_GetText_ReturnValue) == 0x000268, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, CallFunc_Conv_TextToString_ReturnValue) == 0x000280, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, CallFunc_GetCharacterArrayFromString_ReturnValue) == 0x000290, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::CallFunc_GetCharacterArrayFromString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, CallFunc_Array_Length_ReturnValue) == 0x0002A0, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, CallFunc_Greater_IntInt_ReturnValue) == 0x0002A4, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest, K2Node_Select_Default_2) == 0x0002A8, "Member 'AthenaChallengeListEntry_NpcQuest_C_ExecuteUbergraph_AthenaChallengeListEntry_NpcQuest::K2Node_Select_Default_2' has a wrong offset!");

// Function AthenaChallengeListEntry_NpcQuest.AthenaChallengeListEntry_NpcQuest_C.IsUsingGamepad
// 0x0018 (0x0018 - 0x0000)
struct AthenaChallengeListEntry_NpcQuest_C_IsUsingGamepad final
{
public:
	bool                                          Return_Value;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengeListEntry_NpcQuest_C_IsUsingGamepad) == 0x000008, "Wrong alignment on AthenaChallengeListEntry_NpcQuest_C_IsUsingGamepad");
static_assert(sizeof(AthenaChallengeListEntry_NpcQuest_C_IsUsingGamepad) == 0x000018, "Wrong size on AthenaChallengeListEntry_NpcQuest_C_IsUsingGamepad");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_IsUsingGamepad, Return_Value) == 0x000000, "Member 'AthenaChallengeListEntry_NpcQuest_C_IsUsingGamepad::Return_Value' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_IsUsingGamepad, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000008, "Member 'AthenaChallengeListEntry_NpcQuest_C_IsUsingGamepad::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_IsUsingGamepad, CallFunc_GetCurrentInputType_ReturnValue) == 0x000010, "Member 'AthenaChallengeListEntry_NpcQuest_C_IsUsingGamepad::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_IsUsingGamepad, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'AthenaChallengeListEntry_NpcQuest_C_IsUsingGamepad::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function AthenaChallengeListEntry_NpcQuest.AthenaChallengeListEntry_NpcQuest_C.OnFocusLost
// 0x0008 (0x0008 - 0x0000)
struct AthenaChallengeListEntry_NpcQuest_C_OnFocusLost final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(AthenaChallengeListEntry_NpcQuest_C_OnFocusLost) == 0x000004, "Wrong alignment on AthenaChallengeListEntry_NpcQuest_C_OnFocusLost");
static_assert(sizeof(AthenaChallengeListEntry_NpcQuest_C_OnFocusLost) == 0x000008, "Wrong size on AthenaChallengeListEntry_NpcQuest_C_OnFocusLost");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_OnFocusLost, InFocusEvent) == 0x000000, "Member 'AthenaChallengeListEntry_NpcQuest_C_OnFocusLost::InFocusEvent' has a wrong offset!");

// Function AthenaChallengeListEntry_NpcQuest.AthenaChallengeListEntry_NpcQuest_C.OnMouseEnter
// 0x00D8 (0x00D8 - 0x0000)
struct AthenaChallengeListEntry_NpcQuest_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0040(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(AthenaChallengeListEntry_NpcQuest_C_OnMouseEnter) == 0x000008, "Wrong alignment on AthenaChallengeListEntry_NpcQuest_C_OnMouseEnter");
static_assert(sizeof(AthenaChallengeListEntry_NpcQuest_C_OnMouseEnter) == 0x0000D8, "Wrong size on AthenaChallengeListEntry_NpcQuest_C_OnMouseEnter");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'AthenaChallengeListEntry_NpcQuest_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_OnMouseEnter, MouseEvent) == 0x000040, "Member 'AthenaChallengeListEntry_NpcQuest_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function AthenaChallengeListEntry_NpcQuest.AthenaChallengeListEntry_NpcQuest_C.OnMouseLeave
// 0x0098 (0x0098 - 0x0000)
struct AthenaChallengeListEntry_NpcQuest_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(AthenaChallengeListEntry_NpcQuest_C_OnMouseLeave) == 0x000008, "Wrong alignment on AthenaChallengeListEntry_NpcQuest_C_OnMouseLeave");
static_assert(sizeof(AthenaChallengeListEntry_NpcQuest_C_OnMouseLeave) == 0x000098, "Wrong size on AthenaChallengeListEntry_NpcQuest_C_OnMouseLeave");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'AthenaChallengeListEntry_NpcQuest_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function AthenaChallengeListEntry_NpcQuest.AthenaChallengeListEntry_NpcQuest_C.OnSetState
// 0x0004 (0x0004 - 0x0000)
struct AthenaChallengeListEntry_NpcQuest_C_OnSetState final
{
public:
	bool                                          bIsCompleted;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLocked;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPartyAssisted;                                  // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsGroupChallenge_0;                               // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengeListEntry_NpcQuest_C_OnSetState) == 0x000001, "Wrong alignment on AthenaChallengeListEntry_NpcQuest_C_OnSetState");
static_assert(sizeof(AthenaChallengeListEntry_NpcQuest_C_OnSetState) == 0x000004, "Wrong size on AthenaChallengeListEntry_NpcQuest_C_OnSetState");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_OnSetState, bIsCompleted) == 0x000000, "Member 'AthenaChallengeListEntry_NpcQuest_C_OnSetState::bIsCompleted' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_OnSetState, bIsLocked) == 0x000001, "Member 'AthenaChallengeListEntry_NpcQuest_C_OnSetState::bIsLocked' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_OnSetState, bIsPartyAssisted) == 0x000002, "Member 'AthenaChallengeListEntry_NpcQuest_C_OnSetState::bIsPartyAssisted' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_OnSetState, bIsGroupChallenge_0) == 0x000003, "Member 'AthenaChallengeListEntry_NpcQuest_C_OnSetState::bIsGroupChallenge_0' has a wrong offset!");

// Function AthenaChallengeListEntry_NpcQuest.AthenaChallengeListEntry_NpcQuest_C.SetComplete
// 0x0030 (0x0030 - 0x0000)
struct AthenaChallengeListEntry_NpcQuest_C_SetComplete final
{
public:
	bool                                          CallFunc_IsChallengeRefreshingDaily_ReturnValue;   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortClientAnnouncement_TutorialInterface> K2Node_DynamicCast_AsFort_Client_Announcement_Tutorial_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengeListEntry_NpcQuest_C_SetComplete) == 0x000008, "Wrong alignment on AthenaChallengeListEntry_NpcQuest_C_SetComplete");
static_assert(sizeof(AthenaChallengeListEntry_NpcQuest_C_SetComplete) == 0x000030, "Wrong size on AthenaChallengeListEntry_NpcQuest_C_SetComplete");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetComplete, CallFunc_IsChallengeRefreshingDaily_ReturnValue) == 0x000000, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetComplete::CallFunc_IsChallengeRefreshingDaily_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetComplete, K2Node_MakeStruct_Margin) == 0x000004, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetComplete::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetComplete, K2Node_DynamicCast_AsFort_Client_Announcement_Tutorial_Interface) == 0x000018, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetComplete::K2Node_DynamicCast_AsFort_Client_Announcement_Tutorial_Interface' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetComplete, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetComplete::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function AthenaChallengeListEntry_NpcQuest.AthenaChallengeListEntry_NpcQuest_C.SetDefault
// 0x0028 (0x0028 - 0x0000)
struct AthenaChallengeListEntry_NpcQuest_C_SetDefault final
{
public:
	bool                                          PartyAssisted;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0008(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengeListEntry_NpcQuest_C_SetDefault) == 0x000008, "Wrong alignment on AthenaChallengeListEntry_NpcQuest_C_SetDefault");
static_assert(sizeof(AthenaChallengeListEntry_NpcQuest_C_SetDefault) == 0x000028, "Wrong size on AthenaChallengeListEntry_NpcQuest_C_SetDefault");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetDefault, PartyAssisted) == 0x000000, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetDefault::PartyAssisted' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetDefault, Temp_bool_Variable) == 0x000001, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetDefault::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetDefault, Temp_byte_Variable) == 0x000002, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetDefault::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetDefault, Temp_byte_Variable_1) == 0x000003, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetDefault::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetDefault, Temp_bool_Variable_1) == 0x000004, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetDefault::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetDefault, Temp_byte_Variable_2) == 0x000005, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetDefault::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetDefault, Temp_byte_Variable_3) == 0x000006, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetDefault::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetDefault, CallFunc_GetText_ReturnValue) == 0x000008, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetDefault::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetDefault, CallFunc_TextIsEmpty_ReturnValue) == 0x000020, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetDefault::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetDefault, K2Node_Select_Default) == 0x000021, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetDefault::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetDefault, K2Node_Select_Default_1) == 0x000022, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetDefault::K2Node_Select_Default_1' has a wrong offset!");

// Function AthenaChallengeListEntry_NpcQuest.AthenaChallengeListEntry_NpcQuest_C.SetLockedWithTimer
// 0x00A8 (0x00A8 - 0x0000)
struct AthenaChallengeListEntry_NpcQuest_C_SetLockedWithTimer final
{
public:
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x0000(0x0038)(NoDestructor)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform_1;               // 0x0038(0x0038)(NoDestructor)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform_2;               // 0x0070(0x0038)(NoDestructor)
};
static_assert(alignof(AthenaChallengeListEntry_NpcQuest_C_SetLockedWithTimer) == 0x000008, "Wrong alignment on AthenaChallengeListEntry_NpcQuest_C_SetLockedWithTimer");
static_assert(sizeof(AthenaChallengeListEntry_NpcQuest_C_SetLockedWithTimer) == 0x0000A8, "Wrong size on AthenaChallengeListEntry_NpcQuest_C_SetLockedWithTimer");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetLockedWithTimer, K2Node_MakeStruct_WidgetTransform) == 0x000000, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetLockedWithTimer::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetLockedWithTimer, K2Node_MakeStruct_WidgetTransform_1) == 0x000038, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetLockedWithTimer::K2Node_MakeStruct_WidgetTransform_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetLockedWithTimer, K2Node_MakeStruct_WidgetTransform_2) == 0x000070, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetLockedWithTimer::K2Node_MakeStruct_WidgetTransform_2' has a wrong offset!");

// Function AthenaChallengeListEntry_NpcQuest.AthenaChallengeListEntry_NpcQuest_C.SetTimerStyling
// 0x0138 (0x0138 - 0x0000)
struct AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling final
{
public:
	EAthenaChallengeTimerState                    TimerState;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           HoverColor;                                        // 0x0004(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DefaultColor;                                      // 0x0014(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAthenaChallengeTimerState                    Temp_byte_Variable;                                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x008C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x009C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_8;                            // 0x00AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_9;                            // 0x00BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_10;                           // 0x00CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_11;                           // 0x00DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicFontMaterial_ReturnValue;       // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsCompleted_ReturnValue;               // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChallengeRefreshingDaily_ReturnValue;   // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB[0x1];                                       // 0x00FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x00FC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAthenaChallengeTimerState                    Temp_byte_Variable_1;                              // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10E[0x2];                                      // 0x010E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicFontMaterial_ReturnValue_1;     // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicFontMaterial_ReturnValue_2;     // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling) == 0x000008, "Wrong alignment on AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling");
static_assert(sizeof(AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling) == 0x000138, "Wrong size on AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling, TimerState) == 0x000000, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling::TimerState' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling, HoverColor) == 0x000004, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling::HoverColor' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling, DefaultColor) == 0x000014, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling::DefaultColor' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling, Temp_struct_Variable) == 0x000024, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000034, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling, Temp_struct_Variable_1) == 0x000038, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling, Temp_struct_Variable_2) == 0x000048, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling, Temp_struct_Variable_3) == 0x000058, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling, Temp_struct_Variable_4) == 0x000068, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling, Temp_struct_Variable_5) == 0x000078, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling, Temp_byte_Variable) == 0x000088, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling, Temp_struct_Variable_6) == 0x00008C, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling, Temp_struct_Variable_7) == 0x00009C, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling, Temp_struct_Variable_8) == 0x0000AC, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling, Temp_struct_Variable_9) == 0x0000BC, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling, Temp_struct_Variable_10) == 0x0000CC, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling, Temp_struct_Variable_11) == 0x0000DC, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling, CallFunc_GetDynamicFontMaterial_ReturnValue) == 0x0000F0, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling::CallFunc_GetDynamicFontMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling, CallFunc_GetIsCompleted_ReturnValue) == 0x0000F8, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling::CallFunc_GetIsCompleted_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling, CallFunc_IsChallengeRefreshingDaily_ReturnValue) == 0x0000F9, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling::CallFunc_IsChallengeRefreshingDaily_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling, CallFunc_BooleanAND_ReturnValue) == 0x0000FA, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling, K2Node_Select_Default) == 0x0000FC, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00010C, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling, Temp_byte_Variable_1) == 0x00010D, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling, K2Node_Select_Default_1) == 0x000110, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling, CallFunc_GetDynamicFontMaterial_ReturnValue_1) == 0x000120, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling::CallFunc_GetDynamicFontMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling, CallFunc_GetDynamicFontMaterial_ReturnValue_2) == 0x000128, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling::CallFunc_GetDynamicFontMaterial_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000130, "Member 'AthenaChallengeListEntry_NpcQuest_C_SetTimerStyling::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function AthenaChallengeListEntry_NpcQuest.AthenaChallengeListEntry_NpcQuest_C.UpdateGroupChallenge
// 0x0004 (0x0004 - 0x0000)
struct AthenaChallengeListEntry_NpcQuest_C_UpdateGroupChallenge final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaChallengeListEntry_NpcQuest_C_UpdateGroupChallenge) == 0x000001, "Wrong alignment on AthenaChallengeListEntry_NpcQuest_C_UpdateGroupChallenge");
static_assert(sizeof(AthenaChallengeListEntry_NpcQuest_C_UpdateGroupChallenge) == 0x000004, "Wrong size on AthenaChallengeListEntry_NpcQuest_C_UpdateGroupChallenge");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_UpdateGroupChallenge, Temp_bool_Variable) == 0x000000, "Member 'AthenaChallengeListEntry_NpcQuest_C_UpdateGroupChallenge::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_UpdateGroupChallenge, Temp_byte_Variable) == 0x000001, "Member 'AthenaChallengeListEntry_NpcQuest_C_UpdateGroupChallenge::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_UpdateGroupChallenge, Temp_byte_Variable_1) == 0x000002, "Member 'AthenaChallengeListEntry_NpcQuest_C_UpdateGroupChallenge::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaChallengeListEntry_NpcQuest_C_UpdateGroupChallenge, K2Node_Select_Default) == 0x000003, "Member 'AthenaChallengeListEntry_NpcQuest_C_UpdateGroupChallenge::K2Node_Select_Default' has a wrong offset!");

}

