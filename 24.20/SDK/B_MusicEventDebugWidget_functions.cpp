#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_MusicEventDebugWidget

#include "Basic.hpp"

#include "B_MusicEventDebugWidget_classes.hpp"
#include "B_MusicEventDebugWidget_parameters.hpp"


namespace SDK
{

// Function B_MusicEventDebugWidget.B_MusicEventDebugWidget_C.ExecuteUbergraph_B_MusicEventDebugWidget
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_MusicEventDebugWidget_C::ExecuteUbergraph_B_MusicEventDebugWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MusicEventDebugWidget_C", "ExecuteUbergraph_B_MusicEventDebugWidget");

	Params::B_MusicEventDebugWidget_C_ExecuteUbergraph_B_MusicEventDebugWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_MusicEventDebugWidget.B_MusicEventDebugWidget_C.FilterInstances
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UB_MusicEventDebugWidget_C::FilterInstances()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MusicEventDebugWidget_C", "FilterInstances");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_MusicEventDebugWidget.B_MusicEventDebugWidget_C.SetEventInstances
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class UMusicEventInstance*>      Instances_0                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UB_MusicEventDebugWidget_C::SetEventInstances(const TArray<class UMusicEventInstance*>& Instances_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MusicEventDebugWidget_C", "SetEventInstances");

	Params::B_MusicEventDebugWidget_C_SetEventInstances Parms{};

	Parms.Instances_0 = std::move(Instances_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_MusicEventDebugWidget.B_MusicEventDebugWidget_C.SetMusicEventAssetFilter
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Filter                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UB_MusicEventDebugWidget_C::SetMusicEventAssetFilter(const class FString& Filter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MusicEventDebugWidget_C", "SetMusicEventAssetFilter");

	Params::B_MusicEventDebugWidget_C_SetMusicEventAssetFilter Parms{};

	Parms.Filter = std::move(Filter);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_MusicEventDebugWidget.B_MusicEventDebugWidget_C.SetMusicEventFontSize
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Size                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_MusicEventDebugWidget_C::SetMusicEventFontSize(int32 Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MusicEventDebugWidget_C", "SetMusicEventFontSize");

	Params::B_MusicEventDebugWidget_C_SetMusicEventFontSize Parms{};

	Parms.Size = Size;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_MusicEventDebugWidget.B_MusicEventDebugWidget_C.SetMusicEventPos
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  X                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Y                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_MusicEventDebugWidget_C::SetMusicEventPos(double X, double Y)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MusicEventDebugWidget_C", "SetMusicEventPos");

	Params::B_MusicEventDebugWidget_C_SetMusicEventPos Parms{};

	Parms.X = X;
	Parms.Y = Y;

	UObject::ProcessEvent(Func, &Parms);
}

}

