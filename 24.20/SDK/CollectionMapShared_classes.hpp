#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CollectionMapShared

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// Class CollectionMapShared.AthenaCollectionScreenMapBase
// 0x0088 (0x06B0 - 0x0628)
class UAthenaCollectionScreenMapBase : public UAthenaCollectionScreenBase
{
public:
	class UAthenaFullScreenMapBase*               MapWidget;                                         // 0x0628(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UAthenaMapCollectionIcon>   CollectionIconType;                                // 0x0630(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, class UAthenaMapCollectionIcon*> MapCollectionIcons;                                // 0x0638(0x0050)(ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_688[0x28];                                     // 0x0688(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AthenaCollectionScreenMapBase">();
	}
	static class UAthenaCollectionScreenMapBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaCollectionScreenMapBase>();
	}
};
static_assert(alignof(UAthenaCollectionScreenMapBase) == 0x000008, "Wrong alignment on UAthenaCollectionScreenMapBase");
static_assert(sizeof(UAthenaCollectionScreenMapBase) == 0x0006B0, "Wrong size on UAthenaCollectionScreenMapBase");
static_assert(offsetof(UAthenaCollectionScreenMapBase, MapWidget) == 0x000628, "Member 'UAthenaCollectionScreenMapBase::MapWidget' has a wrong offset!");
static_assert(offsetof(UAthenaCollectionScreenMapBase, CollectionIconType) == 0x000630, "Member 'UAthenaCollectionScreenMapBase::CollectionIconType' has a wrong offset!");
static_assert(offsetof(UAthenaCollectionScreenMapBase, MapCollectionIcons) == 0x000638, "Member 'UAthenaCollectionScreenMapBase::MapCollectionIcons' has a wrong offset!");

// Class CollectionMapShared.AthenaMapCollectionIcon
// 0x0000 (0x0330 - 0x0330)
class UAthenaMapCollectionIcon : public UAthenaMapNavigableIconCustom
{
public:
	void SetIsKnown(const bool bIsKnown);
	void SetSecondaryIcon(const TSoftObjectPtr<class UObject>& SecondaryIcon);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AthenaMapCollectionIcon">();
	}
	static class UAthenaMapCollectionIcon* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaMapCollectionIcon>();
	}
};
static_assert(alignof(UAthenaMapCollectionIcon) == 0x000008, "Wrong alignment on UAthenaMapCollectionIcon");
static_assert(sizeof(UAthenaMapCollectionIcon) == 0x000330, "Wrong size on UAthenaMapCollectionIcon");

}

