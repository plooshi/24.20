#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MeshCosmeticsUI

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// ScriptStruct MeshCosmeticsUI.FortVariantSprayCustomizerChannelOptions
// 0x0018 (0x0018 - 0x0000)
struct FFortVariantSprayCustomizerChannelOptions final
{
public:
	struct FRotator                               RotationOffset;                                    // 0x0000(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFortVariantSprayCustomizerChannelOptions) == 0x000008, "Wrong alignment on FFortVariantSprayCustomizerChannelOptions");
static_assert(sizeof(FFortVariantSprayCustomizerChannelOptions) == 0x000018, "Wrong size on FFortVariantSprayCustomizerChannelOptions");
static_assert(offsetof(FFortVariantSprayCustomizerChannelOptions, RotationOffset) == 0x000000, "Member 'FFortVariantSprayCustomizerChannelOptions::RotationOffset' has a wrong offset!");

// ScriptStruct MeshCosmeticsUI.FortVariantSprayCustomizerCosmeticOptions
// 0x0060 (0x0060 - 0x0000)
struct FFortVariantSprayCustomizerCosmeticOptions final
{
public:
	TArray<TSoftObjectPtr<class UFortItemDefinition>> ItemShopPreviewStyles;                             // 0x0000(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, struct FFortVariantSprayCustomizerChannelOptions> ChannelOptions;                                    // 0x0010(0x0050)(Edit, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFortVariantSprayCustomizerCosmeticOptions) == 0x000008, "Wrong alignment on FFortVariantSprayCustomizerCosmeticOptions");
static_assert(sizeof(FFortVariantSprayCustomizerCosmeticOptions) == 0x000060, "Wrong size on FFortVariantSprayCustomizerCosmeticOptions");
static_assert(offsetof(FFortVariantSprayCustomizerCosmeticOptions, ItemShopPreviewStyles) == 0x000000, "Member 'FFortVariantSprayCustomizerCosmeticOptions::ItemShopPreviewStyles' has a wrong offset!");
static_assert(offsetof(FFortVariantSprayCustomizerCosmeticOptions, ChannelOptions) == 0x000010, "Member 'FFortVariantSprayCustomizerCosmeticOptions::ChannelOptions' has a wrong offset!");

// ScriptStruct MeshCosmeticsUI.FortVariantRedirectorTileLoadedEmoteToRandomize
// 0x0010 (0x0010 - 0x0000)
struct FFortVariantRedirectorTileLoadedEmoteToRandomize final
{
public:
	class UFortItemDefinition*                    LoadedEmote;                                       // 0x0000(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FFortVariantRedirectorTileLoadedEmoteToRandomize) == 0x000008, "Wrong alignment on FFortVariantRedirectorTileLoadedEmoteToRandomize");
static_assert(sizeof(FFortVariantRedirectorTileLoadedEmoteToRandomize) == 0x000010, "Wrong size on FFortVariantRedirectorTileLoadedEmoteToRandomize");
static_assert(offsetof(FFortVariantRedirectorTileLoadedEmoteToRandomize, LoadedEmote) == 0x000000, "Member 'FFortVariantRedirectorTileLoadedEmoteToRandomize::LoadedEmote' has a wrong offset!");

}

