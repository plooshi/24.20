#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameplayEventRouter

#include "Basic.hpp"

#include "GameplayEventRouter_structs.hpp"


namespace SDK::Params
{

// Function GameplayEventRouter.AsyncAction_StartListeningToEvent.StartListeningToEvent
// 0x0030 (0x0030 - 0x0000)
struct AsyncAction_StartListeningToEvent_StartListeningToEvent final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGameplayEventRouterComponent*          Target;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UScriptStruct*                          EventType;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                Context;                                           // 0x0018(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEventBubblingRule                            EventBubblingRule;                                 // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncAction_StartListeningToEvent*     ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AsyncAction_StartListeningToEvent_StartListeningToEvent) == 0x000008, "Wrong alignment on AsyncAction_StartListeningToEvent_StartListeningToEvent");
static_assert(sizeof(AsyncAction_StartListeningToEvent_StartListeningToEvent) == 0x000030, "Wrong size on AsyncAction_StartListeningToEvent_StartListeningToEvent");
static_assert(offsetof(AsyncAction_StartListeningToEvent_StartListeningToEvent, WorldContextObject) == 0x000000, "Member 'AsyncAction_StartListeningToEvent_StartListeningToEvent::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AsyncAction_StartListeningToEvent_StartListeningToEvent, Target) == 0x000008, "Member 'AsyncAction_StartListeningToEvent_StartListeningToEvent::Target' has a wrong offset!");
static_assert(offsetof(AsyncAction_StartListeningToEvent_StartListeningToEvent, EventType) == 0x000010, "Member 'AsyncAction_StartListeningToEvent_StartListeningToEvent::EventType' has a wrong offset!");
static_assert(offsetof(AsyncAction_StartListeningToEvent_StartListeningToEvent, Context) == 0x000018, "Member 'AsyncAction_StartListeningToEvent_StartListeningToEvent::Context' has a wrong offset!");
static_assert(offsetof(AsyncAction_StartListeningToEvent_StartListeningToEvent, EventBubblingRule) == 0x000020, "Member 'AsyncAction_StartListeningToEvent_StartListeningToEvent::EventBubblingRule' has a wrong offset!");
static_assert(offsetof(AsyncAction_StartListeningToEvent_StartListeningToEvent, ReturnValue) == 0x000028, "Member 'AsyncAction_StartListeningToEvent_StartListeningToEvent::ReturnValue' has a wrong offset!");

// Function GameplayEventRouter.AsyncAction_StartListeningToEvent.GetPayload
// 0x0008 (0x0008 - 0x0000)
struct AsyncAction_StartListeningToEvent_GetPayload final
{
public:
	int32                                         OutPayload;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AsyncAction_StartListeningToEvent_GetPayload) == 0x000004, "Wrong alignment on AsyncAction_StartListeningToEvent_GetPayload");
static_assert(sizeof(AsyncAction_StartListeningToEvent_GetPayload) == 0x000008, "Wrong size on AsyncAction_StartListeningToEvent_GetPayload");
static_assert(offsetof(AsyncAction_StartListeningToEvent_GetPayload, OutPayload) == 0x000000, "Member 'AsyncAction_StartListeningToEvent_GetPayload::OutPayload' has a wrong offset!");
static_assert(offsetof(AsyncAction_StartListeningToEvent_GetPayload, ReturnValue) == 0x000004, "Member 'AsyncAction_StartListeningToEvent_GetPayload::ReturnValue' has a wrong offset!");

// Function GameplayEventRouter.AsyncAction_StartListeningToStatefulEvent.StartListeningToStatefulEvent
// 0x0030 (0x0030 - 0x0000)
struct AsyncAction_StartListeningToStatefulEvent_StartListeningToStatefulEvent final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGameplayEventRouterComponent*          Target;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UScriptStruct*                          EventType;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                Context;                                           // 0x0018(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEventBubblingRule                            EventBubblingRule;                                 // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncAction_StartListeningToStatefulEvent* ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AsyncAction_StartListeningToStatefulEvent_StartListeningToStatefulEvent) == 0x000008, "Wrong alignment on AsyncAction_StartListeningToStatefulEvent_StartListeningToStatefulEvent");
static_assert(sizeof(AsyncAction_StartListeningToStatefulEvent_StartListeningToStatefulEvent) == 0x000030, "Wrong size on AsyncAction_StartListeningToStatefulEvent_StartListeningToStatefulEvent");
static_assert(offsetof(AsyncAction_StartListeningToStatefulEvent_StartListeningToStatefulEvent, WorldContextObject) == 0x000000, "Member 'AsyncAction_StartListeningToStatefulEvent_StartListeningToStatefulEvent::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AsyncAction_StartListeningToStatefulEvent_StartListeningToStatefulEvent, Target) == 0x000008, "Member 'AsyncAction_StartListeningToStatefulEvent_StartListeningToStatefulEvent::Target' has a wrong offset!");
static_assert(offsetof(AsyncAction_StartListeningToStatefulEvent_StartListeningToStatefulEvent, EventType) == 0x000010, "Member 'AsyncAction_StartListeningToStatefulEvent_StartListeningToStatefulEvent::EventType' has a wrong offset!");
static_assert(offsetof(AsyncAction_StartListeningToStatefulEvent_StartListeningToStatefulEvent, Context) == 0x000018, "Member 'AsyncAction_StartListeningToStatefulEvent_StartListeningToStatefulEvent::Context' has a wrong offset!");
static_assert(offsetof(AsyncAction_StartListeningToStatefulEvent_StartListeningToStatefulEvent, EventBubblingRule) == 0x000020, "Member 'AsyncAction_StartListeningToStatefulEvent_StartListeningToStatefulEvent::EventBubblingRule' has a wrong offset!");
static_assert(offsetof(AsyncAction_StartListeningToStatefulEvent_StartListeningToStatefulEvent, ReturnValue) == 0x000028, "Member 'AsyncAction_StartListeningToStatefulEvent_StartListeningToStatefulEvent::ReturnValue' has a wrong offset!");

// Function GameplayEventRouter.AsyncAction_StartListeningToStatefulEvent.GetPayload
// 0x0008 (0x0008 - 0x0000)
struct AsyncAction_StartListeningToStatefulEvent_GetPayload final
{
public:
	int32                                         OutPayload;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AsyncAction_StartListeningToStatefulEvent_GetPayload) == 0x000004, "Wrong alignment on AsyncAction_StartListeningToStatefulEvent_GetPayload");
static_assert(sizeof(AsyncAction_StartListeningToStatefulEvent_GetPayload) == 0x000008, "Wrong size on AsyncAction_StartListeningToStatefulEvent_GetPayload");
static_assert(offsetof(AsyncAction_StartListeningToStatefulEvent_GetPayload, OutPayload) == 0x000000, "Member 'AsyncAction_StartListeningToStatefulEvent_GetPayload::OutPayload' has a wrong offset!");
static_assert(offsetof(AsyncAction_StartListeningToStatefulEvent_GetPayload, ReturnValue) == 0x000004, "Member 'AsyncAction_StartListeningToStatefulEvent_GetPayload::ReturnValue' has a wrong offset!");

// Function GameplayEventRouter.GameplayEventRouterComponent.ClearEventState
// 0x0008 (0x0008 - 0x0000)
struct GameplayEventRouterComponent_ClearEventState final
{
public:
	const class UScriptStruct*                    EventType;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GameplayEventRouterComponent_ClearEventState) == 0x000008, "Wrong alignment on GameplayEventRouterComponent_ClearEventState");
static_assert(sizeof(GameplayEventRouterComponent_ClearEventState) == 0x000008, "Wrong size on GameplayEventRouterComponent_ClearEventState");
static_assert(offsetof(GameplayEventRouterComponent_ClearEventState, EventType) == 0x000000, "Member 'GameplayEventRouterComponent_ClearEventState::EventType' has a wrong offset!");

// Function GameplayEventRouter.GameplayEventRouterComponent.ClearEventStateByContext
// 0x0010 (0x0010 - 0x0000)
struct GameplayEventRouterComponent_ClearEventStateByContext final
{
public:
	const class UScriptStruct*                    EventType;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UObject*                          Context;                                           // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GameplayEventRouterComponent_ClearEventStateByContext) == 0x000008, "Wrong alignment on GameplayEventRouterComponent_ClearEventStateByContext");
static_assert(sizeof(GameplayEventRouterComponent_ClearEventStateByContext) == 0x000010, "Wrong size on GameplayEventRouterComponent_ClearEventStateByContext");
static_assert(offsetof(GameplayEventRouterComponent_ClearEventStateByContext, EventType) == 0x000000, "Member 'GameplayEventRouterComponent_ClearEventStateByContext::EventType' has a wrong offset!");
static_assert(offsetof(GameplayEventRouterComponent_ClearEventStateByContext, Context) == 0x000008, "Member 'GameplayEventRouterComponent_ClearEventStateByContext::Context' has a wrong offset!");

// Function GameplayEventRouter.GameplayEventRouterComponent.K2_BroadcastEvent
// 0x0018 (0x0018 - 0x0000)
struct GameplayEventRouterComponent_K2_BroadcastEvent final
{
public:
	int32                                         EventData;                                         // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                EventContext;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GameplayEventRouterComponent_K2_BroadcastEvent) == 0x000008, "Wrong alignment on GameplayEventRouterComponent_K2_BroadcastEvent");
static_assert(sizeof(GameplayEventRouterComponent_K2_BroadcastEvent) == 0x000018, "Wrong size on GameplayEventRouterComponent_K2_BroadcastEvent");
static_assert(offsetof(GameplayEventRouterComponent_K2_BroadcastEvent, EventData) == 0x000000, "Member 'GameplayEventRouterComponent_K2_BroadcastEvent::EventData' has a wrong offset!");
static_assert(offsetof(GameplayEventRouterComponent_K2_BroadcastEvent, EventContext) == 0x000008, "Member 'GameplayEventRouterComponent_K2_BroadcastEvent::EventContext' has a wrong offset!");
static_assert(offsetof(GameplayEventRouterComponent_K2_BroadcastEvent, ReturnValue) == 0x000010, "Member 'GameplayEventRouterComponent_K2_BroadcastEvent::ReturnValue' has a wrong offset!");

// Function GameplayEventRouter.GameplayEventRouterComponent.K2_BroadcastStatefulEvent
// 0x0018 (0x0018 - 0x0000)
struct GameplayEventRouterComponent_K2_BroadcastStatefulEvent final
{
public:
	int32                                         EventData;                                         // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                EventContext;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GameplayEventRouterComponent_K2_BroadcastStatefulEvent) == 0x000008, "Wrong alignment on GameplayEventRouterComponent_K2_BroadcastStatefulEvent");
static_assert(sizeof(GameplayEventRouterComponent_K2_BroadcastStatefulEvent) == 0x000018, "Wrong size on GameplayEventRouterComponent_K2_BroadcastStatefulEvent");
static_assert(offsetof(GameplayEventRouterComponent_K2_BroadcastStatefulEvent, EventData) == 0x000000, "Member 'GameplayEventRouterComponent_K2_BroadcastStatefulEvent::EventData' has a wrong offset!");
static_assert(offsetof(GameplayEventRouterComponent_K2_BroadcastStatefulEvent, EventContext) == 0x000008, "Member 'GameplayEventRouterComponent_K2_BroadcastStatefulEvent::EventContext' has a wrong offset!");
static_assert(offsetof(GameplayEventRouterComponent_K2_BroadcastStatefulEvent, ReturnValue) == 0x000010, "Member 'GameplayEventRouterComponent_K2_BroadcastStatefulEvent::ReturnValue' has a wrong offset!");

// Function GameplayEventRouter.GameplayEventRouterComponent.StopListeningToEvent
// 0x001C (0x001C - 0x0000)
struct GameplayEventRouterComponent_StopListeningToEvent final
{
public:
	struct FGameplayEventListenerHandle           HandleToRemove;                                    // 0x0000(0x001C)(Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GameplayEventRouterComponent_StopListeningToEvent) == 0x000004, "Wrong alignment on GameplayEventRouterComponent_StopListeningToEvent");
static_assert(sizeof(GameplayEventRouterComponent_StopListeningToEvent) == 0x00001C, "Wrong size on GameplayEventRouterComponent_StopListeningToEvent");
static_assert(offsetof(GameplayEventRouterComponent_StopListeningToEvent, HandleToRemove) == 0x000000, "Member 'GameplayEventRouterComponent_StopListeningToEvent::HandleToRemove' has a wrong offset!");

// Function GameplayEventRouter.GameplayEventRouterComponent.HasValidEventState
// 0x0010 (0x0010 - 0x0000)
struct GameplayEventRouterComponent_HasValidEventState final
{
public:
	const class UScriptStruct*                    EventType;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(GameplayEventRouterComponent_HasValidEventState) == 0x000008, "Wrong alignment on GameplayEventRouterComponent_HasValidEventState");
static_assert(sizeof(GameplayEventRouterComponent_HasValidEventState) == 0x000010, "Wrong size on GameplayEventRouterComponent_HasValidEventState");
static_assert(offsetof(GameplayEventRouterComponent_HasValidEventState, EventType) == 0x000000, "Member 'GameplayEventRouterComponent_HasValidEventState::EventType' has a wrong offset!");
static_assert(offsetof(GameplayEventRouterComponent_HasValidEventState, ReturnValue) == 0x000008, "Member 'GameplayEventRouterComponent_HasValidEventState::ReturnValue' has a wrong offset!");

// Function GameplayEventRouter.GameplayEventRouterOwnerInterface.GetEventRouterClass
// 0x0008 (0x0008 - 0x0000)
struct GameplayEventRouterOwnerInterface_GetEventRouterClass final
{
public:
	TSubclassOf<class UGameplayEventRouterComponent> ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GameplayEventRouterOwnerInterface_GetEventRouterClass) == 0x000008, "Wrong alignment on GameplayEventRouterOwnerInterface_GetEventRouterClass");
static_assert(sizeof(GameplayEventRouterOwnerInterface_GetEventRouterClass) == 0x000008, "Wrong size on GameplayEventRouterOwnerInterface_GetEventRouterClass");
static_assert(offsetof(GameplayEventRouterOwnerInterface_GetEventRouterClass, ReturnValue) == 0x000000, "Member 'GameplayEventRouterOwnerInterface_GetEventRouterClass::ReturnValue' has a wrong offset!");

// Function GameplayEventRouter.GameplayEventRouterSubsytem.GetEventRouter
// 0x0018 (0x0018 - 0x0000)
struct GameplayEventRouterSubsytem_GetEventRouter final
{
public:
	class UClass*                                 Scope;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 ContextActor;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGameplayEventRouterComponent*          ReturnValue;                                       // 0x0010(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GameplayEventRouterSubsytem_GetEventRouter) == 0x000008, "Wrong alignment on GameplayEventRouterSubsytem_GetEventRouter");
static_assert(sizeof(GameplayEventRouterSubsytem_GetEventRouter) == 0x000018, "Wrong size on GameplayEventRouterSubsytem_GetEventRouter");
static_assert(offsetof(GameplayEventRouterSubsytem_GetEventRouter, Scope) == 0x000000, "Member 'GameplayEventRouterSubsytem_GetEventRouter::Scope' has a wrong offset!");
static_assert(offsetof(GameplayEventRouterSubsytem_GetEventRouter, ContextActor) == 0x000008, "Member 'GameplayEventRouterSubsytem_GetEventRouter::ContextActor' has a wrong offset!");
static_assert(offsetof(GameplayEventRouterSubsytem_GetEventRouter, ReturnValue) == 0x000010, "Member 'GameplayEventRouterSubsytem_GetEventRouter::ReturnValue' has a wrong offset!");

// Function GameplayEventRouter.GameplayEventRouterSubsytem.GetGlobalEventRouter
// 0x0010 (0x0010 - 0x0000)
struct GameplayEventRouterSubsytem_GetGlobalEventRouter final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGameplayEventRouterComponent*          ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GameplayEventRouterSubsytem_GetGlobalEventRouter) == 0x000008, "Wrong alignment on GameplayEventRouterSubsytem_GetGlobalEventRouter");
static_assert(sizeof(GameplayEventRouterSubsytem_GetGlobalEventRouter) == 0x000010, "Wrong size on GameplayEventRouterSubsytem_GetGlobalEventRouter");
static_assert(offsetof(GameplayEventRouterSubsytem_GetGlobalEventRouter, WorldContextObject) == 0x000000, "Member 'GameplayEventRouterSubsytem_GetGlobalEventRouter::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GameplayEventRouterSubsytem_GetGlobalEventRouter, ReturnValue) == 0x000008, "Member 'GameplayEventRouterSubsytem_GetGlobalEventRouter::ReturnValue' has a wrong offset!");

}

