#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerseDevices

#include "Basic.hpp"

#include "VerseDevices_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "CoreUObject_classes.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "GameFeatures_classes.hpp"


namespace SDK
{

// Class VerseDevices.PlaylistUserOptionScript
// 0x0018 (0x01F0 - 0x01D8)
class UPlaylistUserOptionScript final : public UPlaylistUserOptionBase
{
public:
	TArray<struct FPlaylistOptionScriptValue>     OptionValues;                                      // 0x01D8(0x0010)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, NativeAccessSpecifierPublic)
	int32                                         DefaultValueIndex;                                 // 0x01E8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlaylistUserOptionScript">();
	}
	static class UPlaylistUserOptionScript* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlaylistUserOptionScript>();
	}
};
static_assert(alignof(UPlaylistUserOptionScript) == 0x000008, "Wrong alignment on UPlaylistUserOptionScript");
static_assert(sizeof(UPlaylistUserOptionScript) == 0x0001F0, "Wrong size on UPlaylistUserOptionScript");
static_assert(offsetof(UPlaylistUserOptionScript, OptionValues) == 0x0001D8, "Member 'UPlaylistUserOptionScript::OptionValues' has a wrong offset!");
static_assert(offsetof(UPlaylistUserOptionScript, DefaultValueIndex) == 0x0001E8, "Member 'UPlaylistUserOptionScript::DefaultValueIndex' has a wrong offset!");

// Class VerseDevices.ScriptDevice
// 0x0050 (0x0F48 - 0x0EF8)
class AScriptDevice final : public ABuildingProp
{
public:
	class UVerseCreativeDevice*                   Script;                                            // 0x0EF8(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, SaveGame, NoDestructor, Protected, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F00[0x8];                                      // 0x0F00(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerseCreativeDevice*                   ScriptInstance;                                    // 0x0F08(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F10[0x38];                                     // 0x0F10(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleMinigameEndGame(class AFortPlayerController* PlayerController, EFortMinigameEnd EndMethod, EFortMinigameState NextState);
	void HandlePreMinigameStartedSetup();
	void SetEnabled(bool bInEnabled);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ScriptDevice">();
	}
	static class AScriptDevice* GetDefaultObj()
	{
		return GetDefaultObjImpl<AScriptDevice>();
	}
};
static_assert(alignof(AScriptDevice) == 0x000008, "Wrong alignment on AScriptDevice");
static_assert(sizeof(AScriptDevice) == 0x000F48, "Wrong size on AScriptDevice");
static_assert(offsetof(AScriptDevice, Script) == 0x000EF8, "Member 'AScriptDevice::Script' has a wrong offset!");
static_assert(offsetof(AScriptDevice, ScriptInstance) == 0x000F08, "Member 'AScriptDevice::ScriptInstance' has a wrong offset!");

// Class VerseDevices.VerseCreativeDevice
// 0x0008 (0x0030 - 0x0028)
class UVerseCreativeDevice : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseCreativeDevice">();
	}
	static class UVerseCreativeDevice* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerseCreativeDevice>();
	}
};
static_assert(alignof(UVerseCreativeDevice) == 0x000008, "Wrong alignment on UVerseCreativeDevice");
static_assert(sizeof(UVerseCreativeDevice) == 0x000030, "Wrong size on UVerseCreativeDevice");

// Class VerseDevices.VerseCreativeObject
// 0x0010 (0x0038 - 0x0028)
class UVerseCreativeObject : public UObject
{
public:
	class ABuildingActor*                         SavedActor;                                        // 0x0028(0x0008)(Edit, ZeroConstructor, SaveGame, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnActorEndPlayDestroyActorAndReset(class AActor* Actor, EEndPlayReason EndPlayReason);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseCreativeObject">();
	}
	static class UVerseCreativeObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerseCreativeObject>();
	}
};
static_assert(alignof(UVerseCreativeObject) == 0x000008, "Wrong alignment on UVerseCreativeObject");
static_assert(sizeof(UVerseCreativeObject) == 0x000038, "Wrong size on UVerseCreativeObject");
static_assert(offsetof(UVerseCreativeObject, SavedActor) == 0x000028, "Member 'UVerseCreativeObject::SavedActor' has a wrong offset!");

// Class VerseDevices.VerseDevicesFeatureAction_RegisterWrapperClasses
// 0x0030 (0x0058 - 0x0028)
class UVerseDevicesFeatureAction_RegisterWrapperClasses final : public UGameFeatureAction
{
public:
	TSoftObjectPtr<class UVerseDeviceWrapperClassMap> DeviceToWrapperClassMapAsset;                      // 0x0028(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_50[0x8];                                       // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseDevicesFeatureAction_RegisterWrapperClasses">();
	}
	static class UVerseDevicesFeatureAction_RegisterWrapperClasses* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerseDevicesFeatureAction_RegisterWrapperClasses>();
	}
};
static_assert(alignof(UVerseDevicesFeatureAction_RegisterWrapperClasses) == 0x000008, "Wrong alignment on UVerseDevicesFeatureAction_RegisterWrapperClasses");
static_assert(sizeof(UVerseDevicesFeatureAction_RegisterWrapperClasses) == 0x000058, "Wrong size on UVerseDevicesFeatureAction_RegisterWrapperClasses");
static_assert(offsetof(UVerseDevicesFeatureAction_RegisterWrapperClasses, DeviceToWrapperClassMapAsset) == 0x000028, "Member 'UVerseDevicesFeatureAction_RegisterWrapperClasses::DeviceToWrapperClassMapAsset' has a wrong offset!");

// Class VerseDevices.VerseDeviceWrapperClassMap
// 0x0050 (0x0080 - 0x0030)
class UVerseDeviceWrapperClassMap final : public UDataAsset
{
public:
	TMap<TSoftClassPtr<class UClass>, TSubclassOf<class UVerseCreativeObject>> DeviceClassMap;                                    // 0x0030(0x0050)(Edit, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseDeviceWrapperClassMap">();
	}
	static class UVerseDeviceWrapperClassMap* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerseDeviceWrapperClassMap>();
	}
};
static_assert(alignof(UVerseDeviceWrapperClassMap) == 0x000008, "Wrong alignment on UVerseDeviceWrapperClassMap");
static_assert(sizeof(UVerseDeviceWrapperClassMap) == 0x000080, "Wrong size on UVerseDeviceWrapperClassMap");
static_assert(offsetof(UVerseDeviceWrapperClassMap, DeviceClassMap) == 0x000030, "Member 'UVerseDeviceWrapperClassMap::DeviceClassMap' has a wrong offset!");

// Class VerseDevices.VerseDeviceWrapperClassMapSubsystem
// 0x0050 (0x0080 - 0x0030)
class UVerseDeviceWrapperClassMapSubsystem final : public UWorldSubsystem
{
public:
	TMap<TSoftClassPtr<class UClass>, TSubclassOf<class UObject>> DeviceClassToVerseClassMap;                        // 0x0030(0x0050)(Transient, UObjectWrapper, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseDeviceWrapperClassMapSubsystem">();
	}
	static class UVerseDeviceWrapperClassMapSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerseDeviceWrapperClassMapSubsystem>();
	}
};
static_assert(alignof(UVerseDeviceWrapperClassMapSubsystem) == 0x000008, "Wrong alignment on UVerseDeviceWrapperClassMapSubsystem");
static_assert(sizeof(UVerseDeviceWrapperClassMapSubsystem) == 0x000080, "Wrong size on UVerseDeviceWrapperClassMapSubsystem");
static_assert(offsetof(UVerseDeviceWrapperClassMapSubsystem, DeviceClassToVerseClassMap) == 0x000030, "Member 'UVerseDeviceWrapperClassMapSubsystem::DeviceClassToVerseClassMap' has a wrong offset!");

}

