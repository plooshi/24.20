#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ScoutDroneRuntime

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// Enum ScoutDroneRuntime.EFortScoutDroneTargetStatus
// NumValues: 0x0005
enum class EFortScoutDroneTargetStatus : uint8
{
	None                                     = 0,
	TooFar                                   = 1,
	Pending                                  = 2,
	Confirmed                                = 3,
	EFortScoutDroneTargetStatus_MAX          = 4,
};

// ScriptStruct ScoutDroneRuntime.FortScoutDroneDiveTransitionData
// 0x0030 (0x0030 - 0x0000)
struct FFortScoutDroneDiveTransitionData final
{
public:
	class UCurveFloat*                            Curve;                                             // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                         TransitionDuration;                                // 0x0008(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFortScoutDroneDiveTransitionData) == 0x000008, "Wrong alignment on FFortScoutDroneDiveTransitionData");
static_assert(sizeof(FFortScoutDroneDiveTransitionData) == 0x000030, "Wrong size on FFortScoutDroneDiveTransitionData");
static_assert(offsetof(FFortScoutDroneDiveTransitionData, Curve) == 0x000000, "Member 'FFortScoutDroneDiveTransitionData::Curve' has a wrong offset!");
static_assert(offsetof(FFortScoutDroneDiveTransitionData, TransitionDuration) == 0x000008, "Member 'FFortScoutDroneDiveTransitionData::TransitionDuration' has a wrong offset!");

// ScriptStruct ScoutDroneRuntime.OnFortScoutDroneDeployed
// 0x0008 (0x0008 - 0x0000)
struct FOnFortScoutDroneDeployed final
{
public:
	TWeakObjectPtr<class AFortScoutDrone>         DeployedDrone;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOnFortScoutDroneDeployed) == 0x000004, "Wrong alignment on FOnFortScoutDroneDeployed");
static_assert(sizeof(FOnFortScoutDroneDeployed) == 0x000008, "Wrong size on FOnFortScoutDroneDeployed");
static_assert(offsetof(FOnFortScoutDroneDeployed, DeployedDrone) == 0x000000, "Member 'FOnFortScoutDroneDeployed::DeployedDrone' has a wrong offset!");

// ScriptStruct ScoutDroneRuntime.OnFortScoutDroneDismissed
// 0x0004 (0x0004 - 0x0000)
struct FOnFortScoutDroneDismissed final
{
public:
	struct FGameplayTag                           DismissalReason;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOnFortScoutDroneDismissed) == 0x000004, "Wrong alignment on FOnFortScoutDroneDismissed");
static_assert(sizeof(FOnFortScoutDroneDismissed) == 0x000004, "Wrong size on FOnFortScoutDroneDismissed");
static_assert(offsetof(FOnFortScoutDroneDismissed, DismissalReason) == 0x000000, "Member 'FOnFortScoutDroneDismissed::DismissalReason' has a wrong offset!");

// ScriptStruct ScoutDroneRuntime.OnFortScoutDroneMarkedEnemies
// 0x0018 (0x0018 - 0x0000)
struct FOnFortScoutDroneMarkedEnemies final
{
public:
	struct FGameplayTag                           Source;                                            // 0x0000(0x0004)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         MarkedActors;                                      // 0x0008(0x0010)(BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOnFortScoutDroneMarkedEnemies) == 0x000008, "Wrong alignment on FOnFortScoutDroneMarkedEnemies");
static_assert(sizeof(FOnFortScoutDroneMarkedEnemies) == 0x000018, "Wrong size on FOnFortScoutDroneMarkedEnemies");
static_assert(offsetof(FOnFortScoutDroneMarkedEnemies, Source) == 0x000000, "Member 'FOnFortScoutDroneMarkedEnemies::Source' has a wrong offset!");
static_assert(offsetof(FOnFortScoutDroneMarkedEnemies, MarkedActors) == 0x000008, "Member 'FOnFortScoutDroneMarkedEnemies::MarkedActors' has a wrong offset!");

// ScriptStruct ScoutDroneRuntime.OnFortScoutDroneFinishedLongInteract
// 0x0001 (0x0001 - 0x0000)
struct FOnFortScoutDroneFinishedLongInteract final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FOnFortScoutDroneFinishedLongInteract) == 0x000001, "Wrong alignment on FOnFortScoutDroneFinishedLongInteract");
static_assert(sizeof(FOnFortScoutDroneFinishedLongInteract) == 0x000001, "Wrong size on FOnFortScoutDroneFinishedLongInteract");

// ScriptStruct ScoutDroneRuntime.ScoutDroneDeferredDestructionData
// 0x0010 (0x0010 - 0x0000)
struct FScoutDroneDeferredDestructionData final
{
public:
	float                                         DeposessDelay;                                     // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DestroyDelay;                                      // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           DismissalReason;                                   // 0x0008(0x0004)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ServerDismissStartTime;                            // 0x000C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FScoutDroneDeferredDestructionData) == 0x000004, "Wrong alignment on FScoutDroneDeferredDestructionData");
static_assert(sizeof(FScoutDroneDeferredDestructionData) == 0x000010, "Wrong size on FScoutDroneDeferredDestructionData");
static_assert(offsetof(FScoutDroneDeferredDestructionData, DeposessDelay) == 0x000000, "Member 'FScoutDroneDeferredDestructionData::DeposessDelay' has a wrong offset!");
static_assert(offsetof(FScoutDroneDeferredDestructionData, DestroyDelay) == 0x000004, "Member 'FScoutDroneDeferredDestructionData::DestroyDelay' has a wrong offset!");
static_assert(offsetof(FScoutDroneDeferredDestructionData, DismissalReason) == 0x000008, "Member 'FScoutDroneDeferredDestructionData::DismissalReason' has a wrong offset!");
static_assert(offsetof(FScoutDroneDeferredDestructionData, ServerDismissStartTime) == 0x00000C, "Member 'FScoutDroneDeferredDestructionData::ServerDismissStartTime' has a wrong offset!");

// ScriptStruct ScoutDroneRuntime.ScoutDronePickupTargets
// 0x0018 (0x0018 - 0x0000)
struct FScoutDronePickupTargets final
{
public:
	TArray<class AActor*>                         Items;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	class AFortPawn*                              DBNOPawn;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FScoutDronePickupTargets) == 0x000008, "Wrong alignment on FScoutDronePickupTargets");
static_assert(sizeof(FScoutDronePickupTargets) == 0x000018, "Wrong size on FScoutDronePickupTargets");
static_assert(offsetof(FScoutDronePickupTargets, Items) == 0x000000, "Member 'FScoutDronePickupTargets::Items' has a wrong offset!");
static_assert(offsetof(FScoutDronePickupTargets, DBNOPawn) == 0x000010, "Member 'FScoutDronePickupTargets::DBNOPawn' has a wrong offset!");

// ScriptStruct ScoutDroneRuntime.ScoutDroneStatusData
// 0x0008 (0x0008 - 0x0000)
struct FScoutDroneStatusData final
{
public:
	EFortScoutDroneTargetStatus                   Status;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ServerTimeStatusChanged;                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FScoutDroneStatusData) == 0x000004, "Wrong alignment on FScoutDroneStatusData");
static_assert(sizeof(FScoutDroneStatusData) == 0x000008, "Wrong size on FScoutDroneStatusData");
static_assert(offsetof(FScoutDroneStatusData, Status) == 0x000000, "Member 'FScoutDroneStatusData::Status' has a wrong offset!");
static_assert(offsetof(FScoutDroneStatusData, ServerTimeStatusChanged) == 0x000004, "Member 'FScoutDroneStatusData::ServerTimeStatusChanged' has a wrong offset!");

// ScriptStruct ScoutDroneRuntime.ScoutDroneInputTriggerableEvent
// 0x0018 (0x0018 - 0x0000)
struct FScoutDroneInputTriggerableEvent final
{
public:
	class FName                                   InputActionName;                                   // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputAction*                           InputAction;                                       // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           GameplayEventToTrigger;                            // 0x0010(0x0004)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FScoutDroneInputTriggerableEvent) == 0x000008, "Wrong alignment on FScoutDroneInputTriggerableEvent");
static_assert(sizeof(FScoutDroneInputTriggerableEvent) == 0x000018, "Wrong size on FScoutDroneInputTriggerableEvent");
static_assert(offsetof(FScoutDroneInputTriggerableEvent, InputActionName) == 0x000000, "Member 'FScoutDroneInputTriggerableEvent::InputActionName' has a wrong offset!");
static_assert(offsetof(FScoutDroneInputTriggerableEvent, InputAction) == 0x000008, "Member 'FScoutDroneInputTriggerableEvent::InputAction' has a wrong offset!");
static_assert(offsetof(FScoutDroneInputTriggerableEvent, GameplayEventToTrigger) == 0x000010, "Member 'FScoutDroneInputTriggerableEvent::GameplayEventToTrigger' has a wrong offset!");

// ScriptStruct ScoutDroneRuntime.ScoutDroneCapsuleSizeData
// 0x0050 (0x0050 - 0x0000)
struct FScoutDroneCapsuleSizeData final
{
public:
	struct FScalableFloat                         CapsuleHalfHeight;                                 // 0x0000(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         CapsuleRadius;                                     // 0x0028(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
static_assert(alignof(FScoutDroneCapsuleSizeData) == 0x000008, "Wrong alignment on FScoutDroneCapsuleSizeData");
static_assert(sizeof(FScoutDroneCapsuleSizeData) == 0x000050, "Wrong size on FScoutDroneCapsuleSizeData");
static_assert(offsetof(FScoutDroneCapsuleSizeData, CapsuleHalfHeight) == 0x000000, "Member 'FScoutDroneCapsuleSizeData::CapsuleHalfHeight' has a wrong offset!");
static_assert(offsetof(FScoutDroneCapsuleSizeData, CapsuleRadius) == 0x000028, "Member 'FScoutDroneCapsuleSizeData::CapsuleRadius' has a wrong offset!");

}

