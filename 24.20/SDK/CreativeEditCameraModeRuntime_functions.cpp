#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CreativeEditCameraModeRuntime

#include "Basic.hpp"

#include "CreativeEditCameraModeRuntime_classes.hpp"
#include "CreativeEditCameraModeRuntime_parameters.hpp"


namespace SDK
{

// Function CreativeEditCameraModeRuntime.FortCreativeEditCameraController.HandleWeaponEquipped
// (Final, Native, Private)
// Parameters:
// class AFortWeapon*                      NewWeapon                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortWeapon*                      PrevWeapon                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortCreativeEditCameraController::HandleWeaponEquipped(class AFortWeapon* NewWeapon, class AFortWeapon* PrevWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativeEditCameraController", "HandleWeaponEquipped");

	Params::FortCreativeEditCameraController_HandleWeaponEquipped Parms{};

	Parms.NewWeapon = NewWeapon;
	Parms.PrevWeapon = PrevWeapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CreativeEditCameraModeRuntime.FortCreativeEditCameraController.OnCreativeEditModeChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bIsCreativeEditModeEnabled                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortCreativeEditCameraController::OnCreativeEditModeChanged(bool bIsCreativeEditModeEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativeEditCameraController", "OnCreativeEditModeChanged");

	Params::FortCreativeEditCameraController_OnCreativeEditModeChanged Parms{};

	Parms.bIsCreativeEditModeEnabled = bIsCreativeEditModeEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CreativeEditCameraModeRuntime.FortCreativeEditCameraController.OnWantsToImmersiveEditChanged
// (Final, Native, Private)
// Parameters:
// class UFortCreativeOption*              CreativeOption                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   IndexValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortCreativeEditCameraController::OnWantsToImmersiveEditChanged(class UFortCreativeOption* CreativeOption, uint8 IndexValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativeEditCameraController", "OnWantsToImmersiveEditChanged");

	Params::FortCreativeEditCameraController_OnWantsToImmersiveEditChanged Parms{};

	Parms.CreativeOption = CreativeOption;
	Parms.IndexValue = IndexValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CreativeEditCameraModeRuntime.FortCreativeEditCameraController.ServerSetImmersiveEdit
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool                                    bWantsToImmersiveEdit                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsCreativeEditModeEnabled                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortCreativeEditCameraController::ServerSetImmersiveEdit(const bool bWantsToImmersiveEdit, const bool bIsCreativeEditModeEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativeEditCameraController", "ServerSetImmersiveEdit");

	Params::FortCreativeEditCameraController_ServerSetImmersiveEdit Parms{};

	Parms.bWantsToImmersiveEdit = bWantsToImmersiveEdit;
	Parms.bIsCreativeEditModeEnabled = bIsCreativeEditModeEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

