#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GAB_SurfaceChange

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GAB_SurfaceChange.GAB_SurfaceChange_C.ExecuteUbergraph_GAB_SurfaceChange
// 0x0228 (0x0228 - 0x0000)
struct GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0008(0x00B0)(ConstParm)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTagContainer_CmpSuccess; // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x2];                                       // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x00FC(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)> K2Node_CreateDelegate_OutputDelegate;              // 0x0104(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_CustomEvent_Character;                      // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_CustomEvent_PrevMovementMode;               // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_PreviousCustomMode;             // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x011B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_1; // 0x0134(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_2; // 0x0140(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_HotfixableGEApplication_GE_Handle;        // 0x0148(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0150(0x00B0)()
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_3; // 0x0200(0x0008)(NoDestructor, HasGetValueTypeHash)
	EAthenaGamePhase                              K2Node_CustomEvent_GamePhase;                      // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20B[0x5];                                      // 0x020B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortGameStateAthena*                   CallFunc_GetGameStateAthena_ReturnValue;           // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAthenaGamePhase GamePhase)>   K2Node_CreateDelegate_OutputDelegate_1;            // 0x0218(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange) == 0x000008, "Wrong alignment on GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange");
static_assert(sizeof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange) == 0x000228, "Wrong size on GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, EntryPoint) == 0x000000, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::EntryPoint' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, K2Node_Event_EventData) == 0x000008, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0000B8, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, GameplayTagsK2Node_SwitchGameplayTagContainer_CmpSuccess) == 0x0000C0, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::GameplayTagsK2Node_SwitchGameplayTagContainer_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, K2Node_DynamicCast_AsFort_Pawn) == 0x0000C8, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x0000D8, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, K2Node_DynamicCast_bSuccess_1) == 0x0000E8, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, K2Node_DynamicCast_AsActor) == 0x0000F0, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, K2Node_DynamicCast_bSuccess_2) == 0x0000F8, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x0000F9, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x0000FC, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, K2Node_CreateDelegate_OutputDelegate) == 0x000104, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, K2Node_CustomEvent_Character) == 0x000110, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, K2Node_CustomEvent_PrevMovementMode) == 0x000118, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::K2Node_CustomEvent_PrevMovementMode' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, K2Node_CustomEvent_PreviousCustomMode) == 0x000119, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::K2Node_CustomEvent_PreviousCustomMode' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, CallFunc_IsValid_ReturnValue) == 0x00011A, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, K2Node_SwitchEnum_CmpSuccess) == 0x00011B, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000120, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x000130, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_1) == 0x000134, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, CallFunc_IsFalling_ReturnValue) == 0x00013C, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_2) == 0x000140, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, CallFunc_HotfixableGEApplication_GE_Handle) == 0x000148, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::CallFunc_HotfixableGEApplication_GE_Handle' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, K2Node_MakeStruct_GameplayEventData) == 0x000150, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_3) == 0x000200, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, K2Node_CustomEvent_GamePhase) == 0x000208, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::K2Node_CustomEvent_GamePhase' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, Temp_bool_Variable) == 0x000209, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00020A, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, CallFunc_GetGameStateAthena_ReturnValue) == 0x000210, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::CallFunc_GetGameStateAthena_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, K2Node_CreateDelegate_OutputDelegate_1) == 0x000218, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, CallFunc_IsValid_ReturnValue_1) == 0x000224, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function GAB_SurfaceChange.GAB_SurfaceChange_C.GamePhaseChanged
// 0x0001 (0x0001 - 0x0000)
struct GAB_SurfaceChange_C_GamePhaseChanged final
{
public:
	EAthenaGamePhase                              GamePhase;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GAB_SurfaceChange_C_GamePhaseChanged) == 0x000001, "Wrong alignment on GAB_SurfaceChange_C_GamePhaseChanged");
static_assert(sizeof(GAB_SurfaceChange_C_GamePhaseChanged) == 0x000001, "Wrong size on GAB_SurfaceChange_C_GamePhaseChanged");
static_assert(offsetof(GAB_SurfaceChange_C_GamePhaseChanged, GamePhase) == 0x000000, "Member 'GAB_SurfaceChange_C_GamePhaseChanged::GamePhase' has a wrong offset!");

// Function GAB_SurfaceChange.GAB_SurfaceChange_C.HotfixableGEApplication
// 0x0060 (0x0060 - 0x0000)
struct GAB_SurfaceChange_C_HotfixableGEApplication final
{
public:
	struct FScalableFloat                         Input;                                             // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UClass*                                 GameplayEffectAppliedOnTrue;                       // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GameplayEffectAppliedOnFalse;                      // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            GE_Handle;                                         // 0x0038(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x0044(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_1; // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GAB_SurfaceChange_C_HotfixableGEApplication) == 0x000008, "Wrong alignment on GAB_SurfaceChange_C_HotfixableGEApplication");
static_assert(sizeof(GAB_SurfaceChange_C_HotfixableGEApplication) == 0x000060, "Wrong size on GAB_SurfaceChange_C_HotfixableGEApplication");
static_assert(offsetof(GAB_SurfaceChange_C_HotfixableGEApplication, Input) == 0x000000, "Member 'GAB_SurfaceChange_C_HotfixableGEApplication::Input' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_HotfixableGEApplication, GameplayEffectAppliedOnTrue) == 0x000028, "Member 'GAB_SurfaceChange_C_HotfixableGEApplication::GameplayEffectAppliedOnTrue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_HotfixableGEApplication, GameplayEffectAppliedOnFalse) == 0x000030, "Member 'GAB_SurfaceChange_C_HotfixableGEApplication::GameplayEffectAppliedOnFalse' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_HotfixableGEApplication, GE_Handle) == 0x000038, "Member 'GAB_SurfaceChange_C_HotfixableGEApplication::GE_Handle' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_HotfixableGEApplication, CallFunc_GetValueAtLevel_ReturnValue) == 0x000040, "Member 'GAB_SurfaceChange_C_HotfixableGEApplication::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_HotfixableGEApplication, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x000044, "Member 'GAB_SurfaceChange_C_HotfixableGEApplication::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_HotfixableGEApplication, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00004C, "Member 'GAB_SurfaceChange_C_HotfixableGEApplication::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_HotfixableGEApplication, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_1) == 0x000050, "Member 'GAB_SurfaceChange_C_HotfixableGEApplication::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_HotfixableGEApplication, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000058, "Member 'GAB_SurfaceChange_C_HotfixableGEApplication::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function GAB_SurfaceChange.GAB_SurfaceChange_C.K2_ActivateAbilityFromEvent
// 0x00B0 (0x00B0 - 0x0000)
struct GAB_SurfaceChange_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GAB_SurfaceChange_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on GAB_SurfaceChange_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GAB_SurfaceChange_C_K2_ActivateAbilityFromEvent) == 0x0000B0, "Wrong size on GAB_SurfaceChange_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GAB_SurfaceChange_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GAB_SurfaceChange_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// Function GAB_SurfaceChange.GAB_SurfaceChange_C.LavaBounce
// 0x0400 (0x0400 - 0x0000)
struct GAB_SurfaceChange_C_LavaBounce final
{
public:
	float                                         CallFunc_RandomFloatFromStream_ReturnValue;        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue;                // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_2;                     // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue_1;            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_2;            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_3;            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_4;            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_5;            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_6;            // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x0110(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MirrorVectorByNormal_ReturnValue;         // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue_1;      // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue_1;                   // 0x01E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_1;     // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0208(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_1;                          // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantizeNormal              CallFunc_MakeVector_NetQuantizeNormal_ReturnValue; // 0x02B8(0x0018)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x02D0(0x00D0)(ContainsInstancedReference)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FFloor_A_ImplicitCast;                    // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_B_ImplicitCast;                      // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_VectorFloat_B_ImplicitCast;      // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1;   // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_Vector2DFloat_B_ImplicitCast;    // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_2;   // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_Max_ImplicitCast;      // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GAB_SurfaceChange_C_LavaBounce) == 0x000008, "Wrong alignment on GAB_SurfaceChange_C_LavaBounce");
static_assert(sizeof(GAB_SurfaceChange_C_LavaBounce) == 0x000400, "Wrong size on GAB_SurfaceChange_C_LavaBounce");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_RandomFloatFromStream_ReturnValue) == 0x000000, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_RandomFloatFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_BreakVector_X) == 0x000028, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_BreakVector_Y) == 0x000030, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_BreakVector_Z) == 0x000038, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000040, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000058, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_BreakRotator_Roll) == 0x000060, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_BreakRotator_Pitch) == 0x000064, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_BreakRotator_Yaw) == 0x000068, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_FFloor_ReturnValue) == 0x00006C, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_NormalizeAxis_ReturnValue) == 0x000070, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_NormalizeAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_FFloor_ReturnValue_1) == 0x000080, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_FFloor_ReturnValue_2) == 0x000084, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_FFloor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Add_IntInt_ReturnValue_1) == 0x00008C, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_GetValueAtLevel_ReturnValue) == 0x000090, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000098, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_HasAuthority_ReturnValue) == 0x0000A0, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_GetValueAtLevel_ReturnValue_1) == 0x0000A4, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_GetValueAtLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_GetValueAtLevel_ReturnValue_2) == 0x0000A8, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_GetValueAtLevel_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_GetValueAtLevel_ReturnValue_3) == 0x0000AC, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_GetValueAtLevel_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_GetValueAtLevel_ReturnValue_4) == 0x0000B0, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_GetValueAtLevel_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_GetValueAtLevel_ReturnValue_5) == 0x0000B4, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_GetValueAtLevel_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000B8, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000D0, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_GetValueAtLevel_ReturnValue_6) == 0x0000D8, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_GetValueAtLevel_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_MakeRotator_ReturnValue) == 0x0000E0, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x0000F8, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_RandomFloatInRange_ReturnValue) == 0x000100, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000108, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x000110, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000118, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000130, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000148, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000150, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_FMin_ReturnValue) == 0x000168, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000170, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Normal2D_ReturnValue) == 0x000180, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000190, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0001A0, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_GetVelocity_ReturnValue) == 0x0001A8, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_MirrorVectorByNormal_ReturnValue) == 0x0001C0, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_MirrorVectorByNormal_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Conv_VectorToVector2D_ReturnValue_1) == 0x0001D8, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Conv_VectorToVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Normal2D_ReturnValue_1) == 0x0001E8, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Normal2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Multiply_Vector2DFloat_ReturnValue_1) == 0x0001F8, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Multiply_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000208, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x000218, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Normal_ReturnValue) == 0x000230, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000248, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Add_VectorVector_ReturnValue) == 0x000260, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_VSize_ReturnValue) == 0x000278, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Normal_ReturnValue_1) == 0x000280, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000298, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_BreakVector_X_1) == 0x0002A0, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_BreakVector_Y_1) == 0x0002A8, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_BreakVector_Z_1) == 0x0002B0, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_MakeVector_NetQuantizeNormal_ReturnValue) == 0x0002B8, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_MakeVector_NetQuantizeNormal_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x0002D0, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x0003A0, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_FFloor_A_ImplicitCast) == 0x0003A8, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_FFloor_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0003B0, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x0003B8, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_FMin_B_ImplicitCast) == 0x0003C0, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_FMin_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0003C8, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Multiply_VectorFloat_B_ImplicitCast) == 0x0003D0, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Multiply_VectorFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1) == 0x0003D8, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Multiply_Vector2DFloat_B_ImplicitCast) == 0x0003E0, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Multiply_Vector2DFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0003E8, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_2) == 0x0003F0, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_RandomFloatInRange_Max_ImplicitCast) == 0x0003F8, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_RandomFloatInRange_Max_ImplicitCast' has a wrong offset!");

// Function GAB_SurfaceChange.GAB_SurfaceChange_C.MovementModeChanged
// 0x0010 (0x0010 - 0x0000)
struct GAB_SurfaceChange_C_MovementModeChanged final
{
public:
	class ACharacter*                             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 PrevMovementMode;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         PreviousCustomMode;                                // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GAB_SurfaceChange_C_MovementModeChanged) == 0x000008, "Wrong alignment on GAB_SurfaceChange_C_MovementModeChanged");
static_assert(sizeof(GAB_SurfaceChange_C_MovementModeChanged) == 0x000010, "Wrong size on GAB_SurfaceChange_C_MovementModeChanged");
static_assert(offsetof(GAB_SurfaceChange_C_MovementModeChanged, Character) == 0x000000, "Member 'GAB_SurfaceChange_C_MovementModeChanged::Character' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_MovementModeChanged, PrevMovementMode) == 0x000008, "Member 'GAB_SurfaceChange_C_MovementModeChanged::PrevMovementMode' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_MovementModeChanged, PreviousCustomMode) == 0x000009, "Member 'GAB_SurfaceChange_C_MovementModeChanged::PreviousCustomMode' has a wrong offset!");

// Function GAB_SurfaceChange.GAB_SurfaceChange_C.SurfaceCleanup
// 0x0098 (0x0098 - 0x0000)
struct GAB_SurfaceChange_C_SurfaceCleanup final
{
public:
	bool                                          AddLingeringEffects;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              SurfaceType;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasChrome;                                        // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasSand;                                          // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasSnow;                                          // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAddLingeringEffects;                              // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasLava;                                          // 0x0006(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasIce;                                           // 0x0007(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_4;          // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_1; // 0x0024(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue;   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput_1; // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue_1; // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput_2; // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue_2; // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput_3; // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue_3; // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GAB_SurfaceChange_C_SurfaceCleanup) == 0x000008, "Wrong alignment on GAB_SurfaceChange_C_SurfaceCleanup");
static_assert(sizeof(GAB_SurfaceChange_C_SurfaceCleanup) == 0x000098, "Wrong size on GAB_SurfaceChange_C_SurfaceCleanup");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, AddLingeringEffects) == 0x000000, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::AddLingeringEffects' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, SurfaceType) == 0x000001, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::SurfaceType' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, bHasChrome) == 0x000002, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::bHasChrome' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, bHasSand) == 0x000003, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::bHasSand' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, bHasSnow) == 0x000004, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::bHasSnow' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, bAddLingeringEffects) == 0x000005, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::bAddLingeringEffects' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, bHasLava) == 0x000006, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::bHasLava' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, bHasIce) == 0x000007, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::bHasIce' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_GetValueAtLevel_ReturnValue) == 0x000008, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00000C, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x000010, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000018, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_BooleanAND_ReturnValue) == 0x000019, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x00001A, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_BooleanAND_ReturnValue_1) == 0x00001B, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_HasTag_ReturnValue) == 0x00001C, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x00001D, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x00001E, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_NotEqual_ByteByte_ReturnValue_4) == 0x00001F, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_NotEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_BooleanAND_ReturnValue_2) == 0x000020, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_1) == 0x000024, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_BooleanAND_ReturnValue_3) == 0x00002C, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_BooleanAND_ReturnValue_4) == 0x00002D, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_BooleanAND_ReturnValue_5) == 0x00002E, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput) == 0x000030, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_HasAllMatchingGameplayTags_ReturnValue) == 0x000040, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_HasAllMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput_1) == 0x000048, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_HasAllMatchingGameplayTags_ReturnValue_1) == 0x000058, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_HasAllMatchingGameplayTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput_2) == 0x000060, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput_2' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_HasAllMatchingGameplayTags_ReturnValue_2) == 0x000070, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_HasAllMatchingGameplayTags_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput_3) == 0x000078, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput_3' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_HasAllMatchingGameplayTags_ReturnValue_3) == 0x000088, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_HasAllMatchingGameplayTags_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000090, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

}

