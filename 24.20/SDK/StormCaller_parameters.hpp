#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StormCaller

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function StormCaller.StormCallerComponent.ApplyPOINamesToDataRegistry
// 0x0040 (0x0040 - 0x0000)
struct StormCallerComponent_ApplyPOINamesToDataRegistry final
{
public:
	const class UPlaylistUserOptions*             UserOptions;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           GameplayTagForPOI;                                 // 0x0008(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   MapCenterText;                                     // 0x0010(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   RandomText;                                        // 0x0028(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(StormCallerComponent_ApplyPOINamesToDataRegistry) == 0x000008, "Wrong alignment on StormCallerComponent_ApplyPOINamesToDataRegistry");
static_assert(sizeof(StormCallerComponent_ApplyPOINamesToDataRegistry) == 0x000040, "Wrong size on StormCallerComponent_ApplyPOINamesToDataRegistry");
static_assert(offsetof(StormCallerComponent_ApplyPOINamesToDataRegistry, UserOptions) == 0x000000, "Member 'StormCallerComponent_ApplyPOINamesToDataRegistry::UserOptions' has a wrong offset!");
static_assert(offsetof(StormCallerComponent_ApplyPOINamesToDataRegistry, GameplayTagForPOI) == 0x000008, "Member 'StormCallerComponent_ApplyPOINamesToDataRegistry::GameplayTagForPOI' has a wrong offset!");
static_assert(offsetof(StormCallerComponent_ApplyPOINamesToDataRegistry, MapCenterText) == 0x000010, "Member 'StormCallerComponent_ApplyPOINamesToDataRegistry::MapCenterText' has a wrong offset!");
static_assert(offsetof(StormCallerComponent_ApplyPOINamesToDataRegistry, RandomText) == 0x000028, "Member 'StormCallerComponent_ApplyPOINamesToDataRegistry::RandomText' has a wrong offset!");

// Function StormCaller.StormCallerComponent.ApplySavedPoiOptions
// 0x0028 (0x0028 - 0x0000)
struct StormCallerComponent_ApplySavedPoiOptions final
{
public:
	TArray<class FString>                         PoiSavedOptionKeys;                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class FText>                           PoiSavedOptionName;                                // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class UFortActorOptionsComponent*             ToyOptionsComponent;                               // 0x0020(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StormCallerComponent_ApplySavedPoiOptions) == 0x000008, "Wrong alignment on StormCallerComponent_ApplySavedPoiOptions");
static_assert(sizeof(StormCallerComponent_ApplySavedPoiOptions) == 0x000028, "Wrong size on StormCallerComponent_ApplySavedPoiOptions");
static_assert(offsetof(StormCallerComponent_ApplySavedPoiOptions, PoiSavedOptionKeys) == 0x000000, "Member 'StormCallerComponent_ApplySavedPoiOptions::PoiSavedOptionKeys' has a wrong offset!");
static_assert(offsetof(StormCallerComponent_ApplySavedPoiOptions, PoiSavedOptionName) == 0x000010, "Member 'StormCallerComponent_ApplySavedPoiOptions::PoiSavedOptionName' has a wrong offset!");
static_assert(offsetof(StormCallerComponent_ApplySavedPoiOptions, ToyOptionsComponent) == 0x000020, "Member 'StormCallerComponent_ApplySavedPoiOptions::ToyOptionsComponent' has a wrong offset!");

// Function StormCaller.StormCallerComponent.GetPoiVolumeFromOptionIndex
// 0x0010 (0x0010 - 0x0000)
struct StormCallerComponent_GetPoiVolumeFromOptionIndex final
{
public:
	int32                                         OptionIndex;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPoiVolume*                         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StormCallerComponent_GetPoiVolumeFromOptionIndex) == 0x000008, "Wrong alignment on StormCallerComponent_GetPoiVolumeFromOptionIndex");
static_assert(sizeof(StormCallerComponent_GetPoiVolumeFromOptionIndex) == 0x000010, "Wrong size on StormCallerComponent_GetPoiVolumeFromOptionIndex");
static_assert(offsetof(StormCallerComponent_GetPoiVolumeFromOptionIndex, OptionIndex) == 0x000000, "Member 'StormCallerComponent_GetPoiVolumeFromOptionIndex::OptionIndex' has a wrong offset!");
static_assert(offsetof(StormCallerComponent_GetPoiVolumeFromOptionIndex, ReturnValue) == 0x000008, "Member 'StormCallerComponent_GetPoiVolumeFromOptionIndex::ReturnValue' has a wrong offset!");

// Function StormCaller.StormCallerComponent.UpdatePoiSavedOptions
// 0x0030 (0x0030 - 0x0000)
struct StormCallerComponent_UpdatePoiSavedOptions final
{
public:
	TArray<class FString>                         InOutPoiSavedOptionKeys;                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class FText>                           InOutPoiSavedOptionNames;                          // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	const class UPlaylistUserOptions*             UserOptions;                                       // 0x0020(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           GameplayTagForPOI;                                 // 0x0028(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(StormCallerComponent_UpdatePoiSavedOptions) == 0x000008, "Wrong alignment on StormCallerComponent_UpdatePoiSavedOptions");
static_assert(sizeof(StormCallerComponent_UpdatePoiSavedOptions) == 0x000030, "Wrong size on StormCallerComponent_UpdatePoiSavedOptions");
static_assert(offsetof(StormCallerComponent_UpdatePoiSavedOptions, InOutPoiSavedOptionKeys) == 0x000000, "Member 'StormCallerComponent_UpdatePoiSavedOptions::InOutPoiSavedOptionKeys' has a wrong offset!");
static_assert(offsetof(StormCallerComponent_UpdatePoiSavedOptions, InOutPoiSavedOptionNames) == 0x000010, "Member 'StormCallerComponent_UpdatePoiSavedOptions::InOutPoiSavedOptionNames' has a wrong offset!");
static_assert(offsetof(StormCallerComponent_UpdatePoiSavedOptions, UserOptions) == 0x000020, "Member 'StormCallerComponent_UpdatePoiSavedOptions::UserOptions' has a wrong offset!");
static_assert(offsetof(StormCallerComponent_UpdatePoiSavedOptions, GameplayTagForPOI) == 0x000028, "Member 'StormCallerComponent_UpdatePoiSavedOptions::GameplayTagForPOI' has a wrong offset!");

// Function StormCaller.StormCallerComponent.GetSafeZoneLocationBlockList
// 0x0010 (0x0010 - 0x0000)
struct StormCallerComponent_GetSafeZoneLocationBlockList final
{
public:
	TArray<struct FVector4>                       ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(StormCallerComponent_GetSafeZoneLocationBlockList) == 0x000008, "Wrong alignment on StormCallerComponent_GetSafeZoneLocationBlockList");
static_assert(sizeof(StormCallerComponent_GetSafeZoneLocationBlockList) == 0x000010, "Wrong size on StormCallerComponent_GetSafeZoneLocationBlockList");
static_assert(offsetof(StormCallerComponent_GetSafeZoneLocationBlockList, ReturnValue) == 0x000000, "Member 'StormCallerComponent_GetSafeZoneLocationBlockList::ReturnValue' has a wrong offset!");

}

