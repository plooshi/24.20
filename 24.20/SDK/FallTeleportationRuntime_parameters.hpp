#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FallTeleportationRuntime

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function FallTeleportationRuntime.FortFallTeleportSpawnerComponent.HandleGamePhaseChanged
// 0x0001 (0x0001 - 0x0000)
struct FortFallTeleportSpawnerComponent_HandleGamePhaseChanged final
{
public:
	EAthenaGamePhase                              GamePhase;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFallTeleportSpawnerComponent_HandleGamePhaseChanged) == 0x000001, "Wrong alignment on FortFallTeleportSpawnerComponent_HandleGamePhaseChanged");
static_assert(sizeof(FortFallTeleportSpawnerComponent_HandleGamePhaseChanged) == 0x000001, "Wrong size on FortFallTeleportSpawnerComponent_HandleGamePhaseChanged");
static_assert(offsetof(FortFallTeleportSpawnerComponent_HandleGamePhaseChanged, GamePhase) == 0x000000, "Member 'FortFallTeleportSpawnerComponent_HandleGamePhaseChanged::GamePhase' has a wrong offset!");

// Function FallTeleportationRuntime.FortFallTeleportSpawnerComponent.HandleWarmupCountdownEndTimeUpdated
// 0x0004 (0x0004 - 0x0000)
struct FortFallTeleportSpawnerComponent_HandleWarmupCountdownEndTimeUpdated final
{
public:
	float                                         NewEndTime;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFallTeleportSpawnerComponent_HandleWarmupCountdownEndTimeUpdated) == 0x000004, "Wrong alignment on FortFallTeleportSpawnerComponent_HandleWarmupCountdownEndTimeUpdated");
static_assert(sizeof(FortFallTeleportSpawnerComponent_HandleWarmupCountdownEndTimeUpdated) == 0x000004, "Wrong size on FortFallTeleportSpawnerComponent_HandleWarmupCountdownEndTimeUpdated");
static_assert(offsetof(FortFallTeleportSpawnerComponent_HandleWarmupCountdownEndTimeUpdated, NewEndTime) == 0x000000, "Member 'FortFallTeleportSpawnerComponent_HandleWarmupCountdownEndTimeUpdated::NewEndTime' has a wrong offset!");

// Function FallTeleportationRuntime.FortFallTeleportComponentBase.UpdateLastGroundLocation
// 0x0010 (0x0010 - 0x0000)
struct FortFallTeleportComponentBase_UpdateLastGroundLocation final
{
public:
	class ACharacter*                             Character;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMovementMode                                 PrevMovementMode;                                  // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         PreviousCustomMode;                                // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortFallTeleportComponentBase_UpdateLastGroundLocation) == 0x000008, "Wrong alignment on FortFallTeleportComponentBase_UpdateLastGroundLocation");
static_assert(sizeof(FortFallTeleportComponentBase_UpdateLastGroundLocation) == 0x000010, "Wrong size on FortFallTeleportComponentBase_UpdateLastGroundLocation");
static_assert(offsetof(FortFallTeleportComponentBase_UpdateLastGroundLocation, Character) == 0x000000, "Member 'FortFallTeleportComponentBase_UpdateLastGroundLocation::Character' has a wrong offset!");
static_assert(offsetof(FortFallTeleportComponentBase_UpdateLastGroundLocation, PrevMovementMode) == 0x000008, "Member 'FortFallTeleportComponentBase_UpdateLastGroundLocation::PrevMovementMode' has a wrong offset!");
static_assert(offsetof(FortFallTeleportComponentBase_UpdateLastGroundLocation, PreviousCustomMode) == 0x000009, "Member 'FortFallTeleportComponentBase_UpdateLastGroundLocation::PreviousCustomMode' has a wrong offset!");

// Function FallTeleportationRuntime.FortFallTeleportComponentBase.IsTeleportLocationValid
// 0x0020 (0x0020 - 0x0000)
struct FortFallTeleportComponentBase_IsTeleportLocationValid final
{
public:
	struct FVector                                LocationToTest;                                    // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortFallTeleportComponentBase_IsTeleportLocationValid) == 0x000008, "Wrong alignment on FortFallTeleportComponentBase_IsTeleportLocationValid");
static_assert(sizeof(FortFallTeleportComponentBase_IsTeleportLocationValid) == 0x000020, "Wrong size on FortFallTeleportComponentBase_IsTeleportLocationValid");
static_assert(offsetof(FortFallTeleportComponentBase_IsTeleportLocationValid, LocationToTest) == 0x000000, "Member 'FortFallTeleportComponentBase_IsTeleportLocationValid::LocationToTest' has a wrong offset!");
static_assert(offsetof(FortFallTeleportComponentBase_IsTeleportLocationValid, ReturnValue) == 0x000018, "Member 'FortFallTeleportComponentBase_IsTeleportLocationValid::ReturnValue' has a wrong offset!");

// Function FallTeleportationRuntime.FortFallTeleportComponentBase.IsValidActorToTeleportOn
// 0x0010 (0x0010 - 0x0000)
struct FortFallTeleportComponentBase_IsValidActorToTeleportOn final
{
public:
	class AActor*                                 ActorToTeleportOn;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortFallTeleportComponentBase_IsValidActorToTeleportOn) == 0x000008, "Wrong alignment on FortFallTeleportComponentBase_IsValidActorToTeleportOn");
static_assert(sizeof(FortFallTeleportComponentBase_IsValidActorToTeleportOn) == 0x000010, "Wrong size on FortFallTeleportComponentBase_IsValidActorToTeleportOn");
static_assert(offsetof(FortFallTeleportComponentBase_IsValidActorToTeleportOn, ActorToTeleportOn) == 0x000000, "Member 'FortFallTeleportComponentBase_IsValidActorToTeleportOn::ActorToTeleportOn' has a wrong offset!");
static_assert(offsetof(FortFallTeleportComponentBase_IsValidActorToTeleportOn, ReturnValue) == 0x000008, "Member 'FortFallTeleportComponentBase_IsValidActorToTeleportOn::ReturnValue' has a wrong offset!");

}

