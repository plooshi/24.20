#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CloakGameplay

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// ScriptStruct CloakGameplay.FortGameCueCloakModifier
// 0x00D0 (0x00D0 - 0x0000)
struct FFortGameCueCloakModifier final
{
public:
	struct FScalableFloat                         bCanBeEnabled;                                     // 0x0000(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         VisibilityModifierMultiplicative;                  // 0x0028(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         VisibilityModifierAdditive;                        // 0x0050(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         AlphaTimeToEnabled;                                // 0x0078(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         AlphaTimeToDisabled;                               // 0x00A0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         bCurrentlyEnabled : 1;                             // 0x00C8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentAlpha;                                      // 0x00CC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
static_assert(alignof(FFortGameCueCloakModifier) == 0x000008, "Wrong alignment on FFortGameCueCloakModifier");
static_assert(sizeof(FFortGameCueCloakModifier) == 0x0000D0, "Wrong size on FFortGameCueCloakModifier");
static_assert(offsetof(FFortGameCueCloakModifier, bCanBeEnabled) == 0x000000, "Member 'FFortGameCueCloakModifier::bCanBeEnabled' has a wrong offset!");
static_assert(offsetof(FFortGameCueCloakModifier, VisibilityModifierMultiplicative) == 0x000028, "Member 'FFortGameCueCloakModifier::VisibilityModifierMultiplicative' has a wrong offset!");
static_assert(offsetof(FFortGameCueCloakModifier, VisibilityModifierAdditive) == 0x000050, "Member 'FFortGameCueCloakModifier::VisibilityModifierAdditive' has a wrong offset!");
static_assert(offsetof(FFortGameCueCloakModifier, AlphaTimeToEnabled) == 0x000078, "Member 'FFortGameCueCloakModifier::AlphaTimeToEnabled' has a wrong offset!");
static_assert(offsetof(FFortGameCueCloakModifier, AlphaTimeToDisabled) == 0x0000A0, "Member 'FFortGameCueCloakModifier::AlphaTimeToDisabled' has a wrong offset!");
static_assert(offsetof(FFortGameCueCloakModifier, CurrentAlpha) == 0x0000CC, "Member 'FFortGameCueCloakModifier::CurrentAlpha' has a wrong offset!");

}

