#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCNL_RollingEffects_Stone

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GCNL_RollingEffects_Stone.GCNL_RollingEffects_Stone_C.ExecuteUbergraph_GCNL_RollingEffects_Stone
// 0x0240 (0x0240 - 0x0000)
struct GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_MyTarget;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters;                           // 0x0010(0x00D0)(ConstParm, ContainsInstancedReference)
	TArray<class UFXSystemComponent*>             K2Node_Event_ParticleComponents;                   // 0x00E0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                K2Node_Event_AudioComponents;                      // 0x00F0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class AProp_PhysicsBoulder_Parent_C*          K2Node_DynamicCast_AsProp_Physics_Boulder_Parent;  // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_MyTarget_1;                           // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters_1;                         // 0x0118(0x00D0)(ConstParm, ContainsInstancedReference)
	TArray<class UFXSystemComponent*>             K2Node_Event_ParticleComponents_1;                 // 0x01E8(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                K2Node_Event_AudioComponents_1;                    // 0x01F8(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class ULegacyCameraShake*                     K2Node_Event_BurstCameraShakeInstance;             // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            K2Node_Event_BurstDecalInstance;                   // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProp_PhysicsBoulder_Parent_C*          K2Node_DynamicCast_AsProp_Physics_Boulder_Parent_1; // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone) == 0x000008, "Wrong alignment on GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone");
static_assert(sizeof(GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone) == 0x000240, "Wrong size on GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone");
static_assert(offsetof(GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone, EntryPoint) == 0x000000, "Member 'GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone::EntryPoint' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone, K2Node_Event_MyTarget) == 0x000008, "Member 'GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone::K2Node_Event_MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone, K2Node_Event_Parameters) == 0x000010, "Member 'GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone::K2Node_Event_Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone, K2Node_Event_ParticleComponents) == 0x0000E0, "Member 'GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone::K2Node_Event_ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone, K2Node_Event_AudioComponents) == 0x0000F0, "Member 'GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone::K2Node_Event_AudioComponents' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone, K2Node_DynamicCast_AsProp_Physics_Boulder_Parent) == 0x000100, "Member 'GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone::K2Node_DynamicCast_AsProp_Physics_Boulder_Parent' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone, K2Node_DynamicCast_bSuccess) == 0x000108, "Member 'GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone, K2Node_Event_MyTarget_1) == 0x000110, "Member 'GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone::K2Node_Event_MyTarget_1' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone, K2Node_Event_Parameters_1) == 0x000118, "Member 'GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone::K2Node_Event_Parameters_1' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone, K2Node_Event_ParticleComponents_1) == 0x0001E8, "Member 'GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone::K2Node_Event_ParticleComponents_1' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone, K2Node_Event_AudioComponents_1) == 0x0001F8, "Member 'GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone::K2Node_Event_AudioComponents_1' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone, K2Node_Event_BurstCameraShakeInstance) == 0x000208, "Member 'GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone::K2Node_Event_BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone, K2Node_Event_BurstDecalInstance) == 0x000210, "Member 'GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone::K2Node_Event_BurstDecalInstance' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000218, "Member 'GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone, K2Node_DynamicCast_AsProp_Physics_Boulder_Parent_1) == 0x000230, "Member 'GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone::K2Node_DynamicCast_AsProp_Physics_Boulder_Parent_1' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone, K2Node_DynamicCast_bSuccess_1) == 0x000238, "Member 'GCNL_RollingEffects_Stone_C_ExecuteUbergraph_GCNL_RollingEffects_Stone::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function GCNL_RollingEffects_Stone.GCNL_RollingEffects_Stone_C.OnLoopingStartGeneric
// 0x00F8 (0x00F8 - 0x0000)
struct GCNL_RollingEffects_Stone_C_OnLoopingStartGeneric final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UFXSystemComponent*>             ParticleComponents;                                // 0x00D8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x00E8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GCNL_RollingEffects_Stone_C_OnLoopingStartGeneric) == 0x000008, "Wrong alignment on GCNL_RollingEffects_Stone_C_OnLoopingStartGeneric");
static_assert(sizeof(GCNL_RollingEffects_Stone_C_OnLoopingStartGeneric) == 0x0000F8, "Wrong size on GCNL_RollingEffects_Stone_C_OnLoopingStartGeneric");
static_assert(offsetof(GCNL_RollingEffects_Stone_C_OnLoopingStartGeneric, MyTarget) == 0x000000, "Member 'GCNL_RollingEffects_Stone_C_OnLoopingStartGeneric::MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Stone_C_OnLoopingStartGeneric, Parameters) == 0x000008, "Member 'GCNL_RollingEffects_Stone_C_OnLoopingStartGeneric::Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Stone_C_OnLoopingStartGeneric, ParticleComponents) == 0x0000D8, "Member 'GCNL_RollingEffects_Stone_C_OnLoopingStartGeneric::ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Stone_C_OnLoopingStartGeneric, AudioComponents) == 0x0000E8, "Member 'GCNL_RollingEffects_Stone_C_OnLoopingStartGeneric::AudioComponents' has a wrong offset!");

// Function GCNL_RollingEffects_Stone.GCNL_RollingEffects_Stone_C.OnRemovalGeneric
// 0x0108 (0x0108 - 0x0000)
struct GCNL_RollingEffects_Stone_C_OnRemovalGeneric final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UFXSystemComponent*>             ParticleComponents;                                // 0x00D8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x00E8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class ULegacyCameraShake*                     BurstCameraShakeInstance;                          // 0x00F8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            BurstDecalInstance;                                // 0x0100(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_RollingEffects_Stone_C_OnRemovalGeneric) == 0x000008, "Wrong alignment on GCNL_RollingEffects_Stone_C_OnRemovalGeneric");
static_assert(sizeof(GCNL_RollingEffects_Stone_C_OnRemovalGeneric) == 0x000108, "Wrong size on GCNL_RollingEffects_Stone_C_OnRemovalGeneric");
static_assert(offsetof(GCNL_RollingEffects_Stone_C_OnRemovalGeneric, MyTarget) == 0x000000, "Member 'GCNL_RollingEffects_Stone_C_OnRemovalGeneric::MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Stone_C_OnRemovalGeneric, Parameters) == 0x000008, "Member 'GCNL_RollingEffects_Stone_C_OnRemovalGeneric::Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Stone_C_OnRemovalGeneric, ParticleComponents) == 0x0000D8, "Member 'GCNL_RollingEffects_Stone_C_OnRemovalGeneric::ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Stone_C_OnRemovalGeneric, AudioComponents) == 0x0000E8, "Member 'GCNL_RollingEffects_Stone_C_OnRemovalGeneric::AudioComponents' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Stone_C_OnRemovalGeneric, BurstCameraShakeInstance) == 0x0000F8, "Member 'GCNL_RollingEffects_Stone_C_OnRemovalGeneric::BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Stone_C_OnRemovalGeneric, BurstDecalInstance) == 0x000100, "Member 'GCNL_RollingEffects_Stone_C_OnRemovalGeneric::BurstDecalInstance' has a wrong offset!");

}

