#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PageNavigatorPipButton

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function PageNavigatorPipButton.PageNavigatorPipButton_C.ExecuteUbergraph_PageNavigatorPipButton
// 0x0070 (0x0070 - 0x0000)
struct PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortRuntimeOptions*                    CallFunc_GetRuntimeOptions_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_CustomEvent_Base_Color;                     // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_CustomEvent_Hover_Color;                    // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_CustomEvent_Select_Color;                   // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Allowed;                        // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton) == 0x000008, "Wrong alignment on PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton");
static_assert(sizeof(PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton) == 0x000070, "Wrong size on PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton");
static_assert(offsetof(PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton, EntryPoint) == 0x000000, "Member 'PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton, Temp_bool_Variable) == 0x000004, "Member 'PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton, Temp_byte_Variable) == 0x000005, "Member 'PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton, Temp_byte_Variable_1) == 0x000006, "Member 'PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000008, "Member 'PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton, K2Node_Event_IsDesignTime) == 0x000018, "Member 'PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton, CallFunc_IsMobileGame_ReturnValue) == 0x000019, "Member 'PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton, CallFunc_GetRuntimeOptions_ReturnValue) == 0x000020, "Member 'PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton::CallFunc_GetRuntimeOptions_ReturnValue' has a wrong offset!");
static_assert(offsetof(PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton, K2Node_CustomEvent_Base_Color) == 0x000028, "Member 'PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton::K2Node_CustomEvent_Base_Color' has a wrong offset!");
static_assert(offsetof(PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton, K2Node_CustomEvent_Hover_Color) == 0x000038, "Member 'PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton::K2Node_CustomEvent_Hover_Color' has a wrong offset!");
static_assert(offsetof(PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton, K2Node_CustomEvent_Select_Color) == 0x000048, "Member 'PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton::K2Node_CustomEvent_Select_Color' has a wrong offset!");
static_assert(offsetof(PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton, CallFunc_BooleanAND_ReturnValue) == 0x000058, "Member 'PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton, Temp_byte_Variable_2) == 0x000059, "Member 'PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000060, "Member 'PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton, Temp_byte_Variable_3) == 0x000068, "Member 'PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton, Temp_bool_Variable_1) == 0x000069, "Member 'PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton, K2Node_CustomEvent_Allowed) == 0x00006A, "Member 'PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton::K2Node_CustomEvent_Allowed' has a wrong offset!");
static_assert(offsetof(PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton, K2Node_Select_Default) == 0x00006B, "Member 'PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton, K2Node_Select_Default_1) == 0x00006C, "Member 'PageNavigatorPipButton_C_ExecuteUbergraph_PageNavigatorPipButton::K2Node_Select_Default_1' has a wrong offset!");

// Function PageNavigatorPipButton.PageNavigatorPipButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct PageNavigatorPipButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PageNavigatorPipButton_C_PreConstruct) == 0x000001, "Wrong alignment on PageNavigatorPipButton_C_PreConstruct");
static_assert(sizeof(PageNavigatorPipButton_C_PreConstruct) == 0x000001, "Wrong size on PageNavigatorPipButton_C_PreConstruct");
static_assert(offsetof(PageNavigatorPipButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'PageNavigatorPipButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function PageNavigatorPipButton.PageNavigatorPipButton_C.Set Pip Colors
// 0x0030 (0x0030 - 0x0000)
struct PageNavigatorPipButton_C_Set_Pip_Colors final
{
public:
	struct FLinearColor                           Base_Color;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Hover_Color;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Select_Color;                                      // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PageNavigatorPipButton_C_Set_Pip_Colors) == 0x000004, "Wrong alignment on PageNavigatorPipButton_C_Set_Pip_Colors");
static_assert(sizeof(PageNavigatorPipButton_C_Set_Pip_Colors) == 0x000030, "Wrong size on PageNavigatorPipButton_C_Set_Pip_Colors");
static_assert(offsetof(PageNavigatorPipButton_C_Set_Pip_Colors, Base_Color) == 0x000000, "Member 'PageNavigatorPipButton_C_Set_Pip_Colors::Base_Color' has a wrong offset!");
static_assert(offsetof(PageNavigatorPipButton_C_Set_Pip_Colors, Hover_Color) == 0x000010, "Member 'PageNavigatorPipButton_C_Set_Pip_Colors::Hover_Color' has a wrong offset!");
static_assert(offsetof(PageNavigatorPipButton_C_Set_Pip_Colors, Select_Color) == 0x000020, "Member 'PageNavigatorPipButton_C_Set_Pip_Colors::Select_Color' has a wrong offset!");

// Function PageNavigatorPipButton.PageNavigatorPipButton_C.SetRightStickIconAllowed
// 0x0001 (0x0001 - 0x0000)
struct PageNavigatorPipButton_C_SetRightStickIconAllowed final
{
public:
	bool                                          Allowed;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PageNavigatorPipButton_C_SetRightStickIconAllowed) == 0x000001, "Wrong alignment on PageNavigatorPipButton_C_SetRightStickIconAllowed");
static_assert(sizeof(PageNavigatorPipButton_C_SetRightStickIconAllowed) == 0x000001, "Wrong size on PageNavigatorPipButton_C_SetRightStickIconAllowed");
static_assert(offsetof(PageNavigatorPipButton_C_SetRightStickIconAllowed, Allowed) == 0x000000, "Member 'PageNavigatorPipButton_C_SetRightStickIconAllowed::Allowed' has a wrong offset!");

}

