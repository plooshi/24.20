#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CorrectiveActionDisplayNameScreen

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function CorrectiveActionDisplayNameScreen.CorrectiveActionDisplayNameScreen_C.ExecuteUbergraph_CorrectiveActionDisplayNameScreen
// 0x0028 (0x0028 - 0x0000)
struct CorrectiveActionDisplayNameScreen_C_ExecuteUbergraph_CorrectiveActionDisplayNameScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_FailureReason;                        // 0x0008(0x0018)(ConstParm)
	bool                                          K2Node_Event_bShowProcessing;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShowDownloading;                     // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CorrectiveActionDisplayNameScreen_C_ExecuteUbergraph_CorrectiveActionDisplayNameScreen) == 0x000008, "Wrong alignment on CorrectiveActionDisplayNameScreen_C_ExecuteUbergraph_CorrectiveActionDisplayNameScreen");
static_assert(sizeof(CorrectiveActionDisplayNameScreen_C_ExecuteUbergraph_CorrectiveActionDisplayNameScreen) == 0x000028, "Wrong size on CorrectiveActionDisplayNameScreen_C_ExecuteUbergraph_CorrectiveActionDisplayNameScreen");
static_assert(offsetof(CorrectiveActionDisplayNameScreen_C_ExecuteUbergraph_CorrectiveActionDisplayNameScreen, EntryPoint) == 0x000000, "Member 'CorrectiveActionDisplayNameScreen_C_ExecuteUbergraph_CorrectiveActionDisplayNameScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(CorrectiveActionDisplayNameScreen_C_ExecuteUbergraph_CorrectiveActionDisplayNameScreen, Temp_bool_Variable) == 0x000004, "Member 'CorrectiveActionDisplayNameScreen_C_ExecuteUbergraph_CorrectiveActionDisplayNameScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CorrectiveActionDisplayNameScreen_C_ExecuteUbergraph_CorrectiveActionDisplayNameScreen, Temp_byte_Variable) == 0x000005, "Member 'CorrectiveActionDisplayNameScreen_C_ExecuteUbergraph_CorrectiveActionDisplayNameScreen::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CorrectiveActionDisplayNameScreen_C_ExecuteUbergraph_CorrectiveActionDisplayNameScreen, Temp_byte_Variable_1) == 0x000006, "Member 'CorrectiveActionDisplayNameScreen_C_ExecuteUbergraph_CorrectiveActionDisplayNameScreen::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(CorrectiveActionDisplayNameScreen_C_ExecuteUbergraph_CorrectiveActionDisplayNameScreen, K2Node_Event_FailureReason) == 0x000008, "Member 'CorrectiveActionDisplayNameScreen_C_ExecuteUbergraph_CorrectiveActionDisplayNameScreen::K2Node_Event_FailureReason' has a wrong offset!");
static_assert(offsetof(CorrectiveActionDisplayNameScreen_C_ExecuteUbergraph_CorrectiveActionDisplayNameScreen, K2Node_Event_bShowProcessing) == 0x000020, "Member 'CorrectiveActionDisplayNameScreen_C_ExecuteUbergraph_CorrectiveActionDisplayNameScreen::K2Node_Event_bShowProcessing' has a wrong offset!");
static_assert(offsetof(CorrectiveActionDisplayNameScreen_C_ExecuteUbergraph_CorrectiveActionDisplayNameScreen, K2Node_Select_Default) == 0x000021, "Member 'CorrectiveActionDisplayNameScreen_C_ExecuteUbergraph_CorrectiveActionDisplayNameScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CorrectiveActionDisplayNameScreen_C_ExecuteUbergraph_CorrectiveActionDisplayNameScreen, K2Node_Event_bShowDownloading) == 0x000022, "Member 'CorrectiveActionDisplayNameScreen_C_ExecuteUbergraph_CorrectiveActionDisplayNameScreen::K2Node_Event_bShowDownloading' has a wrong offset!");

// Function CorrectiveActionDisplayNameScreen.CorrectiveActionDisplayNameScreen_C.OnShowFailureReason
// 0x0018 (0x0018 - 0x0000)
struct CorrectiveActionDisplayNameScreen_C_OnShowFailureReason final
{
public:
	class FText                                   FailureReason;                                     // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(CorrectiveActionDisplayNameScreen_C_OnShowFailureReason) == 0x000008, "Wrong alignment on CorrectiveActionDisplayNameScreen_C_OnShowFailureReason");
static_assert(sizeof(CorrectiveActionDisplayNameScreen_C_OnShowFailureReason) == 0x000018, "Wrong size on CorrectiveActionDisplayNameScreen_C_OnShowFailureReason");
static_assert(offsetof(CorrectiveActionDisplayNameScreen_C_OnShowFailureReason, FailureReason) == 0x000000, "Member 'CorrectiveActionDisplayNameScreen_C_OnShowFailureReason::FailureReason' has a wrong offset!");

// Function CorrectiveActionDisplayNameScreen.CorrectiveActionDisplayNameScreen_C.OnShowDisplayNameDownloading
// 0x0001 (0x0001 - 0x0000)
struct CorrectiveActionDisplayNameScreen_C_OnShowDisplayNameDownloading final
{
public:
	bool                                          bShowDownloading;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CorrectiveActionDisplayNameScreen_C_OnShowDisplayNameDownloading) == 0x000001, "Wrong alignment on CorrectiveActionDisplayNameScreen_C_OnShowDisplayNameDownloading");
static_assert(sizeof(CorrectiveActionDisplayNameScreen_C_OnShowDisplayNameDownloading) == 0x000001, "Wrong size on CorrectiveActionDisplayNameScreen_C_OnShowDisplayNameDownloading");
static_assert(offsetof(CorrectiveActionDisplayNameScreen_C_OnShowDisplayNameDownloading, bShowDownloading) == 0x000000, "Member 'CorrectiveActionDisplayNameScreen_C_OnShowDisplayNameDownloading::bShowDownloading' has a wrong offset!");

// Function CorrectiveActionDisplayNameScreen.CorrectiveActionDisplayNameScreen_C.OnShowCorrectiveActionProcessing
// 0x0001 (0x0001 - 0x0000)
struct CorrectiveActionDisplayNameScreen_C_OnShowCorrectiveActionProcessing final
{
public:
	bool                                          bShowProcessing;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CorrectiveActionDisplayNameScreen_C_OnShowCorrectiveActionProcessing) == 0x000001, "Wrong alignment on CorrectiveActionDisplayNameScreen_C_OnShowCorrectiveActionProcessing");
static_assert(sizeof(CorrectiveActionDisplayNameScreen_C_OnShowCorrectiveActionProcessing) == 0x000001, "Wrong size on CorrectiveActionDisplayNameScreen_C_OnShowCorrectiveActionProcessing");
static_assert(offsetof(CorrectiveActionDisplayNameScreen_C_OnShowCorrectiveActionProcessing, bShowProcessing) == 0x000000, "Member 'CorrectiveActionDisplayNameScreen_C_OnShowCorrectiveActionProcessing::bShowProcessing' has a wrong offset!");

}

