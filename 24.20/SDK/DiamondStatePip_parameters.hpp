#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DiamondStatePip

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function DiamondStatePip.DiamondStatePip_C.ExecuteUbergraph_DiamondStatePip
// 0x0020 (0x0020 - 0x0000)
struct DiamondStatePip_C_ExecuteUbergraph_DiamondStatePip final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsSelected;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsHovered;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DiamondStatePip_C_ExecuteUbergraph_DiamondStatePip) == 0x000008, "Wrong alignment on DiamondStatePip_C_ExecuteUbergraph_DiamondStatePip");
static_assert(sizeof(DiamondStatePip_C_ExecuteUbergraph_DiamondStatePip) == 0x000020, "Wrong size on DiamondStatePip_C_ExecuteUbergraph_DiamondStatePip");
static_assert(offsetof(DiamondStatePip_C_ExecuteUbergraph_DiamondStatePip, EntryPoint) == 0x000000, "Member 'DiamondStatePip_C_ExecuteUbergraph_DiamondStatePip::EntryPoint' has a wrong offset!");
static_assert(offsetof(DiamondStatePip_C_ExecuteUbergraph_DiamondStatePip, Temp_bool_Variable) == 0x000004, "Member 'DiamondStatePip_C_ExecuteUbergraph_DiamondStatePip::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DiamondStatePip_C_ExecuteUbergraph_DiamondStatePip, Temp_byte_Variable) == 0x000005, "Member 'DiamondStatePip_C_ExecuteUbergraph_DiamondStatePip::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(DiamondStatePip_C_ExecuteUbergraph_DiamondStatePip, Temp_byte_Variable_1) == 0x000006, "Member 'DiamondStatePip_C_ExecuteUbergraph_DiamondStatePip::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(DiamondStatePip_C_ExecuteUbergraph_DiamondStatePip, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000008, "Member 'DiamondStatePip_C_ExecuteUbergraph_DiamondStatePip::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(DiamondStatePip_C_ExecuteUbergraph_DiamondStatePip, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'DiamondStatePip_C_ExecuteUbergraph_DiamondStatePip::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(DiamondStatePip_C_ExecuteUbergraph_DiamondStatePip, K2Node_CustomEvent_IsSelected) == 0x000018, "Member 'DiamondStatePip_C_ExecuteUbergraph_DiamondStatePip::K2Node_CustomEvent_IsSelected' has a wrong offset!");
static_assert(offsetof(DiamondStatePip_C_ExecuteUbergraph_DiamondStatePip, K2Node_CustomEvent_IsHovered) == 0x000019, "Member 'DiamondStatePip_C_ExecuteUbergraph_DiamondStatePip::K2Node_CustomEvent_IsHovered' has a wrong offset!");
static_assert(offsetof(DiamondStatePip_C_ExecuteUbergraph_DiamondStatePip, K2Node_Select_Default) == 0x00001A, "Member 'DiamondStatePip_C_ExecuteUbergraph_DiamondStatePip::K2Node_Select_Default' has a wrong offset!");

// Function DiamondStatePip.DiamondStatePip_C.SetHoverState
// 0x0001 (0x0001 - 0x0000)
struct DiamondStatePip_C_SetHoverState final
{
public:
	bool                                          IsHovered_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DiamondStatePip_C_SetHoverState) == 0x000001, "Wrong alignment on DiamondStatePip_C_SetHoverState");
static_assert(sizeof(DiamondStatePip_C_SetHoverState) == 0x000001, "Wrong size on DiamondStatePip_C_SetHoverState");
static_assert(offsetof(DiamondStatePip_C_SetHoverState, IsHovered_0) == 0x000000, "Member 'DiamondStatePip_C_SetHoverState::IsHovered_0' has a wrong offset!");

// Function DiamondStatePip.DiamondStatePip_C.SetSelectedState
// 0x0001 (0x0001 - 0x0000)
struct DiamondStatePip_C_SetSelectedState final
{
public:
	bool                                          IsSelected;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DiamondStatePip_C_SetSelectedState) == 0x000001, "Wrong alignment on DiamondStatePip_C_SetSelectedState");
static_assert(sizeof(DiamondStatePip_C_SetSelectedState) == 0x000001, "Wrong size on DiamondStatePip_C_SetSelectedState");
static_assert(offsetof(DiamondStatePip_C_SetSelectedState, IsSelected) == 0x000000, "Member 'DiamondStatePip_C_SetSelectedState::IsSelected' has a wrong offset!");

}

