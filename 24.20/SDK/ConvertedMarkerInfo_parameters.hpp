#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ConvertedMarkerInfo

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "FortniteAI_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ConvertedMarkerInfo.ConvertedMarkerInfo_C.ExecuteUbergraph_ConvertedMarkerInfo
// 0x01C0 (0x01C0 - 0x0000)
struct ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPingCommandType                              Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable;                          // 0x0020(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_1;                        // 0x0048(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_2;                        // 0x0070(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_3;                        // 0x0098(0x0028)(HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bShowBackground;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerStateAthena*                 K2Node_CustomEvent_PSA;                            // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerControllerAthena*            K2Node_DynamicCast_AsFort_Player_Controller_Athena; // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetSocialAvatarBrush_ReturnValue;         // 0x00F8(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetPinColor_ReturnValue;                  // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0140(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_1;                 // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPingCommandType                              K2Node_CustomEvent_PingCommand;                    // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15A[0x2];                                      // 0x015A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_CustomEvent_Color_1;                        // 0x015C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default;                             // 0x0170(0x0028)(HasGetValueTypeHash)
	struct FLinearColor                           K2Node_CustomEvent_Color;                          // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x01B0(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo) == 0x000008, "Wrong alignment on ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo");
static_assert(sizeof(ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo) == 0x0001C0, "Wrong size on ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo");
static_assert(offsetof(ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo, EntryPoint) == 0x000000, "Member 'ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo::EntryPoint' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo, Temp_object_Variable) == 0x000008, "Member 'ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo, K2Node_DynamicCast_AsTexture_2D) == 0x000010, "Member 'ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo, Temp_byte_Variable) == 0x000019, "Member 'ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo, Temp_softobject_Variable) == 0x000020, "Member 'ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo, Temp_softobject_Variable_1) == 0x000048, "Member 'ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo, Temp_softobject_Variable_2) == 0x000070, "Member 'ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo, Temp_softobject_Variable_3) == 0x000098, "Member 'ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo::Temp_softobject_Variable_3' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo, K2Node_CustomEvent_bShowBackground) == 0x0000C0, "Member 'ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo::K2Node_CustomEvent_bShowBackground' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo, K2Node_CustomEvent_Loaded) == 0x0000C8, "Member 'ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo, K2Node_Event_IsDesignTime) == 0x0000D0, "Member 'ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000D8, "Member 'ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo, K2Node_CustomEvent_PSA) == 0x0000E0, "Member 'ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo::K2Node_CustomEvent_PSA' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo, K2Node_DynamicCast_AsFort_Player_Controller_Athena) == 0x0000E8, "Member 'ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo::K2Node_DynamicCast_AsFort_Player_Controller_Athena' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo, K2Node_DynamicCast_bSuccess_1) == 0x0000F0, "Member 'ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo, CallFunc_GetSocialAvatarBrush_ReturnValue) == 0x0000F8, "Member 'ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo::CallFunc_GetSocialAvatarBrush_ReturnValue' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo, CallFunc_GetPinColor_ReturnValue) == 0x000120, "Member 'ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo::CallFunc_GetPinColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000130, "Member 'ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo, Temp_object_Variable_1) == 0x000138, "Member 'ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo, K2Node_CreateDelegate_OutputDelegate) == 0x000140, "Member 'ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo, K2Node_DynamicCast_AsTexture_2D_1) == 0x000150, "Member 'ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo::K2Node_DynamicCast_AsTexture_2D_1' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo, K2Node_DynamicCast_bSuccess_2) == 0x000158, "Member 'ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo, K2Node_CustomEvent_PingCommand) == 0x000159, "Member 'ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo::K2Node_CustomEvent_PingCommand' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo, K2Node_CustomEvent_Color_1) == 0x00015C, "Member 'ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo::K2Node_CustomEvent_Color_1' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo, K2Node_SwitchEnum_CmpSuccess) == 0x00016C, "Member 'ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo, K2Node_Select_Default) == 0x000170, "Member 'ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo, K2Node_CustomEvent_Color) == 0x000198, "Member 'ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo::K2Node_CustomEvent_Color' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo, K2Node_CustomEvent_Loaded_1) == 0x0001A8, "Member 'ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo, K2Node_CreateDelegate_OutputDelegate_1) == 0x0001B0, "Member 'ConvertedMarkerInfo_C_ExecuteUbergraph_ConvertedMarkerInfo::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function ConvertedMarkerInfo.ConvertedMarkerInfo_C.InitNPCCommandIcon
// 0x0010 (0x0010 - 0x0000)
struct ConvertedMarkerInfo_C_InitNPCCommandIcon final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ConvertedMarkerInfo_C_InitNPCCommandIcon) == 0x000004, "Wrong alignment on ConvertedMarkerInfo_C_InitNPCCommandIcon");
static_assert(sizeof(ConvertedMarkerInfo_C_InitNPCCommandIcon) == 0x000010, "Wrong size on ConvertedMarkerInfo_C_InitNPCCommandIcon");
static_assert(offsetof(ConvertedMarkerInfo_C_InitNPCCommandIcon, Color) == 0x000000, "Member 'ConvertedMarkerInfo_C_InitNPCCommandIcon::Color' has a wrong offset!");

// Function ConvertedMarkerInfo.ConvertedMarkerInfo_C.InitPlayerIconState
// 0x0008 (0x0008 - 0x0000)
struct ConvertedMarkerInfo_C_InitPlayerIconState final
{
public:
	class AFortPlayerStateAthena*                 PSA;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ConvertedMarkerInfo_C_InitPlayerIconState) == 0x000008, "Wrong alignment on ConvertedMarkerInfo_C_InitPlayerIconState");
static_assert(sizeof(ConvertedMarkerInfo_C_InitPlayerIconState) == 0x000008, "Wrong size on ConvertedMarkerInfo_C_InitPlayerIconState");
static_assert(offsetof(ConvertedMarkerInfo_C_InitPlayerIconState, PSA) == 0x000000, "Member 'ConvertedMarkerInfo_C_InitPlayerIconState::PSA' has a wrong offset!");

// Function ConvertedMarkerInfo.ConvertedMarkerInfo_C.OnLoaded_25BCEE7642585A8BD6CE1CAFC70FEAF3
// 0x0008 (0x0008 - 0x0000)
struct ConvertedMarkerInfo_C_OnLoaded_25BCEE7642585A8BD6CE1CAFC70FEAF3 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ConvertedMarkerInfo_C_OnLoaded_25BCEE7642585A8BD6CE1CAFC70FEAF3) == 0x000008, "Wrong alignment on ConvertedMarkerInfo_C_OnLoaded_25BCEE7642585A8BD6CE1CAFC70FEAF3");
static_assert(sizeof(ConvertedMarkerInfo_C_OnLoaded_25BCEE7642585A8BD6CE1CAFC70FEAF3) == 0x000008, "Wrong size on ConvertedMarkerInfo_C_OnLoaded_25BCEE7642585A8BD6CE1CAFC70FEAF3");
static_assert(offsetof(ConvertedMarkerInfo_C_OnLoaded_25BCEE7642585A8BD6CE1CAFC70FEAF3, Loaded) == 0x000000, "Member 'ConvertedMarkerInfo_C_OnLoaded_25BCEE7642585A8BD6CE1CAFC70FEAF3::Loaded' has a wrong offset!");

// Function ConvertedMarkerInfo.ConvertedMarkerInfo_C.OnLoaded_68559753464A154900ECA9BC6BB940C0
// 0x0008 (0x0008 - 0x0000)
struct ConvertedMarkerInfo_C_OnLoaded_68559753464A154900ECA9BC6BB940C0 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ConvertedMarkerInfo_C_OnLoaded_68559753464A154900ECA9BC6BB940C0) == 0x000008, "Wrong alignment on ConvertedMarkerInfo_C_OnLoaded_68559753464A154900ECA9BC6BB940C0");
static_assert(sizeof(ConvertedMarkerInfo_C_OnLoaded_68559753464A154900ECA9BC6BB940C0) == 0x000008, "Wrong size on ConvertedMarkerInfo_C_OnLoaded_68559753464A154900ECA9BC6BB940C0");
static_assert(offsetof(ConvertedMarkerInfo_C_OnLoaded_68559753464A154900ECA9BC6BB940C0, Loaded) == 0x000000, "Member 'ConvertedMarkerInfo_C_OnLoaded_68559753464A154900ECA9BC6BB940C0::Loaded' has a wrong offset!");

// Function ConvertedMarkerInfo.ConvertedMarkerInfo_C.OverrideShowBackground
// 0x0001 (0x0001 - 0x0000)
struct ConvertedMarkerInfo_C_OverrideShowBackground final
{
public:
	bool                                          bShowBackground;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ConvertedMarkerInfo_C_OverrideShowBackground) == 0x000001, "Wrong alignment on ConvertedMarkerInfo_C_OverrideShowBackground");
static_assert(sizeof(ConvertedMarkerInfo_C_OverrideShowBackground) == 0x000001, "Wrong size on ConvertedMarkerInfo_C_OverrideShowBackground");
static_assert(offsetof(ConvertedMarkerInfo_C_OverrideShowBackground, bShowBackground) == 0x000000, "Member 'ConvertedMarkerInfo_C_OverrideShowBackground::bShowBackground' has a wrong offset!");

// Function ConvertedMarkerInfo.ConvertedMarkerInfo_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ConvertedMarkerInfo_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ConvertedMarkerInfo_C_PreConstruct) == 0x000001, "Wrong alignment on ConvertedMarkerInfo_C_PreConstruct");
static_assert(sizeof(ConvertedMarkerInfo_C_PreConstruct) == 0x000001, "Wrong size on ConvertedMarkerInfo_C_PreConstruct");
static_assert(offsetof(ConvertedMarkerInfo_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ConvertedMarkerInfo_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ConvertedMarkerInfo.ConvertedMarkerInfo_C.SetBackgroundVisibility
// 0x000A (0x000A - 0x0000)
struct ConvertedMarkerInfo_C_SetBackgroundVisibility final
{
public:
	bool                                          bOverride;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBackgroundVisible;                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLocal_BackgroundVisible;                          // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ConvertedMarkerInfo_C_SetBackgroundVisibility) == 0x000001, "Wrong alignment on ConvertedMarkerInfo_C_SetBackgroundVisibility");
static_assert(sizeof(ConvertedMarkerInfo_C_SetBackgroundVisibility) == 0x00000A, "Wrong size on ConvertedMarkerInfo_C_SetBackgroundVisibility");
static_assert(offsetof(ConvertedMarkerInfo_C_SetBackgroundVisibility, bOverride) == 0x000000, "Member 'ConvertedMarkerInfo_C_SetBackgroundVisibility::bOverride' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_SetBackgroundVisibility, bBackgroundVisible) == 0x000001, "Member 'ConvertedMarkerInfo_C_SetBackgroundVisibility::bBackgroundVisible' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_SetBackgroundVisibility, bLocal_BackgroundVisible) == 0x000002, "Member 'ConvertedMarkerInfo_C_SetBackgroundVisibility::bLocal_BackgroundVisible' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_SetBackgroundVisibility, Temp_byte_Variable) == 0x000003, "Member 'ConvertedMarkerInfo_C_SetBackgroundVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_SetBackgroundVisibility, Temp_byte_Variable_1) == 0x000004, "Member 'ConvertedMarkerInfo_C_SetBackgroundVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_SetBackgroundVisibility, Temp_bool_Variable) == 0x000005, "Member 'ConvertedMarkerInfo_C_SetBackgroundVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_SetBackgroundVisibility, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000006, "Member 'ConvertedMarkerInfo_C_SetBackgroundVisibility::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_SetBackgroundVisibility, K2Node_Select_Default) == 0x000007, "Member 'ConvertedMarkerInfo_C_SetBackgroundVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_SetBackgroundVisibility, CallFunc_BooleanOR_ReturnValue) == 0x000008, "Member 'ConvertedMarkerInfo_C_SetBackgroundVisibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_SetBackgroundVisibility, CallFunc_BooleanOR_ReturnValue_1) == 0x000009, "Member 'ConvertedMarkerInfo_C_SetBackgroundVisibility::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function ConvertedMarkerInfo.ConvertedMarkerInfo_C.UpdateCommandIcon
// 0x0014 (0x0014 - 0x0000)
struct ConvertedMarkerInfo_C_UpdateCommandIcon final
{
public:
	EPingCommandType                              PingCommand;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Color;                                             // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ConvertedMarkerInfo_C_UpdateCommandIcon) == 0x000004, "Wrong alignment on ConvertedMarkerInfo_C_UpdateCommandIcon");
static_assert(sizeof(ConvertedMarkerInfo_C_UpdateCommandIcon) == 0x000014, "Wrong size on ConvertedMarkerInfo_C_UpdateCommandIcon");
static_assert(offsetof(ConvertedMarkerInfo_C_UpdateCommandIcon, PingCommand) == 0x000000, "Member 'ConvertedMarkerInfo_C_UpdateCommandIcon::PingCommand' has a wrong offset!");
static_assert(offsetof(ConvertedMarkerInfo_C_UpdateCommandIcon, Color) == 0x000004, "Member 'ConvertedMarkerInfo_C_UpdateCommandIcon::Color' has a wrong offset!");

}

