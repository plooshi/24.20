#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Artemis_SnowSurfaceCoverageMap

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Bp_E_Artemis_SnowSurfaceCoverageMap_structs.hpp"
#include "BP_Artemis_SnowSurfaceCoverageMap_Struct_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Artemis_SnowSurfaceCoverageMap.BP_Artemis_SnowSurfaceCoverageMap_C.ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap
// 0x0048 (0x0048 - 0x0000)
struct BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAsyncAction_AuthorityMatchReady*   CallFunc_MatchReadyAsync_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBp_E_Artemis_SnowSurfaceCoverageMap          Temp_byte_Variable;                                // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBp_E_Artemis_SnowSurfaceCoverageMap          Temp_byte_Variable_1;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBp_E_Artemis_SnowSurfaceCoverageMap          Temp_byte_Variable_2;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBp_E_Artemis_SnowSurfaceCoverageMap          Temp_byte_Variable_3;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBp_E_Artemis_SnowSurfaceCoverageMap          Temp_byte_Variable_4;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBp_E_Artemis_SnowSurfaceCoverageMap          Temp_byte_Variable_5;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBp_E_Artemis_SnowSurfaceCoverageMap          Temp_byte_Variable_6;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_AllowBitArrayPopulation;        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Index;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBp_E_Artemis_SnowSurfaceCoverageMap          K2Node_Select_Default;                             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBP_Artemis_SnowSurfaceCoverageMap_Struct K2Node_MakeStruct_BP_Artemis_SnowSurfaceCoverageMap_Struct; // 0x0038(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBp_E_Artemis_SnowSurfaceCoverageMap          CallFunc_GetSnowProgressionPhase_SnowProgressionPhase; // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap) == 0x000008, "Wrong alignment on BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap");
static_assert(sizeof(BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap) == 0x000048, "Wrong size on BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap, EntryPoint) == 0x000000, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap, CallFunc_MatchReadyAsync_ReturnValue) == 0x000008, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap::CallFunc_MatchReadyAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap, Temp_int_Variable) == 0x000010, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap, Temp_byte_Variable) == 0x000015, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap, Temp_byte_Variable_1) == 0x000016, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap, Temp_byte_Variable_2) == 0x000017, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap, Temp_byte_Variable_3) == 0x000018, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap, Temp_byte_Variable_4) == 0x000019, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap, Temp_byte_Variable_5) == 0x00001A, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap, Temp_byte_Variable_6) == 0x00001B, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap, CallFunc_HasAuthority_ReturnValue) == 0x00001C, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap, CallFunc_HasAuthority_ReturnValue_1) == 0x00001D, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap, K2Node_CustomEvent_AllowBitArrayPopulation) == 0x00002C, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap::K2Node_CustomEvent_AllowBitArrayPopulation' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap, K2Node_CustomEvent_Index) == 0x000030, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap::K2Node_CustomEvent_Index' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap, K2Node_Event_EndPlayReason) == 0x000034, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap, K2Node_Select_Default) == 0x000035, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap, K2Node_MakeStruct_BP_Artemis_SnowSurfaceCoverageMap_Struct) == 0x000038, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap::K2Node_MakeStruct_BP_Artemis_SnowSurfaceCoverageMap_Struct' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap, CallFunc_GetSnowProgressionPhase_SnowProgressionPhase) == 0x000040, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap::CallFunc_GetSnowProgressionPhase_SnowProgressionPhase' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000041, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap, CallFunc_HasAuthority_ReturnValue_2) == 0x000042, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_ExecuteUbergraph_BP_Artemis_SnowSurfaceCoverageMap::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");

// Function BP_Artemis_SnowSurfaceCoverageMap.BP_Artemis_SnowSurfaceCoverageMap_C.FindAndSetSnowProgressionPhase
// 0x0088 (0x0088 - 0x0000)
struct BP_Artemis_SnowSurfaceCoverageMap_C_FindAndSetSnowProgressionPhase final
{
public:
	TMap<class FString, EBp_E_Artemis_SnowSurfaceCoverageMap> SnowProgressionEvents;                             // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          CallFunc_QuerySnowCalendarEvents_EventFound;       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_QuerySnowCalendarEvents_FoundEventName;   // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_QuerySnowCalendarEvents_EventTimespanRatio; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBP_Artemis_SnowSurfaceCoverageMap_Struct K2Node_MakeStruct_BP_Artemis_SnowSurfaceCoverageMap_Struct; // 0x0070(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBp_E_Artemis_SnowSurfaceCoverageMap          CallFunc_Map_Find_Value;                           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBP_Artemis_SnowSurfaceCoverageMap_Struct K2Node_MakeStruct_BP_Artemis_SnowSurfaceCoverageMap_Struct_1; // 0x007C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_EventTimespanRatio_6_D092696F48A44ACF86782CBFECD83CE4_ImplicitCast; // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Artemis_SnowSurfaceCoverageMap_C_FindAndSetSnowProgressionPhase) == 0x000008, "Wrong alignment on BP_Artemis_SnowSurfaceCoverageMap_C_FindAndSetSnowProgressionPhase");
static_assert(sizeof(BP_Artemis_SnowSurfaceCoverageMap_C_FindAndSetSnowProgressionPhase) == 0x000088, "Wrong size on BP_Artemis_SnowSurfaceCoverageMap_C_FindAndSetSnowProgressionPhase");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_FindAndSetSnowProgressionPhase, SnowProgressionEvents) == 0x000000, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_FindAndSetSnowProgressionPhase::SnowProgressionEvents' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_FindAndSetSnowProgressionPhase, CallFunc_QuerySnowCalendarEvents_EventFound) == 0x000050, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_FindAndSetSnowProgressionPhase::CallFunc_QuerySnowCalendarEvents_EventFound' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_FindAndSetSnowProgressionPhase, CallFunc_QuerySnowCalendarEvents_FoundEventName) == 0x000058, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_FindAndSetSnowProgressionPhase::CallFunc_QuerySnowCalendarEvents_FoundEventName' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_FindAndSetSnowProgressionPhase, CallFunc_QuerySnowCalendarEvents_EventTimespanRatio) == 0x000068, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_FindAndSetSnowProgressionPhase::CallFunc_QuerySnowCalendarEvents_EventTimespanRatio' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_FindAndSetSnowProgressionPhase, K2Node_MakeStruct_BP_Artemis_SnowSurfaceCoverageMap_Struct) == 0x000070, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_FindAndSetSnowProgressionPhase::K2Node_MakeStruct_BP_Artemis_SnowSurfaceCoverageMap_Struct' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_FindAndSetSnowProgressionPhase, CallFunc_Map_Find_Value) == 0x000078, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_FindAndSetSnowProgressionPhase::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_FindAndSetSnowProgressionPhase, CallFunc_Map_Find_ReturnValue) == 0x000079, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_FindAndSetSnowProgressionPhase::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_FindAndSetSnowProgressionPhase, K2Node_MakeStruct_BP_Artemis_SnowSurfaceCoverageMap_Struct_1) == 0x00007C, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_FindAndSetSnowProgressionPhase::K2Node_MakeStruct_BP_Artemis_SnowSurfaceCoverageMap_Struct_1' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_FindAndSetSnowProgressionPhase, K2Node_MakeStruct_EventTimespanRatio_6_D092696F48A44ACF86782CBFECD83CE4_ImplicitCast) == 0x000084, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_FindAndSetSnowProgressionPhase::K2Node_MakeStruct_EventTimespanRatio_6_D092696F48A44ACF86782CBFECD83CE4_ImplicitCast' has a wrong offset!");

// Function BP_Artemis_SnowSurfaceCoverageMap.BP_Artemis_SnowSurfaceCoverageMap_C.GetSnowProgressionPhase
// 0x0001 (0x0001 - 0x0000)
struct BP_Artemis_SnowSurfaceCoverageMap_C_GetSnowProgressionPhase final
{
public:
	EBp_E_Artemis_SnowSurfaceCoverageMap          SnowProgressionPhase;                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Artemis_SnowSurfaceCoverageMap_C_GetSnowProgressionPhase) == 0x000001, "Wrong alignment on BP_Artemis_SnowSurfaceCoverageMap_C_GetSnowProgressionPhase");
static_assert(sizeof(BP_Artemis_SnowSurfaceCoverageMap_C_GetSnowProgressionPhase) == 0x000001, "Wrong size on BP_Artemis_SnowSurfaceCoverageMap_C_GetSnowProgressionPhase");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_GetSnowProgressionPhase, SnowProgressionPhase) == 0x000000, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_GetSnowProgressionPhase::SnowProgressionPhase' has a wrong offset!");

// Function BP_Artemis_SnowSurfaceCoverageMap.BP_Artemis_SnowSurfaceCoverageMap_C.OnRep_SnowProgression
// 0x0003 (0x0003 - 0x0000)
struct BP_Artemis_SnowSurfaceCoverageMap_C_OnRep_SnowProgression final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBp_E_Artemis_SnowSurfaceCoverageMap          CallFunc_GetSnowProgressionPhase_SnowProgressionPhase; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Artemis_SnowSurfaceCoverageMap_C_OnRep_SnowProgression) == 0x000001, "Wrong alignment on BP_Artemis_SnowSurfaceCoverageMap_C_OnRep_SnowProgression");
static_assert(sizeof(BP_Artemis_SnowSurfaceCoverageMap_C_OnRep_SnowProgression) == 0x000003, "Wrong size on BP_Artemis_SnowSurfaceCoverageMap_C_OnRep_SnowProgression");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_OnRep_SnowProgression, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_OnRep_SnowProgression::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_OnRep_SnowProgression, CallFunc_GetSnowProgressionPhase_SnowProgressionPhase) == 0x000001, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_OnRep_SnowProgression::CallFunc_GetSnowProgressionPhase_SnowProgressionPhase' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_OnRep_SnowProgression, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_OnRep_SnowProgression::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_Artemis_SnowSurfaceCoverageMap.BP_Artemis_SnowSurfaceCoverageMap_C.OnRep_SnowProgressionState
// 0x0003 (0x0003 - 0x0000)
struct BP_Artemis_SnowSurfaceCoverageMap_C_OnRep_SnowProgressionState final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBp_E_Artemis_SnowSurfaceCoverageMap          CallFunc_GetSnowProgressionPhase_SnowProgressionPhase; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Artemis_SnowSurfaceCoverageMap_C_OnRep_SnowProgressionState) == 0x000001, "Wrong alignment on BP_Artemis_SnowSurfaceCoverageMap_C_OnRep_SnowProgressionState");
static_assert(sizeof(BP_Artemis_SnowSurfaceCoverageMap_C_OnRep_SnowProgressionState) == 0x000003, "Wrong size on BP_Artemis_SnowSurfaceCoverageMap_C_OnRep_SnowProgressionState");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_OnRep_SnowProgressionState, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_OnRep_SnowProgressionState::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_OnRep_SnowProgressionState, CallFunc_GetSnowProgressionPhase_SnowProgressionPhase) == 0x000001, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_OnRep_SnowProgressionState::CallFunc_GetSnowProgressionPhase_SnowProgressionPhase' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_OnRep_SnowProgressionState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_OnRep_SnowProgressionState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_Artemis_SnowSurfaceCoverageMap.BP_Artemis_SnowSurfaceCoverageMap_C.PopulateBitArray
// 0x0040 (0x0040 - 0x0000)
struct BP_Artemis_SnowSurfaceCoverageMap_C_PopulateBitArray final
{
public:
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortGameStateComponent_SurfaceCoverageMap* CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateCoverageMap_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_UpdateCoverageMap_DebugDrawDuration_ImplicitCast; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateCoverageMap_CoverageThreshold_ImplicitCast; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Artemis_SnowSurfaceCoverageMap_C_PopulateBitArray) == 0x000008, "Wrong alignment on BP_Artemis_SnowSurfaceCoverageMap_C_PopulateBitArray");
static_assert(sizeof(BP_Artemis_SnowSurfaceCoverageMap_C_PopulateBitArray) == 0x000040, "Wrong size on BP_Artemis_SnowSurfaceCoverageMap_C_PopulateBitArray");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_PopulateBitArray, CallFunc_GetGameState_ReturnValue) == 0x000000, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_PopulateBitArray::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_PopulateBitArray, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_PopulateBitArray::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_PopulateBitArray, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_PopulateBitArray::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_PopulateBitArray, CallFunc_Add_VectorVector_ReturnValue) == 0x000018, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_PopulateBitArray::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_PopulateBitArray, CallFunc_UpdateCoverageMap_ReturnValue) == 0x000030, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_PopulateBitArray::CallFunc_UpdateCoverageMap_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_PopulateBitArray, CallFunc_UpdateCoverageMap_DebugDrawDuration_ImplicitCast) == 0x000034, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_PopulateBitArray::CallFunc_UpdateCoverageMap_DebugDrawDuration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_PopulateBitArray, CallFunc_UpdateCoverageMap_CoverageThreshold_ImplicitCast) == 0x000038, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_PopulateBitArray::CallFunc_UpdateCoverageMap_CoverageThreshold_ImplicitCast' has a wrong offset!");

// Function BP_Artemis_SnowSurfaceCoverageMap.BP_Artemis_SnowSurfaceCoverageMap_C.QuerySnowCalendarEvents
// 0x00D0 (0x00D0 - 0x0000)
struct BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents final
{
public:
	TMap<class FString, EBp_E_Artemis_SnowSurfaceCoverageMap> Events;                                            // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          EventFound;                                        // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 FoundEventName;                                    // 0x0058(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	double                                        EventTimespanRatio;                                // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x0078(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCalendarEventInformation_bIsEventActive; // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_GetCalendarEventInformation_TimeSinceBegin; // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_GetCalendarEventInformation_TimeUntilEnd; // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCalendarEventInformation_TimeSpanRatio; // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_EventTimespanRatio_ImplicitCast; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents) == 0x000008, "Wrong alignment on BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents");
static_assert(sizeof(BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents) == 0x0000D0, "Wrong size on BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents, Events) == 0x000000, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents::Events' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents, EventFound) == 0x000050, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents::EventFound' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents, FoundEventName) == 0x000058, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents::FoundEventName' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents, EventTimespanRatio) == 0x000068, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents::EventTimespanRatio' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents, Temp_int_Array_Index_Variable) == 0x000070, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents, CallFunc_Map_Keys_Keys) == 0x000078, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents, CallFunc_GetCalendarEventInformation_bIsEventActive) == 0x00009C, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents::CallFunc_GetCalendarEventInformation_bIsEventActive' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents, CallFunc_GetCalendarEventInformation_TimeSinceBegin) == 0x0000A0, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents::CallFunc_GetCalendarEventInformation_TimeSinceBegin' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents, CallFunc_GetCalendarEventInformation_TimeUntilEnd) == 0x0000A8, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents::CallFunc_GetCalendarEventInformation_TimeUntilEnd' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents, CallFunc_GetCalendarEventInformation_TimeSpanRatio) == 0x0000B0, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents::CallFunc_GetCalendarEventInformation_TimeSpanRatio' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000B4, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents, CallFunc_Max_ReturnValue) == 0x0000B8, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents, Temp_int_Loop_Counter_Variable) == 0x0000BC, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000C0, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000C4, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents, K2Node_FunctionResult_EventTimespanRatio_ImplicitCast) == 0x0000C8, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_QuerySnowCalendarEvents::K2Node_FunctionResult_EventTimespanRatio_ImplicitCast' has a wrong offset!");

// Function BP_Artemis_SnowSurfaceCoverageMap.BP_Artemis_SnowSurfaceCoverageMap_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_Artemis_SnowSurfaceCoverageMap_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Artemis_SnowSurfaceCoverageMap_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_Artemis_SnowSurfaceCoverageMap_C_ReceiveEndPlay");
static_assert(sizeof(BP_Artemis_SnowSurfaceCoverageMap_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_Artemis_SnowSurfaceCoverageMap_C_ReceiveEndPlay");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_Artemis_SnowSurfaceCoverageMap.BP_Artemis_SnowSurfaceCoverageMap_C.RemoveSnowOnClient
// 0x0001 (0x0001 - 0x0000)
struct BP_Artemis_SnowSurfaceCoverageMap_C_RemoveSnowOnClient final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Artemis_SnowSurfaceCoverageMap_C_RemoveSnowOnClient) == 0x000001, "Wrong alignment on BP_Artemis_SnowSurfaceCoverageMap_C_RemoveSnowOnClient");
static_assert(sizeof(BP_Artemis_SnowSurfaceCoverageMap_C_RemoveSnowOnClient) == 0x000001, "Wrong size on BP_Artemis_SnowSurfaceCoverageMap_C_RemoveSnowOnClient");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_RemoveSnowOnClient, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_RemoveSnowOnClient::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function BP_Artemis_SnowSurfaceCoverageMap.BP_Artemis_SnowSurfaceCoverageMap_C.SetAllowBitArrayPopulation
// 0x0001 (0x0001 - 0x0000)
struct BP_Artemis_SnowSurfaceCoverageMap_C_SetAllowBitArrayPopulation final
{
public:
	bool                                          AllowBitArrayPopulation_0;                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Artemis_SnowSurfaceCoverageMap_C_SetAllowBitArrayPopulation) == 0x000001, "Wrong alignment on BP_Artemis_SnowSurfaceCoverageMap_C_SetAllowBitArrayPopulation");
static_assert(sizeof(BP_Artemis_SnowSurfaceCoverageMap_C_SetAllowBitArrayPopulation) == 0x000001, "Wrong size on BP_Artemis_SnowSurfaceCoverageMap_C_SetAllowBitArrayPopulation");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_SetAllowBitArrayPopulation, AllowBitArrayPopulation_0) == 0x000000, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_SetAllowBitArrayPopulation::AllowBitArrayPopulation_0' has a wrong offset!");

// Function BP_Artemis_SnowSurfaceCoverageMap.BP_Artemis_SnowSurfaceCoverageMap_C.SetSnowProgressionPhase
// 0x0004 (0x0004 - 0x0000)
struct BP_Artemis_SnowSurfaceCoverageMap_C_SetSnowProgressionPhase final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Artemis_SnowSurfaceCoverageMap_C_SetSnowProgressionPhase) == 0x000004, "Wrong alignment on BP_Artemis_SnowSurfaceCoverageMap_C_SetSnowProgressionPhase");
static_assert(sizeof(BP_Artemis_SnowSurfaceCoverageMap_C_SetSnowProgressionPhase) == 0x000004, "Wrong size on BP_Artemis_SnowSurfaceCoverageMap_C_SetSnowProgressionPhase");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_SetSnowProgressionPhase, Index_0) == 0x000000, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_SetSnowProgressionPhase::Index_0' has a wrong offset!");

// Function BP_Artemis_SnowSurfaceCoverageMap.BP_Artemis_SnowSurfaceCoverageMap_C.SetupRT
// 0x0020 (0x0020 - 0x0000)
struct BP_Artemis_SnowSurfaceCoverageMap_C_SetupRT final
{
public:
	double                                        CallFunc_BreakVector2D_X;                          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Artemis_SnowSurfaceCoverageMap_C_SetupRT) == 0x000008, "Wrong alignment on BP_Artemis_SnowSurfaceCoverageMap_C_SetupRT");
static_assert(sizeof(BP_Artemis_SnowSurfaceCoverageMap_C_SetupRT) == 0x000020, "Wrong size on BP_Artemis_SnowSurfaceCoverageMap_C_SetupRT");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_SetupRT, CallFunc_BreakVector2D_X) == 0x000000, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_SetupRT::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_SetupRT, CallFunc_BreakVector2D_Y) == 0x000008, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_SetupRT::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_SetupRT, CallFunc_FTrunc_ReturnValue) == 0x000010, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_SetupRT::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_SetupRT, CallFunc_FTrunc_ReturnValue_1) == 0x000014, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_SetupRT::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_SetupRT, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x000018, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_SetupRT::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");

// Function BP_Artemis_SnowSurfaceCoverageMap.BP_Artemis_SnowSurfaceCoverageMap_C.UpdateSnowProgressionMPC
// 0x00D8 (0x00D8 - 0x0000)
struct BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC final
{
public:
	double                                        Temp_real_Variable;                                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBp_E_Artemis_SnowSurfaceCoverageMap          Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBp_E_Artemis_SnowSurfaceCoverageMap          CallFunc_GetSnowProgressionPhase_SnowProgressionPhase; // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBp_E_Artemis_SnowSurfaceCoverageMap          CallFunc_GetSnowProgressionPhase_SnowProgressionPhase_1; // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F[0x1];                                       // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_4;                       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBp_E_Artemis_SnowSurfaceCoverageMap          Temp_byte_Variable_1;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Array_Get_Item;                           // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_1;                // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_2;                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_3;                // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_4;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1; // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2; // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC) == 0x000008, "Wrong alignment on BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC");
static_assert(sizeof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC) == 0x0000D8, "Wrong size on BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC, Temp_real_Variable) == 0x000000, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC, Temp_real_Variable_1) == 0x000008, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC, Temp_real_Variable_2) == 0x000010, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC, Temp_byte_Variable) == 0x000018, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC, Temp_int_Variable) == 0x00001C, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC, Temp_int_Variable_1) == 0x000020, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC, Temp_int_Variable_2) == 0x000024, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC, Temp_int_Variable_3) == 0x000028, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC, Temp_int_Variable_4) == 0x00002C, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC, Temp_int_Variable_5) == 0x000030, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC, Temp_int_Variable_6) == 0x000034, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC, Temp_int_Variable_7) == 0x000038, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC, CallFunc_IsDedicatedServer_ReturnValue) == 0x00003C, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC, CallFunc_GetSnowProgressionPhase_SnowProgressionPhase) == 0x00003D, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC::CallFunc_GetSnowProgressionPhase_SnowProgressionPhase' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC, CallFunc_GetSnowProgressionPhase_SnowProgressionPhase_1) == 0x00003E, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC::CallFunc_GetSnowProgressionPhase_SnowProgressionPhase_1' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC, CallFunc_Lerp_ReturnValue) == 0x000040, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC, K2Node_Select_Default) == 0x000048, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC, CallFunc_Lerp_ReturnValue_1) == 0x000050, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC, CallFunc_Lerp_ReturnValue_2) == 0x000058, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC, CallFunc_Lerp_ReturnValue_3) == 0x000060, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC, CallFunc_Lerp_ReturnValue_4) == 0x000068, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC, Temp_byte_Variable_1) == 0x000070, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC, K2Node_Select_Default_1) == 0x000088, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC, CallFunc_BreakVector2D_X) == 0x000090, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC, CallFunc_BreakVector2D_Y) == 0x000098, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC, CallFunc_Lerp_Alpha_ImplicitCast) == 0x0000A0, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC, CallFunc_Lerp_Alpha_ImplicitCast_1) == 0x0000A8, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC::CallFunc_Lerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC, CallFunc_Lerp_Alpha_ImplicitCast_2) == 0x0000B0, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC::CallFunc_Lerp_Alpha_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC, CallFunc_Lerp_Alpha_ImplicitCast_3) == 0x0000B8, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC::CallFunc_Lerp_Alpha_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC, CallFunc_Lerp_Alpha_ImplicitCast_4) == 0x0000C0, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC::CallFunc_Lerp_Alpha_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x0000C8, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1) == 0x0000CC, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2) == 0x0000D0, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UpdateSnowProgressionMPC::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2' has a wrong offset!");

// Function BP_Artemis_SnowSurfaceCoverageMap.BP_Artemis_SnowSurfaceCoverageMap_C.UserConstructionScript
// 0x0002 (0x0002 - 0x0000)
struct BP_Artemis_SnowSurfaceCoverageMap_C_UserConstructionScript final
{
public:
	EBp_E_Artemis_SnowSurfaceCoverageMap          CallFunc_GetSnowProgressionPhase_SnowProgressionPhase; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Artemis_SnowSurfaceCoverageMap_C_UserConstructionScript) == 0x000001, "Wrong alignment on BP_Artemis_SnowSurfaceCoverageMap_C_UserConstructionScript");
static_assert(sizeof(BP_Artemis_SnowSurfaceCoverageMap_C_UserConstructionScript) == 0x000002, "Wrong size on BP_Artemis_SnowSurfaceCoverageMap_C_UserConstructionScript");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UserConstructionScript, CallFunc_GetSnowProgressionPhase_SnowProgressionPhase) == 0x000000, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UserConstructionScript::CallFunc_GetSnowProgressionPhase_SnowProgressionPhase' has a wrong offset!");
static_assert(offsetof(BP_Artemis_SnowSurfaceCoverageMap_C_UserConstructionScript, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_Artemis_SnowSurfaceCoverageMap_C_UserConstructionScript::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

}

