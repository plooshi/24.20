#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MidMatchBunkerGameplayRuntime

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function MidMatchBunkerGameplayRuntime.FortAthenaMutator_MidMatchBunkerGameplay.OnPlaylistDataReady
// 0x0030 (0x0030 - 0x0000)
struct FortAthenaMutator_MidMatchBunkerGameplay_OnPlaylistDataReady final
{
public:
	class AFortGameStateAthena*                   GameState;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UFortPlaylist*                    Playlist;                                          // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  PlaylistContextTags;                               // 0x0010(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaMutator_MidMatchBunkerGameplay_OnPlaylistDataReady) == 0x000008, "Wrong alignment on FortAthenaMutator_MidMatchBunkerGameplay_OnPlaylistDataReady");
static_assert(sizeof(FortAthenaMutator_MidMatchBunkerGameplay_OnPlaylistDataReady) == 0x000030, "Wrong size on FortAthenaMutator_MidMatchBunkerGameplay_OnPlaylistDataReady");
static_assert(offsetof(FortAthenaMutator_MidMatchBunkerGameplay_OnPlaylistDataReady, GameState) == 0x000000, "Member 'FortAthenaMutator_MidMatchBunkerGameplay_OnPlaylistDataReady::GameState' has a wrong offset!");
static_assert(offsetof(FortAthenaMutator_MidMatchBunkerGameplay_OnPlaylistDataReady, Playlist) == 0x000008, "Member 'FortAthenaMutator_MidMatchBunkerGameplay_OnPlaylistDataReady::Playlist' has a wrong offset!");
static_assert(offsetof(FortAthenaMutator_MidMatchBunkerGameplay_OnPlaylistDataReady, PlaylistContextTags) == 0x000010, "Member 'FortAthenaMutator_MidMatchBunkerGameplay_OnPlaylistDataReady::PlaylistContextTags' has a wrong offset!");

}

