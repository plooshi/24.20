#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerseNative_0

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "VerseNative_0_structs.hpp"


namespace SDK
{

// VerseClass VerseNative.$SolarisSignatureFunctionOuter
// 0x0000 (0x0028 - 0x0028)
class VerseNative_0::U_SolarisSignatureFunctionOuter final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseClass VerseNative.$SolarisSignatureFunctionOuter", true>();
	}
	static class VerseNative_0::U_SolarisSignatureFunctionOuter* GetDefaultObj()
	{
		return GetDefaultObjImpl<VerseNative_0::U_SolarisSignatureFunctionOuter>();
	}
};
static_assert(alignof(VerseNative_0::U_SolarisSignatureFunctionOuter) == 0x000008, "Wrong alignment on VerseNative_0::U_SolarisSignatureFunctionOuter");
static_assert(sizeof(VerseNative_0::U_SolarisSignatureFunctionOuter) == 0x000028, "Wrong size on VerseNative_0::U_SolarisSignatureFunctionOuter");

// VerseClass VerseNative.Concurrency
// 0x0000 (0x0028 - 0x0028)
class UConcurrency final : public UObject
{
public:
	static class UClass* _L_2fVerse_2eorg_2fConcurrency_N_Rawaitable(const struct VerseNative_0::Ftuple_L_R& __verse_0xB2CDDD72_Argument);
	static class UClass* _L_2fVerse_2eorg_2fConcurrency_N_Rawaitable_L_Nany_R(class UClass* __verse_0xB2CDDD72_Argument);
	static class UClass* _L_2fVerse_2eorg_2fConcurrency_N_Rtask_L_Nany_R(class UClass* __verse_0xB2CDDD72_Argument);

	void _InitCDO();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Concurrency">();
	}
	static class UConcurrency* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConcurrency>();
	}
};
static_assert(alignof(UConcurrency) == 0x000008, "Wrong alignment on UConcurrency");
static_assert(sizeof(UConcurrency) == 0x000028, "Wrong size on UConcurrency");

// VerseClass VerseNative.Concurrency_task
// 0x0120 (0x0148 - 0x0028)
class UConcurrency_task : public UObject
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseFunctionProperty_                       __verse_0xBD7FB920__L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RActive; // 0x0038(0x0010)(InstancedReference, HasGetValueTypeHash)
	FVerseFunctionProperty_                       __verse_0x8F0684E8__L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RCompleted; // 0x0048(0x0010)(InstancedReference, HasGetValueTypeHash)
	FVerseFunctionProperty_                       __verse_0x5648DB9F__L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RCanceling; // 0x0058(0x0010)(InstancedReference, HasGetValueTypeHash)
	FVerseFunctionProperty_                       __verse_0x8F771AA8__L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RCanceled; // 0x0068(0x0010)(InstancedReference, HasGetValueTypeHash)
	FVerseFunctionProperty_                       __verse_0x2C6C9D8A__L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RUnsettled; // 0x0078(0x0010)(InstancedReference, HasGetValueTypeHash)
	FVerseFunctionProperty_                       __verse_0xBB33978A__L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RSettled; // 0x0088(0x0010)(InstancedReference, HasGetValueTypeHash)
	FVerseFunctionProperty_                       __verse_0x07A4A432__L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RUninterrupted; // 0x0098(0x0010)(InstancedReference, HasGetValueTypeHash)
	FVerseFunctionProperty_                       __verse_0x2C72A17D__L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RInterrupted; // 0x00A8(0x0010)(InstancedReference, HasGetValueTypeHash)
	FVerseFunctionProperty_                       __verse_0xAFD0D344__L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RCancel; // 0x00B8(0x0010)(InstancedReference, HasGetValueTypeHash)
	FVerseFunctionProperty_                       __verse_0x8DE7DBE5_Await;                          // 0x00C8(0x0010)(InstancedReference, HasGetValueTypeHash)
	uint8                                         Pad_D8[0x70];                                      // 0x00D8(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void _Block();
	void _InitCDO();
	void _InitInstance();
	FOptionProperty_ _L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RActive(const struct VerseNative_0::Ftuple_L_R& __verse_0xB2CDDD72_Argument);
	void _L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RCancel(const struct VerseNative_0::Ftuple_L_R& __verse_0xB2CDDD72_Argument);
	FOptionProperty_ _L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RCanceled(const struct VerseNative_0::Ftuple_L_R& __verse_0xB2CDDD72_Argument);
	FOptionProperty_ _L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RCanceling(const struct VerseNative_0::Ftuple_L_R& __verse_0xB2CDDD72_Argument);
	FOptionProperty_ _L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RCompleted(const struct VerseNative_0::Ftuple_L_R& __verse_0xB2CDDD72_Argument);
	FOptionProperty_ _L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RInterrupted(const struct VerseNative_0::Ftuple_L_R& __verse_0xB2CDDD72_Argument);
	FOptionProperty_ _L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RSettled(const struct VerseNative_0::Ftuple_L_R& __verse_0xB2CDDD72_Argument);
	FOptionProperty_ _L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RUninterrupted(const struct VerseNative_0::Ftuple_L_R& __verse_0xB2CDDD72_Argument);
	FOptionProperty_ _L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RUnsettled(const struct VerseNative_0::Ftuple_L_R& __verse_0xB2CDDD72_Argument);
	class UConcurrency_task* Await(class UConcurrency_task* __verse_0xC1E81372_CallingTask, int64 __verse_0xA3A00DDB_CallerResumeState, int64 __verse_0x2AC0E4D8_CallerCancelState, const struct VerseNative_0::Ftuple_L_R& __verse_0xB2CDDD72_Argument);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Concurrency_task">();
	}
	static class UConcurrency_task* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConcurrency_task>();
	}
};
static_assert(alignof(UConcurrency_task) == 0x000008, "Wrong alignment on UConcurrency_task");
static_assert(sizeof(UConcurrency_task) == 0x000148, "Wrong size on UConcurrency_task");
static_assert(offsetof(UConcurrency_task, __verse_0xBD7FB920__L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RActive) == 0x000038, "Member 'UConcurrency_task::__verse_0xBD7FB920__L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RActive' has a wrong offset!");
static_assert(offsetof(UConcurrency_task, __verse_0x8F0684E8__L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RCompleted) == 0x000048, "Member 'UConcurrency_task::__verse_0x8F0684E8__L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RCompleted' has a wrong offset!");
static_assert(offsetof(UConcurrency_task, __verse_0x5648DB9F__L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RCanceling) == 0x000058, "Member 'UConcurrency_task::__verse_0x5648DB9F__L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RCanceling' has a wrong offset!");
static_assert(offsetof(UConcurrency_task, __verse_0x8F771AA8__L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RCanceled) == 0x000068, "Member 'UConcurrency_task::__verse_0x8F771AA8__L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RCanceled' has a wrong offset!");
static_assert(offsetof(UConcurrency_task, __verse_0x2C6C9D8A__L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RUnsettled) == 0x000078, "Member 'UConcurrency_task::__verse_0x2C6C9D8A__L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RUnsettled' has a wrong offset!");
static_assert(offsetof(UConcurrency_task, __verse_0xBB33978A__L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RSettled) == 0x000088, "Member 'UConcurrency_task::__verse_0xBB33978A__L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RSettled' has a wrong offset!");
static_assert(offsetof(UConcurrency_task, __verse_0x07A4A432__L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RUninterrupted) == 0x000098, "Member 'UConcurrency_task::__verse_0x07A4A432__L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RUninterrupted' has a wrong offset!");
static_assert(offsetof(UConcurrency_task, __verse_0x2C72A17D__L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RInterrupted) == 0x0000A8, "Member 'UConcurrency_task::__verse_0x2C72A17D__L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RInterrupted' has a wrong offset!");
static_assert(offsetof(UConcurrency_task, __verse_0xAFD0D344__L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RCancel) == 0x0000B8, "Member 'UConcurrency_task::__verse_0xAFD0D344__L_2fVerse_2eorg_2fConcurrency_2ftask_2ftask_Lt_R_N_RCancel' has a wrong offset!");
static_assert(offsetof(UConcurrency_task, __verse_0x8DE7DBE5_Await) == 0x0000C8, "Member 'UConcurrency_task::__verse_0x8DE7DBE5_Await' has a wrong offset!");

// VerseClass VerseNative.task_Concurrency_awaitable$Await
// 0x0020 (0x0168 - 0x0148)
class Utask_Concurrency_awaitable_Await final : public UConcurrency_task
{
public:
	class UConcurrency_awaitable*                 _Self;                                             // 0x0148(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct VerseNative_0::Ftuple_L_R              __verse_0xB2CDDD72_Argument;                       // 0x0150(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseDynamicProperty_                        _RetVal;                                           // 0x0158(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)

public:
	int64 Update();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"task_Concurrency_awaitable$Await">();
	}
	static class Utask_Concurrency_awaitable_Await* GetDefaultObj()
	{
		return GetDefaultObjImpl<Utask_Concurrency_awaitable_Await>();
	}
};
static_assert(alignof(Utask_Concurrency_awaitable_Await) == 0x000008, "Wrong alignment on Utask_Concurrency_awaitable_Await");
static_assert(sizeof(Utask_Concurrency_awaitable_Await) == 0x000168, "Wrong size on Utask_Concurrency_awaitable_Await");
static_assert(offsetof(Utask_Concurrency_awaitable_Await, _Self) == 0x000148, "Member 'Utask_Concurrency_awaitable_Await::_Self' has a wrong offset!");
static_assert(offsetof(Utask_Concurrency_awaitable_Await, __verse_0xB2CDDD72_Argument) == 0x000150, "Member 'Utask_Concurrency_awaitable_Await::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Utask_Concurrency_awaitable_Await, _RetVal) == 0x000158, "Member 'Utask_Concurrency_awaitable_Await::_RetVal' has a wrong offset!");

// VerseClass VerseNative.Concurrency_awaitable
// 0x0000 (0x0028 - 0x0028)
class UConcurrency_awaitable final : public UObject
{
public:
	class UConcurrency_task* Await(class UConcurrency_task* __verse_0xC1E81372_CallingTask, int64 __verse_0xA3A00DDB_CallerResumeState, int64 __verse_0x2AC0E4D8_CallerCancelState, const struct VerseNative_0::Ftuple_L_R& __verse_0xB2CDDD72_Argument);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Concurrency_awaitable">();
	}
	static class UConcurrency_awaitable* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConcurrency_awaitable>();
	}
};
static_assert(alignof(UConcurrency_awaitable) == 0x000008, "Wrong alignment on UConcurrency_awaitable");
static_assert(sizeof(UConcurrency_awaitable) == 0x000028, "Wrong size on UConcurrency_awaitable");

// VerseClass VerseNative.task_Concurrency_task$Await
// 0x0020 (0x0168 - 0x0148)
class Utask_Concurrency_task_Await final : public UConcurrency_task
{
public:
	class UConcurrency_task*                      _Self;                                             // 0x0148(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct VerseNative_0::Ftuple_L_R              __verse_0xB2CDDD72_Argument;                       // 0x0150(0x0001)(Parm, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FVerseDynamicProperty_                        _RetVal;                                           // 0x0158(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)

public:
	int64 Update();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"task_Concurrency_task$Await">();
	}
	static class Utask_Concurrency_task_Await* GetDefaultObj()
	{
		return GetDefaultObjImpl<Utask_Concurrency_task_Await>();
	}
};
static_assert(alignof(Utask_Concurrency_task_Await) == 0x000008, "Wrong alignment on Utask_Concurrency_task_Await");
static_assert(sizeof(Utask_Concurrency_task_Await) == 0x000168, "Wrong size on Utask_Concurrency_task_Await");
static_assert(offsetof(Utask_Concurrency_task_Await, _Self) == 0x000148, "Member 'Utask_Concurrency_task_Await::_Self' has a wrong offset!");
static_assert(offsetof(Utask_Concurrency_task_Await, __verse_0xB2CDDD72_Argument) == 0x000150, "Member 'Utask_Concurrency_task_Await::__verse_0xB2CDDD72_Argument' has a wrong offset!");
static_assert(offsetof(Utask_Concurrency_task_Await, _RetVal) == 0x000158, "Member 'Utask_Concurrency_task_Await::_RetVal' has a wrong offset!");

// VerseClass VerseNative.Concurrency_mind
// 0x0030 (0x0058 - 0x0028)
class UConcurrency_mind final : public UObject
{
public:
	FVerseFunctionProperty_                       __verse_0x54B91EA0__L_2fVerse_2eorg_2fConcurrency_2fmind_N_RGetNumActive; // 0x0028(0x0010)(InstancedReference, HasGetValueTypeHash)
	FVerseFunctionProperty_                       __verse_0xE74E38D8__L_2fVerse_2eorg_2fConcurrency_2fmind_N_RCancelAll; // 0x0038(0x0010)(InstancedReference, HasGetValueTypeHash)
	uint8                                         Pad_48[0x10];                                      // 0x0048(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void _Block();
	void _InitCDO();
	void _InitInstance();
	void _L_2fVerse_2eorg_2fConcurrency_2fmind_N_RCancelAll(const struct VerseNative_0::Ftuple_L_R& __verse_0xB2CDDD72_Argument);
	int64 _L_2fVerse_2eorg_2fConcurrency_2fmind_N_RGetNumActive(const struct VerseNative_0::Ftuple_L_R& __verse_0xB2CDDD72_Argument);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Concurrency_mind">();
	}
	static class UConcurrency_mind* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConcurrency_mind>();
	}
};
static_assert(alignof(UConcurrency_mind) == 0x000008, "Wrong alignment on UConcurrency_mind");
static_assert(sizeof(UConcurrency_mind) == 0x000058, "Wrong size on UConcurrency_mind");
static_assert(offsetof(UConcurrency_mind, __verse_0x54B91EA0__L_2fVerse_2eorg_2fConcurrency_2fmind_N_RGetNumActive) == 0x000028, "Member 'UConcurrency_mind::__verse_0x54B91EA0__L_2fVerse_2eorg_2fConcurrency_2fmind_N_RGetNumActive' has a wrong offset!");
static_assert(offsetof(UConcurrency_mind, __verse_0xE74E38D8__L_2fVerse_2eorg_2fConcurrency_2fmind_N_RCancelAll) == 0x000038, "Member 'UConcurrency_mind::__verse_0xE74E38D8__L_2fVerse_2eorg_2fConcurrency_2fmind_N_RCancelAll' has a wrong offset!");

// VerseClass VerseNative.Native
// 0x0000 (0x0028 - 0x0028)
class UNative final : public UObject
{
public:
	void _InitCDO();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Native">();
	}
	static class UNative* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNative>();
	}
};
static_assert(alignof(UNative) == 0x000008, "Wrong alignment on UNative");
static_assert(sizeof(UNative) == 0x000028, "Wrong size on UNative");

}

