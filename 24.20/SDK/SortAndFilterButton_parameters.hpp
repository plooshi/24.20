#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SortAndFilterButton

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function SortAndFilterButton.SortAndFilterButton_C.ExecuteUbergraph_SortAndFilterButton
// 0x01D0 (0x01D0 - 0x0000)
struct SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0028(0x0040)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0068(0x0098)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0100(0x0098)(ConstParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_1;       // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_2;       // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bBladeOpen;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_3;       // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanXOR_ReturnValue;                   // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BA[0x6];                                      // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_4;       // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton) == 0x000008, "Wrong alignment on SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton");
static_assert(sizeof(SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton) == 0x0001D0, "Wrong size on SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton");
static_assert(offsetof(SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton, EntryPoint) == 0x000000, "Member 'SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton, CallFunc_PlayAnimationForward_ReturnValue) == 0x000008, "Member 'SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton, Temp_bool_Variable) == 0x000010, "Member 'SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton, K2Node_Event_IsDesignTime) == 0x000011, "Member 'SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000018, "Member 'SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000020, "Member 'SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton, K2Node_Event_MyGeometry) == 0x000028, "Member 'SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton, K2Node_Event_MouseEvent_1) == 0x000068, "Member 'SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton, K2Node_Event_MouseEvent) == 0x000100, "Member 'SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton, CallFunc_PlayAnimationReverse_ReturnValue_1) == 0x000198, "Member 'SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton::CallFunc_PlayAnimationReverse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton, CallFunc_PlayAnimationForward_ReturnValue_2) == 0x0001A0, "Member 'SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton::CallFunc_PlayAnimationForward_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton, K2Node_CustomEvent_bBladeOpen) == 0x0001A8, "Member 'SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton::K2Node_CustomEvent_bBladeOpen' has a wrong offset!");
static_assert(offsetof(SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton, CallFunc_PlayAnimationForward_ReturnValue_3) == 0x0001B0, "Member 'SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton::CallFunc_PlayAnimationForward_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton, CallFunc_BooleanXOR_ReturnValue) == 0x0001B8, "Member 'SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton::CallFunc_BooleanXOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton, CallFunc_BooleanAND_ReturnValue) == 0x0001B9, "Member 'SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton, K2Node_Select_Default) == 0x0001C0, "Member 'SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton, CallFunc_PlayAnimationForward_ReturnValue_4) == 0x0001C8, "Member 'SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton::CallFunc_PlayAnimationForward_ReturnValue_4' has a wrong offset!");

// Function SortAndFilterButton.SortAndFilterButton_C.HandleBladeOpenChanged
// 0x0001 (0x0001 - 0x0000)
struct SortAndFilterButton_C_HandleBladeOpenChanged final
{
public:
	bool                                          bBladeOpen;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SortAndFilterButton_C_HandleBladeOpenChanged) == 0x000001, "Wrong alignment on SortAndFilterButton_C_HandleBladeOpenChanged");
static_assert(sizeof(SortAndFilterButton_C_HandleBladeOpenChanged) == 0x000001, "Wrong size on SortAndFilterButton_C_HandleBladeOpenChanged");
static_assert(offsetof(SortAndFilterButton_C_HandleBladeOpenChanged, bBladeOpen) == 0x000000, "Member 'SortAndFilterButton_C_HandleBladeOpenChanged::bBladeOpen' has a wrong offset!");

// Function SortAndFilterButton.SortAndFilterButton_C.OnMouseEnter
// 0x00D8 (0x00D8 - 0x0000)
struct SortAndFilterButton_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0040(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(SortAndFilterButton_C_OnMouseEnter) == 0x000008, "Wrong alignment on SortAndFilterButton_C_OnMouseEnter");
static_assert(sizeof(SortAndFilterButton_C_OnMouseEnter) == 0x0000D8, "Wrong size on SortAndFilterButton_C_OnMouseEnter");
static_assert(offsetof(SortAndFilterButton_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'SortAndFilterButton_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(SortAndFilterButton_C_OnMouseEnter, MouseEvent) == 0x000040, "Member 'SortAndFilterButton_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function SortAndFilterButton.SortAndFilterButton_C.OnMouseLeave
// 0x0098 (0x0098 - 0x0000)
struct SortAndFilterButton_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(SortAndFilterButton_C_OnMouseLeave) == 0x000008, "Wrong alignment on SortAndFilterButton_C_OnMouseLeave");
static_assert(sizeof(SortAndFilterButton_C_OnMouseLeave) == 0x000098, "Wrong size on SortAndFilterButton_C_OnMouseLeave");
static_assert(offsetof(SortAndFilterButton_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'SortAndFilterButton_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function SortAndFilterButton.SortAndFilterButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct SortAndFilterButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SortAndFilterButton_C_PreConstruct) == 0x000001, "Wrong alignment on SortAndFilterButton_C_PreConstruct");
static_assert(sizeof(SortAndFilterButton_C_PreConstruct) == 0x000001, "Wrong size on SortAndFilterButton_C_PreConstruct");
static_assert(offsetof(SortAndFilterButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'SortAndFilterButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function SortAndFilterButton.SortAndFilterButton_C.SetHighlightBorderVisibility
// 0x0005 (0x0005 - 0x0000)
struct SortAndFilterButton_C_SetHighlightBorderVisibility final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SortAndFilterButton_C_SetHighlightBorderVisibility) == 0x000001, "Wrong alignment on SortAndFilterButton_C_SetHighlightBorderVisibility");
static_assert(sizeof(SortAndFilterButton_C_SetHighlightBorderVisibility) == 0x000005, "Wrong size on SortAndFilterButton_C_SetHighlightBorderVisibility");
static_assert(offsetof(SortAndFilterButton_C_SetHighlightBorderVisibility, bVisible) == 0x000000, "Member 'SortAndFilterButton_C_SetHighlightBorderVisibility::bVisible' has a wrong offset!");
static_assert(offsetof(SortAndFilterButton_C_SetHighlightBorderVisibility, Temp_bool_Variable) == 0x000001, "Member 'SortAndFilterButton_C_SetHighlightBorderVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SortAndFilterButton_C_SetHighlightBorderVisibility, Temp_byte_Variable) == 0x000002, "Member 'SortAndFilterButton_C_SetHighlightBorderVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SortAndFilterButton_C_SetHighlightBorderVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'SortAndFilterButton_C_SetHighlightBorderVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(SortAndFilterButton_C_SetHighlightBorderVisibility, K2Node_Select_Default) == 0x000004, "Member 'SortAndFilterButton_C_SetHighlightBorderVisibility::K2Node_Select_Default' has a wrong offset!");

// Function SortAndFilterButton.SortAndFilterButton_C.SetText
// 0x0018 (0x0018 - 0x0000)
struct SortAndFilterButton_C_SetText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(SortAndFilterButton_C_SetText) == 0x000008, "Wrong alignment on SortAndFilterButton_C_SetText");
static_assert(sizeof(SortAndFilterButton_C_SetText) == 0x000018, "Wrong size on SortAndFilterButton_C_SetText");
static_assert(offsetof(SortAndFilterButton_C_SetText, Text) == 0x000000, "Member 'SortAndFilterButton_C_SetText::Text' has a wrong offset!");

// Function SortAndFilterButton.SortAndFilterButton_C.SnapToEndOfAnimation
// 0x0018 (0x0018 - 0x0000)
struct SortAndFilterButton_C_SnapToEndOfAnimation final
{
public:
	class UWidgetAnimation*                       Animation;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          PlayMode;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SortAndFilterButton_C_SnapToEndOfAnimation) == 0x000008, "Wrong alignment on SortAndFilterButton_C_SnapToEndOfAnimation");
static_assert(sizeof(SortAndFilterButton_C_SnapToEndOfAnimation) == 0x000018, "Wrong size on SortAndFilterButton_C_SnapToEndOfAnimation");
static_assert(offsetof(SortAndFilterButton_C_SnapToEndOfAnimation, Animation) == 0x000000, "Member 'SortAndFilterButton_C_SnapToEndOfAnimation::Animation' has a wrong offset!");
static_assert(offsetof(SortAndFilterButton_C_SnapToEndOfAnimation, PlayMode) == 0x000008, "Member 'SortAndFilterButton_C_SnapToEndOfAnimation::PlayMode' has a wrong offset!");
static_assert(offsetof(SortAndFilterButton_C_SnapToEndOfAnimation, CallFunc_GetEndTime_ReturnValue) == 0x00000C, "Member 'SortAndFilterButton_C_SnapToEndOfAnimation::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(SortAndFilterButton_C_SnapToEndOfAnimation, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'SortAndFilterButton_C_SnapToEndOfAnimation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

}

