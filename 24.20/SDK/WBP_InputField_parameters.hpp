#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InputField

#include "Basic.hpp"

#include "E_UI_InputField_State_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_UI_InputField_ContentSize_structs.hpp"
#include "CommonInput_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK::Params
{

// Function WBP_InputField.WBP_InputField_C.SetTextValue
// 0x0018 (0x0018 - 0x0000)
struct WBP_InputField_C_SetTextValue final
{
public:
	class FText                                   TextValue;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_InputField_C_SetTextValue) == 0x000008, "Wrong alignment on WBP_InputField_C_SetTextValue");
static_assert(sizeof(WBP_InputField_C_SetTextValue) == 0x000018, "Wrong size on WBP_InputField_C_SetTextValue");
static_assert(offsetof(WBP_InputField_C_SetTextValue, TextValue) == 0x000000, "Member 'WBP_InputField_C_SetTextValue::TextValue' has a wrong offset!");

// Function WBP_InputField.WBP_InputField_C.SetProcessingVisibility
// 0x0005 (0x0005 - 0x0000)
struct WBP_InputField_C_SetProcessingVisibility final
{
public:
	bool                                          IsVisible_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InputField_C_SetProcessingVisibility) == 0x000001, "Wrong alignment on WBP_InputField_C_SetProcessingVisibility");
static_assert(sizeof(WBP_InputField_C_SetProcessingVisibility) == 0x000005, "Wrong size on WBP_InputField_C_SetProcessingVisibility");
static_assert(offsetof(WBP_InputField_C_SetProcessingVisibility, IsVisible_0) == 0x000000, "Member 'WBP_InputField_C_SetProcessingVisibility::IsVisible_0' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetProcessingVisibility, Temp_bool_Variable) == 0x000001, "Member 'WBP_InputField_C_SetProcessingVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetProcessingVisibility, Temp_byte_Variable) == 0x000002, "Member 'WBP_InputField_C_SetProcessingVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetProcessingVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_InputField_C_SetProcessingVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetProcessingVisibility, K2Node_Select_Default) == 0x000004, "Member 'WBP_InputField_C_SetProcessingVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_InputField.WBP_InputField_C.SetLabelValue
// 0x0018 (0x0018 - 0x0000)
struct WBP_InputField_C_SetLabelValue final
{
public:
	class FText                                   LabelValue;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_InputField_C_SetLabelValue) == 0x000008, "Wrong alignment on WBP_InputField_C_SetLabelValue");
static_assert(sizeof(WBP_InputField_C_SetLabelValue) == 0x000018, "Wrong size on WBP_InputField_C_SetLabelValue");
static_assert(offsetof(WBP_InputField_C_SetLabelValue, LabelValue) == 0x000000, "Member 'WBP_InputField_C_SetLabelValue::LabelValue' has a wrong offset!");

// Function WBP_InputField.WBP_InputField_C.SetEditableText
// 0x0018 (0x0018 - 0x0000)
struct WBP_InputField_C_SetEditableText final
{
public:
	class FText                                   EditableText;                                      // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_InputField_C_SetEditableText) == 0x000008, "Wrong alignment on WBP_InputField_C_SetEditableText");
static_assert(sizeof(WBP_InputField_C_SetEditableText) == 0x000018, "Wrong size on WBP_InputField_C_SetEditableText");
static_assert(offsetof(WBP_InputField_C_SetEditableText, EditableText) == 0x000000, "Member 'WBP_InputField_C_SetEditableText::EditableText' has a wrong offset!");

// Function WBP_InputField.WBP_InputField_C.SetLabelDisplay
// 0x0004 (0x0004 - 0x0000)
struct WBP_InputField_C_SetLabelDisplay final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InputField_C_SetLabelDisplay) == 0x000001, "Wrong alignment on WBP_InputField_C_SetLabelDisplay");
static_assert(sizeof(WBP_InputField_C_SetLabelDisplay) == 0x000004, "Wrong size on WBP_InputField_C_SetLabelDisplay");
static_assert(offsetof(WBP_InputField_C_SetLabelDisplay, Temp_bool_Variable) == 0x000000, "Member 'WBP_InputField_C_SetLabelDisplay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetLabelDisplay, Temp_byte_Variable) == 0x000001, "Member 'WBP_InputField_C_SetLabelDisplay::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetLabelDisplay, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_InputField_C_SetLabelDisplay::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetLabelDisplay, K2Node_Select_Default) == 0x000003, "Member 'WBP_InputField_C_SetLabelDisplay::K2Node_Select_Default' has a wrong offset!");

// Function WBP_InputField.WBP_InputField_C.SetContentSize
// 0x0108 (0x0108 - 0x0000)
struct WBP_InputField_C_SetContentSize final
{
public:
	E_UI_InputField_ContentSize                   Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_InputField_ContentSize                   Temp_byte_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_2;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	E_UI_InputField_ContentSize                   Temp_byte_Variable_2;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select_Default_1;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_2;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         CallFunc_GetFont_ReturnValue;                      // 0x0058(0x0058)(ConstParm, HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x00B0(0x0058)(HasGetValueTypeHash)
};
static_assert(alignof(WBP_InputField_C_SetContentSize) == 0x000008, "Wrong alignment on WBP_InputField_C_SetContentSize");
static_assert(sizeof(WBP_InputField_C_SetContentSize) == 0x000108, "Wrong size on WBP_InputField_C_SetContentSize");
static_assert(offsetof(WBP_InputField_C_SetContentSize, Temp_byte_Variable) == 0x000000, "Member 'WBP_InputField_C_SetContentSize::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetContentSize, Temp_name_Variable) == 0x000004, "Member 'WBP_InputField_C_SetContentSize::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetContentSize, Temp_name_Variable_1) == 0x000008, "Member 'WBP_InputField_C_SetContentSize::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetContentSize, Temp_name_Variable_2) == 0x00000C, "Member 'WBP_InputField_C_SetContentSize::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetContentSize, Temp_byte_Variable_1) == 0x000010, "Member 'WBP_InputField_C_SetContentSize::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetContentSize, Temp_object_Variable) == 0x000018, "Member 'WBP_InputField_C_SetContentSize::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetContentSize, Temp_object_Variable_1) == 0x000020, "Member 'WBP_InputField_C_SetContentSize::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetContentSize, Temp_object_Variable_2) == 0x000028, "Member 'WBP_InputField_C_SetContentSize::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetContentSize, Temp_byte_Variable_2) == 0x000030, "Member 'WBP_InputField_C_SetContentSize::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetContentSize, Temp_int_Variable) == 0x000034, "Member 'WBP_InputField_C_SetContentSize::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetContentSize, Temp_int_Variable_1) == 0x000038, "Member 'WBP_InputField_C_SetContentSize::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetContentSize, Temp_int_Variable_2) == 0x00003C, "Member 'WBP_InputField_C_SetContentSize::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetContentSize, K2Node_Select_Default) == 0x000040, "Member 'WBP_InputField_C_SetContentSize::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetContentSize, K2Node_Select_Default_1) == 0x000048, "Member 'WBP_InputField_C_SetContentSize::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetContentSize, K2Node_Select_Default_2) == 0x000050, "Member 'WBP_InputField_C_SetContentSize::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetContentSize, CallFunc_GetFont_ReturnValue) == 0x000058, "Member 'WBP_InputField_C_SetContentSize::CallFunc_GetFont_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetContentSize, K2Node_MakeStruct_SlateFontInfo) == 0x0000B0, "Member 'WBP_InputField_C_SetContentSize::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");

// Function WBP_InputField.WBP_InputField_C.SetInputFieldState
// 0x0034 (0x0034 - 0x0000)
struct WBP_InputField_C_SetInputFieldState final
{
public:
	E_UI_InputField_State                         State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_InputField_State                         Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_InputField_State                         Temp_byte_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_InputField_State                         Temp_byte_Variable_5;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InputField_C_SetInputFieldState) == 0x000004, "Wrong alignment on WBP_InputField_C_SetInputFieldState");
static_assert(sizeof(WBP_InputField_C_SetInputFieldState) == 0x000034, "Wrong size on WBP_InputField_C_SetInputFieldState");
static_assert(offsetof(WBP_InputField_C_SetInputFieldState, State) == 0x000000, "Member 'WBP_InputField_C_SetInputFieldState::State' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetInputFieldState, Temp_byte_Variable) == 0x000001, "Member 'WBP_InputField_C_SetInputFieldState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetInputFieldState, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_InputField_C_SetInputFieldState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetInputFieldState, Temp_byte_Variable_2) == 0x000003, "Member 'WBP_InputField_C_SetInputFieldState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetInputFieldState, Temp_byte_Variable_3) == 0x000004, "Member 'WBP_InputField_C_SetInputFieldState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetInputFieldState, Temp_byte_Variable_4) == 0x000005, "Member 'WBP_InputField_C_SetInputFieldState::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetInputFieldState, Temp_struct_Variable) == 0x000008, "Member 'WBP_InputField_C_SetInputFieldState::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetInputFieldState, Temp_byte_Variable_5) == 0x000018, "Member 'WBP_InputField_C_SetInputFieldState::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetInputFieldState, Temp_byte_Variable_6) == 0x000019, "Member 'WBP_InputField_C_SetInputFieldState::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetInputFieldState, Temp_byte_Variable_7) == 0x00001A, "Member 'WBP_InputField_C_SetInputFieldState::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetInputFieldState, Temp_byte_Variable_8) == 0x00001B, "Member 'WBP_InputField_C_SetInputFieldState::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetInputFieldState, K2Node_Select_Default) == 0x00001C, "Member 'WBP_InputField_C_SetInputFieldState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetInputFieldState, K2Node_Select_Default_1) == 0x000020, "Member 'WBP_InputField_C_SetInputFieldState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetInputFieldState, K2Node_Select_Default_2) == 0x000030, "Member 'WBP_InputField_C_SetInputFieldState::K2Node_Select_Default_2' has a wrong offset!");

// Function WBP_InputField.WBP_InputField_C.SetContentAlignment
// 0x0004 (0x0004 - 0x0000)
struct WBP_InputField_C_SetContentAlignment final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  K2Node_Select_Default;                             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InputField_C_SetContentAlignment) == 0x000001, "Wrong alignment on WBP_InputField_C_SetContentAlignment");
static_assert(sizeof(WBP_InputField_C_SetContentAlignment) == 0x000004, "Wrong size on WBP_InputField_C_SetContentAlignment");
static_assert(offsetof(WBP_InputField_C_SetContentAlignment, Temp_bool_Variable) == 0x000000, "Member 'WBP_InputField_C_SetContentAlignment::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetContentAlignment, Temp_byte_Variable) == 0x000001, "Member 'WBP_InputField_C_SetContentAlignment::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetContentAlignment, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_InputField_C_SetContentAlignment::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetContentAlignment, K2Node_Select_Default) == 0x000003, "Member 'WBP_InputField_C_SetContentAlignment::K2Node_Select_Default' has a wrong offset!");

// Function WBP_InputField.WBP_InputField_C.SetHintText
// 0x0018 (0x0018 - 0x0000)
struct WBP_InputField_C_SetHintText final
{
public:
	class FText                                   HintText;                                          // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_InputField_C_SetHintText) == 0x000008, "Wrong alignment on WBP_InputField_C_SetHintText");
static_assert(sizeof(WBP_InputField_C_SetHintText) == 0x000018, "Wrong size on WBP_InputField_C_SetHintText");
static_assert(offsetof(WBP_InputField_C_SetHintText, HintText) == 0x000000, "Member 'WBP_InputField_C_SetHintText::HintText' has a wrong offset!");

// Function WBP_InputField.WBP_InputField_C.SetActionVisibility
// 0x0018 (0x0018 - 0x0000)
struct WBP_InputField_C_SetActionVisibility final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InputField_C_SetActionVisibility) == 0x000008, "Wrong alignment on WBP_InputField_C_SetActionVisibility");
static_assert(sizeof(WBP_InputField_C_SetActionVisibility) == 0x000018, "Wrong size on WBP_InputField_C_SetActionVisibility");
static_assert(offsetof(WBP_InputField_C_SetActionVisibility, Temp_bool_Variable) == 0x000000, "Member 'WBP_InputField_C_SetActionVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetActionVisibility, Temp_byte_Variable) == 0x000001, "Member 'WBP_InputField_C_SetActionVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetActionVisibility, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_InputField_C_SetActionVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetActionVisibility, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000008, "Member 'WBP_InputField_C_SetActionVisibility::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetActionVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'WBP_InputField_C_SetActionVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetActionVisibility, CallFunc_GetCurrentInputType_ReturnValue) == 0x000011, "Member 'WBP_InputField_C_SetActionVisibility::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetActionVisibility, CallFunc_BooleanOR_ReturnValue) == 0x000012, "Member 'WBP_InputField_C_SetActionVisibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetActionVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000013, "Member 'WBP_InputField_C_SetActionVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetActionVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000014, "Member 'WBP_InputField_C_SetActionVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_SetActionVisibility, K2Node_Select_Default) == 0x000015, "Member 'WBP_InputField_C_SetActionVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_InputField.WBP_InputField_C.SetErrorText
// 0x0018 (0x0018 - 0x0000)
struct WBP_InputField_C_SetErrorText final
{
public:
	class FText                                   ErrorText_0;                                       // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_InputField_C_SetErrorText) == 0x000008, "Wrong alignment on WBP_InputField_C_SetErrorText");
static_assert(sizeof(WBP_InputField_C_SetErrorText) == 0x000018, "Wrong size on WBP_InputField_C_SetErrorText");
static_assert(offsetof(WBP_InputField_C_SetErrorText, ErrorText_0) == 0x000000, "Member 'WBP_InputField_C_SetErrorText::ErrorText_0' has a wrong offset!");

// Function WBP_InputField.WBP_InputField_C.Set Focus Visual
// 0x0360 (0x0360 - 0x0000)
struct WBP_InputField_C_Set_Focus_Visual final
{
public:
	bool                                          IsFocused;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0014(0x0014)()
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEditableTextStyle                     K2Node_MakeStruct_EditableTextStyle;               // 0x0030(0x02C0)()
	struct FSlateFontInfo                         CallFunc_GetFont_ReturnValue;                      // 0x02F0(0x0058)(ConstParm, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0348(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InputField_C_Set_Focus_Visual) == 0x000010, "Wrong alignment on WBP_InputField_C_Set_Focus_Visual");
static_assert(sizeof(WBP_InputField_C_Set_Focus_Visual) == 0x000360, "Wrong size on WBP_InputField_C_Set_Focus_Visual");
static_assert(offsetof(WBP_InputField_C_Set_Focus_Visual, IsFocused) == 0x000000, "Member 'WBP_InputField_C_Set_Focus_Visual::IsFocused' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_Set_Focus_Visual, CallFunc_SelectColor_ReturnValue) == 0x000004, "Member 'WBP_InputField_C_Set_Focus_Visual::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_Set_Focus_Visual, K2Node_MakeStruct_SlateColor) == 0x000014, "Member 'WBP_InputField_C_Set_Focus_Visual::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_Set_Focus_Visual, K2Node_MakeStruct_EditableTextStyle) == 0x000030, "Member 'WBP_InputField_C_Set_Focus_Visual::K2Node_MakeStruct_EditableTextStyle' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_Set_Focus_Visual, CallFunc_GetFont_ReturnValue) == 0x0002F0, "Member 'WBP_InputField_C_Set_Focus_Visual::CallFunc_GetFont_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_Set_Focus_Visual, CallFunc_SelectColor_ReturnValue_1) == 0x000348, "Member 'WBP_InputField_C_Set_Focus_Visual::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");

// Function WBP_InputField.WBP_InputField_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct WBP_InputField_C_OnRemovedFromFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_InputField_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on WBP_InputField_C_OnRemovedFromFocusPath");
static_assert(sizeof(WBP_InputField_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on WBP_InputField_C_OnRemovedFromFocusPath");
static_assert(offsetof(WBP_InputField_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'WBP_InputField_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function WBP_InputField.WBP_InputField_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_InputField_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InputField_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_InputField_C_PreConstruct");
static_assert(sizeof(WBP_InputField_C_PreConstruct) == 0x000001, "Wrong size on WBP_InputField_C_PreConstruct");
static_assert(offsetof(WBP_InputField_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_InputField_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_InputField.WBP_InputField_C.OnMouseLeave
// 0x0098 (0x0098 - 0x0000)
struct WBP_InputField_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_InputField_C_OnMouseLeave) == 0x000008, "Wrong alignment on WBP_InputField_C_OnMouseLeave");
static_assert(sizeof(WBP_InputField_C_OnMouseLeave) == 0x000098, "Wrong size on WBP_InputField_C_OnMouseLeave");
static_assert(offsetof(WBP_InputField_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'WBP_InputField_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function WBP_InputField.WBP_InputField_C.OnTouchStarted
// 0x0248 (0x0248 - 0x0000)
struct WBP_InputField_C_OnTouchStarted final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          InTouchEvent;                                      // 0x0040(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00D8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            K2Node_MakeStruct_EventReply;                      // 0x0190(0x00B8)()
};
static_assert(alignof(WBP_InputField_C_OnTouchStarted) == 0x000008, "Wrong alignment on WBP_InputField_C_OnTouchStarted");
static_assert(sizeof(WBP_InputField_C_OnTouchStarted) == 0x000248, "Wrong size on WBP_InputField_C_OnTouchStarted");
static_assert(offsetof(WBP_InputField_C_OnTouchStarted, MyGeometry) == 0x000000, "Member 'WBP_InputField_C_OnTouchStarted::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_OnTouchStarted, InTouchEvent) == 0x000040, "Member 'WBP_InputField_C_OnTouchStarted::InTouchEvent' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_OnTouchStarted, ReturnValue) == 0x0000D8, "Member 'WBP_InputField_C_OnTouchStarted::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_OnTouchStarted, K2Node_MakeStruct_EventReply) == 0x000190, "Member 'WBP_InputField_C_OnTouchStarted::K2Node_MakeStruct_EventReply' has a wrong offset!");

// Function WBP_InputField.WBP_InputField_C.OnMouseEnter
// 0x00D8 (0x00D8 - 0x0000)
struct WBP_InputField_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0040(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_InputField_C_OnMouseEnter) == 0x000008, "Wrong alignment on WBP_InputField_C_OnMouseEnter");
static_assert(sizeof(WBP_InputField_C_OnMouseEnter) == 0x0000D8, "Wrong size on WBP_InputField_C_OnMouseEnter");
static_assert(offsetof(WBP_InputField_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'WBP_InputField_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_OnMouseEnter, MouseEvent) == 0x000040, "Member 'WBP_InputField_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function WBP_InputField.WBP_InputField_C.OnFocusReceived
// 0x01B8 (0x01B8 - 0x0000)
struct WBP_InputField_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0048(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            K2Node_MakeStruct_EventReply;                      // 0x0100(0x00B8)()
};
static_assert(alignof(WBP_InputField_C_OnFocusReceived) == 0x000008, "Wrong alignment on WBP_InputField_C_OnFocusReceived");
static_assert(sizeof(WBP_InputField_C_OnFocusReceived) == 0x0001B8, "Wrong size on WBP_InputField_C_OnFocusReceived");
static_assert(offsetof(WBP_InputField_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'WBP_InputField_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_OnFocusReceived, InFocusEvent) == 0x000040, "Member 'WBP_InputField_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_OnFocusReceived, ReturnValue) == 0x000048, "Member 'WBP_InputField_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_OnFocusReceived, K2Node_MakeStruct_EventReply) == 0x000100, "Member 'WBP_InputField_C_OnFocusReceived::K2Node_MakeStruct_EventReply' has a wrong offset!");

// Function WBP_InputField.WBP_InputField_C.OnMouseButtonUp
// 0x0248 (0x0248 - 0x0000)
struct WBP_InputField_C_OnMouseButtonUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0040(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00D8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            K2Node_MakeStruct_EventReply;                      // 0x0190(0x00B8)()
};
static_assert(alignof(WBP_InputField_C_OnMouseButtonUp) == 0x000008, "Wrong alignment on WBP_InputField_C_OnMouseButtonUp");
static_assert(sizeof(WBP_InputField_C_OnMouseButtonUp) == 0x000248, "Wrong size on WBP_InputField_C_OnMouseButtonUp");
static_assert(offsetof(WBP_InputField_C_OnMouseButtonUp, MyGeometry) == 0x000000, "Member 'WBP_InputField_C_OnMouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_OnMouseButtonUp, MouseEvent) == 0x000040, "Member 'WBP_InputField_C_OnMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_OnMouseButtonUp, ReturnValue) == 0x0000D8, "Member 'WBP_InputField_C_OnMouseButtonUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_OnMouseButtonUp, K2Node_MakeStruct_EventReply) == 0x000190, "Member 'WBP_InputField_C_OnMouseButtonUp::K2Node_MakeStruct_EventReply' has a wrong offset!");

// Function WBP_InputField.WBP_InputField_C.OnInputDeviceChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_InputField_C_OnInputDeviceChanged final
{
public:
	ECommonInputType                              bNewInputType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InputField_C_OnInputDeviceChanged) == 0x000001, "Wrong alignment on WBP_InputField_C_OnInputDeviceChanged");
static_assert(sizeof(WBP_InputField_C_OnInputDeviceChanged) == 0x000001, "Wrong size on WBP_InputField_C_OnInputDeviceChanged");
static_assert(offsetof(WBP_InputField_C_OnInputDeviceChanged, bNewInputType) == 0x000000, "Member 'WBP_InputField_C_OnInputDeviceChanged::bNewInputType' has a wrong offset!");

// Function WBP_InputField.WBP_InputField_C.OnAddedToFocusPath
// 0x0008 (0x0008 - 0x0000)
struct WBP_InputField_C_OnAddedToFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_InputField_C_OnAddedToFocusPath) == 0x000004, "Wrong alignment on WBP_InputField_C_OnAddedToFocusPath");
static_assert(sizeof(WBP_InputField_C_OnAddedToFocusPath) == 0x000008, "Wrong size on WBP_InputField_C_OnAddedToFocusPath");
static_assert(offsetof(WBP_InputField_C_OnAddedToFocusPath, InFocusEvent) == 0x000000, "Member 'WBP_InputField_C_OnAddedToFocusPath::InFocusEvent' has a wrong offset!");

// Function WBP_InputField.WBP_InputField_C.ExecuteUbergraph_WBP_InputField
// 0x0210 (0x0210 - 0x0000)
struct WBP_InputField_C_ExecuteUbergraph_WBP_InputField final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFocusEvent                            K2Node_Event_InFocusEvent_1;                       // 0x0028(0x0008)(NoDestructor)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0030(0x0008)(NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0038(0x0040)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0078(0x0098)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0110(0x0098)(ConstParm)
	class FText                                   K2Node_Event_EditableText;                         // 0x01A8(0x0018)(ConstParm)
	class FText                                   K2Node_Event_ErrorText;                            // 0x01C0(0x0018)(ConstParm)
	class FText                                   K2Node_Event_HintText;                             // 0x01D8(0x0018)(ConstParm)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F3[0x5];                                      // 0x01F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              K2Node_CustomEvent_bNewInputType;                  // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InputField_C_ExecuteUbergraph_WBP_InputField) == 0x000008, "Wrong alignment on WBP_InputField_C_ExecuteUbergraph_WBP_InputField");
static_assert(sizeof(WBP_InputField_C_ExecuteUbergraph_WBP_InputField) == 0x000210, "Wrong size on WBP_InputField_C_ExecuteUbergraph_WBP_InputField");
static_assert(offsetof(WBP_InputField_C_ExecuteUbergraph_WBP_InputField, EntryPoint) == 0x000000, "Member 'WBP_InputField_C_ExecuteUbergraph_WBP_InputField::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_ExecuteUbergraph_WBP_InputField, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_InputField_C_ExecuteUbergraph_WBP_InputField::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_ExecuteUbergraph_WBP_InputField, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'WBP_InputField_C_ExecuteUbergraph_WBP_InputField::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_ExecuteUbergraph_WBP_InputField, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'WBP_InputField_C_ExecuteUbergraph_WBP_InputField::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_ExecuteUbergraph_WBP_InputField, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000020, "Member 'WBP_InputField_C_ExecuteUbergraph_WBP_InputField::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_ExecuteUbergraph_WBP_InputField, K2Node_Event_InFocusEvent_1) == 0x000028, "Member 'WBP_InputField_C_ExecuteUbergraph_WBP_InputField::K2Node_Event_InFocusEvent_1' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_ExecuteUbergraph_WBP_InputField, K2Node_Event_InFocusEvent) == 0x000030, "Member 'WBP_InputField_C_ExecuteUbergraph_WBP_InputField::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_ExecuteUbergraph_WBP_InputField, K2Node_Event_MyGeometry) == 0x000038, "Member 'WBP_InputField_C_ExecuteUbergraph_WBP_InputField::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_ExecuteUbergraph_WBP_InputField, K2Node_Event_MouseEvent_1) == 0x000078, "Member 'WBP_InputField_C_ExecuteUbergraph_WBP_InputField::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_ExecuteUbergraph_WBP_InputField, K2Node_Event_MouseEvent) == 0x000110, "Member 'WBP_InputField_C_ExecuteUbergraph_WBP_InputField::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_ExecuteUbergraph_WBP_InputField, K2Node_Event_EditableText) == 0x0001A8, "Member 'WBP_InputField_C_ExecuteUbergraph_WBP_InputField::K2Node_Event_EditableText' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_ExecuteUbergraph_WBP_InputField, K2Node_Event_ErrorText) == 0x0001C0, "Member 'WBP_InputField_C_ExecuteUbergraph_WBP_InputField::K2Node_Event_ErrorText' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_ExecuteUbergraph_WBP_InputField, K2Node_Event_HintText) == 0x0001D8, "Member 'WBP_InputField_C_ExecuteUbergraph_WBP_InputField::K2Node_Event_HintText' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_ExecuteUbergraph_WBP_InputField, CallFunc_TextIsEmpty_ReturnValue) == 0x0001F0, "Member 'WBP_InputField_C_ExecuteUbergraph_WBP_InputField::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_ExecuteUbergraph_WBP_InputField, CallFunc_BooleanOR_ReturnValue) == 0x0001F1, "Member 'WBP_InputField_C_ExecuteUbergraph_WBP_InputField::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_ExecuteUbergraph_WBP_InputField, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0001F2, "Member 'WBP_InputField_C_ExecuteUbergraph_WBP_InputField::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_ExecuteUbergraph_WBP_InputField, CallFunc_PlayAnimationReverse_ReturnValue) == 0x0001F8, "Member 'WBP_InputField_C_ExecuteUbergraph_WBP_InputField::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_ExecuteUbergraph_WBP_InputField, CallFunc_PlayAnimationForward_ReturnValue) == 0x000200, "Member 'WBP_InputField_C_ExecuteUbergraph_WBP_InputField::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_ExecuteUbergraph_WBP_InputField, K2Node_CustomEvent_bNewInputType) == 0x000208, "Member 'WBP_InputField_C_ExecuteUbergraph_WBP_InputField::K2Node_CustomEvent_bNewInputType' has a wrong offset!");
static_assert(offsetof(WBP_InputField_C_ExecuteUbergraph_WBP_InputField, K2Node_Event_IsDesignTime) == 0x000209, "Member 'WBP_InputField_C_ExecuteUbergraph_WBP_InputField::K2Node_Event_IsDesignTime' has a wrong offset!");

}

