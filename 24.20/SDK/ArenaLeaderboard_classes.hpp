#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ArenaLeaderboard

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ArenaLeaderboard.ArenaLeaderboard_C
// 0x0050 (0x04E8 - 0x0498)
class UArenaLeaderboard_C final : public UFortPersistentLeaderboardScreen
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0498(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBackgroundBlur*                        BackgroundBlur_PosterLayer_1;                      // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          Content_NoLeaderboardEntries;                      // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEventLeaderboardEntryDetails_C*        Details_EntryDisplay;                              // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_BG;                                          // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_PosterFade_2;                                // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              SafeZone_0;                                        // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              SafeZone_Close;                                    // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_EventName;                                    // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_NoLeaderboardEntries;                         // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void BP_OnDeactivated();
	void Construct();
	void ExecuteUbergraph_ArenaLeaderboard(int32 EntryPoint);
	void Initialize_Children_For_Event(const class FString& Event_Id, const class FString& Event_Window_Id);
	void Item_Double_Clicked(class UObject* Item);
	void OnColorize(const struct FFortTournamentDisplayInfo& ColorInfo);
	void OnInitialized();
	void OnLeaderboardEntrySelected(const class UFortEventLeaderboardEntryData* EntryData);
	void OnLeaderboardTabsLoaded(bool bNoLeaderboardTabs);
	void SetupForEvent(const class FString& EventId, const class FString& EventWindowId);
	void ShowMyStats(class UCommonButtonLegacy* Button);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ArenaLeaderboard_C">();
	}
	static class UArenaLeaderboard_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UArenaLeaderboard_C>();
	}
};
static_assert(alignof(UArenaLeaderboard_C) == 0x000008, "Wrong alignment on UArenaLeaderboard_C");
static_assert(sizeof(UArenaLeaderboard_C) == 0x0004E8, "Wrong size on UArenaLeaderboard_C");
static_assert(offsetof(UArenaLeaderboard_C, UberGraphFrame) == 0x000498, "Member 'UArenaLeaderboard_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UArenaLeaderboard_C, BackgroundBlur_PosterLayer_1) == 0x0004A0, "Member 'UArenaLeaderboard_C::BackgroundBlur_PosterLayer_1' has a wrong offset!");
static_assert(offsetof(UArenaLeaderboard_C, Content_NoLeaderboardEntries) == 0x0004A8, "Member 'UArenaLeaderboard_C::Content_NoLeaderboardEntries' has a wrong offset!");
static_assert(offsetof(UArenaLeaderboard_C, Details_EntryDisplay) == 0x0004B0, "Member 'UArenaLeaderboard_C::Details_EntryDisplay' has a wrong offset!");
static_assert(offsetof(UArenaLeaderboard_C, Image_BG) == 0x0004B8, "Member 'UArenaLeaderboard_C::Image_BG' has a wrong offset!");
static_assert(offsetof(UArenaLeaderboard_C, Image_PosterFade_2) == 0x0004C0, "Member 'UArenaLeaderboard_C::Image_PosterFade_2' has a wrong offset!");
static_assert(offsetof(UArenaLeaderboard_C, SafeZone_0) == 0x0004C8, "Member 'UArenaLeaderboard_C::SafeZone_0' has a wrong offset!");
static_assert(offsetof(UArenaLeaderboard_C, SafeZone_Close) == 0x0004D0, "Member 'UArenaLeaderboard_C::SafeZone_Close' has a wrong offset!");
static_assert(offsetof(UArenaLeaderboard_C, Text_EventName) == 0x0004D8, "Member 'UArenaLeaderboard_C::Text_EventName' has a wrong offset!");
static_assert(offsetof(UArenaLeaderboard_C, Text_NoLeaderboardEntries) == 0x0004E0, "Member 'UArenaLeaderboard_C::Text_NoLeaderboardEntries' has a wrong offset!");

}

