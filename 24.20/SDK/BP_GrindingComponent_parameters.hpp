#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GrindingComponent

#include "Basic.hpp"

#include "GrindRailRuntime_structs.hpp"
#include "GrindRail_Connection_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function BP_GrindingComponent.BP_GrindingComponent_C.AddMoveIgnoreActors
// 0x01C8 (0x01C8 - 0x0000)
struct BP_GrindingComponent_C_AddMoveIgnoreActors final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGrindRail_Connection                  CallFunc_Array_Get_Item;                           // 0x0010(0x0148)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABGA_GrindRail_C*                       K2Node_DynamicCast_AsBGA_Grind_Rail;               // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABGA_GrindRail_C*                       K2Node_DynamicCast_AsBGA_Grind_Rail_1;             // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_2;            // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0196(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0197(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2; // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABGA_GrindRail_C*                       K2Node_DynamicCast_AsBGA_Grind_Rail_2;             // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_3;            // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GrindingComponent_C_AddMoveIgnoreActors) == 0x000008, "Wrong alignment on BP_GrindingComponent_C_AddMoveIgnoreActors");
static_assert(sizeof(BP_GrindingComponent_C_AddMoveIgnoreActors) == 0x0001C8, "Wrong size on BP_GrindingComponent_C_AddMoveIgnoreActors");
static_assert(offsetof(BP_GrindingComponent_C_AddMoveIgnoreActors, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_GrindingComponent_C_AddMoveIgnoreActors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AddMoveIgnoreActors, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_GrindingComponent_C_AddMoveIgnoreActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AddMoveIgnoreActors, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_GrindingComponent_C_AddMoveIgnoreActors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AddMoveIgnoreActors, CallFunc_Array_AddUnique_ReturnValue) == 0x00000C, "Member 'BP_GrindingComponent_C_AddMoveIgnoreActors::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AddMoveIgnoreActors, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_GrindingComponent_C_AddMoveIgnoreActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AddMoveIgnoreActors, CallFunc_Greater_IntInt_ReturnValue) == 0x000158, "Member 'BP_GrindingComponent_C_AddMoveIgnoreActors::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AddMoveIgnoreActors, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000160, "Member 'BP_GrindingComponent_C_AddMoveIgnoreActors::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AddMoveIgnoreActors, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000168, "Member 'BP_GrindingComponent_C_AddMoveIgnoreActors::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AddMoveIgnoreActors, K2Node_DynamicCast_AsBGA_Grind_Rail) == 0x000170, "Member 'BP_GrindingComponent_C_AddMoveIgnoreActors::K2Node_DynamicCast_AsBGA_Grind_Rail' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AddMoveIgnoreActors, K2Node_DynamicCast_bSuccess) == 0x000178, "Member 'BP_GrindingComponent_C_AddMoveIgnoreActors::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AddMoveIgnoreActors, K2Node_DynamicCast_AsBGA_Grind_Rail_1) == 0x000180, "Member 'BP_GrindingComponent_C_AddMoveIgnoreActors::K2Node_DynamicCast_AsBGA_Grind_Rail_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AddMoveIgnoreActors, K2Node_DynamicCast_bSuccess_1) == 0x000188, "Member 'BP_GrindingComponent_C_AddMoveIgnoreActors::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AddMoveIgnoreActors, CallFunc_Array_AddUnique_ReturnValue_1) == 0x00018C, "Member 'BP_GrindingComponent_C_AddMoveIgnoreActors::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AddMoveIgnoreActors, CallFunc_Array_AddUnique_ReturnValue_2) == 0x000190, "Member 'BP_GrindingComponent_C_AddMoveIgnoreActors::CallFunc_Array_AddUnique_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AddMoveIgnoreActors, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000194, "Member 'BP_GrindingComponent_C_AddMoveIgnoreActors::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AddMoveIgnoreActors, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000195, "Member 'BP_GrindingComponent_C_AddMoveIgnoreActors::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AddMoveIgnoreActors, CallFunc_IsValid_ReturnValue) == 0x000196, "Member 'BP_GrindingComponent_C_AddMoveIgnoreActors::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AddMoveIgnoreActors, CallFunc_IsValid_ReturnValue_1) == 0x000197, "Member 'BP_GrindingComponent_C_AddMoveIgnoreActors::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AddMoveIgnoreActors, CallFunc_Array_Length_ReturnValue) == 0x000198, "Member 'BP_GrindingComponent_C_AddMoveIgnoreActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AddMoveIgnoreActors, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2) == 0x0001A0, "Member 'BP_GrindingComponent_C_AddMoveIgnoreActors::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AddMoveIgnoreActors, CallFunc_Less_IntInt_ReturnValue) == 0x0001A8, "Member 'BP_GrindingComponent_C_AddMoveIgnoreActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AddMoveIgnoreActors, K2Node_DynamicCast_AsBGA_Grind_Rail_2) == 0x0001B0, "Member 'BP_GrindingComponent_C_AddMoveIgnoreActors::K2Node_DynamicCast_AsBGA_Grind_Rail_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AddMoveIgnoreActors, K2Node_DynamicCast_bSuccess_2) == 0x0001B8, "Member 'BP_GrindingComponent_C_AddMoveIgnoreActors::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AddMoveIgnoreActors, CallFunc_Array_AddUnique_ReturnValue_3) == 0x0001BC, "Member 'BP_GrindingComponent_C_AddMoveIgnoreActors::CallFunc_Array_AddUnique_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AddMoveIgnoreActors, CallFunc_Greater_IntInt_ReturnValue_3) == 0x0001C0, "Member 'BP_GrindingComponent_C_AddMoveIgnoreActors::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AddMoveIgnoreActors, CallFunc_IsValid_ReturnValue_2) == 0x0001C1, "Member 'BP_GrindingComponent_C_AddMoveIgnoreActors::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AddMoveIgnoreActors, CallFunc_IsValid_ReturnValue_3) == 0x0001C2, "Member 'BP_GrindingComponent_C_AddMoveIgnoreActors::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BP_GrindingComponent.BP_GrindingComponent_C.Anchor Forward Jump
// 0x0A88 (0x0A88 - 0x0000)
struct BP_GrindingComponent_C_Anchor_Forward_Jump final
{
public:
	struct FVector                                Planned_Velocity_Without_Jump;                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AnchoredJumpDir;                                   // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewVelocity;                                       // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Anchored;                                          // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TriedDownJump;                                     // 0x0049(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                DownModifier;                                      // 0x0050(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                JumpTravelVector_;                                 // 0x0068(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DistanceToJump;                                    // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABGA_GrindRail_C*                       FoundRail_;                                        // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentRailFuturePosition;                         // 0x0090(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentRailFutureDirection;                        // 0x00A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RightLeanOffset;                                   // 0x00C0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                JumpDirection;                                     // 0x00D8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BestRailDistance;                                  // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FoundARail;                                        // 0x00F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_1;            // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_2;            // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_3;            // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_4;            // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_3;        // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_5;            // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue_1;         // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorVector_ReturnValue;          // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_6;            // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_7;            // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue_2;         // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_4;        // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Normal2D_ReturnValue;              // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_8;            // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue_3;         // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable;                                // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Divide_VectorVector_ReturnValue_1;        // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable_1;                              // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x02E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x0300(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0338(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_5;        // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_4;      // 0x0378(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_1;                      // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0398(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_5;      // 0x03B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_2;                      // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x03D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x03F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_6;        // 0x0418(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_7;        // 0x0430(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_6;      // 0x0448(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_7;      // 0x0460(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_9;            // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_10;           // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue_4;         // 0x0480(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0498(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_8;      // 0x04B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSnapPosition_OutPos;                   // 0x04C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSnapPosition_OutDistance;              // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               K2Node_Select_Default;                             // 0x04E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckForTryingToJumpStraight_CancelAnchor; // 0x04E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E6[0x2];                                      // 0x04E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue_5;         // 0x04E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_501[0x7];                                      // 0x0501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_9;      // 0x0508(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0520(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x0530(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSnapPosition_OutPos_1;                 // 0x0548(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSnapPosition_OutDistance_1;            // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_11;           // 0x0564(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0568(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue_6;         // 0x0580(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetAngleBetweenTwoVectors_Angle__Degrees_; // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorVector_ReturnValue_2;        // 0x05A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B9[0x7];                                      // 0x05B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x05C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x05D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_3;                      // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_611[0x7];                                      // 0x0611(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_621[0x7];                                      // 0x0621(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0628(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_10;     // 0x0640(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x0658(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_671[0x7];                                      // 0x0671(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0678(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x0690(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x06A8(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_11;     // 0x06B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_6;           // 0x06D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x06E8(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x06F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_7;           // 0x0710(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_8;           // 0x0728(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_9;           // 0x0740(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_SphereTraceMultiForObjects_OutHits;       // 0x0758(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMultiForObjects_ReturnValue;   // 0x0768(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_769[0x3];                                      // 0x0769(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x076C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0770(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0850(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0851(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0852(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_853[0x1];                                      // 0x0853(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0854(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0858(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85C[0x4];                                      // 0x085C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0860(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0878(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0890(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x08A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x08C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x08C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x08D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x08D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x08DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x08E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x08E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x08E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8EC[0x4];                                      // 0x08EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x08F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0908(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0920(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0921(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0922(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_923[0x1];                                      // 0x0923(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0924(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0928(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92C[0x4];                                      // 0x092C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0930(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0948(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0960(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0978(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0990(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0998(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x09A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x09A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x09AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x09B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x09B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x09B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BC[0x4];                                      // 0x09BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x09C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x09D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABGA_GrindRail_C*                       K2Node_DynamicCast_AsBGA_Grind_Rail;               // 0x09F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x09F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9F9[0x7];                                      // 0x09F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSnapPosition_OutPos_2;                 // 0x0A00(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSnapPosition_OutDistance_2;            // 0x0A18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0A1C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1D[0x3];                                      // 0x0A1D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0A20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DistanceBetweenTwoVectors_Distance;       // 0x0A28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0A30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x0A38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0A39(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0A3A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0A3B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3C[0x4];                                      // 0x0A3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0A40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0A48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast;         // 0x0A50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1;   // 0x0A58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x0A60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_Z_ImplicitCast;                // 0x0A68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_Z_ImplicitCast_1;              // 0x0A70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_Z_ImplicitCast_2;              // 0x0A78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0A80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GrindingComponent_C_Anchor_Forward_Jump) == 0x000008, "Wrong alignment on BP_GrindingComponent_C_Anchor_Forward_Jump");
static_assert(sizeof(BP_GrindingComponent_C_Anchor_Forward_Jump) == 0x000A88, "Wrong size on BP_GrindingComponent_C_Anchor_Forward_Jump");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, Planned_Velocity_Without_Jump) == 0x000000, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::Planned_Velocity_Without_Jump' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, AnchoredJumpDir) == 0x000018, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::AnchoredJumpDir' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, NewVelocity) == 0x000030, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::NewVelocity' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, Anchored) == 0x000048, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::Anchored' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, TriedDownJump) == 0x000049, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::TriedDownJump' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, DownModifier) == 0x000050, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::DownModifier' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, JumpTravelVector_) == 0x000068, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::JumpTravelVector_' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, DistanceToJump) == 0x000080, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::DistanceToJump' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, FoundRail_) == 0x000088, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::FoundRail_' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CurrentRailFuturePosition) == 0x000090, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CurrentRailFuturePosition' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CurrentRailFutureDirection) == 0x0000A8, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CurrentRailFutureDirection' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, RightLeanOffset) == 0x0000C0, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::RightLeanOffset' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, JumpDirection) == 0x0000D8, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::JumpDirection' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, BestRailDistance) == 0x0000F0, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::BestRailDistance' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, FoundARail) == 0x0000F8, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::FoundARail' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000100, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, Temp_int_Loop_Counter_Variable) == 0x000118, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Add_IntInt_ReturnValue) == 0x00011C, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, Temp_bool_True_if_break_was_hit_Variable) == 0x000120, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, Temp_int_Array_Index_Variable) == 0x000124, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Not_PreBool_ReturnValue) == 0x000128, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000130, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_GetValueAtLevel_ReturnValue) == 0x000148, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_GetValueAtLevel_ReturnValue_1) == 0x00014C, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_GetValueAtLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_GetValueAtLevel_ReturnValue_2) == 0x000150, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_GetValueAtLevel_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_GetValueAtLevel_ReturnValue_3) == 0x000154, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_GetValueAtLevel_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000158, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000160, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x000178, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_GetValueAtLevel_ReturnValue_4) == 0x000190, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_GetValueAtLevel_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Abs_ReturnValue) == 0x000198, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_MakeVector_ReturnValue) == 0x0001A0, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Conv_DoubleToVector_ReturnValue_3) == 0x0001B8, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Conv_DoubleToVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_GetValueAtLevel_ReturnValue_5) == 0x0001D0, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_GetValueAtLevel_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0001D8, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Conv_FloatToVector_ReturnValue_1) == 0x0001F0, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Conv_FloatToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000208, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Divide_VectorVector_ReturnValue) == 0x000220, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Divide_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_GetValueAtLevel_ReturnValue_6) == 0x000238, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_GetValueAtLevel_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_GetValueAtLevel_ReturnValue_7) == 0x00023C, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_GetValueAtLevel_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Conv_FloatToVector_ReturnValue_2) == 0x000240, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Conv_FloatToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_MakeVector_ReturnValue_1) == 0x000258, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Conv_DoubleToVector_ReturnValue_4) == 0x000270, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Conv_DoubleToVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Vector_Normal2D_ReturnValue) == 0x000288, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Vector_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_GetValueAtLevel_ReturnValue_8) == 0x0002A0, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_GetValueAtLevel_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Conv_FloatToVector_ReturnValue_3) == 0x0002A8, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Conv_FloatToVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, Temp_byte_Variable) == 0x0002C0, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Divide_VectorVector_ReturnValue_1) == 0x0002C8, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Divide_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, Temp_byte_Variable_1) == 0x0002E0, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0002E8, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x000300, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x000318, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_VSize_ReturnValue) == 0x000330, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Add_VectorVector_ReturnValue) == 0x000338, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000350, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Conv_DoubleToVector_ReturnValue_5) == 0x000358, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Conv_DoubleToVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, Temp_bool_Variable) == 0x000370, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Multiply_VectorVector_ReturnValue_4) == 0x000378, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Multiply_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_VSize_ReturnValue_1) == 0x000390, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000398, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0003B0, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Multiply_VectorVector_ReturnValue_5) == 0x0003B8, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Multiply_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_VSize_ReturnValue_2) == 0x0003D0, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_VSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0003D8, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_FMax_ReturnValue) == 0x0003F0, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0003F8, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000410, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Conv_DoubleToVector_ReturnValue_6) == 0x000418, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Conv_DoubleToVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Conv_DoubleToVector_ReturnValue_7) == 0x000430, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Conv_DoubleToVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Multiply_VectorVector_ReturnValue_6) == 0x000448, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Multiply_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Multiply_VectorVector_ReturnValue_7) == 0x000460, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Multiply_VectorVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_GetValueAtLevel_ReturnValue_9) == 0x000478, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_GetValueAtLevel_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_GetValueAtLevel_ReturnValue_10) == 0x00047C, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_GetValueAtLevel_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Conv_FloatToVector_ReturnValue_4) == 0x000480, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Conv_FloatToVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_MakeVector_ReturnValue_2) == 0x000498, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Multiply_VectorVector_ReturnValue_8) == 0x0004B0, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Multiply_VectorVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_GetSnapPosition_OutPos) == 0x0004C8, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_GetSnapPosition_OutPos' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_GetSnapPosition_OutDistance) == 0x0004E0, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_GetSnapPosition_OutDistance' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, K2Node_Select_Default) == 0x0004E4, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_CheckForTryingToJumpStraight_CancelAnchor) == 0x0004E5, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_CheckForTryingToJumpStraight_CancelAnchor' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Conv_FloatToVector_ReturnValue_5) == 0x0004E8, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Conv_FloatToVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_IsServer_ReturnValue) == 0x000500, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Multiply_VectorVector_ReturnValue_9) == 0x000508, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Multiply_VectorVector_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_SelectColor_ReturnValue) == 0x000520, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Add_VectorVector_ReturnValue_4) == 0x000530, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_GetSnapPosition_OutPos_1) == 0x000548, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_GetSnapPosition_OutPos_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_GetSnapPosition_OutDistance_1) == 0x000560, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_GetSnapPosition_OutDistance_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_GetValueAtLevel_ReturnValue_11) == 0x000564, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_GetValueAtLevel_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000568, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Conv_FloatToVector_ReturnValue_6) == 0x000580, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Conv_FloatToVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_GetAngleBetweenTwoVectors_Angle__Degrees_) == 0x000598, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_GetAngleBetweenTwoVectors_Angle__Degrees_' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Divide_VectorVector_ReturnValue_2) == 0x0005A0, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Divide_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0005B8, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0005C0, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x0005D8, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_VSize_ReturnValue_3) == 0x0005F0, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_VSize_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakVector_X) == 0x0005F8, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakVector_Y) == 0x000600, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakVector_Z) == 0x000608, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000610, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_FMax_ReturnValue_1) == 0x000618, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BooleanAND_ReturnValue) == 0x000620, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_MakeVector_ReturnValue_3) == 0x000628, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Multiply_VectorVector_ReturnValue_10) == 0x000640, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Multiply_VectorVector_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Add_VectorVector_ReturnValue_5) == 0x000658, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Not_PreBool_ReturnValue_1) == 0x000670, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000678, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x000690, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, K2Node_MakeArray_Array) == 0x0006A8, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Multiply_VectorVector_ReturnValue_11) == 0x0006B8, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Multiply_VectorVector_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Add_VectorVector_ReturnValue_6) == 0x0006D0, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Add_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, K2Node_MakeArray_Array_1) == 0x0006E8, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0006F8, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Add_VectorVector_ReturnValue_7) == 0x000710, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Add_VectorVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Add_VectorVector_ReturnValue_8) == 0x000728, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Add_VectorVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Add_VectorVector_ReturnValue_9) == 0x000740, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Add_VectorVector_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_SphereTraceMultiForObjects_OutHits) == 0x000758, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_SphereTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_SphereTraceMultiForObjects_ReturnValue) == 0x000768, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_SphereTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Array_Length_ReturnValue) == 0x00076C, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Array_Get_Item) == 0x000770, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Less_IntInt_ReturnValue) == 0x000850, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_bBlockingHit) == 0x000851, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_bInitialOverlap) == 0x000852, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_Time) == 0x000854, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_Distance) == 0x000858, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_Location) == 0x000860, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_ImpactPoint) == 0x000878, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_Normal) == 0x000890, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_ImpactNormal) == 0x0008A8, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_PhysMat) == 0x0008C0, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_HitActor) == 0x0008C8, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_HitComponent) == 0x0008D0, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_HitBoneName) == 0x0008D8, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_BoneName) == 0x0008DC, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_HitItem) == 0x0008E0, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_ElementIndex) == 0x0008E4, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_FaceIndex) == 0x0008E8, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_TraceStart) == 0x0008F0, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_TraceEnd) == 0x000908, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BooleanAND_ReturnValue_1) == 0x000920, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000921, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000922, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_Time_1) == 0x000924, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_Distance_1) == 0x000928, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_Location_1) == 0x000930, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000948, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_Normal_1) == 0x000960, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000978, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_PhysMat_1) == 0x000990, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_HitActor_1) == 0x000998, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_HitComponent_1) == 0x0009A0, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_HitBoneName_1) == 0x0009A8, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_BoneName_1) == 0x0009AC, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_HitItem_1) == 0x0009B0, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_ElementIndex_1) == 0x0009B4, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_FaceIndex_1) == 0x0009B8, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_TraceStart_1) == 0x0009C0, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BreakHitResult_TraceEnd_1) == 0x0009D8, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, K2Node_DynamicCast_AsBGA_Grind_Rail) == 0x0009F0, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::K2Node_DynamicCast_AsBGA_Grind_Rail' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, K2Node_DynamicCast_bSuccess) == 0x0009F8, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_GetSnapPosition_OutPos_2) == 0x000A00, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_GetSnapPosition_OutPos_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_GetSnapPosition_OutDistance_2) == 0x000A18, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_GetSnapPosition_OutDistance_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000A1C, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000A20, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_DistanceBetweenTwoVectors_Distance) == 0x000A28, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_DistanceBetweenTwoVectors_Distance' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Abs_ReturnValue_1) == 0x000A30, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x000A38, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000A39, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BooleanOR_ReturnValue) == 0x000A3A, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_BooleanOR_ReturnValue_1) == 0x000A3B, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000A40, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000A48, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Less_DoubleDouble_B_ImplicitCast) == 0x000A50, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Less_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1) == 0x000A58, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Abs_A_ImplicitCast) == 0x000A60, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_MakeVector_Z_ImplicitCast) == 0x000A68, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_MakeVector_Z_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_MakeVector_Z_ImplicitCast_1) == 0x000A70, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_MakeVector_Z_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_MakeVector_Z_ImplicitCast_2) == 0x000A78, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_MakeVector_Z_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Anchor_Forward_Jump, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000A80, "Member 'BP_GrindingComponent_C_Anchor_Forward_Jump::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_GrindingComponent.BP_GrindingComponent_C.AnchorJump
// 0x0348 (0x0348 - 0x0000)
struct BP_GrindingComponent_C_AnchorJump final
{
public:
	struct FVector                                New_Velocity;                                      // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Anchored;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                BestGoalLocation;                                  // 0x0020(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABGA_GrindRail_C*                       FoundRail_;                                        // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          FoundARail;                                        // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BestDistance;                                      // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PlannedVelMagnitude;                               // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lean_Direction;                                    // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CurrentRailFuturePosition;                         // 0x0060(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentRailFutureDirection;                        // 0x0078(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FoundRailPoint;                                    // 0x0090(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RightLeanOffset;                                   // 0x00A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                JumpDirection;                                     // 0x00C0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BestRailDistance;                                  // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_4;      // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLeanVectorInWorldSpace_ReturnValue;    // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_5;      // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue;              // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Normal2D_ReturnValue;              // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_6;      // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_3;                     // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Anchor_Forward_Jump_NewVelocity;          // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Anchor_Forward_Jump_Anchored;             // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast_1;                     // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_B_ImplicitCast;                      // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GrindingComponent_C_AnchorJump) == 0x000008, "Wrong alignment on BP_GrindingComponent_C_AnchorJump");
static_assert(sizeof(BP_GrindingComponent_C_AnchorJump) == 0x000348, "Wrong size on BP_GrindingComponent_C_AnchorJump");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, New_Velocity) == 0x000000, "Member 'BP_GrindingComponent_C_AnchorJump::New_Velocity' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, Anchored) == 0x000018, "Member 'BP_GrindingComponent_C_AnchorJump::Anchored' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, BestGoalLocation) == 0x000020, "Member 'BP_GrindingComponent_C_AnchorJump::BestGoalLocation' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, FoundRail_) == 0x000038, "Member 'BP_GrindingComponent_C_AnchorJump::FoundRail_' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, FoundARail) == 0x000040, "Member 'BP_GrindingComponent_C_AnchorJump::FoundARail' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, BestDistance) == 0x000048, "Member 'BP_GrindingComponent_C_AnchorJump::BestDistance' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, PlannedVelMagnitude) == 0x000050, "Member 'BP_GrindingComponent_C_AnchorJump::PlannedVelMagnitude' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, Lean_Direction) == 0x000058, "Member 'BP_GrindingComponent_C_AnchorJump::Lean_Direction' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CurrentRailFuturePosition) == 0x000060, "Member 'BP_GrindingComponent_C_AnchorJump::CurrentRailFuturePosition' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CurrentRailFutureDirection) == 0x000078, "Member 'BP_GrindingComponent_C_AnchorJump::CurrentRailFutureDirection' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, FoundRailPoint) == 0x000090, "Member 'BP_GrindingComponent_C_AnchorJump::FoundRailPoint' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, RightLeanOffset) == 0x0000A8, "Member 'BP_GrindingComponent_C_AnchorJump::RightLeanOffset' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, JumpDirection) == 0x0000C0, "Member 'BP_GrindingComponent_C_AnchorJump::JumpDirection' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, BestRailDistance) == 0x0000D8, "Member 'BP_GrindingComponent_C_AnchorJump::BestRailDistance' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_BreakVector2D_X) == 0x0000E0, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_BreakVector2D_Y) == 0x0000E8, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_BreakVector2D_X_1) == 0x0000F0, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_BreakVector2D_Y_1) == 0x0000F8, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000100, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000108, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_BreakVector2D_X_2) == 0x000110, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_BreakVector2D_Y_2) == 0x000118, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_BreakVector2D_X_3) == 0x000120, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_BreakVector2D_Y_3) == 0x000128, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000130, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x000138, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_Abs_ReturnValue) == 0x000140, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_Abs_ReturnValue_1) == 0x000148, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_Subtract_DoubleDouble_ReturnValue_4) == 0x000150, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_Subtract_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000158, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_FClamp_ReturnValue) == 0x000160, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_SelectFloat_ReturnValue) == 0x000168, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_FClamp_ReturnValue_1) == 0x000170, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_SelectFloat_ReturnValue_1) == 0x000178, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000180, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_GetLeanVectorInWorldSpace_ReturnValue) == 0x000188, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_GetLeanVectorInWorldSpace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001A0, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_VSize_ReturnValue) == 0x0001A8, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_Subtract_DoubleDouble_ReturnValue_5) == 0x0001B0, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_Subtract_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0001B8, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0001C0, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x0001D8, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0001F0, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000208, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_Add_VectorVector_ReturnValue) == 0x000220, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_GetValueAtLevel_ReturnValue) == 0x000238, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_SelectVector_ReturnValue) == 0x000240, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_ClampVectorSize_ReturnValue) == 0x000258, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_ClampVectorSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_Vector_Normal2D_ReturnValue) == 0x000270, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_Vector_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_Dot_VectorVector_ReturnValue) == 0x000288, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_Subtract_DoubleDouble_ReturnValue_6) == 0x000290, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_Subtract_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000298, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_FClamp_ReturnValue_2) == 0x0002A0, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_SelectFloat_ReturnValue_2) == 0x0002A8, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_FClamp_ReturnValue_3) == 0x0002B0, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_SelectFloat_ReturnValue_3) == 0x0002B8, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0002C0, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0002C8, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0002D0, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_FMax_ReturnValue) == 0x0002D8, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x0002E0, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x0002F8, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_Anchor_Forward_Jump_NewVelocity) == 0x000310, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_Anchor_Forward_Jump_NewVelocity' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_Anchor_Forward_Jump_Anchored) == 0x000328, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_Anchor_Forward_Jump_Anchored' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_Abs_A_ImplicitCast) == 0x000330, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_Abs_A_ImplicitCast_1) == 0x000338, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_Abs_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_AnchorJump, CallFunc_FMax_B_ImplicitCast) == 0x000340, "Member 'BP_GrindingComponent_C_AnchorJump::CallFunc_FMax_B_ImplicitCast' has a wrong offset!");

// Function BP_GrindingComponent.BP_GrindingComponent_C.CacheGrindRailActor
// 0x0010 (0x0010 - 0x0000)
struct BP_GrindingComponent_C_CacheGrindRailActor final
{
public:
	class ABGA_GrindRail_C*                       K2Node_DynamicCast_AsBGA_Grind_Rail;               // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GrindingComponent_C_CacheGrindRailActor) == 0x000008, "Wrong alignment on BP_GrindingComponent_C_CacheGrindRailActor");
static_assert(sizeof(BP_GrindingComponent_C_CacheGrindRailActor) == 0x000010, "Wrong size on BP_GrindingComponent_C_CacheGrindRailActor");
static_assert(offsetof(BP_GrindingComponent_C_CacheGrindRailActor, K2Node_DynamicCast_AsBGA_Grind_Rail) == 0x000000, "Member 'BP_GrindingComponent_C_CacheGrindRailActor::K2Node_DynamicCast_AsBGA_Grind_Rail' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CacheGrindRailActor, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'BP_GrindingComponent_C_CacheGrindRailActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CacheGrindRailActor, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000009, "Member 'BP_GrindingComponent_C_CacheGrindRailActor::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_GrindingComponent.BP_GrindingComponent_C.CalculateVelocity
// 0x0A88 (0x0A88 - 0x0000)
struct BP_GrindingComponent_C_CalculateVelocity final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReplayingMovement;                                // 0x0004(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                OutVelocity;                                       // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NewCurrentDistance;                                // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABGA_GrindRail_C*                       CurrentRailToUse;                                  // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CurrentBaseActor;                                  // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewVelocity;                                       // 0x0038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SignOfFloat_ReturnValue;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_2;                        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SignOfFloat_ReturnValue_1;                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_3;                        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SignOfFloat_ReturnValue_2;                // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_4;                        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_5;                        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SignOfFloat_ReturnValue_3;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SignOfFloat_ReturnValue_4;                // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_6;                        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue;           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0113(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0116(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_117[0x1];                                      // 0x0117(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetRightAxis_Return_Value;                // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetForwardAxis_Return_Value;              // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCameraOrientedLeanValues_OrientedLeanForward; // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCameraOrientedLeanValues_OrientedLeanRight; // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NativeIsShooting_ReturnValue;             // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NativeIsShooting_ReturnValue_1;           // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x015B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15D[0x3];                                      // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABGA_GrindRail_C*                       K2Node_DynamicCast_AsBGA_Grind_Rail;               // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16A[0x6];                                      // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetAngleBetweenTwoVectors_Angle__Degrees_; // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_4;      // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_5;      // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x01E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_6;      // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_7;      // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_3;                     // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x0258(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_4;                     // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_4;                        // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_4;                        // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_8;      // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SignOfFloat_ReturnValue_5;                // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_7;                        // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_4;               // 0x02D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_5;                        // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_5;                        // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_9;      // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_11;     // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_10;     // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_12;     // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_5;               // 0x0318(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_6;                        // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_6;                        // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_6;               // 0x0338(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_11;     // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_7;                        // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_7;                        // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_12;     // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_13;     // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_14;     // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_5;                // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_15;     // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionAtDistance_ReturnValue;       // 0x03B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_6;                // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_7;                // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLength_ReturnValue;                    // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_16;     // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_5;                     // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCurvatureAtDistance_Curvature;         // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetGrindBaseActor_ReturnValue;            // 0x0408(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_13;     // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_6;                     // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429[0x7];                                      // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_8;                // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGrindDistanceOnSpline_ReturnValue;     // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43C[0x4];                                      // 0x043C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue_7;                     // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_9;                // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_17;     // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetForwardAxis_Return_Value_1;            // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOnSlowDownBooster_ReturnValue;          // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_469[0x7];                                      // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_10;               // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_11;               // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_14;     // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_499[0x7];                                      // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x04A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x04B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENetRole                                      CallFunc_GetLocalRole_ReturnValue;                 // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x04D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x04D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x04D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x04D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x04D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D6[0x2];                                      // 0x04D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x04D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMovementStatus_ReturnValue;            // 0x04F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLeanForwardSpeedNormalized_ReturnValue; // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_3;          // 0x0524(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0525(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_526[0x2];                                      // 0x0526(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_18;     // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_7;               // 0x0530(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_19;     // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_8;                        // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_8;                        // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_15;     // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_20;     // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_16;     // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_8;               // 0x0570(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_9;                        // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_9;                        // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_8;                     // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_17;     // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_12;               // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_9;                     // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_13;               // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_5;           // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_21;     // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_6;           // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x05D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x05D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_4;          // 0x05DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DB[0x5];                                      // 0x05DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue_1;         // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E9[0x7];                                      // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_22;     // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x05F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F9[0x7];                                      // 0x05F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_5;          // 0x0608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0609(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x060A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60B[0x5];                                      // 0x060B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SignOfFloat_ReturnValue_6;                // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_619[0x7];                                      // 0x0619(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_23;     // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_14;               // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_24;     // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_15;               // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_18;     // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGrindRailBoosterMode                         Temp_byte_Variable;                                // 0x0648(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_649[0x7];                                      // 0x0649(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x0650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_10;                    // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_16;               // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_7;           // 0x0670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_11;                    // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_17;               // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_25;     // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_8;           // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_26;     // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_NativeGetNextPositionToGrind_OutNextLocation; // 0x06A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NativeGetNextPositionToGrind_bGotToEnd;   // 0x06B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B9[0x3];                                      // 0x06B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_NativeGetNextPositionToGrind_NextLocationOnRail; // 0x06BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGrindRailBoosterMode                         CallFunc_NativeGetNextPositionToGrind_BoosterMode; // 0x06C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NativeGetNextPositionToGrind_bHitObstacle; // 0x06C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NativeGetNextPositionToGrind_bNewRail;    // 0x06C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C3[0x1];                                      // 0x06C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_NativeGetNextPositionToGrind_DistanceAlongNewRail; // 0x06C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortGrindRail*                         CallFunc_NativeGetNextPositionToGrind_TheNewRail;  // 0x06C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NativeGetNextPositionToGrind_bNewRailReverseDirection; // 0x06D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_5;       // 0x06D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D2[0x6];                                      // 0x06D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABGA_GrindRail_C*                       K2Node_DynamicCast_AsBGA_Grind_Rail_1;             // 0x06D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x06E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x06E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x06E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E3[0x5];                                      // 0x06E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x06E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0700(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0718(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0730(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorVector_ReturnValue;          // 0x0748(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0760(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_27;     // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0780(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_FClamp_ReturnValue_12;                    // 0x0798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x07A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_19;     // 0x07B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x07C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_13;                    // 0x07C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SignOfFloat_ReturnValue_7;                // 0x07D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_28;     // 0x07D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_29;     // 0x07E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_30;     // 0x07E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_31;     // 0x07F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_20;     // 0x07F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_18;               // 0x0800(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_14;                    // 0x0808(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_32;     // 0x0810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_33;     // 0x0818(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue_2;         // 0x0820(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_34;     // 0x0828(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_35;     // 0x0830(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0838(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_36;     // 0x0840(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x0848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_37;     // 0x0850(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_19;               // 0x0858(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_38;     // 0x0860(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_8;                        // 0x0868(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_39;     // 0x0870(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_9;           // 0x0878(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x0880(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_40;     // 0x0888(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_41;     // 0x0890(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_10;          // 0x0898(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_42;     // 0x08A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_11;          // 0x08A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_12;          // 0x08B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_13;          // 0x08B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetGrindDistanceOnSpline_NewDistanceOnSpline_ImplicitCast; // 0x08C0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NativeGetNextPositionToGrind_CurrentDistanceAlongSpline_ImplicitCast; // 0x08C4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDirectionAtDistance_Distance_ImplicitCast; // 0x08C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CC[0x4];                                      // 0x08CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SignOfFloat_A_ImplicitCast;               // 0x08D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x08D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast_1;                     // 0x08E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x08E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x08F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x08F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_CurrentSpeedAlongSpline_ImplicitCast; // 0x0900(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_904[0x4];                                      // 0x0904(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_A_ImplicitCast_2;                     // 0x0908(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_Z_ImplicitCast;                // 0x0910(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SignOfFloat_A_ImplicitCast_1;             // 0x0918(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast_3;                     // 0x0920(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SignOfFloat_A_ImplicitCast_2;             // 0x0928(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast_4;                     // 0x0930(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0938(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2;   // 0x0940(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_B_ImplicitCast;               // 0x0948(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast_5;                     // 0x0950(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Value_ImplicitCast;                // 0x0958(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0960(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0968(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SignOfFloat_A_ImplicitCast_3;             // 0x0970(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast_6;                     // 0x0978(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SignOfFloat_A_ImplicitCast_4;             // 0x0980(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0988(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_3;   // 0x0990(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCameraOrientedLeanValues_RawLeanRight_ImplicitCast; // 0x0998(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_LeanRight_ImplicitCast;         // 0x099C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCameraOrientedLeanValues_RawLeanForward_ImplicitCast; // 0x09A0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_CurrentSpeedAlongSpline_ImplicitCast_1; // 0x09A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x09A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_B_ImplicitCast_1;             // 0x09B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast_1;             // 0x09B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x09C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1;   // 0x09C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Max_ImplicitCast;                  // 0x09D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_NewCurrentDistance_ImplicitCast; // 0x09D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_Y_ImplicitCast;                // 0x09E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_X_ImplicitCast;                // 0x09E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_LeanForward_ImplicitCast;       // 0x09F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_LeanRight_ImplicitCast_1;       // 0x09F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_CurrentSpeedAlongSpline_ImplicitCast_2; // 0x09F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9FC[0x4];                                      // 0x09FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0A00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_1;        // 0x0A08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_CurrentSpeedAlongSpline_ImplicitCast_3; // 0x0A10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A14[0x4];                                      // 0x0A14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_InRange_FloatFloat_Value_ImplicitCast;    // 0x0A18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SignOfFloat_A_ImplicitCast_5;             // 0x0A20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_4;   // 0x0A28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NativeGetNextPositionToGrind_DistanceToTravel_ImplicitCast; // 0x0A30(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A34[0x4];                                      // 0x0A34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_NewCurrentDistance_ImplicitCast_1; // 0x0A38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2;   // 0x0A40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_LeanForward_ImplicitCast_1;     // 0x0A48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4C[0x4];                                      // 0x0A4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_3;   // 0x0A50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_CurrentSpeedAlongSpline_ImplicitCast_4; // 0x0A58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5C[0x4];                                      // 0x0A5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_5;   // 0x0A60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_6;   // 0x0A68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_4;   // 0x0A70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_5;   // 0x0A78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_CurrentSpeedAlongSpline_ImplicitCast_5; // 0x0A80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_CurrentSpeedAlongSpline_ImplicitCast_6; // 0x0A84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GrindingComponent_C_CalculateVelocity) == 0x000008, "Wrong alignment on BP_GrindingComponent_C_CalculateVelocity");
static_assert(sizeof(BP_GrindingComponent_C_CalculateVelocity) == 0x000A88, "Wrong size on BP_GrindingComponent_C_CalculateVelocity");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, DeltaTime) == 0x000000, "Member 'BP_GrindingComponent_C_CalculateVelocity::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, bReplayingMovement) == 0x000004, "Member 'BP_GrindingComponent_C_CalculateVelocity::bReplayingMovement' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, OutVelocity) == 0x000008, "Member 'BP_GrindingComponent_C_CalculateVelocity::OutVelocity' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, NewCurrentDistance) == 0x000020, "Member 'BP_GrindingComponent_C_CalculateVelocity::NewCurrentDistance' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CurrentRailToUse) == 0x000028, "Member 'BP_GrindingComponent_C_CalculateVelocity::CurrentRailToUse' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CurrentBaseActor) == 0x000030, "Member 'BP_GrindingComponent_C_CalculateVelocity::CurrentBaseActor' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, NewVelocity) == 0x000038, "Member 'BP_GrindingComponent_C_CalculateVelocity::NewVelocity' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BreakVector2D_X) == 0x000050, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BreakVector2D_Y) == 0x000058, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000060, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SignOfFloat_ReturnValue) == 0x000068, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Abs_ReturnValue) == 0x000070, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Abs_ReturnValue_1) == 0x000078, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000080, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000088, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Abs_ReturnValue_2) == 0x000090, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SignOfFloat_ReturnValue_1) == 0x000098, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SignOfFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Abs_ReturnValue_3) == 0x0000A0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Abs_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SignOfFloat_ReturnValue_2) == 0x0000A8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SignOfFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Abs_ReturnValue_4) == 0x0000B0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Abs_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Abs_ReturnValue_5) == 0x0000B8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Abs_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SignOfFloat_ReturnValue_3) == 0x0000C0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SignOfFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SignOfFloat_ReturnValue_4) == 0x0000C8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SignOfFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Abs_ReturnValue_6) == 0x0000D0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Abs_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Conv_FloatToDouble_ReturnValue) == 0x0000D8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Conv_FloatToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000E0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000E8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0000F0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BreakVector_X) == 0x0000F8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BreakVector_Y) == 0x000100, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BreakVector_Z) == 0x000108, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000110, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, K2Node_SwitchEnum_CmpSuccess) == 0x000111, "Member 'BP_GrindingComponent_C_CalculateVelocity::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000112, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BooleanOR_ReturnValue) == 0x000113, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, K2Node_SwitchEnum_CmpSuccess_1) == 0x000114, "Member 'BP_GrindingComponent_C_CalculateVelocity::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000115, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000116, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000118, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000120, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_FClamp_ReturnValue) == 0x000128, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000130, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_GetRightAxis_Return_Value) == 0x000138, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_GetRightAxis_Return_Value' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000140, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_GetForwardAxis_Return_Value) == 0x000148, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_GetForwardAxis_Return_Value' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_GetCameraOrientedLeanValues_OrientedLeanForward) == 0x000150, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_GetCameraOrientedLeanValues_OrientedLeanForward' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_GetCameraOrientedLeanValues_OrientedLeanRight) == 0x000154, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_GetCameraOrientedLeanValues_OrientedLeanRight' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_NativeIsShooting_ReturnValue) == 0x000158, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_NativeIsShooting_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Not_PreBool_ReturnValue) == 0x000159, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_NativeIsShooting_ReturnValue_1) == 0x00015A, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_NativeIsShooting_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x00015B, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00015C, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, K2Node_DynamicCast_AsBGA_Grind_Rail) == 0x000160, "Member 'BP_GrindingComponent_C_CalculateVelocity::K2Node_DynamicCast_AsBGA_Grind_Rail' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, K2Node_DynamicCast_bSuccess) == 0x000168, "Member 'BP_GrindingComponent_C_CalculateVelocity::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BooleanAND_ReturnValue) == 0x000169, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_MakeVector2D_ReturnValue) == 0x000170, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BreakVector2D_X_1) == 0x000180, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BreakVector2D_Y_1) == 0x000188, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000190, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x000198, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_MakeVector2D_ReturnValue_1) == 0x0001A0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_GetAngleBetweenTwoVectors_Angle__Degrees_) == 0x0001B0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_GetAngleBetweenTwoVectors_Angle__Degrees_' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BreakVector2D_X_2) == 0x0001B8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BreakVector2D_Y_2) == 0x0001C0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Subtract_DoubleDouble_ReturnValue_4) == 0x0001C8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Subtract_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Subtract_DoubleDouble_ReturnValue_5) == 0x0001D0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Subtract_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0001D8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_FClamp_ReturnValue_1) == 0x0001E0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_MakeVector2D_ReturnValue_2) == 0x0001E8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SelectFloat_ReturnValue) == 0x0001F8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BreakVector2D_X_3) == 0x000200, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BreakVector2D_Y_3) == 0x000208, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_FClamp_ReturnValue_2) == 0x000210, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Subtract_DoubleDouble_ReturnValue_6) == 0x000218, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Subtract_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SelectFloat_ReturnValue_1) == 0x000220, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Subtract_DoubleDouble_ReturnValue_7) == 0x000228, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Subtract_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000230, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000238, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000240, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_FClamp_ReturnValue_3) == 0x000248, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SelectFloat_ReturnValue_2) == 0x000250, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_MakeVector2D_ReturnValue_3) == 0x000258, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_FClamp_ReturnValue_4) == 0x000268, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_FClamp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BreakVector2D_X_4) == 0x000270, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BreakVector2D_Y_4) == 0x000278, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SelectFloat_ReturnValue_3) == 0x000280, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Subtract_DoubleDouble_ReturnValue_8) == 0x000288, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Subtract_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000290, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000298, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0002A0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SignOfFloat_ReturnValue_5) == 0x0002A8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SignOfFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x0002B0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Abs_ReturnValue_7) == 0x0002B8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Abs_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_FMax_ReturnValue) == 0x0002C0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x0002C8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x0002D0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_MakeVector2D_ReturnValue_4) == 0x0002D8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_MakeVector2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BreakVector2D_X_5) == 0x0002E8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BreakVector2D_Y_5) == 0x0002F0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Subtract_DoubleDouble_ReturnValue_9) == 0x0002F8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Subtract_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_11) == 0x000300, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Subtract_DoubleDouble_ReturnValue_10) == 0x000308, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Subtract_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_12) == 0x000310, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_MakeVector2D_ReturnValue_5) == 0x000318, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_MakeVector2D_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BreakVector2D_X_6) == 0x000328, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BreakVector2D_X_6' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BreakVector2D_Y_6) == 0x000330, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BreakVector2D_Y_6' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_MakeVector2D_ReturnValue_6) == 0x000338, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_MakeVector2D_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Subtract_DoubleDouble_ReturnValue_11) == 0x000348, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Subtract_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BreakVector2D_X_7) == 0x000350, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BreakVector2D_X_7' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BreakVector2D_Y_7) == 0x000358, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BreakVector2D_Y_7' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Subtract_DoubleDouble_ReturnValue_12) == 0x000360, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Subtract_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BreakVector_X_1) == 0x000368, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BreakVector_Y_1) == 0x000370, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BreakVector_Z_1) == 0x000378, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x000380, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SelectFloat_ReturnValue_4) == 0x000388, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_13) == 0x000390, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_14) == 0x000398, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SelectFloat_ReturnValue_5) == 0x0003A0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_15) == 0x0003A8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_GetDirectionAtDistance_ReturnValue) == 0x0003B0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_GetDirectionAtDistance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0003C8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SelectFloat_ReturnValue_6) == 0x0003D0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SelectFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SelectFloat_ReturnValue_7) == 0x0003D8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SelectFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x0003E0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_GetLength_ReturnValue) == 0x0003E8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_GetLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_16) == 0x0003F0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_FClamp_ReturnValue_5) == 0x0003F8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_FClamp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_GetCurvatureAtDistance_Curvature) == 0x000400, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_GetCurvatureAtDistance_Curvature' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_GetGrindBaseActor_ReturnValue) == 0x000408, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_GetGrindBaseActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Subtract_DoubleDouble_ReturnValue_13) == 0x000410, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Subtract_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000418, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_FClamp_ReturnValue_6) == 0x000420, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_FClamp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Not_PreBool_ReturnValue_1) == 0x000428, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SelectFloat_ReturnValue_8) == 0x000430, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SelectFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_GetGrindDistanceOnSpline_ReturnValue) == 0x000438, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_GetGrindDistanceOnSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_FClamp_ReturnValue_7) == 0x000440, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_FClamp_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SelectFloat_ReturnValue_9) == 0x000448, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SelectFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_17) == 0x000450, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_GetForwardAxis_Return_Value_1) == 0x000458, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_GetForwardAxis_Return_Value_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x000460, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_IsOnSlowDownBooster_ReturnValue) == 0x000468, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_IsOnSlowDownBooster_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SelectFloat_ReturnValue_10) == 0x000470, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SelectFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SelectFloat_ReturnValue_11) == 0x000478, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SelectFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000480, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x000488, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Subtract_DoubleDouble_ReturnValue_14) == 0x000490, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Subtract_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x000498, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0004A0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_MakeVector_ReturnValue) == 0x0004B8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_GetLocalRole_ReturnValue) == 0x0004D0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_GetLocalRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0004D1, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Not_PreBool_ReturnValue_2) == 0x0004D2, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Not_PreBool_ReturnValue_3) == 0x0004D3, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BooleanAND_ReturnValue_1) == 0x0004D4, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BooleanAND_ReturnValue_2) == 0x0004D5, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Conv_FloatToVector_ReturnValue) == 0x0004D8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_GetMovementStatus_ReturnValue) == 0x0004F0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_GetMovementStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BreakVector_X_2) == 0x000508, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BreakVector_Y_2) == 0x000510, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BreakVector_Z_2) == 0x000518, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_GetLeanForwardSpeedNormalized_ReturnValue) == 0x000520, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_GetLeanForwardSpeedNormalized_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Less_DoubleDouble_ReturnValue_3) == 0x000524, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Less_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BooleanOR_ReturnValue_1) == 0x000525, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_18) == 0x000528, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_MakeVector2D_ReturnValue_7) == 0x000530, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_MakeVector2D_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_19) == 0x000540, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BreakVector2D_X_8) == 0x000548, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BreakVector2D_X_8' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BreakVector2D_Y_8) == 0x000550, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BreakVector2D_Y_8' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Subtract_DoubleDouble_ReturnValue_15) == 0x000558, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Subtract_DoubleDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_20) == 0x000560, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Subtract_DoubleDouble_ReturnValue_16) == 0x000568, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Subtract_DoubleDouble_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_MakeVector2D_ReturnValue_8) == 0x000570, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_MakeVector2D_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000580, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BreakVector2D_X_9) == 0x000588, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BreakVector2D_X_9' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BreakVector2D_Y_9) == 0x000590, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BreakVector2D_Y_9' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_FClamp_ReturnValue_8) == 0x000598, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_FClamp_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Subtract_DoubleDouble_ReturnValue_17) == 0x0005A0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Subtract_DoubleDouble_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SelectFloat_ReturnValue_12) == 0x0005A8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SelectFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_FClamp_ReturnValue_9) == 0x0005B0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_FClamp_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SelectFloat_ReturnValue_13) == 0x0005B8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SelectFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Add_DoubleDouble_ReturnValue_5) == 0x0005C0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Add_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_21) == 0x0005C8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Add_DoubleDouble_ReturnValue_6) == 0x0005D0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Add_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x0005D8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Not_PreBool_ReturnValue_4) == 0x0005D9, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Less_DoubleDouble_ReturnValue_4) == 0x0005DA, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Less_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Conv_FloatToDouble_ReturnValue_1) == 0x0005E0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Conv_FloatToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BooleanAND_ReturnValue_3) == 0x0005E8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_22) == 0x0005F0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BooleanAND_ReturnValue_4) == 0x0005F8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, Temp_real_Variable) == 0x000600, "Member 'BP_GrindingComponent_C_CalculateVelocity::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Less_DoubleDouble_ReturnValue_5) == 0x000608, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Less_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000609, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BooleanAND_ReturnValue_5) == 0x00060A, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SignOfFloat_ReturnValue_6) == 0x000610, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SignOfFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BooleanAND_ReturnValue_6) == 0x000618, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_23) == 0x000620, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SelectFloat_ReturnValue_14) == 0x000628, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SelectFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_24) == 0x000630, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SelectFloat_ReturnValue_15) == 0x000638, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SelectFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Subtract_DoubleDouble_ReturnValue_18) == 0x000640, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Subtract_DoubleDouble_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, Temp_byte_Variable) == 0x000648, "Member 'BP_GrindingComponent_C_CalculateVelocity::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x000650, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_FClamp_ReturnValue_10) == 0x000658, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_FClamp_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, K2Node_Select_Default) == 0x000660, "Member 'BP_GrindingComponent_C_CalculateVelocity::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SelectFloat_ReturnValue_16) == 0x000668, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SelectFloat_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Add_DoubleDouble_ReturnValue_7) == 0x000670, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Add_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_FClamp_ReturnValue_11) == 0x000678, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_FClamp_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SelectFloat_ReturnValue_17) == 0x000680, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SelectFloat_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_25) == 0x000688, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Add_DoubleDouble_ReturnValue_8) == 0x000690, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Add_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_26) == 0x000698, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_NativeGetNextPositionToGrind_OutNextLocation) == 0x0006A0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_NativeGetNextPositionToGrind_OutNextLocation' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_NativeGetNextPositionToGrind_bGotToEnd) == 0x0006B8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_NativeGetNextPositionToGrind_bGotToEnd' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_NativeGetNextPositionToGrind_NextLocationOnRail) == 0x0006BC, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_NativeGetNextPositionToGrind_NextLocationOnRail' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_NativeGetNextPositionToGrind_BoosterMode) == 0x0006C0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_NativeGetNextPositionToGrind_BoosterMode' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_NativeGetNextPositionToGrind_bHitObstacle) == 0x0006C1, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_NativeGetNextPositionToGrind_bHitObstacle' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_NativeGetNextPositionToGrind_bNewRail) == 0x0006C2, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_NativeGetNextPositionToGrind_bNewRail' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_NativeGetNextPositionToGrind_DistanceAlongNewRail) == 0x0006C4, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_NativeGetNextPositionToGrind_DistanceAlongNewRail' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_NativeGetNextPositionToGrind_TheNewRail) == 0x0006C8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_NativeGetNextPositionToGrind_TheNewRail' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_NativeGetNextPositionToGrind_bNewRailReverseDirection) == 0x0006D0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_NativeGetNextPositionToGrind_bNewRailReverseDirection' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Greater_DoubleDouble_ReturnValue_5) == 0x0006D1, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Greater_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, K2Node_DynamicCast_AsBGA_Grind_Rail_1) == 0x0006D8, "Member 'BP_GrindingComponent_C_CalculateVelocity::K2Node_DynamicCast_AsBGA_Grind_Rail_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, K2Node_DynamicCast_bSuccess_1) == 0x0006E0, "Member 'BP_GrindingComponent_C_CalculateVelocity::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BooleanAND_ReturnValue_7) == 0x0006E1, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_BooleanAND_ReturnValue_8) == 0x0006E2, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Add_VectorVector_ReturnValue) == 0x0006E8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000700, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000718, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Normal_ReturnValue) == 0x000730, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Divide_VectorVector_ReturnValue) == 0x000748, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Divide_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SelectVector_ReturnValue) == 0x000760, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_27) == 0x000778, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_GetControlRotation_ReturnValue) == 0x000780, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_FClamp_ReturnValue_12) == 0x000798, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_FClamp_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_GetForwardVector_ReturnValue) == 0x0007A0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Subtract_DoubleDouble_ReturnValue_19) == 0x0007B8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Subtract_DoubleDouble_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Dot_VectorVector_ReturnValue) == 0x0007C0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_FClamp_ReturnValue_13) == 0x0007C8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_FClamp_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SignOfFloat_ReturnValue_7) == 0x0007D0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SignOfFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_28) == 0x0007D8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_29) == 0x0007E0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_30) == 0x0007E8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_31) == 0x0007F0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Subtract_DoubleDouble_ReturnValue_20) == 0x0007F8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Subtract_DoubleDouble_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SelectFloat_ReturnValue_18) == 0x000800, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SelectFloat_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_FClamp_ReturnValue_14) == 0x000808, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_FClamp_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_32) == 0x000810, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_33) == 0x000818, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Conv_FloatToDouble_ReturnValue_2) == 0x000820, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Conv_FloatToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_34) == 0x000828, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_35) == 0x000830, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_FMin_ReturnValue) == 0x000838, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_36) == 0x000840, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_FMax_ReturnValue_1) == 0x000848, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_37) == 0x000850, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SelectFloat_ReturnValue_19) == 0x000858, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SelectFloat_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_38) == 0x000860, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Abs_ReturnValue_8) == 0x000868, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Abs_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_39) == 0x000870, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Add_DoubleDouble_ReturnValue_9) == 0x000878, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Add_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x000880, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_40) == 0x000888, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_41) == 0x000890, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Add_DoubleDouble_ReturnValue_10) == 0x000898, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Add_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue_42) == 0x0008A0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Add_DoubleDouble_ReturnValue_11) == 0x0008A8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Add_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Add_DoubleDouble_ReturnValue_12) == 0x0008B0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Add_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Add_DoubleDouble_ReturnValue_13) == 0x0008B8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Add_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SetGrindDistanceOnSpline_NewDistanceOnSpline_ImplicitCast) == 0x0008C0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SetGrindDistanceOnSpline_NewDistanceOnSpline_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_NativeGetNextPositionToGrind_CurrentDistanceAlongSpline_ImplicitCast) == 0x0008C4, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_NativeGetNextPositionToGrind_CurrentDistanceAlongSpline_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_GetDirectionAtDistance_Distance_ImplicitCast) == 0x0008C8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_GetDirectionAtDistance_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SignOfFloat_A_ImplicitCast) == 0x0008D0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SignOfFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Abs_A_ImplicitCast) == 0x0008D8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Abs_A_ImplicitCast_1) == 0x0008E0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Abs_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0008E8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0008F0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0008F8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, K2Node_VariableSet_CurrentSpeedAlongSpline_ImplicitCast) == 0x000900, "Member 'BP_GrindingComponent_C_CalculateVelocity::K2Node_VariableSet_CurrentSpeedAlongSpline_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Abs_A_ImplicitCast_2) == 0x000908, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Abs_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_MakeVector_Z_ImplicitCast) == 0x000910, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_MakeVector_Z_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SignOfFloat_A_ImplicitCast_1) == 0x000918, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SignOfFloat_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Abs_A_ImplicitCast_3) == 0x000920, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Abs_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SignOfFloat_A_ImplicitCast_2) == 0x000928, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SignOfFloat_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Abs_A_ImplicitCast_4) == 0x000930, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Abs_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000938, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2) == 0x000940, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SelectFloat_B_ImplicitCast) == 0x000948, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SelectFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Abs_A_ImplicitCast_5) == 0x000950, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Abs_A_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_FClamp_Value_ImplicitCast) == 0x000958, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_FClamp_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000960, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000968, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SignOfFloat_A_ImplicitCast_3) == 0x000970, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SignOfFloat_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Abs_A_ImplicitCast_6) == 0x000978, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Abs_A_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SignOfFloat_A_ImplicitCast_4) == 0x000980, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SignOfFloat_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000988, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_3) == 0x000990, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_GetCameraOrientedLeanValues_RawLeanRight_ImplicitCast) == 0x000998, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_GetCameraOrientedLeanValues_RawLeanRight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, K2Node_VariableSet_LeanRight_ImplicitCast) == 0x00099C, "Member 'BP_GrindingComponent_C_CalculateVelocity::K2Node_VariableSet_LeanRight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_GetCameraOrientedLeanValues_RawLeanForward_ImplicitCast) == 0x0009A0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_GetCameraOrientedLeanValues_RawLeanForward_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, K2Node_VariableSet_CurrentSpeedAlongSpline_ImplicitCast_1) == 0x0009A4, "Member 'BP_GrindingComponent_C_CalculateVelocity::K2Node_VariableSet_CurrentSpeedAlongSpline_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SelectFloat_A_ImplicitCast) == 0x0009A8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SelectFloat_B_ImplicitCast_1) == 0x0009B0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SelectFloat_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SelectFloat_A_ImplicitCast_1) == 0x0009B8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SelectFloat_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0009C0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1) == 0x0009C8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_FClamp_Max_ImplicitCast) == 0x0009D0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_FClamp_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, K2Node_VariableSet_NewCurrentDistance_ImplicitCast) == 0x0009D8, "Member 'BP_GrindingComponent_C_CalculateVelocity::K2Node_VariableSet_NewCurrentDistance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_MakeVector_Y_ImplicitCast) == 0x0009E0, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_MakeVector_Y_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_MakeVector_X_ImplicitCast) == 0x0009E8, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_MakeVector_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, K2Node_VariableSet_LeanForward_ImplicitCast) == 0x0009F0, "Member 'BP_GrindingComponent_C_CalculateVelocity::K2Node_VariableSet_LeanForward_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, K2Node_VariableSet_LeanRight_ImplicitCast_1) == 0x0009F4, "Member 'BP_GrindingComponent_C_CalculateVelocity::K2Node_VariableSet_LeanRight_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, K2Node_VariableSet_CurrentSpeedAlongSpline_ImplicitCast_2) == 0x0009F8, "Member 'BP_GrindingComponent_C_CalculateVelocity::K2Node_VariableSet_CurrentSpeedAlongSpline_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000A00, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Add_DoubleDouble_B_ImplicitCast_1) == 0x000A08, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Add_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, K2Node_VariableSet_CurrentSpeedAlongSpline_ImplicitCast_3) == 0x000A10, "Member 'BP_GrindingComponent_C_CalculateVelocity::K2Node_VariableSet_CurrentSpeedAlongSpline_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_InRange_FloatFloat_Value_ImplicitCast) == 0x000A18, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_InRange_FloatFloat_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_SignOfFloat_A_ImplicitCast_5) == 0x000A20, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_SignOfFloat_A_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_4) == 0x000A28, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_NativeGetNextPositionToGrind_DistanceToTravel_ImplicitCast) == 0x000A30, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_NativeGetNextPositionToGrind_DistanceToTravel_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, K2Node_VariableSet_NewCurrentDistance_ImplicitCast_1) == 0x000A38, "Member 'BP_GrindingComponent_C_CalculateVelocity::K2Node_VariableSet_NewCurrentDistance_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2) == 0x000A40, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, K2Node_VariableSet_LeanForward_ImplicitCast_1) == 0x000A48, "Member 'BP_GrindingComponent_C_CalculateVelocity::K2Node_VariableSet_LeanForward_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_3) == 0x000A50, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, K2Node_VariableSet_CurrentSpeedAlongSpline_ImplicitCast_4) == 0x000A58, "Member 'BP_GrindingComponent_C_CalculateVelocity::K2Node_VariableSet_CurrentSpeedAlongSpline_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_5) == 0x000A60, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_6) == 0x000A68, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_4) == 0x000A70, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_5) == 0x000A78, "Member 'BP_GrindingComponent_C_CalculateVelocity::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, K2Node_VariableSet_CurrentSpeedAlongSpline_ImplicitCast_5) == 0x000A80, "Member 'BP_GrindingComponent_C_CalculateVelocity::K2Node_VariableSet_CurrentSpeedAlongSpline_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CalculateVelocity, K2Node_VariableSet_CurrentSpeedAlongSpline_ImplicitCast_6) == 0x000A84, "Member 'BP_GrindingComponent_C_CalculateVelocity::K2Node_VariableSet_CurrentSpeedAlongSpline_ImplicitCast_6' has a wrong offset!");

// Function BP_GrindingComponent.BP_GrindingComponent_C.Can Begin Grinding From Land
// 0x0004 (0x0004 - 0x0000)
struct BP_GrindingComponent_C_Can_Begin_Grinding_From_Land final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanBeginGrinding_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GrindingComponent_C_Can_Begin_Grinding_From_Land) == 0x000001, "Wrong alignment on BP_GrindingComponent_C_Can_Begin_Grinding_From_Land");
static_assert(sizeof(BP_GrindingComponent_C_Can_Begin_Grinding_From_Land) == 0x000004, "Wrong size on BP_GrindingComponent_C_Can_Begin_Grinding_From_Land");
static_assert(offsetof(BP_GrindingComponent_C_Can_Begin_Grinding_From_Land, ReturnValue) == 0x000000, "Member 'BP_GrindingComponent_C_Can_Begin_Grinding_From_Land::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Can_Begin_Grinding_From_Land, CallFunc_CanBeginGrinding_ReturnValue) == 0x000001, "Member 'BP_GrindingComponent_C_Can_Begin_Grinding_From_Land::CallFunc_CanBeginGrinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Can_Begin_Grinding_From_Land, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_GrindingComponent_C_Can_Begin_Grinding_From_Land::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Can_Begin_Grinding_From_Land, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BP_GrindingComponent_C_Can_Begin_Grinding_From_Land::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_GrindingComponent.BP_GrindingComponent_C.CanBeginGrinding
// 0x0020 (0x0020 - 0x0000)
struct BP_GrindingComponent_C_CanBeginGrinding final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanBeginGrinding_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDBNO_ReturnValue;                       // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInVehicle_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GrindingComponent_C_CanBeginGrinding) == 0x000008, "Wrong alignment on BP_GrindingComponent_C_CanBeginGrinding");
static_assert(sizeof(BP_GrindingComponent_C_CanBeginGrinding) == 0x000020, "Wrong size on BP_GrindingComponent_C_CanBeginGrinding");
static_assert(offsetof(BP_GrindingComponent_C_CanBeginGrinding, ReturnValue) == 0x000000, "Member 'BP_GrindingComponent_C_CanBeginGrinding::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CanBeginGrinding, CallFunc_CanBeginGrinding_ReturnValue) == 0x000001, "Member 'BP_GrindingComponent_C_CanBeginGrinding::CallFunc_CanBeginGrinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CanBeginGrinding, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000008, "Member 'BP_GrindingComponent_C_CanBeginGrinding::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CanBeginGrinding, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000018, "Member 'BP_GrindingComponent_C_CanBeginGrinding::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CanBeginGrinding, CallFunc_IsDBNO_ReturnValue) == 0x000019, "Member 'BP_GrindingComponent_C_CanBeginGrinding::CallFunc_IsDBNO_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CanBeginGrinding, CallFunc_IsInVehicle_ReturnValue) == 0x00001A, "Member 'BP_GrindingComponent_C_CanBeginGrinding::CallFunc_IsInVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CanBeginGrinding, CallFunc_BooleanOR_ReturnValue) == 0x00001B, "Member 'BP_GrindingComponent_C_CanBeginGrinding::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CanBeginGrinding, CallFunc_BooleanOR_ReturnValue_1) == 0x00001C, "Member 'BP_GrindingComponent_C_CanBeginGrinding::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BP_GrindingComponent.BP_GrindingComponent_C.Change Sprint State
// 0x0030 (0x0030 - 0x0000)
struct BP_GrindingComponent_C_Change_Sprint_State final
{
public:
	bool                                          New;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0004(0x0004)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue_1;     // 0x000C(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartUsingEnergy_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StopUsingEnergy_ReturnValue;              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectContextHandle           CallFunc_MakeSimpleFortEffectContext_ReturnValue;  // 0x0018(0x0018)()
};
static_assert(alignof(BP_GrindingComponent_C_Change_Sprint_State) == 0x000008, "Wrong alignment on BP_GrindingComponent_C_Change_Sprint_State");
static_assert(sizeof(BP_GrindingComponent_C_Change_Sprint_State) == 0x000030, "Wrong size on BP_GrindingComponent_C_Change_Sprint_State");
static_assert(offsetof(BP_GrindingComponent_C_Change_Sprint_State, New) == 0x000000, "Member 'BP_GrindingComponent_C_Change_Sprint_State::New' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Change_Sprint_State, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000004, "Member 'BP_GrindingComponent_C_Change_Sprint_State::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Change_Sprint_State, CallFunc_GetValueAtLevel_ReturnValue) == 0x000008, "Member 'BP_GrindingComponent_C_Change_Sprint_State::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Change_Sprint_State, CallFunc_MakeLiteralGameplayTag_ReturnValue_1) == 0x00000C, "Member 'BP_GrindingComponent_C_Change_Sprint_State::CallFunc_MakeLiteralGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Change_Sprint_State, CallFunc_StartUsingEnergy_ReturnValue) == 0x000010, "Member 'BP_GrindingComponent_C_Change_Sprint_State::CallFunc_StartUsingEnergy_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Change_Sprint_State, CallFunc_StopUsingEnergy_ReturnValue) == 0x000011, "Member 'BP_GrindingComponent_C_Change_Sprint_State::CallFunc_StopUsingEnergy_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Change_Sprint_State, CallFunc_MakeSimpleFortEffectContext_ReturnValue) == 0x000018, "Member 'BP_GrindingComponent_C_Change_Sprint_State::CallFunc_MakeSimpleFortEffectContext_ReturnValue' has a wrong offset!");

// Function BP_GrindingComponent.BP_GrindingComponent_C.CheckForTryingToJumpStraight
// 0x0140 (0x0140 - 0x0000)
struct BP_GrindingComponent_C_CheckForTryingToJumpStraight final
{
public:
	struct FVector                                PotentialAnchorPoint;                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                JumpTravelVector;                                  // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CancelAnchor;                                      // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSnapPosition_OutPos;                   // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSnapPosition_OutDistance;              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_1;                      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GrindingComponent_C_CheckForTryingToJumpStraight) == 0x000008, "Wrong alignment on BP_GrindingComponent_C_CheckForTryingToJumpStraight");
static_assert(sizeof(BP_GrindingComponent_C_CheckForTryingToJumpStraight) == 0x000140, "Wrong size on BP_GrindingComponent_C_CheckForTryingToJumpStraight");
static_assert(offsetof(BP_GrindingComponent_C_CheckForTryingToJumpStraight, PotentialAnchorPoint) == 0x000000, "Member 'BP_GrindingComponent_C_CheckForTryingToJumpStraight::PotentialAnchorPoint' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CheckForTryingToJumpStraight, JumpTravelVector) == 0x000018, "Member 'BP_GrindingComponent_C_CheckForTryingToJumpStraight::JumpTravelVector' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CheckForTryingToJumpStraight, CancelAnchor) == 0x000030, "Member 'BP_GrindingComponent_C_CheckForTryingToJumpStraight::CancelAnchor' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CheckForTryingToJumpStraight, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000031, "Member 'BP_GrindingComponent_C_CheckForTryingToJumpStraight::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CheckForTryingToJumpStraight, CallFunc_Add_VectorVector_ReturnValue) == 0x000038, "Member 'BP_GrindingComponent_C_CheckForTryingToJumpStraight::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CheckForTryingToJumpStraight, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000050, "Member 'BP_GrindingComponent_C_CheckForTryingToJumpStraight::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CheckForTryingToJumpStraight, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000068, "Member 'BP_GrindingComponent_C_CheckForTryingToJumpStraight::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CheckForTryingToJumpStraight, CallFunc_VSize_ReturnValue) == 0x000080, "Member 'BP_GrindingComponent_C_CheckForTryingToJumpStraight::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CheckForTryingToJumpStraight, CallFunc_Normal_ReturnValue) == 0x000088, "Member 'BP_GrindingComponent_C_CheckForTryingToJumpStraight::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CheckForTryingToJumpStraight, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'BP_GrindingComponent_C_CheckForTryingToJumpStraight::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CheckForTryingToJumpStraight, CallFunc_GetSnapPosition_OutPos) == 0x0000A8, "Member 'BP_GrindingComponent_C_CheckForTryingToJumpStraight::CallFunc_GetSnapPosition_OutPos' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CheckForTryingToJumpStraight, CallFunc_GetSnapPosition_OutDistance) == 0x0000C0, "Member 'BP_GrindingComponent_C_CheckForTryingToJumpStraight::CallFunc_GetSnapPosition_OutDistance' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CheckForTryingToJumpStraight, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x0000C8, "Member 'BP_GrindingComponent_C_CheckForTryingToJumpStraight::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CheckForTryingToJumpStraight, CallFunc_MakeVector_ReturnValue) == 0x0000E0, "Member 'BP_GrindingComponent_C_CheckForTryingToJumpStraight::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CheckForTryingToJumpStraight, CallFunc_VSize_ReturnValue_1) == 0x0000F8, "Member 'BP_GrindingComponent_C_CheckForTryingToJumpStraight::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CheckForTryingToJumpStraight, CallFunc_Cross_VectorVector_ReturnValue) == 0x000100, "Member 'BP_GrindingComponent_C_CheckForTryingToJumpStraight::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CheckForTryingToJumpStraight, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000118, "Member 'BP_GrindingComponent_C_CheckForTryingToJumpStraight::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CheckForTryingToJumpStraight, CallFunc_Dot_VectorVector_ReturnValue) == 0x000120, "Member 'BP_GrindingComponent_C_CheckForTryingToJumpStraight::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CheckForTryingToJumpStraight, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000128, "Member 'BP_GrindingComponent_C_CheckForTryingToJumpStraight::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CheckForTryingToJumpStraight, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000130, "Member 'BP_GrindingComponent_C_CheckForTryingToJumpStraight::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_CheckForTryingToJumpStraight, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000138, "Member 'BP_GrindingComponent_C_CheckForTryingToJumpStraight::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_GrindingComponent.BP_GrindingComponent_C.ClearMoveIgnoreActors
// 0x0020 (0x0020 - 0x0000)
struct BP_GrindingComponent_C_ClearMoveIgnoreActors final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABuildingActor*                         CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GrindingComponent_C_ClearMoveIgnoreActors) == 0x000008, "Wrong alignment on BP_GrindingComponent_C_ClearMoveIgnoreActors");
static_assert(sizeof(BP_GrindingComponent_C_ClearMoveIgnoreActors) == 0x000020, "Wrong size on BP_GrindingComponent_C_ClearMoveIgnoreActors");
static_assert(offsetof(BP_GrindingComponent_C_ClearMoveIgnoreActors, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_GrindingComponent_C_ClearMoveIgnoreActors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ClearMoveIgnoreActors, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_GrindingComponent_C_ClearMoveIgnoreActors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ClearMoveIgnoreActors, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_GrindingComponent_C_ClearMoveIgnoreActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ClearMoveIgnoreActors, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_GrindingComponent_C_ClearMoveIgnoreActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ClearMoveIgnoreActors, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_GrindingComponent_C_ClearMoveIgnoreActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ClearMoveIgnoreActors, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_GrindingComponent_C_ClearMoveIgnoreActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GrindingComponent.BP_GrindingComponent_C.ExecuteUbergraph_BP_GrindingComponent
// 0x0DA0 (0x0DA0 - 0x0000)
struct BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FHitResult& Hit)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerPawn_Athena_C*                   K2Node_DynamicCast_AsPlayer_Pawn_Athena;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortAbilitySystemComponent*            CallFunc_GetFortAbilitySystemComponent_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1; // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_JumpVelocity;                   // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTacticalSprintEnergyComponent_C*       CallFunc_GetComponentByClass_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentEnergyPercentage_ReturnValue;   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAbilitySystemComponent*            CallFunc_GetFortAbilitySystemComponent_ReturnValue_1; // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_2; // 0x0090(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ABGA_GrindRail_C*                       K2Node_DynamicCast_AsBGA_Grind_Rail;               // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackComponent*                CallFunc_SpawnForceFeedbackAtLocation_ReturnValue; // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_AnchorJump_New_Velocity;                  // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AnchorJump_Anchored;                      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_1;            // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_Hit;                            // 0x0128(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20A[0x2];                                      // 0x020A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0288(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABGA_GrindRail_C*                       K2Node_DynamicCast_AsBGA_Grind_Rail_1;             // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortComponent_Energy*                  K2Node_CustomEvent_EnergyComponent;                // 0x02E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UFortComponent_Energy* EnergyComponent)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x02F0(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x02FC(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0310(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0318(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSnapPosition_OutPos;                   // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSnapPosition_OutDistance;              // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0348(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0429(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42A[0x2];                                      // 0x042A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_434[0x4];                                      // 0x0434(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0438(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0450(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0468(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0480(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0498(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x04A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x04A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x04BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C4[0x4];                                      // 0x04C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x04C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x04E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMovementStatus_ReturnValue;            // 0x04F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0510(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortAthenaVehicle*                     K2Node_DynamicCast_AsFort_Athena_Vehicle;          // 0x0540(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_549[0x7];                                      // 0x0549(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABGA_GrindRail_C*                       K2Node_DynamicCast_AsBGA_Grind_Rail_2;             // 0x0550(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AttemptDestroyVehicleWhileGrinding_ReturnValue; // 0x0559(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55A[0x2];                                      // 0x055A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x055C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0561(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_562[0x6];                                      // 0x0562(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0568(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABuildingActor*                         K2Node_DynamicCast_AsBuilding_Actor;               // 0x0578(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_581[0x7];                                      // 0x0581(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0588(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0598(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1[0x3];                                      // 0x05A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x05A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x05A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerBuilt_ReturnValue;                // 0x05AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x05AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x05AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x05AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AE[0x2];                                      // 0x05AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x05B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x05C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x05C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C3[0x5];                                      // 0x05C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABGA_Athena_WithGravity_Parent_C*       K2Node_DynamicCast_AsBGA_Athena_with_Gravity_Parent; // 0x05C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D1[0x7];                                      // 0x05D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABGA_HeldObject_Parent_C*               K2Node_DynamicCast_AsBGA_Held_Object_Parent;       // 0x05D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E1[0x3];                                      // 0x05E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGrindDistanceOnSpline_ReturnValue;     // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E9[0x7];                                      // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetGrindBaseActor_ReturnValue;            // 0x05F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABGA_GrindRail_C*                       K2Node_DynamicCast_AsBGA_Grind_Rail_3;             // 0x05F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0601(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_602[0x6];                                      // 0x0602(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetDirectionAtDistance_ReturnValue;       // 0x0608(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SignOfFloat_ReturnValue;                  // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_631[0x7];                                      // 0x0631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAbilitySystemComponent*            CallFunc_GetFortAbilitySystemComponent_ReturnValue_2; // 0x0638(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_3; // 0x0640(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0648(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0660(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLastUpdateVelocity_ReturnValue;        // 0x0678(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeXYSquared_ReturnValue;               // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x06A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A1[0x7];                                      // 0x06A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x06A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortAbilitySystemComponent*            CallFunc_GetFortAbilitySystemComponent_ReturnValue_3; // 0x06C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue; // 0x06C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGrindRailBoosterMode                         K2Node_CustomEvent_PreviousBoosterMode;            // 0x06CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6CD[0x3];                                      // 0x06CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectContextHandle           CallFunc_MakeSimpleFortEffectContext_ReturnValue;  // 0x06D0(0x0018)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x06E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x06E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EA[0x6];                                      // 0x06EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAbilitySystemComponent*            CallFunc_GetFortAbilitySystemComponent_ReturnValue_4; // 0x06F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue_1; // 0x06F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGrindRequestJump_ReturnValue;          // 0x06FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6FD[0x3];                                      // 0x06FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue_2;            // 0x0700(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_704[0x4];                                      // 0x0704(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAbilitySystemComponent*            CallFunc_GetFortAbilitySystemComponent_ReturnValue_5; // 0x0708(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bNewIsSprinting)>         K2Node_CreateDelegate_OutputDelegate_4;            // 0x0710(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_4; // 0x071C(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_3;            // 0x0724(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue; // 0x0728(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0730(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue_1; // 0x0748(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue_1;          // 0x0750(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraModifier*                        CallFunc_AddNewCameraModifier_ReturnValue;         // 0x0768(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCameraModifier*                        CallFunc_FindCameraModifierByClass_ReturnValue;    // 0x0770(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCameraModifier_Grinding_C*             K2Node_DynamicCast_AsCamera_Modifier_Grinding;     // 0x0778(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0780(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0781(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_782[0x6];                                      // 0x0782(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraModifier_Grinding_C*             K2Node_DynamicCast_AsCamera_Modifier_Grinding_1;   // 0x0788(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0791(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Can_Begin_Grinding_From_Land_ReturnValue; // 0x0792(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_793[0x5];                                      // 0x0793(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0798(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x07A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x07A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A2[0x6];                                      // 0x07A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x07A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingToggleSprint_ReturnValue;          // 0x07B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B1[0x3];                                      // 0x07B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_2;            // 0x07B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x07B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingToggleSprint_ReturnValue_1;        // 0x07B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7BA[0x2];                                      // 0x07BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x07BC(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ENetRole                                      CallFunc_GetLocalRole_ReturnValue;                 // 0x07C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x07C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7CA[0x2];                                      // 0x07CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue_4;            // 0x07CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x07D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x07D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D2[0x6];                                      // 0x07D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_Event_Pawn;                                 // 0x07D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_Event_MeshComponent;                        // 0x07E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bNewIsSprinting;                // 0x07E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E9[0x7];                                      // 0x07E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x07F0(0x0020)()
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0810(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue_1; // 0x0811(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_812[0x2];                                      // 0x0812(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EGrindRailBoosterMode PreviousBoosterMode)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0814(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0820(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_821[0x3];                                      // 0x0821(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetLeanForwardSpeedNormalized_ReturnValue; // 0x0824(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0828(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_829[0x7];                                      // 0x0829(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0830(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMovementStatus_ReturnValue_1;          // 0x0838(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SignOfFloat_ReturnValue_1;                // 0x0850(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0858(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0860(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0868(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_5;            // 0x0870(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_874[0x4];                                      // 0x0874(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0878(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0880(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           CallFunc_MakeSimpleFortEffectContext_ReturnValue_1; // 0x0898(0x0018)()
	bool                                          CallFunc_IsWeaponADS_ReturnValue;                  // 0x08B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B1[0x7];                                      // 0x08B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x08B8(0x00D0)(ContainsInstancedReference)
	struct FGameplayEffectContextHandle           CallFunc_MakeSimpleFortEffectContext_ReturnValue_2; // 0x0988(0x0018)()
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_5; // 0x09A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x09A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x09B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x09B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x09D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x09D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x09F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_1;               // 0x09F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0A10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Normal2D_ReturnValue;              // 0x0A18(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0A30(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0A48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0A50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0A58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SignOfFloat_ReturnValue_2;                // 0x0A60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0A68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x0A70(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0A88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionAtDistance_ReturnValue_1;     // 0x0A90(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0AA8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Normal2D_ReturnValue_1;            // 0x0AC0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0AD8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0AF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AF1[0x7];                                      // 0x0AF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x0AF8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0B10(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0B28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B29[0x7];                                      // 0x0B29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x0B30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionAtDistance_ReturnValue_2;     // 0x0B38(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0B50(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Normal2D_ReturnValue_2;            // 0x0B68(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_2;               // 0x0B80(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x0B98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0BA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SignOfFloat_ReturnValue_3;                // 0x0BB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0BC0(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0CA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA1[0x7];                                      // 0x0CA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0CA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0CB0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SignOfFloat_ReturnValue_4;                // 0x0CC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_3;        // 0x0CD0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x0CE8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0D00(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0D18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x0D20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_B_ImplicitCast;               // 0x0D28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_B_ImplicitCast_1;             // 0x0D30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_B_ImplicitCast_2;             // 0x0D38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0D40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x0D48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_B_ImplicitCast;                      // 0x0D50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0D58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0D60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1;   // 0x0D68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x0D70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0D78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SignOfFloat_A_ImplicitCast;               // 0x0D80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_1; // 0x0D88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast_1;             // 0x0D90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetGrindDistanceOnSpline_NewDistanceOnSpline_ImplicitCast; // 0x0D98(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDirectionAtDistance_Distance_ImplicitCast; // 0x0D9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent) == 0x000008, "Wrong alignment on BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent");
static_assert(sizeof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent) == 0x000DA0, "Wrong size on BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, EntryPoint) == 0x000000, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, Temp_bool_IsClosed_Variable) == 0x000010, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, Temp_bool_Has_Been_Initd_Variable) == 0x000011, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_Event_DeltaSeconds) == 0x000014, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_DynamicCast_AsPlayer_Pawn_Athena) == 0x000020, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_DynamicCast_AsPlayer_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetFortAbilitySystemComponent_ReturnValue) == 0x000048, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetFortAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000050, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1) == 0x000058, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_CustomEvent_JumpVelocity) == 0x000060, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_CustomEvent_JumpVelocity' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetComponentByClass_ReturnValue) == 0x000078, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetCurrentEnergyPercentage_ReturnValue) == 0x000080, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetCurrentEnergyPercentage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000084, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Not_PreBool_ReturnValue) == 0x000085, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetFortAbilitySystemComponent_ReturnValue_1) == 0x000088, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetFortAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_2) == 0x000090, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_DynamicCast_AsBGA_Grind_Rail) == 0x000098, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_DynamicCast_AsBGA_Grind_Rail' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000A8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_SpawnForceFeedbackAtLocation_ReturnValue) == 0x0000C0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_SpawnForceFeedbackAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0000C8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_MakeVector_ReturnValue) == 0x0000E8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_AnchorJump_New_Velocity) == 0x000100, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_AnchorJump_New_Velocity' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_AnchorJump_Anchored) == 0x000118, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_AnchorJump_Anchored' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetValueAtLevel_ReturnValue) == 0x00011C, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetValueAtLevel_ReturnValue_1) == 0x000120, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetValueAtLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_CustomEvent_Hit) == 0x000128, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_CustomEvent_Hit' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_bBlockingHit) == 0x000208, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_bInitialOverlap) == 0x000209, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_Time) == 0x00020C, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_Distance) == 0x000210, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_Location) == 0x000218, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_ImpactPoint) == 0x000230, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_Normal) == 0x000248, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_ImpactNormal) == 0x000260, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_PhysMat) == 0x000278, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_HitActor) == 0x000280, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_HitComponent) == 0x000288, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_HitBoneName) == 0x000290, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_BoneName) == 0x000294, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_HitItem) == 0x000298, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_ElementIndex) == 0x00029C, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_FaceIndex) == 0x0002A0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_TraceStart) == 0x0002A8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_TraceEnd) == 0x0002C0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_DynamicCast_AsBGA_Grind_Rail_1) == 0x0002D8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_DynamicCast_AsBGA_Grind_Rail_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_DynamicCast_bSuccess_2) == 0x0002E0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_CustomEvent_EnergyComponent) == 0x0002E8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_CustomEvent_EnergyComponent' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_CreateDelegate_OutputDelegate_1) == 0x0002F0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_CreateDelegate_OutputDelegate_2) == 0x0002FC, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Not_PreBool_ReturnValue_1) == 0x000308, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000310, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_CreateDelegate_OutputDelegate_3) == 0x000318, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetSnapPosition_OutPos) == 0x000328, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetSnapPosition_OutPos' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetSnapPosition_OutDistance) == 0x000340, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetSnapPosition_OutDistance' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_Event_Hit) == 0x000348, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000428, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000429, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_Time_1) == 0x00042C, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_Distance_1) == 0x000430, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_Location_1) == 0x000438, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000450, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_Normal_1) == 0x000468, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000480, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_PhysMat_1) == 0x000498, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_HitActor_1) == 0x0004A0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_HitComponent_1) == 0x0004A8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_HitBoneName_1) == 0x0004B0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_BoneName_1) == 0x0004B4, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_HitItem_1) == 0x0004B8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_ElementIndex_1) == 0x0004BC, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_FaceIndex_1) == 0x0004C0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_TraceStart_1) == 0x0004C8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakHitResult_TraceEnd_1) == 0x0004E0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetMovementStatus_ReturnValue) == 0x0004F8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetMovementStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000510, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakVector_X) == 0x000528, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakVector_Y) == 0x000530, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakVector_Z) == 0x000538, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_DynamicCast_AsFort_Athena_Vehicle) == 0x000540, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_DynamicCast_AsFort_Athena_Vehicle' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_DynamicCast_bSuccess_3) == 0x000548, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_DynamicCast_AsBGA_Grind_Rail_2) == 0x000550, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_DynamicCast_AsBGA_Grind_Rail_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_DynamicCast_bSuccess_4) == 0x000558, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_AttemptDestroyVehicleWhileGrinding_ReturnValue) == 0x000559, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_AttemptDestroyVehicleWhileGrinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Array_AddUnique_ReturnValue) == 0x00055C, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Greater_IntInt_ReturnValue) == 0x000560, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_IsValid_ReturnValue) == 0x000561, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetDisplayName_ReturnValue) == 0x000568, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_DynamicCast_AsBuilding_Actor) == 0x000578, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_DynamicCast_AsBuilding_Actor' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_DynamicCast_bSuccess_5) == 0x000580, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Concat_StrStr_ReturnValue) == 0x000588, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000598, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0005A0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Array_AddUnique_ReturnValue_1) == 0x0005A4, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0005A8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_IsValid_ReturnValue_1) == 0x0005A9, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_IsPlayerBuilt_ReturnValue) == 0x0005AA, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_IsPlayerBuilt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Not_PreBool_ReturnValue_2) == 0x0005AB, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Not_PreBool_ReturnValue_3) == 0x0005AC, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BooleanAND_ReturnValue) == 0x0005AD, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x0005B0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x0005C0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_IsValid_ReturnValue_2) == 0x0005C1, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BooleanOR_ReturnValue) == 0x0005C2, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_DynamicCast_AsBGA_Athena_with_Gravity_Parent) == 0x0005C8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_DynamicCast_AsBGA_Athena_with_Gravity_Parent' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_DynamicCast_bSuccess_6) == 0x0005D0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_DynamicCast_AsBGA_Held_Object_Parent) == 0x0005D8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_DynamicCast_AsBGA_Held_Object_Parent' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_DynamicCast_bSuccess_7) == 0x0005E0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetGrindDistanceOnSpline_ReturnValue) == 0x0005E4, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetGrindDistanceOnSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BooleanOR_ReturnValue_1) == 0x0005E8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetGrindBaseActor_ReturnValue) == 0x0005F0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetGrindBaseActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_DynamicCast_AsBGA_Grind_Rail_3) == 0x0005F8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_DynamicCast_AsBGA_Grind_Rail_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_DynamicCast_bSuccess_8) == 0x000600, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_IsValid_ReturnValue_3) == 0x000601, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetDirectionAtDistance_ReturnValue) == 0x000608, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetDirectionAtDistance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Dot_VectorVector_ReturnValue) == 0x000620, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_SignOfFloat_ReturnValue) == 0x000628, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_IsLocallyControlled_ReturnValue) == 0x000630, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetFortAbilitySystemComponent_ReturnValue_2) == 0x000638, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetFortAbilitySystemComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_3) == 0x000640, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetControlRotation_ReturnValue) == 0x000648, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetForwardVector_ReturnValue) == 0x000660, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetLastUpdateVelocity_ReturnValue) == 0x000678, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetLastUpdateVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_VSizeXYSquared_ReturnValue) == 0x000690, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_VSizeXYSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000698, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x0006A0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_SelectVector_ReturnValue) == 0x0006A8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetFortAbilitySystemComponent_ReturnValue_3) == 0x0006C0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetFortAbilitySystemComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue) == 0x0006C8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_CustomEvent_PreviousBoosterMode) == 0x0006CC, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_CustomEvent_PreviousBoosterMode' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_MakeSimpleFortEffectContext_ReturnValue) == 0x0006D0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_MakeSimpleFortEffectContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_SwitchEnum_CmpSuccess) == 0x0006E8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_SwitchEnum_CmpSuccess_1) == 0x0006E9, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetFortAbilitySystemComponent_ReturnValue_4) == 0x0006F0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetFortAbilitySystemComponent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue_1) == 0x0006F8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetGrindRequestJump_ReturnValue) == 0x0006FC, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetGrindRequestJump_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetValueAtLevel_ReturnValue_2) == 0x000700, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetValueAtLevel_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetFortAbilitySystemComponent_ReturnValue_5) == 0x000708, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetFortAbilitySystemComponent_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_CreateDelegate_OutputDelegate_4) == 0x000710, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_4) == 0x00071C, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetValueAtLevel_ReturnValue_3) == 0x000724, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetValueAtLevel_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetFortPlayerControllerFromActor_ReturnValue) == 0x000728, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetFortPlayerControllerFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetCameraLocation_ReturnValue) == 0x000730, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetFortPlayerControllerFromActor_ReturnValue_1) == 0x000748, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetFortPlayerControllerFromActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetCameraLocation_ReturnValue_1) == 0x000750, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetCameraLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_AddNewCameraModifier_ReturnValue) == 0x000768, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_AddNewCameraModifier_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_FindCameraModifierByClass_ReturnValue) == 0x000770, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_FindCameraModifierByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_DynamicCast_AsCamera_Modifier_Grinding) == 0x000778, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_DynamicCast_AsCamera_Modifier_Grinding' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_DynamicCast_bSuccess_9) == 0x000780, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_IsValid_ReturnValue_4) == 0x000781, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_DynamicCast_AsCamera_Modifier_Grinding_1) == 0x000788, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_DynamicCast_AsCamera_Modifier_Grinding_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_DynamicCast_bSuccess_10) == 0x000790, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_IsValid_ReturnValue_5) == 0x000791, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Can_Begin_Grinding_From_Land_ReturnValue) == 0x000792, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Can_Begin_Grinding_From_Land_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetOwner_ReturnValue_1) == 0x000798, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_IsValid_ReturnValue_6) == 0x0007A0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_HasAuthority_ReturnValue) == 0x0007A1, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_SelectFloat_ReturnValue) == 0x0007A8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_IsUsingToggleSprint_ReturnValue) == 0x0007B0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_IsUsingToggleSprint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Array_AddUnique_ReturnValue_2) == 0x0007B4, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Array_AddUnique_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0007B8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_IsUsingToggleSprint_ReturnValue_1) == 0x0007B9, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_IsUsingToggleSprint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_CreateDelegate_OutputDelegate_5) == 0x0007BC, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetLocalRole_ReturnValue) == 0x0007C8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetLocalRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0007C9, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetValueAtLevel_ReturnValue_4) == 0x0007CC, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetValueAtLevel_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_IsValid_ReturnValue_7) == 0x0007D0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BooleanAND_ReturnValue_1) == 0x0007D1, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_Event_Pawn) == 0x0007D8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_Event_Pawn' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_Event_MeshComponent) == 0x0007E0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_Event_MeshComponent' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_CustomEvent_bNewIsSprinting) == 0x0007E8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_CustomEvent_bNewIsSprinting' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x0007F0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000810, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetConsoleVariableBoolValue_ReturnValue_1) == 0x000811, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetConsoleVariableBoolValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, K2Node_CreateDelegate_OutputDelegate_6) == 0x000814, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BooleanAND_ReturnValue_2) == 0x000820, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetLeanForwardSpeedNormalized_ReturnValue) == 0x000824, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetLeanForwardSpeedNormalized_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000828, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000830, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetMovementStatus_ReturnValue_1) == 0x000838, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetMovementStatus_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_SignOfFloat_ReturnValue_1) == 0x000850, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_SignOfFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakVector_X_1) == 0x000858, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakVector_Y_1) == 0x000860, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BreakVector_Z_1) == 0x000868, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetValueAtLevel_ReturnValue_5) == 0x000870, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetValueAtLevel_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000878, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_MakeVector_ReturnValue_1) == 0x000880, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_MakeSimpleFortEffectContext_ReturnValue_1) == 0x000898, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_MakeSimpleFortEffectContext_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_IsWeaponADS_ReturnValue) == 0x0008B0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_IsWeaponADS_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x0008B8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_MakeSimpleFortEffectContext_ReturnValue_2) == 0x000988, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_MakeSimpleFortEffectContext_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_5) == 0x0009A0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Abs_ReturnValue) == 0x0009A8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0009B0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x0009B8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Abs_ReturnValue_1) == 0x0009D0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0009D8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_FMax_ReturnValue) == 0x0009F0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_SelectVector_ReturnValue_1) == 0x0009F8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_SelectVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000A10, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Vector_Normal2D_ReturnValue) == 0x000A18, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Vector_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_MakeVector_ReturnValue_2) == 0x000A30, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_VSize_ReturnValue) == 0x000A48, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000A50, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_SelectFloat_ReturnValue_1) == 0x000A58, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_SignOfFloat_ReturnValue_2) == 0x000A60, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_SignOfFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_SelectFloat_ReturnValue_2) == 0x000A68, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x000A70, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_FClamp_ReturnValue) == 0x000A88, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetDirectionAtDistance_ReturnValue_1) == 0x000A90, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetDirectionAtDistance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000AA8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Vector_Normal2D_ReturnValue_1) == 0x000AC0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Vector_Normal2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Cross_VectorVector_ReturnValue) == 0x000AD8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Not_PreBool_ReturnValue_4) == 0x000AF0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x000AF8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Add_VectorVector_ReturnValue) == 0x000B10, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000B28, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_SelectFloat_ReturnValue_3) == 0x000B30, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetDirectionAtDistance_ReturnValue_2) == 0x000B38, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetDirectionAtDistance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000B50, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Vector_Normal2D_ReturnValue_2) == 0x000B68, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Vector_Normal2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_SelectVector_ReturnValue_2) == 0x000B80, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_SelectVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x000B98, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000BA0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_SignOfFloat_ReturnValue_3) == 0x000BB8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_SignOfFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000BC0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000CA0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000CA8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_MakeVector_ReturnValue_3) == 0x000CB0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_SignOfFloat_ReturnValue_4) == 0x000CC8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_SignOfFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Conv_DoubleToVector_ReturnValue_3) == 0x000CD0, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Conv_DoubleToVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x000CE8, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Normal_ReturnValue) == 0x000D00, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000D18, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x000D20, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_SelectFloat_B_ImplicitCast) == 0x000D28, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_SelectFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_SelectFloat_B_ImplicitCast_1) == 0x000D30, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_SelectFloat_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_SelectFloat_B_ImplicitCast_2) == 0x000D38, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_SelectFloat_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000D40, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_SelectFloat_A_ImplicitCast) == 0x000D48, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_FMax_B_ImplicitCast) == 0x000D50, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_FMax_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000D58, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000D60, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1) == 0x000D68, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Abs_A_ImplicitCast) == 0x000D70, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000D78, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_SignOfFloat_A_ImplicitCast) == 0x000D80, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_SignOfFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_1) == 0x000D88, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_SelectFloat_A_ImplicitCast_1) == 0x000D90, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_SelectFloat_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_SetGrindDistanceOnSpline_NewDistanceOnSpline_ImplicitCast) == 0x000D98, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_SetGrindDistanceOnSpline_NewDistanceOnSpline_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent, CallFunc_GetDirectionAtDistance_Distance_ImplicitCast) == 0x000D9C, "Member 'BP_GrindingComponent_C_ExecuteUbergraph_BP_GrindingComponent::CallFunc_GetDirectionAtDistance_Distance_ImplicitCast' has a wrong offset!");

// Function BP_GrindingComponent.BP_GrindingComponent_C.Get Rail Jump To Location Horizontal
// 0x03C0 (0x03C0 - 0x0000)
struct BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal final
{
public:
	class ABGA_GrindRail_C*                       InputPin;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        VelMagnitude;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TriggerLocation;                                   // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DirectionToCheckAgainst;                           // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid_Angle;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0048(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DistanceOnNewRail;                                 // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TheDirectionSign;                                  // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Found_Distance;                                    // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DirectionSign;                                     // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found_A_Location;                                  // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                OtherRailStartPos;                                 // 0x0088(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DistanceTried;                                     // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FoundLocation;                                     // 0x00A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DistanceAdded;                                     // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSnapPosition_OutPos;                   // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSnapPosition_OutDistance;              // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue; // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_188[0x8];                                      // 0x0188(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue; // 0x0190(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SignOfFloat_ReturnValue;                  // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetAngleBetweenTwoVectors_Angle__Degrees_; // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A8[0x8];                                      // 0x02A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue_1; // 0x02B0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetAngleBetweenTwoVectors_Angle__Degrees__1; // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTransformAtDistanceAlongSpline_Distance_ImplicitCast; // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTransformAtDistanceAlongSpline_Distance_ImplicitCast_1; // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal) == 0x000010, "Wrong alignment on BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal");
static_assert(sizeof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal) == 0x0003C0, "Wrong size on BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, InputPin) == 0x000000, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::InputPin' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, VelMagnitude) == 0x000008, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::VelMagnitude' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, TriggerLocation) == 0x000010, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::TriggerLocation' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, DirectionToCheckAgainst) == 0x000028, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::DirectionToCheckAgainst' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, Valid_Angle) == 0x000040, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::Valid_Angle' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, Location) == 0x000048, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::Location' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, DistanceOnNewRail) == 0x000060, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::DistanceOnNewRail' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, TheDirectionSign) == 0x000068, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::TheDirectionSign' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, Found_Distance) == 0x000070, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::Found_Distance' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, DirectionSign) == 0x000078, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::DirectionSign' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, Found_A_Location) == 0x000080, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::Found_A_Location' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, OtherRailStartPos) == 0x000088, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::OtherRailStartPos' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, DistanceTried) == 0x0000A0, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::DistanceTried' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, FoundLocation) == 0x0000A8, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::FoundLocation' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, DistanceAdded) == 0x0000C0, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::DistanceAdded' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, Temp_bool_Variable) == 0x0000C8, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_GetSnapPosition_OutPos) == 0x0000D0, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_GetSnapPosition_OutPos' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_GetSnapPosition_OutDistance) == 0x0000E8, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_GetSnapPosition_OutDistance' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_Not_PreBool_ReturnValue) == 0x0000EC, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue) == 0x0000F0, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000108, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_VSize_ReturnValue) == 0x000120, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000128, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, Temp_int_Variable) == 0x000130, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000134, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_Add_IntInt_ReturnValue) == 0x000138, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000140, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000148, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000150, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000158, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_BooleanAND_ReturnValue) == 0x000160, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000168, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000170, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000178, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_Dot_VectorVector_ReturnValue) == 0x000180, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue) == 0x000190, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_SignOfFloat_ReturnValue) == 0x0001F0, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_BreakTransform_Location) == 0x0001F8, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_BreakTransform_Rotation) == 0x000210, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_BreakTransform_Scale) == 0x000228, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000240, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000248, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000260, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_Normal_ReturnValue) == 0x000268, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000280, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_GetAngleBetweenTwoVectors_Angle__Degrees_) == 0x000288, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_GetAngleBetweenTwoVectors_Angle__Degrees_' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000290, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000298, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0002A0, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue_1) == 0x0002B0, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_BreakTransform_Location_1) == 0x000310, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_BreakTransform_Rotation_1) == 0x000328, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_BreakTransform_Scale_1) == 0x000340, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000358, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_Normal_ReturnValue_1) == 0x000370, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_GetAngleBetweenTwoVectors_Angle__Degrees__1) == 0x000388, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_GetAngleBetweenTwoVectors_Angle__Degrees__1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000390, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000398, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x0003A0, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x0003A8, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_GetTransformAtDistanceAlongSpline_Distance_ImplicitCast) == 0x0003B0, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_GetTransformAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal, CallFunc_GetTransformAtDistanceAlongSpline_Distance_ImplicitCast_1) == 0x0003B4, "Member 'BP_GrindingComponent_C_Get_Rail_Jump_To_Location_Horizontal::CallFunc_GetTransformAtDistanceAlongSpline_Distance_ImplicitCast_1' has a wrong offset!");

// Function BP_GrindingComponent.BP_GrindingComponent_C.GetLeanVectorInWorldSpace
// 0x00B0 (0x00B0 - 0x0000)
struct BP_GrindingComponent_C_GetLeanVectorInWorldSpace final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLeanForwardSpeedNormalized_ReturnValue; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue_1;         // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GrindingComponent_C_GetLeanVectorInWorldSpace) == 0x000008, "Wrong alignment on BP_GrindingComponent_C_GetLeanVectorInWorldSpace");
static_assert(sizeof(BP_GrindingComponent_C_GetLeanVectorInWorldSpace) == 0x0000B0, "Wrong size on BP_GrindingComponent_C_GetLeanVectorInWorldSpace");
static_assert(offsetof(BP_GrindingComponent_C_GetLeanVectorInWorldSpace, ReturnValue) == 0x000000, "Member 'BP_GrindingComponent_C_GetLeanVectorInWorldSpace::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_GetLeanVectorInWorldSpace, CallFunc_GetLeanForwardSpeedNormalized_ReturnValue) == 0x000018, "Member 'BP_GrindingComponent_C_GetLeanVectorInWorldSpace::CallFunc_GetLeanForwardSpeedNormalized_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_GetLeanVectorInWorldSpace, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000020, "Member 'BP_GrindingComponent_C_GetLeanVectorInWorldSpace::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_GetLeanVectorInWorldSpace, CallFunc_Conv_FloatToVector_ReturnValue_1) == 0x000038, "Member 'BP_GrindingComponent_C_GetLeanVectorInWorldSpace::CallFunc_Conv_FloatToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_GetLeanVectorInWorldSpace, CallFunc_Cross_VectorVector_ReturnValue) == 0x000050, "Member 'BP_GrindingComponent_C_GetLeanVectorInWorldSpace::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_GetLeanVectorInWorldSpace, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000068, "Member 'BP_GrindingComponent_C_GetLeanVectorInWorldSpace::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_GetLeanVectorInWorldSpace, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000080, "Member 'BP_GrindingComponent_C_GetLeanVectorInWorldSpace::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_GetLeanVectorInWorldSpace, CallFunc_Add_VectorVector_ReturnValue) == 0x000098, "Member 'BP_GrindingComponent_C_GetLeanVectorInWorldSpace::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_GrindingComponent.BP_GrindingComponent_C.Handle Player Landed
// 0x00E0 (0x00E0 - 0x0000)
struct BP_GrindingComponent_C_Handle_Player_Landed final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_GrindingComponent_C_Handle_Player_Landed) == 0x000008, "Wrong alignment on BP_GrindingComponent_C_Handle_Player_Landed");
static_assert(sizeof(BP_GrindingComponent_C_Handle_Player_Landed) == 0x0000E0, "Wrong size on BP_GrindingComponent_C_Handle_Player_Landed");
static_assert(offsetof(BP_GrindingComponent_C_Handle_Player_Landed, Hit) == 0x000000, "Member 'BP_GrindingComponent_C_Handle_Player_Landed::Hit' has a wrong offset!");

// Function BP_GrindingComponent.BP_GrindingComponent_C.HandleBoosterModeChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_GrindingComponent_C_HandleBoosterModeChanged final
{
public:
	EGrindRailBoosterMode                         PreviousBoosterMode;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GrindingComponent_C_HandleBoosterModeChanged) == 0x000001, "Wrong alignment on BP_GrindingComponent_C_HandleBoosterModeChanged");
static_assert(sizeof(BP_GrindingComponent_C_HandleBoosterModeChanged) == 0x000001, "Wrong size on BP_GrindingComponent_C_HandleBoosterModeChanged");
static_assert(offsetof(BP_GrindingComponent_C_HandleBoosterModeChanged, PreviousBoosterMode) == 0x000000, "Member 'BP_GrindingComponent_C_HandleBoosterModeChanged::PreviousBoosterMode' has a wrong offset!");

// Function BP_GrindingComponent.BP_GrindingComponent_C.HandleHitWhenGrinding
// 0x00E0 (0x00E0 - 0x0000)
struct BP_GrindingComponent_C_HandleHitWhenGrinding final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_GrindingComponent_C_HandleHitWhenGrinding) == 0x000008, "Wrong alignment on BP_GrindingComponent_C_HandleHitWhenGrinding");
static_assert(sizeof(BP_GrindingComponent_C_HandleHitWhenGrinding) == 0x0000E0, "Wrong size on BP_GrindingComponent_C_HandleHitWhenGrinding");
static_assert(offsetof(BP_GrindingComponent_C_HandleHitWhenGrinding, Hit) == 0x000000, "Member 'BP_GrindingComponent_C_HandleHitWhenGrinding::Hit' has a wrong offset!");

// Function BP_GrindingComponent.BP_GrindingComponent_C.HandleSprintingStateChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_GrindingComponent_C_HandleSprintingStateChanged final
{
public:
	bool                                          bNewIsSprinting;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GrindingComponent_C_HandleSprintingStateChanged) == 0x000001, "Wrong alignment on BP_GrindingComponent_C_HandleSprintingStateChanged");
static_assert(sizeof(BP_GrindingComponent_C_HandleSprintingStateChanged) == 0x000001, "Wrong size on BP_GrindingComponent_C_HandleSprintingStateChanged");
static_assert(offsetof(BP_GrindingComponent_C_HandleSprintingStateChanged, bNewIsSprinting) == 0x000000, "Member 'BP_GrindingComponent_C_HandleSprintingStateChanged::bNewIsSprinting' has a wrong offset!");

// Function BP_GrindingComponent.BP_GrindingComponent_C.IsOnSlowDownBooster
// 0x0002 (0x0002 - 0x0000)
struct BP_GrindingComponent_C_IsOnSlowDownBooster final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GrindingComponent_C_IsOnSlowDownBooster) == 0x000001, "Wrong alignment on BP_GrindingComponent_C_IsOnSlowDownBooster");
static_assert(sizeof(BP_GrindingComponent_C_IsOnSlowDownBooster) == 0x000002, "Wrong size on BP_GrindingComponent_C_IsOnSlowDownBooster");
static_assert(offsetof(BP_GrindingComponent_C_IsOnSlowDownBooster, ReturnValue) == 0x000000, "Member 'BP_GrindingComponent_C_IsOnSlowDownBooster::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_IsOnSlowDownBooster, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_GrindingComponent_C_IsOnSlowDownBooster::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_GrindingComponent.BP_GrindingComponent_C.Jumpoff
// 0x0018 (0x0018 - 0x0000)
struct BP_GrindingComponent_C_Jumpoff final
{
public:
	struct FVector                                JumpVelocity;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GrindingComponent_C_Jumpoff) == 0x000008, "Wrong alignment on BP_GrindingComponent_C_Jumpoff");
static_assert(sizeof(BP_GrindingComponent_C_Jumpoff) == 0x000018, "Wrong size on BP_GrindingComponent_C_Jumpoff");
static_assert(offsetof(BP_GrindingComponent_C_Jumpoff, JumpVelocity) == 0x000000, "Member 'BP_GrindingComponent_C_Jumpoff::JumpVelocity' has a wrong offset!");

// Function BP_GrindingComponent.BP_GrindingComponent_C.JumpOffEnd
// 0x0100 (0x0100 - 0x0000)
struct BP_GrindingComponent_C_JumpOffEnd final
{
public:
	double                                        CallFunc_SignOfFloat_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLength_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionAtDistance_ReturnValue;       // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SignOfFloat_A_ImplicitCast;               // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDirectionAtDistance_Distance_ImplicitCast; // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GrindingComponent_C_JumpOffEnd) == 0x000008, "Wrong alignment on BP_GrindingComponent_C_JumpOffEnd");
static_assert(sizeof(BP_GrindingComponent_C_JumpOffEnd) == 0x000100, "Wrong size on BP_GrindingComponent_C_JumpOffEnd");
static_assert(offsetof(BP_GrindingComponent_C_JumpOffEnd, CallFunc_SignOfFloat_ReturnValue) == 0x000000, "Member 'BP_GrindingComponent_C_JumpOffEnd::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_JumpOffEnd, CallFunc_GetLength_ReturnValue) == 0x000008, "Member 'BP_GrindingComponent_C_JumpOffEnd::CallFunc_GetLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_JumpOffEnd, CallFunc_MakeVector_ReturnValue) == 0x000010, "Member 'BP_GrindingComponent_C_JumpOffEnd::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_JumpOffEnd, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_GrindingComponent_C_JumpOffEnd::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_JumpOffEnd, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_GrindingComponent_C_JumpOffEnd::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_JumpOffEnd, CallFunc_Abs_ReturnValue) == 0x000038, "Member 'BP_GrindingComponent_C_JumpOffEnd::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_JumpOffEnd, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_GrindingComponent_C_JumpOffEnd::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_JumpOffEnd, CallFunc_FMax_ReturnValue) == 0x000048, "Member 'BP_GrindingComponent_C_JumpOffEnd::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_JumpOffEnd, CallFunc_SelectFloat_ReturnValue) == 0x000050, "Member 'BP_GrindingComponent_C_JumpOffEnd::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_JumpOffEnd, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000058, "Member 'BP_GrindingComponent_C_JumpOffEnd::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_JumpOffEnd, CallFunc_GetDirectionAtDistance_ReturnValue) == 0x000070, "Member 'BP_GrindingComponent_C_JumpOffEnd::CallFunc_GetDirectionAtDistance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_JumpOffEnd, CallFunc_Add_VectorVector_ReturnValue) == 0x000088, "Member 'BP_GrindingComponent_C_JumpOffEnd::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_JumpOffEnd, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000A0, "Member 'BP_GrindingComponent_C_JumpOffEnd::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_JumpOffEnd, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0000B8, "Member 'BP_GrindingComponent_C_JumpOffEnd::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_JumpOffEnd, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x0000D0, "Member 'BP_GrindingComponent_C_JumpOffEnd::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_JumpOffEnd, CallFunc_Abs_A_ImplicitCast) == 0x0000D8, "Member 'BP_GrindingComponent_C_JumpOffEnd::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_JumpOffEnd, CallFunc_SignOfFloat_A_ImplicitCast) == 0x0000E0, "Member 'BP_GrindingComponent_C_JumpOffEnd::CallFunc_SignOfFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_JumpOffEnd, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0000E8, "Member 'BP_GrindingComponent_C_JumpOffEnd::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_JumpOffEnd, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0000F0, "Member 'BP_GrindingComponent_C_JumpOffEnd::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_JumpOffEnd, CallFunc_GetDirectionAtDistance_Distance_ImplicitCast) == 0x0000F8, "Member 'BP_GrindingComponent_C_JumpOffEnd::CallFunc_GetDirectionAtDistance_Distance_ImplicitCast' has a wrong offset!");

// Function BP_GrindingComponent.BP_GrindingComponent_C.LinkAnimLayer
// 0x0010 (0x0010 - 0x0000)
struct BP_GrindingComponent_C_LinkAnimLayer final
{
public:
	class UAnimInstance*                          CallFunc_GetLinkedAnimLayerInstanceByClass_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GrindingComponent_C_LinkAnimLayer) == 0x000008, "Wrong alignment on BP_GrindingComponent_C_LinkAnimLayer");
static_assert(sizeof(BP_GrindingComponent_C_LinkAnimLayer) == 0x000010, "Wrong size on BP_GrindingComponent_C_LinkAnimLayer");
static_assert(offsetof(BP_GrindingComponent_C_LinkAnimLayer, CallFunc_GetLinkedAnimLayerInstanceByClass_ReturnValue) == 0x000000, "Member 'BP_GrindingComponent_C_LinkAnimLayer::CallFunc_GetLinkedAnimLayerInstanceByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_LinkAnimLayer, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_GrindingComponent_C_LinkAnimLayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_GrindingComponent.BP_GrindingComponent_C.OnBaseMeshReady
// 0x0010 (0x0010 - 0x0000)
struct BP_GrindingComponent_C_OnBaseMeshReady final
{
public:
	class AFortPlayerPawn*                        Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 MeshComponent;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GrindingComponent_C_OnBaseMeshReady) == 0x000008, "Wrong alignment on BP_GrindingComponent_C_OnBaseMeshReady");
static_assert(sizeof(BP_GrindingComponent_C_OnBaseMeshReady) == 0x000010, "Wrong size on BP_GrindingComponent_C_OnBaseMeshReady");
static_assert(offsetof(BP_GrindingComponent_C_OnBaseMeshReady, Pawn) == 0x000000, "Member 'BP_GrindingComponent_C_OnBaseMeshReady::Pawn' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_OnBaseMeshReady, MeshComponent) == 0x000008, "Member 'BP_GrindingComponent_C_OnBaseMeshReady::MeshComponent' has a wrong offset!");

// Function BP_GrindingComponent.BP_GrindingComponent_C.OnEnergyCompletelyDrained
// 0x0008 (0x0008 - 0x0000)
struct BP_GrindingComponent_C_OnEnergyCompletelyDrained final
{
public:
	class UFortComponent_Energy*                  EnergyComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GrindingComponent_C_OnEnergyCompletelyDrained) == 0x000008, "Wrong alignment on BP_GrindingComponent_C_OnEnergyCompletelyDrained");
static_assert(sizeof(BP_GrindingComponent_C_OnEnergyCompletelyDrained) == 0x000008, "Wrong size on BP_GrindingComponent_C_OnEnergyCompletelyDrained");
static_assert(offsetof(BP_GrindingComponent_C_OnEnergyCompletelyDrained, EnergyComponent) == 0x000000, "Member 'BP_GrindingComponent_C_OnEnergyCompletelyDrained::EnergyComponent' has a wrong offset!");

// Function BP_GrindingComponent.BP_GrindingComponent_C.PlayJumpOnSound
// 0x0018 (0x0018 - 0x0000)
struct BP_GrindingComponent_C_PlayJumpOnSound final
{
public:
	bool                                          PlayAudio;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundLibrarySubsystem*                 CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundLibrarySubsystem*                 CallFunc_GetWorldSubsystem_ReturnValue_1;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GrindingComponent_C_PlayJumpOnSound) == 0x000008, "Wrong alignment on BP_GrindingComponent_C_PlayJumpOnSound");
static_assert(sizeof(BP_GrindingComponent_C_PlayJumpOnSound) == 0x000018, "Wrong size on BP_GrindingComponent_C_PlayJumpOnSound");
static_assert(offsetof(BP_GrindingComponent_C_PlayJumpOnSound, PlayAudio) == 0x000000, "Member 'BP_GrindingComponent_C_PlayJumpOnSound::PlayAudio' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_PlayJumpOnSound, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000008, "Member 'BP_GrindingComponent_C_PlayJumpOnSound::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GrindingComponent_C_PlayJumpOnSound, CallFunc_GetWorldSubsystem_ReturnValue_1) == 0x000010, "Member 'BP_GrindingComponent_C_PlayJumpOnSound::CallFunc_GetWorldSubsystem_ReturnValue_1' has a wrong offset!");

// Function BP_GrindingComponent.BP_GrindingComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_GrindingComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GrindingComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_GrindingComponent_C_ReceiveTick");
static_assert(sizeof(BP_GrindingComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_GrindingComponent_C_ReceiveTick");
static_assert(offsetof(BP_GrindingComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_GrindingComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

