#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCN_Loop_GhostMode

#include "Basic.hpp"

#include "PawnHighlight_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GCN_Loop_GhostMode.GCN_Loop_GhostMode_C.ExecuteUbergraph_GCN_Loop_GhostMode
// 0x0398 (0x0398 - 0x0000)
struct GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_MyTarget_1;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters_1;                         // 0x0010(0x00D0)(ConstParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       K2Node_Event_ParticleComponents_1;                 // 0x00E0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                K2Node_Event_AudioComponents_1;                    // 0x00F0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class AActor*                                 K2Node_Event_MyTarget;                             // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters;                           // 0x0108(0x00D0)(ConstParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       K2Node_Event_ParticleComponents;                   // 0x01D8(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                K2Node_Event_AudioComponents;                      // 0x01E8(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class ULegacyCameraShake*                     K2Node_Event_BurstCameraShakeInstance;             // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            K2Node_Event_BurstDecalInstance;                   // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakGameplayCueParameters_NormalizedMagnitude; // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakGameplayCueParameters_RawMagnitude;  // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           CallFunc_BreakGameplayCueParameters_EffectContext; // 0x0210(0x0018)()
	struct FGameplayTag                           CallFunc_BreakGameplayCueParameters_MatchedTagName; // 0x0228(0x0004)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_BreakGameplayCueParameters_OriginalTag;   // 0x022C(0x0004)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_BreakGameplayCueParameters_AggregatedSourceTags; // 0x0230(0x0020)()
	struct FGameplayTagContainer                  CallFunc_BreakGameplayCueParameters_AggregatedTargetTags; // 0x0250(0x0020)()
	struct FVector                                CallFunc_BreakGameplayCueParameters_Location;      // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakGameplayCueParameters_Normal;        // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakGameplayCueParameters_Instigator;    // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakGameplayCueParameters_EffectCauser;  // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_BreakGameplayCueParameters_SourceObject;  // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakGameplayCueParameters_PhysicalMaterial; // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakGameplayCueParameters_GameplayEffectLevel; // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakGameplayCueParameters_AbilityLevel;  // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_BreakGameplayCueParameters_TargetAttachComponent; // 0x02C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakGameplayCueParameters_bReplicateLocationWhenUsingMinimalRepProxy; // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_1;        // 0x02E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPawnHighlight_Interface_C> K2Node_DynamicCast_AsPawn_Highlight_Interface;     // 0x02F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_302[0x2];                                      // 0x0302(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPawnHighlight                         CallFunc_Highlight_Lerp_Highlight;                 // 0x0304(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0338(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue_1;         // 0x0340(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x034A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34B[0x1];                                      // 0x034B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPawnHighlight                         CallFunc_Highlight_Lerp_Highlight_1;               // 0x034C(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Highlight_Lerp_Alpha_ImplicitCast;        // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode) == 0x000008, "Wrong alignment on GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode");
static_assert(sizeof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode) == 0x000398, "Wrong size on GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, EntryPoint) == 0x000000, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::EntryPoint' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, K2Node_Event_MyTarget_1) == 0x000008, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::K2Node_Event_MyTarget_1' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, K2Node_Event_Parameters_1) == 0x000010, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::K2Node_Event_Parameters_1' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, K2Node_Event_ParticleComponents_1) == 0x0000E0, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::K2Node_Event_ParticleComponents_1' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, K2Node_Event_AudioComponents_1) == 0x0000F0, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::K2Node_Event_AudioComponents_1' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, K2Node_Event_MyTarget) == 0x000100, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::K2Node_Event_MyTarget' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, K2Node_Event_Parameters) == 0x000108, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::K2Node_Event_Parameters' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, K2Node_Event_ParticleComponents) == 0x0001D8, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::K2Node_Event_ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, K2Node_Event_AudioComponents) == 0x0001E8, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::K2Node_Event_AudioComponents' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, K2Node_Event_BurstCameraShakeInstance) == 0x0001F8, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::K2Node_Event_BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, K2Node_Event_BurstDecalInstance) == 0x000200, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::K2Node_Event_BurstDecalInstance' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_BreakGameplayCueParameters_NormalizedMagnitude) == 0x000208, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_BreakGameplayCueParameters_NormalizedMagnitude' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_BreakGameplayCueParameters_RawMagnitude) == 0x00020C, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_BreakGameplayCueParameters_RawMagnitude' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_BreakGameplayCueParameters_EffectContext) == 0x000210, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_BreakGameplayCueParameters_EffectContext' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_BreakGameplayCueParameters_MatchedTagName) == 0x000228, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_BreakGameplayCueParameters_MatchedTagName' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_BreakGameplayCueParameters_OriginalTag) == 0x00022C, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_BreakGameplayCueParameters_OriginalTag' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_BreakGameplayCueParameters_AggregatedSourceTags) == 0x000230, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_BreakGameplayCueParameters_AggregatedSourceTags' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_BreakGameplayCueParameters_AggregatedTargetTags) == 0x000250, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_BreakGameplayCueParameters_AggregatedTargetTags' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_BreakGameplayCueParameters_Location) == 0x000270, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_BreakGameplayCueParameters_Location' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_BreakGameplayCueParameters_Normal) == 0x000288, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_BreakGameplayCueParameters_Normal' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_BreakGameplayCueParameters_Instigator) == 0x0002A0, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_BreakGameplayCueParameters_Instigator' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_BreakGameplayCueParameters_EffectCauser) == 0x0002A8, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_BreakGameplayCueParameters_EffectCauser' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_BreakGameplayCueParameters_SourceObject) == 0x0002B0, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_BreakGameplayCueParameters_SourceObject' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_BreakGameplayCueParameters_PhysicalMaterial) == 0x0002B8, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_BreakGameplayCueParameters_PhysicalMaterial' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_BreakGameplayCueParameters_GameplayEffectLevel) == 0x0002C0, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_BreakGameplayCueParameters_GameplayEffectLevel' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_BreakGameplayCueParameters_AbilityLevel) == 0x0002C4, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_BreakGameplayCueParameters_AbilityLevel' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_BreakGameplayCueParameters_TargetAttachComponent) == 0x0002C8, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_BreakGameplayCueParameters_TargetAttachComponent' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_BreakGameplayCueParameters_bReplicateLocationWhenUsingMinimalRepProxy) == 0x0002D0, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_BreakGameplayCueParameters_bReplicateLocationWhenUsingMinimalRepProxy' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0002D8, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_K2_GetRootComponent_ReturnValue_1) == 0x0002E0, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_K2_GetRootComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_IsValid_ReturnValue) == 0x0002E8, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, K2Node_DynamicCast_AsPawn_Highlight_Interface) == 0x0002F0, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::K2Node_DynamicCast_AsPawn_Highlight_Interface' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, K2Node_DynamicCast_bSuccess) == 0x000300, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_IsValid_ReturnValue_1) == 0x000301, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_Highlight_Lerp_Highlight) == 0x000304, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_Highlight_Lerp_Highlight' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000338, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_SpawnSoundAttached_ReturnValue_1) == 0x000340, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_SpawnSoundAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_IsValid_ReturnValue_2) == 0x000348, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_IsValid_ReturnValue_3) == 0x000349, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00034A, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_Highlight_Lerp_Highlight_1) == 0x00034C, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_Highlight_Lerp_Highlight_1' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000380, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_IsValid_ReturnValue_4) == 0x000388, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode, CallFunc_Highlight_Lerp_Alpha_ImplicitCast) == 0x000390, "Member 'GCN_Loop_GhostMode_C_ExecuteUbergraph_GCN_Loop_GhostMode::CallFunc_Highlight_Lerp_Alpha_ImplicitCast' has a wrong offset!");

// Function GCN_Loop_GhostMode.GCN_Loop_GhostMode_C.Highlight Lerp
// 0x00B0 (0x00B0 - 0x0000)
struct GCN_Loop_GhostMode_C_Highlight_Lerp final
{
public:
	double                                        Alpha;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPawnHighlight                         Highlight;                                         // 0x0008(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPawnHighlight                         K2Node_MakeStruct_PawnHighlight;                   // 0x0068(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_1;     // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Priority_28_E2E1B5344846E187B9C11B863A7F0698_ImplicitCast; // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_FresnelExponent_24_B427CF0C441AA37ED49833BF7579DE6D_ImplicitCast; // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_FresnelBrightness_23_52B0F96447FF640F47DF2895B0602E92_ImplicitCast; // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCN_Loop_GhostMode_C_Highlight_Lerp) == 0x000008, "Wrong alignment on GCN_Loop_GhostMode_C_Highlight_Lerp");
static_assert(sizeof(GCN_Loop_GhostMode_C_Highlight_Lerp) == 0x0000B0, "Wrong size on GCN_Loop_GhostMode_C_Highlight_Lerp");
static_assert(offsetof(GCN_Loop_GhostMode_C_Highlight_Lerp, Alpha) == 0x000000, "Member 'GCN_Loop_GhostMode_C_Highlight_Lerp::Alpha' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_Highlight_Lerp, Highlight) == 0x000008, "Member 'GCN_Loop_GhostMode_C_Highlight_Lerp::Highlight' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_Highlight_Lerp, CallFunc_Lerp_ReturnValue) == 0x000038, "Member 'GCN_Loop_GhostMode_C_Highlight_Lerp::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_Highlight_Lerp, CallFunc_Lerp_ReturnValue_1) == 0x000040, "Member 'GCN_Loop_GhostMode_C_Highlight_Lerp::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_Highlight_Lerp, CallFunc_LinearColorLerp_ReturnValue) == 0x000048, "Member 'GCN_Loop_GhostMode_C_Highlight_Lerp::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_Highlight_Lerp, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000058, "Member 'GCN_Loop_GhostMode_C_Highlight_Lerp::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_Highlight_Lerp, K2Node_MakeStruct_PawnHighlight) == 0x000068, "Member 'GCN_Loop_GhostMode_C_Highlight_Lerp::K2Node_MakeStruct_PawnHighlight' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_Highlight_Lerp, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000098, "Member 'GCN_Loop_GhostMode_C_Highlight_Lerp::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_Highlight_Lerp, CallFunc_LinearColorLerp_Alpha_ImplicitCast_1) == 0x00009C, "Member 'GCN_Loop_GhostMode_C_Highlight_Lerp::CallFunc_LinearColorLerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_Highlight_Lerp, K2Node_MakeStruct_Priority_28_E2E1B5344846E187B9C11B863A7F0698_ImplicitCast) == 0x0000A0, "Member 'GCN_Loop_GhostMode_C_Highlight_Lerp::K2Node_MakeStruct_Priority_28_E2E1B5344846E187B9C11B863A7F0698_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_Highlight_Lerp, K2Node_MakeStruct_FresnelExponent_24_B427CF0C441AA37ED49833BF7579DE6D_ImplicitCast) == 0x0000A4, "Member 'GCN_Loop_GhostMode_C_Highlight_Lerp::K2Node_MakeStruct_FresnelExponent_24_B427CF0C441AA37ED49833BF7579DE6D_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_Highlight_Lerp, K2Node_MakeStruct_FresnelBrightness_23_52B0F96447FF640F47DF2895B0602E92_ImplicitCast) == 0x0000A8, "Member 'GCN_Loop_GhostMode_C_Highlight_Lerp::K2Node_MakeStruct_FresnelBrightness_23_52B0F96447FF640F47DF2895B0602E92_ImplicitCast' has a wrong offset!");

// Function GCN_Loop_GhostMode.GCN_Loop_GhostMode_C.OnLoopingStart
// 0x00F8 (0x00F8 - 0x0000)
struct GCN_Loop_GhostMode_C_OnLoopingStart final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       ParticleComponents;                                // 0x00D8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x00E8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GCN_Loop_GhostMode_C_OnLoopingStart) == 0x000008, "Wrong alignment on GCN_Loop_GhostMode_C_OnLoopingStart");
static_assert(sizeof(GCN_Loop_GhostMode_C_OnLoopingStart) == 0x0000F8, "Wrong size on GCN_Loop_GhostMode_C_OnLoopingStart");
static_assert(offsetof(GCN_Loop_GhostMode_C_OnLoopingStart, MyTarget) == 0x000000, "Member 'GCN_Loop_GhostMode_C_OnLoopingStart::MyTarget' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_OnLoopingStart, Parameters) == 0x000008, "Member 'GCN_Loop_GhostMode_C_OnLoopingStart::Parameters' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_OnLoopingStart, ParticleComponents) == 0x0000D8, "Member 'GCN_Loop_GhostMode_C_OnLoopingStart::ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_OnLoopingStart, AudioComponents) == 0x0000E8, "Member 'GCN_Loop_GhostMode_C_OnLoopingStart::AudioComponents' has a wrong offset!");

// Function GCN_Loop_GhostMode.GCN_Loop_GhostMode_C.OnRemoval
// 0x0108 (0x0108 - 0x0000)
struct GCN_Loop_GhostMode_C_OnRemoval final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       ParticleComponents;                                // 0x00D8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x00E8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class ULegacyCameraShake*                     BurstCameraShakeInstance;                          // 0x00F8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            BurstDecalInstance;                                // 0x0100(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCN_Loop_GhostMode_C_OnRemoval) == 0x000008, "Wrong alignment on GCN_Loop_GhostMode_C_OnRemoval");
static_assert(sizeof(GCN_Loop_GhostMode_C_OnRemoval) == 0x000108, "Wrong size on GCN_Loop_GhostMode_C_OnRemoval");
static_assert(offsetof(GCN_Loop_GhostMode_C_OnRemoval, MyTarget) == 0x000000, "Member 'GCN_Loop_GhostMode_C_OnRemoval::MyTarget' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_OnRemoval, Parameters) == 0x000008, "Member 'GCN_Loop_GhostMode_C_OnRemoval::Parameters' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_OnRemoval, ParticleComponents) == 0x0000D8, "Member 'GCN_Loop_GhostMode_C_OnRemoval::ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_OnRemoval, AudioComponents) == 0x0000E8, "Member 'GCN_Loop_GhostMode_C_OnRemoval::AudioComponents' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_OnRemoval, BurstCameraShakeInstance) == 0x0000F8, "Member 'GCN_Loop_GhostMode_C_OnRemoval::BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GCN_Loop_GhostMode_C_OnRemoval, BurstDecalInstance) == 0x000100, "Member 'GCN_Loop_GhostMode_C_OnRemoval::BurstDecalInstance' has a wrong offset!");

}

