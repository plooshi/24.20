#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIFramework

#include "Basic.hpp"

#include "UIFramework_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "ModelViewViewModel_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK::Params
{

// Function UIFramework.UIFrameworkPlayerComponent.AddWidget
// 0x0030 (0x0030 - 0x0000)
struct UIFrameworkPlayerComponent_AddWidget final
{
public:
	struct FUIFrameworkGameLayerSlot              Widget;                                            // 0x0000(0x0030)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkPlayerComponent_AddWidget) == 0x000008, "Wrong alignment on UIFrameworkPlayerComponent_AddWidget");
static_assert(sizeof(UIFrameworkPlayerComponent_AddWidget) == 0x000030, "Wrong size on UIFrameworkPlayerComponent_AddWidget");
static_assert(offsetof(UIFrameworkPlayerComponent_AddWidget, Widget) == 0x000000, "Member 'UIFrameworkPlayerComponent_AddWidget::Widget' has a wrong offset!");

// Function UIFramework.UIFrameworkPlayerComponent.RemoveWidget
// 0x0008 (0x0008 - 0x0000)
struct UIFrameworkPlayerComponent_RemoveWidget final
{
public:
	class UUIFrameworkWidget*                     Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkPlayerComponent_RemoveWidget) == 0x000008, "Wrong alignment on UIFrameworkPlayerComponent_RemoveWidget");
static_assert(sizeof(UIFrameworkPlayerComponent_RemoveWidget) == 0x000008, "Wrong size on UIFrameworkPlayerComponent_RemoveWidget");
static_assert(offsetof(UIFrameworkPlayerComponent_RemoveWidget, Widget) == 0x000000, "Member 'UIFrameworkPlayerComponent_RemoveWidget::Widget' has a wrong offset!");

// Function UIFramework.UIFrameworkPlayerComponent.ServerRemoveWidgetRootFromTree
// 0x0008 (0x0008 - 0x0000)
struct UIFrameworkPlayerComponent_ServerRemoveWidgetRootFromTree final
{
public:
	struct FUIFrameworkWidgetId                   WidgetId;                                          // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkPlayerComponent_ServerRemoveWidgetRootFromTree) == 0x000008, "Wrong alignment on UIFrameworkPlayerComponent_ServerRemoveWidgetRootFromTree");
static_assert(sizeof(UIFrameworkPlayerComponent_ServerRemoveWidgetRootFromTree) == 0x000008, "Wrong size on UIFrameworkPlayerComponent_ServerRemoveWidgetRootFromTree");
static_assert(offsetof(UIFrameworkPlayerComponent_ServerRemoveWidgetRootFromTree, WidgetId) == 0x000000, "Member 'UIFrameworkPlayerComponent_ServerRemoveWidgetRootFromTree::WidgetId' has a wrong offset!");

// Function UIFramework.UIFrameworkButton.ServerClick
// 0x0008 (0x0008 - 0x0000)
struct UIFrameworkButton_ServerClick final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkButton_ServerClick) == 0x000008, "Wrong alignment on UIFrameworkButton_ServerClick");
static_assert(sizeof(UIFrameworkButton_ServerClick) == 0x000008, "Wrong size on UIFrameworkButton_ServerClick");
static_assert(offsetof(UIFrameworkButton_ServerClick, PlayerController) == 0x000000, "Member 'UIFrameworkButton_ServerClick::PlayerController' has a wrong offset!");

// Function UIFramework.UIFrameworkButton.SetContent
// 0x0040 (0x0040 - 0x0000)
struct UIFrameworkButton_SetContent final
{
public:
	struct FUIFrameworkSimpleSlot                 Content;                                           // 0x0000(0x0040)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkButton_SetContent) == 0x000008, "Wrong alignment on UIFrameworkButton_SetContent");
static_assert(sizeof(UIFrameworkButton_SetContent) == 0x000040, "Wrong size on UIFrameworkButton_SetContent");
static_assert(offsetof(UIFrameworkButton_SetContent, Content) == 0x000000, "Member 'UIFrameworkButton_SetContent::Content' has a wrong offset!");

// Function UIFramework.UIFrameworkButton.GetContent
// 0x0040 (0x0040 - 0x0000)
struct UIFrameworkButton_GetContent final
{
public:
	struct FUIFrameworkSimpleSlot                 ReturnValue;                                       // 0x0000(0x0040)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkButton_GetContent) == 0x000008, "Wrong alignment on UIFrameworkButton_GetContent");
static_assert(sizeof(UIFrameworkButton_GetContent) == 0x000040, "Wrong size on UIFrameworkButton_GetContent");
static_assert(offsetof(UIFrameworkButton_GetContent, ReturnValue) == 0x000000, "Member 'UIFrameworkButton_GetContent::ReturnValue' has a wrong offset!");

// Function UIFramework.UIFrameworkCanvasBox.AddWidget
// 0x0070 (0x0070 - 0x0000)
struct UIFrameworkCanvasBox_AddWidget final
{
public:
	struct FUIFrameworkCanvasBoxSlot              Widget;                                            // 0x0000(0x0070)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkCanvasBox_AddWidget) == 0x000008, "Wrong alignment on UIFrameworkCanvasBox_AddWidget");
static_assert(sizeof(UIFrameworkCanvasBox_AddWidget) == 0x000070, "Wrong size on UIFrameworkCanvasBox_AddWidget");
static_assert(offsetof(UIFrameworkCanvasBox_AddWidget, Widget) == 0x000000, "Member 'UIFrameworkCanvasBox_AddWidget::Widget' has a wrong offset!");

// Function UIFramework.UIFrameworkCanvasBox.RemoveWidget
// 0x0008 (0x0008 - 0x0000)
struct UIFrameworkCanvasBox_RemoveWidget final
{
public:
	class UUIFrameworkWidget*                     Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkCanvasBox_RemoveWidget) == 0x000008, "Wrong alignment on UIFrameworkCanvasBox_RemoveWidget");
static_assert(sizeof(UIFrameworkCanvasBox_RemoveWidget) == 0x000008, "Wrong size on UIFrameworkCanvasBox_RemoveWidget");
static_assert(offsetof(UIFrameworkCanvasBox_RemoveWidget, Widget) == 0x000000, "Member 'UIFrameworkCanvasBox_RemoveWidget::Widget' has a wrong offset!");

// Function UIFramework.UIFrameworkColorBlock.SetColor
// 0x0010 (0x0010 - 0x0000)
struct UIFrameworkColorBlock_SetColor final
{
public:
	struct FLinearColor                           Tint;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkColorBlock_SetColor) == 0x000004, "Wrong alignment on UIFrameworkColorBlock_SetColor");
static_assert(sizeof(UIFrameworkColorBlock_SetColor) == 0x000010, "Wrong size on UIFrameworkColorBlock_SetColor");
static_assert(offsetof(UIFrameworkColorBlock_SetColor, Tint) == 0x000000, "Member 'UIFrameworkColorBlock_SetColor::Tint' has a wrong offset!");

// Function UIFramework.UIFrameworkColorBlock.SetDesiredSize
// 0x0008 (0x0008 - 0x0000)
struct UIFrameworkColorBlock_SetDesiredSize final
{
public:
	struct FVector2f                              DesiredSize_0;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkColorBlock_SetDesiredSize) == 0x000004, "Wrong alignment on UIFrameworkColorBlock_SetDesiredSize");
static_assert(sizeof(UIFrameworkColorBlock_SetDesiredSize) == 0x000008, "Wrong size on UIFrameworkColorBlock_SetDesiredSize");
static_assert(offsetof(UIFrameworkColorBlock_SetDesiredSize, DesiredSize_0) == 0x000000, "Member 'UIFrameworkColorBlock_SetDesiredSize::DesiredSize_0' has a wrong offset!");

// Function UIFramework.UIFrameworkColorBlock.GetColor
// 0x0010 (0x0010 - 0x0000)
struct UIFrameworkColorBlock_GetColor final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkColorBlock_GetColor) == 0x000004, "Wrong alignment on UIFrameworkColorBlock_GetColor");
static_assert(sizeof(UIFrameworkColorBlock_GetColor) == 0x000010, "Wrong size on UIFrameworkColorBlock_GetColor");
static_assert(offsetof(UIFrameworkColorBlock_GetColor, ReturnValue) == 0x000000, "Member 'UIFrameworkColorBlock_GetColor::ReturnValue' has a wrong offset!");

// Function UIFramework.UIFrameworkColorBlock.GetDesiredSize
// 0x0008 (0x0008 - 0x0000)
struct UIFrameworkColorBlock_GetDesiredSize final
{
public:
	struct FVector2f                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkColorBlock_GetDesiredSize) == 0x000004, "Wrong alignment on UIFrameworkColorBlock_GetDesiredSize");
static_assert(sizeof(UIFrameworkColorBlock_GetDesiredSize) == 0x000008, "Wrong size on UIFrameworkColorBlock_GetDesiredSize");
static_assert(offsetof(UIFrameworkColorBlock_GetDesiredSize, ReturnValue) == 0x000000, "Member 'UIFrameworkColorBlock_GetDesiredSize::ReturnValue' has a wrong offset!");

// Function UIFramework.UIFrameworkImageBlock.SetDesiredSize
// 0x0008 (0x0008 - 0x0000)
struct UIFrameworkImageBlock_SetDesiredSize final
{
public:
	struct FVector2f                              DesiredSize;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkImageBlock_SetDesiredSize) == 0x000004, "Wrong alignment on UIFrameworkImageBlock_SetDesiredSize");
static_assert(sizeof(UIFrameworkImageBlock_SetDesiredSize) == 0x000008, "Wrong size on UIFrameworkImageBlock_SetDesiredSize");
static_assert(offsetof(UIFrameworkImageBlock_SetDesiredSize, DesiredSize) == 0x000000, "Member 'UIFrameworkImageBlock_SetDesiredSize::DesiredSize' has a wrong offset!");

// Function UIFramework.UIFrameworkImageBlock.SetMaterial
// 0x0028 (0x0028 - 0x0000)
struct UIFrameworkImageBlock_SetMaterial final
{
public:
	TSoftObjectPtr<class UMaterialInterface>      Material;                                          // 0x0000(0x0028)(Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkImageBlock_SetMaterial) == 0x000008, "Wrong alignment on UIFrameworkImageBlock_SetMaterial");
static_assert(sizeof(UIFrameworkImageBlock_SetMaterial) == 0x000028, "Wrong size on UIFrameworkImageBlock_SetMaterial");
static_assert(offsetof(UIFrameworkImageBlock_SetMaterial, Material) == 0x000000, "Member 'UIFrameworkImageBlock_SetMaterial::Material' has a wrong offset!");

// Function UIFramework.UIFrameworkImageBlock.SetTexture
// 0x0030 (0x0030 - 0x0000)
struct UIFrameworkImageBlock_SetTexture final
{
public:
	TSoftObjectPtr<class UTexture2D>              Texture;                                           // 0x0000(0x0028)(Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseTextureSize;                                   // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UIFrameworkImageBlock_SetTexture) == 0x000008, "Wrong alignment on UIFrameworkImageBlock_SetTexture");
static_assert(sizeof(UIFrameworkImageBlock_SetTexture) == 0x000030, "Wrong size on UIFrameworkImageBlock_SetTexture");
static_assert(offsetof(UIFrameworkImageBlock_SetTexture, Texture) == 0x000000, "Member 'UIFrameworkImageBlock_SetTexture::Texture' has a wrong offset!");
static_assert(offsetof(UIFrameworkImageBlock_SetTexture, bUseTextureSize) == 0x000028, "Member 'UIFrameworkImageBlock_SetTexture::bUseTextureSize' has a wrong offset!");

// Function UIFramework.UIFrameworkImageBlock.SetTiling
// 0x0001 (0x0001 - 0x0000)
struct UIFrameworkImageBlock_SetTiling final
{
public:
	ESlateBrushTileType                           OverflowPolicy;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkImageBlock_SetTiling) == 0x000001, "Wrong alignment on UIFrameworkImageBlock_SetTiling");
static_assert(sizeof(UIFrameworkImageBlock_SetTiling) == 0x000001, "Wrong size on UIFrameworkImageBlock_SetTiling");
static_assert(offsetof(UIFrameworkImageBlock_SetTiling, OverflowPolicy) == 0x000000, "Member 'UIFrameworkImageBlock_SetTiling::OverflowPolicy' has a wrong offset!");

// Function UIFramework.UIFrameworkImageBlock.SetTint
// 0x0010 (0x0010 - 0x0000)
struct UIFrameworkImageBlock_SetTint final
{
public:
	struct FLinearColor                           Tint;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkImageBlock_SetTint) == 0x000004, "Wrong alignment on UIFrameworkImageBlock_SetTint");
static_assert(sizeof(UIFrameworkImageBlock_SetTint) == 0x000010, "Wrong size on UIFrameworkImageBlock_SetTint");
static_assert(offsetof(UIFrameworkImageBlock_SetTint, Tint) == 0x000000, "Member 'UIFrameworkImageBlock_SetTint::Tint' has a wrong offset!");

// Function UIFramework.UIFrameworkImageBlock.GeResourceObject
// 0x0028 (0x0028 - 0x0000)
struct UIFrameworkImageBlock_GeResourceObject final
{
public:
	TSoftObjectPtr<class UObject>                 ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkImageBlock_GeResourceObject) == 0x000008, "Wrong alignment on UIFrameworkImageBlock_GeResourceObject");
static_assert(sizeof(UIFrameworkImageBlock_GeResourceObject) == 0x000028, "Wrong size on UIFrameworkImageBlock_GeResourceObject");
static_assert(offsetof(UIFrameworkImageBlock_GeResourceObject, ReturnValue) == 0x000000, "Member 'UIFrameworkImageBlock_GeResourceObject::ReturnValue' has a wrong offset!");

// Function UIFramework.UIFrameworkImageBlock.GetDesiredSize
// 0x0008 (0x0008 - 0x0000)
struct UIFrameworkImageBlock_GetDesiredSize final
{
public:
	struct FVector2f                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkImageBlock_GetDesiredSize) == 0x000004, "Wrong alignment on UIFrameworkImageBlock_GetDesiredSize");
static_assert(sizeof(UIFrameworkImageBlock_GetDesiredSize) == 0x000008, "Wrong size on UIFrameworkImageBlock_GetDesiredSize");
static_assert(offsetof(UIFrameworkImageBlock_GetDesiredSize, ReturnValue) == 0x000000, "Member 'UIFrameworkImageBlock_GetDesiredSize::ReturnValue' has a wrong offset!");

// Function UIFramework.UIFrameworkImageBlock.GetTiling
// 0x0001 (0x0001 - 0x0000)
struct UIFrameworkImageBlock_GetTiling final
{
public:
	ESlateBrushTileType                           ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkImageBlock_GetTiling) == 0x000001, "Wrong alignment on UIFrameworkImageBlock_GetTiling");
static_assert(sizeof(UIFrameworkImageBlock_GetTiling) == 0x000001, "Wrong size on UIFrameworkImageBlock_GetTiling");
static_assert(offsetof(UIFrameworkImageBlock_GetTiling, ReturnValue) == 0x000000, "Member 'UIFrameworkImageBlock_GetTiling::ReturnValue' has a wrong offset!");

// Function UIFramework.UIFrameworkImageBlock.GetTint
// 0x0010 (0x0010 - 0x0000)
struct UIFrameworkImageBlock_GetTint final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkImageBlock_GetTint) == 0x000004, "Wrong alignment on UIFrameworkImageBlock_GetTint");
static_assert(sizeof(UIFrameworkImageBlock_GetTint) == 0x000010, "Wrong size on UIFrameworkImageBlock_GetTint");
static_assert(offsetof(UIFrameworkImageBlock_GetTint, ReturnValue) == 0x000000, "Member 'UIFrameworkImageBlock_GetTint::ReturnValue' has a wrong offset!");

// Function UIFramework.UIFrameworkOverlay.AddWidget
// 0x0040 (0x0040 - 0x0000)
struct UIFrameworkOverlay_AddWidget final
{
public:
	struct FUIFrameworkOverlaySlot                Widget;                                            // 0x0000(0x0040)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkOverlay_AddWidget) == 0x000008, "Wrong alignment on UIFrameworkOverlay_AddWidget");
static_assert(sizeof(UIFrameworkOverlay_AddWidget) == 0x000040, "Wrong size on UIFrameworkOverlay_AddWidget");
static_assert(offsetof(UIFrameworkOverlay_AddWidget, Widget) == 0x000000, "Member 'UIFrameworkOverlay_AddWidget::Widget' has a wrong offset!");

// Function UIFramework.UIFrameworkOverlay.RemoveWidget
// 0x0008 (0x0008 - 0x0000)
struct UIFrameworkOverlay_RemoveWidget final
{
public:
	class UUIFrameworkWidget*                     Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkOverlay_RemoveWidget) == 0x000008, "Wrong alignment on UIFrameworkOverlay_RemoveWidget");
static_assert(sizeof(UIFrameworkOverlay_RemoveWidget) == 0x000008, "Wrong size on UIFrameworkOverlay_RemoveWidget");
static_assert(offsetof(UIFrameworkOverlay_RemoveWidget, Widget) == 0x000000, "Member 'UIFrameworkOverlay_RemoveWidget::Widget' has a wrong offset!");

// Function UIFramework.UIFrameworkSimpleButton.OnClick
// 0x0001 (0x0001 - 0x0000)
struct UIFrameworkSimpleButton_OnClick final
{
public:
	struct FMVVMEventField                        Field;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkSimpleButton_OnClick) == 0x000001, "Wrong alignment on UIFrameworkSimpleButton_OnClick");
static_assert(sizeof(UIFrameworkSimpleButton_OnClick) == 0x000001, "Wrong size on UIFrameworkSimpleButton_OnClick");
static_assert(offsetof(UIFrameworkSimpleButton_OnClick, Field) == 0x000000, "Member 'UIFrameworkSimpleButton_OnClick::Field' has a wrong offset!");

// Function UIFramework.UIFrameworkSimpleButton.ServerClick
// 0x0008 (0x0008 - 0x0000)
struct UIFrameworkSimpleButton_ServerClick final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkSimpleButton_ServerClick) == 0x000008, "Wrong alignment on UIFrameworkSimpleButton_ServerClick");
static_assert(sizeof(UIFrameworkSimpleButton_ServerClick) == 0x000008, "Wrong size on UIFrameworkSimpleButton_ServerClick");
static_assert(offsetof(UIFrameworkSimpleButton_ServerClick, PlayerController) == 0x000000, "Member 'UIFrameworkSimpleButton_ServerClick::PlayerController' has a wrong offset!");

// Function UIFramework.UIFrameworkSimpleButton.SetText
// 0x0018 (0x0018 - 0x0000)
struct UIFrameworkSimpleButton_SetText final
{
public:
	class FText                                   Value;                                             // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkSimpleButton_SetText) == 0x000008, "Wrong alignment on UIFrameworkSimpleButton_SetText");
static_assert(sizeof(UIFrameworkSimpleButton_SetText) == 0x000018, "Wrong size on UIFrameworkSimpleButton_SetText");
static_assert(offsetof(UIFrameworkSimpleButton_SetText, Value) == 0x000000, "Member 'UIFrameworkSimpleButton_SetText::Value' has a wrong offset!");

// Function UIFramework.UIFrameworkStackBox.AddWidget
// 0x0048 (0x0048 - 0x0000)
struct UIFrameworkStackBox_AddWidget final
{
public:
	struct FUIFrameworkStackBoxSlot               Widget;                                            // 0x0000(0x0048)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkStackBox_AddWidget) == 0x000008, "Wrong alignment on UIFrameworkStackBox_AddWidget");
static_assert(sizeof(UIFrameworkStackBox_AddWidget) == 0x000048, "Wrong size on UIFrameworkStackBox_AddWidget");
static_assert(offsetof(UIFrameworkStackBox_AddWidget, Widget) == 0x000000, "Member 'UIFrameworkStackBox_AddWidget::Widget' has a wrong offset!");

// Function UIFramework.UIFrameworkStackBox.RemoveWidget
// 0x0008 (0x0008 - 0x0000)
struct UIFrameworkStackBox_RemoveWidget final
{
public:
	class UUIFrameworkWidget*                     Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkStackBox_RemoveWidget) == 0x000008, "Wrong alignment on UIFrameworkStackBox_RemoveWidget");
static_assert(sizeof(UIFrameworkStackBox_RemoveWidget) == 0x000008, "Wrong size on UIFrameworkStackBox_RemoveWidget");
static_assert(offsetof(UIFrameworkStackBox_RemoveWidget, Widget) == 0x000000, "Member 'UIFrameworkStackBox_RemoveWidget::Widget' has a wrong offset!");

// Function UIFramework.UIFrameworkTextBase.SetJustification
// 0x0001 (0x0001 - 0x0000)
struct UIFrameworkTextBase_SetJustification final
{
public:
	ETextJustify                                  Justification_0;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkTextBase_SetJustification) == 0x000001, "Wrong alignment on UIFrameworkTextBase_SetJustification");
static_assert(sizeof(UIFrameworkTextBase_SetJustification) == 0x000001, "Wrong size on UIFrameworkTextBase_SetJustification");
static_assert(offsetof(UIFrameworkTextBase_SetJustification, Justification_0) == 0x000000, "Member 'UIFrameworkTextBase_SetJustification::Justification_0' has a wrong offset!");

// Function UIFramework.UIFrameworkTextBase.SetOverflowPolicy
// 0x0001 (0x0001 - 0x0000)
struct UIFrameworkTextBase_SetOverflowPolicy final
{
public:
	ETextOverflowPolicy                           OverflowPolicy_0;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkTextBase_SetOverflowPolicy) == 0x000001, "Wrong alignment on UIFrameworkTextBase_SetOverflowPolicy");
static_assert(sizeof(UIFrameworkTextBase_SetOverflowPolicy) == 0x000001, "Wrong size on UIFrameworkTextBase_SetOverflowPolicy");
static_assert(offsetof(UIFrameworkTextBase_SetOverflowPolicy, OverflowPolicy_0) == 0x000000, "Member 'UIFrameworkTextBase_SetOverflowPolicy::OverflowPolicy_0' has a wrong offset!");

// Function UIFramework.UIFrameworkTextBase.SetText
// 0x0018 (0x0018 - 0x0000)
struct UIFrameworkTextBase_SetText final
{
public:
	class FText                                   Text_0;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkTextBase_SetText) == 0x000008, "Wrong alignment on UIFrameworkTextBase_SetText");
static_assert(sizeof(UIFrameworkTextBase_SetText) == 0x000018, "Wrong size on UIFrameworkTextBase_SetText");
static_assert(offsetof(UIFrameworkTextBase_SetText, Text_0) == 0x000000, "Member 'UIFrameworkTextBase_SetText::Text_0' has a wrong offset!");

// Function UIFramework.UIFrameworkTextBase.SetTextColor
// 0x0010 (0x0010 - 0x0000)
struct UIFrameworkTextBase_SetTextColor final
{
public:
	struct FLinearColor                           TextColor_0;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkTextBase_SetTextColor) == 0x000004, "Wrong alignment on UIFrameworkTextBase_SetTextColor");
static_assert(sizeof(UIFrameworkTextBase_SetTextColor) == 0x000010, "Wrong size on UIFrameworkTextBase_SetTextColor");
static_assert(offsetof(UIFrameworkTextBase_SetTextColor, TextColor_0) == 0x000000, "Member 'UIFrameworkTextBase_SetTextColor::TextColor_0' has a wrong offset!");

// Function UIFramework.UIFrameworkTextBase.GetJustification
// 0x0001 (0x0001 - 0x0000)
struct UIFrameworkTextBase_GetJustification final
{
public:
	ETextJustify                                  ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkTextBase_GetJustification) == 0x000001, "Wrong alignment on UIFrameworkTextBase_GetJustification");
static_assert(sizeof(UIFrameworkTextBase_GetJustification) == 0x000001, "Wrong size on UIFrameworkTextBase_GetJustification");
static_assert(offsetof(UIFrameworkTextBase_GetJustification, ReturnValue) == 0x000000, "Member 'UIFrameworkTextBase_GetJustification::ReturnValue' has a wrong offset!");

// Function UIFramework.UIFrameworkTextBase.GetOverflowPolicy
// 0x0001 (0x0001 - 0x0000)
struct UIFrameworkTextBase_GetOverflowPolicy final
{
public:
	ETextOverflowPolicy                           ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkTextBase_GetOverflowPolicy) == 0x000001, "Wrong alignment on UIFrameworkTextBase_GetOverflowPolicy");
static_assert(sizeof(UIFrameworkTextBase_GetOverflowPolicy) == 0x000001, "Wrong size on UIFrameworkTextBase_GetOverflowPolicy");
static_assert(offsetof(UIFrameworkTextBase_GetOverflowPolicy, ReturnValue) == 0x000000, "Member 'UIFrameworkTextBase_GetOverflowPolicy::ReturnValue' has a wrong offset!");

// Function UIFramework.UIFrameworkTextBase.GetText
// 0x0018 (0x0018 - 0x0000)
struct UIFrameworkTextBase_GetText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkTextBase_GetText) == 0x000008, "Wrong alignment on UIFrameworkTextBase_GetText");
static_assert(sizeof(UIFrameworkTextBase_GetText) == 0x000018, "Wrong size on UIFrameworkTextBase_GetText");
static_assert(offsetof(UIFrameworkTextBase_GetText, ReturnValue) == 0x000000, "Member 'UIFrameworkTextBase_GetText::ReturnValue' has a wrong offset!");

// Function UIFramework.UIFrameworkTextBase.GetTextColor
// 0x0010 (0x0010 - 0x0000)
struct UIFrameworkTextBase_GetTextColor final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkTextBase_GetTextColor) == 0x000004, "Wrong alignment on UIFrameworkTextBase_GetTextColor");
static_assert(sizeof(UIFrameworkTextBase_GetTextColor) == 0x000010, "Wrong size on UIFrameworkTextBase_GetTextColor");
static_assert(offsetof(UIFrameworkTextBase_GetTextColor, ReturnValue) == 0x000000, "Member 'UIFrameworkTextBase_GetTextColor::ReturnValue' has a wrong offset!");

// Function UIFramework.UIFrameworkTextBlock.SetShadowColor
// 0x0010 (0x0010 - 0x0000)
struct UIFrameworkTextBlock_SetShadowColor final
{
public:
	struct FLinearColor                           ShadowColor_0;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkTextBlock_SetShadowColor) == 0x000004, "Wrong alignment on UIFrameworkTextBlock_SetShadowColor");
static_assert(sizeof(UIFrameworkTextBlock_SetShadowColor) == 0x000010, "Wrong size on UIFrameworkTextBlock_SetShadowColor");
static_assert(offsetof(UIFrameworkTextBlock_SetShadowColor, ShadowColor_0) == 0x000000, "Member 'UIFrameworkTextBlock_SetShadowColor::ShadowColor_0' has a wrong offset!");

// Function UIFramework.UIFrameworkTextBlock.SetShadowOffset
// 0x0008 (0x0008 - 0x0000)
struct UIFrameworkTextBlock_SetShadowOffset final
{
public:
	struct FVector2f                              ShadowOffset_0;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkTextBlock_SetShadowOffset) == 0x000004, "Wrong alignment on UIFrameworkTextBlock_SetShadowOffset");
static_assert(sizeof(UIFrameworkTextBlock_SetShadowOffset) == 0x000008, "Wrong size on UIFrameworkTextBlock_SetShadowOffset");
static_assert(offsetof(UIFrameworkTextBlock_SetShadowOffset, ShadowOffset_0) == 0x000000, "Member 'UIFrameworkTextBlock_SetShadowOffset::ShadowOffset_0' has a wrong offset!");

// Function UIFramework.UIFrameworkTextBlock.GetShadowColor
// 0x0010 (0x0010 - 0x0000)
struct UIFrameworkTextBlock_GetShadowColor final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkTextBlock_GetShadowColor) == 0x000004, "Wrong alignment on UIFrameworkTextBlock_GetShadowColor");
static_assert(sizeof(UIFrameworkTextBlock_GetShadowColor) == 0x000010, "Wrong size on UIFrameworkTextBlock_GetShadowColor");
static_assert(offsetof(UIFrameworkTextBlock_GetShadowColor, ReturnValue) == 0x000000, "Member 'UIFrameworkTextBlock_GetShadowColor::ReturnValue' has a wrong offset!");

// Function UIFramework.UIFrameworkTextBlock.GetShadowOffset
// 0x0008 (0x0008 - 0x0000)
struct UIFrameworkTextBlock_GetShadowOffset final
{
public:
	struct FVector2f                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkTextBlock_GetShadowOffset) == 0x000004, "Wrong alignment on UIFrameworkTextBlock_GetShadowOffset");
static_assert(sizeof(UIFrameworkTextBlock_GetShadowOffset) == 0x000008, "Wrong size on UIFrameworkTextBlock_GetShadowOffset");
static_assert(offsetof(UIFrameworkTextBlock_GetShadowOffset, ReturnValue) == 0x000000, "Member 'UIFrameworkTextBlock_GetShadowOffset::ReturnValue' has a wrong offset!");

// Function UIFramework.UIFrameworkUserWidget.SetNamedSlot
// 0x0010 (0x0010 - 0x0000)
struct UIFrameworkUserWidget_SetNamedSlot final
{
public:
	class FName                                   SlotName;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIFrameworkWidget*                     Widget;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkUserWidget_SetNamedSlot) == 0x000008, "Wrong alignment on UIFrameworkUserWidget_SetNamedSlot");
static_assert(sizeof(UIFrameworkUserWidget_SetNamedSlot) == 0x000010, "Wrong size on UIFrameworkUserWidget_SetNamedSlot");
static_assert(offsetof(UIFrameworkUserWidget_SetNamedSlot, SlotName) == 0x000000, "Member 'UIFrameworkUserWidget_SetNamedSlot::SlotName' has a wrong offset!");
static_assert(offsetof(UIFrameworkUserWidget_SetNamedSlot, Widget) == 0x000008, "Member 'UIFrameworkUserWidget_SetNamedSlot::Widget' has a wrong offset!");

// Function UIFramework.UIFrameworkUserWidget.SetWidgetClass
// 0x0028 (0x0028 - 0x0000)
struct UIFrameworkUserWidget_SetWidgetClass final
{
public:
	TSoftClassPtr<class UClass>                   Value;                                             // 0x0000(0x0028)(Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UIFrameworkUserWidget_SetWidgetClass) == 0x000008, "Wrong alignment on UIFrameworkUserWidget_SetWidgetClass");
static_assert(sizeof(UIFrameworkUserWidget_SetWidgetClass) == 0x000028, "Wrong size on UIFrameworkUserWidget_SetWidgetClass");
static_assert(offsetof(UIFrameworkUserWidget_SetWidgetClass, Value) == 0x000000, "Member 'UIFrameworkUserWidget_SetWidgetClass::Value' has a wrong offset!");

}

