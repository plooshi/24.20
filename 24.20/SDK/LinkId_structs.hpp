#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LinkId

#include "Basic.hpp"


namespace SDK
{

// Enum LinkId.ELinkCodeUserInputError
// NumValues: 0x0005
enum class ELinkCodeUserInputError : uint8
{
	InvalidMnemonicCharacter                 = 0,
	InvalidMnemonicLength                    = 1,
	InvalidVersionFormat                     = 2,
	NoError                                  = 3,
	ELinkCodeUserInputError_MAX              = 4,
};

// ScriptStruct LinkId.OnlineLinkId
// 0x0018 (0x0018 - 0x0000)
struct FOnlineLinkId final
{
public:
	class FString                                 Mnemonic;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         Version;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FOnlineLinkId) == 0x000008, "Wrong alignment on FOnlineLinkId");
static_assert(sizeof(FOnlineLinkId) == 0x000018, "Wrong size on FOnlineLinkId");
static_assert(offsetof(FOnlineLinkId, Mnemonic) == 0x000000, "Member 'FOnlineLinkId::Mnemonic' has a wrong offset!");
static_assert(offsetof(FOnlineLinkId, Version) == 0x000010, "Member 'FOnlineLinkId::Version' has a wrong offset!");

}

