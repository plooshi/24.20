#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NPCStatusWidgetBar

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function NPCStatusWidgetBar.NPCStatusWidgetBar_C.ExecuteUbergraph_NPCStatusWidgetBar
// 0x0020 (0x0020 - 0x0000)
struct NPCStatusWidgetBar_C_ExecuteUbergraph_NPCStatusWidgetBar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Value;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NumPips;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetProgress_Progress_ImplicitCast;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AnimateProgressFromCurrent_End_ImplicitCast; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPCStatusWidgetBar_C_ExecuteUbergraph_NPCStatusWidgetBar) == 0x000008, "Wrong alignment on NPCStatusWidgetBar_C_ExecuteUbergraph_NPCStatusWidgetBar");
static_assert(sizeof(NPCStatusWidgetBar_C_ExecuteUbergraph_NPCStatusWidgetBar) == 0x000020, "Wrong size on NPCStatusWidgetBar_C_ExecuteUbergraph_NPCStatusWidgetBar");
static_assert(offsetof(NPCStatusWidgetBar_C_ExecuteUbergraph_NPCStatusWidgetBar, EntryPoint) == 0x000000, "Member 'NPCStatusWidgetBar_C_ExecuteUbergraph_NPCStatusWidgetBar::EntryPoint' has a wrong offset!");
static_assert(offsetof(NPCStatusWidgetBar_C_ExecuteUbergraph_NPCStatusWidgetBar, K2Node_CustomEvent_Value) == 0x000008, "Member 'NPCStatusWidgetBar_C_ExecuteUbergraph_NPCStatusWidgetBar::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(NPCStatusWidgetBar_C_ExecuteUbergraph_NPCStatusWidgetBar, K2Node_CustomEvent_NumPips) == 0x000010, "Member 'NPCStatusWidgetBar_C_ExecuteUbergraph_NPCStatusWidgetBar::K2Node_CustomEvent_NumPips' has a wrong offset!");
static_assert(offsetof(NPCStatusWidgetBar_C_ExecuteUbergraph_NPCStatusWidgetBar, K2Node_Event_IsDesignTime) == 0x000014, "Member 'NPCStatusWidgetBar_C_ExecuteUbergraph_NPCStatusWidgetBar::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(NPCStatusWidgetBar_C_ExecuteUbergraph_NPCStatusWidgetBar, CallFunc_SetProgress_Progress_ImplicitCast) == 0x000018, "Member 'NPCStatusWidgetBar_C_ExecuteUbergraph_NPCStatusWidgetBar::CallFunc_SetProgress_Progress_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NPCStatusWidgetBar_C_ExecuteUbergraph_NPCStatusWidgetBar, CallFunc_AnimateProgressFromCurrent_End_ImplicitCast) == 0x00001C, "Member 'NPCStatusWidgetBar_C_ExecuteUbergraph_NPCStatusWidgetBar::CallFunc_AnimateProgressFromCurrent_End_ImplicitCast' has a wrong offset!");

// Function NPCStatusWidgetBar.NPCStatusWidgetBar_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct NPCStatusWidgetBar_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPCStatusWidgetBar_C_PreConstruct) == 0x000001, "Wrong alignment on NPCStatusWidgetBar_C_PreConstruct");
static_assert(sizeof(NPCStatusWidgetBar_C_PreConstruct) == 0x000001, "Wrong size on NPCStatusWidgetBar_C_PreConstruct");
static_assert(offsetof(NPCStatusWidgetBar_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'NPCStatusWidgetBar_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function NPCStatusWidgetBar.NPCStatusWidgetBar_C.SetHealthBarColorDependingHealth
// 0x0078 (0x0078 - 0x0000)
struct NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth final
{
public:
	double                                        CurrentPercentage;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_3;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_4;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_5;          // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_3;                           // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_4;                           // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_5;                           // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth) == 0x000008, "Wrong alignment on NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth");
static_assert(sizeof(NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth) == 0x000078, "Wrong size on NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth");
static_assert(offsetof(NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth, CurrentPercentage) == 0x000000, "Member 'NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth::CurrentPercentage' has a wrong offset!");
static_assert(offsetof(NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth, Temp_bool_Variable) == 0x000008, "Member 'NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth, Temp_bool_Variable_1) == 0x000009, "Member 'NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth, Temp_bool_Variable_2) == 0x00000A, "Member 'NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth, Temp_bool_Variable_3) == 0x00000B, "Member 'NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth, CallFunc_Less_DoubleDouble_ReturnValue) == 0x00000C, "Member 'NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x00000D, "Member 'NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x00000E, "Member 'NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth, Temp_bool_Variable_4) == 0x00000F, "Member 'NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth, K2Node_Select_Default) == 0x000010, "Member 'NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth, CallFunc_Less_DoubleDouble_ReturnValue_3) == 0x000020, "Member 'NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth::CallFunc_Less_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth, CallFunc_Less_DoubleDouble_ReturnValue_4) == 0x000021, "Member 'NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth::CallFunc_Less_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth, K2Node_Select_Default_1) == 0x000024, "Member 'NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth, Temp_bool_Variable_5) == 0x000034, "Member 'NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth, CallFunc_Less_DoubleDouble_ReturnValue_5) == 0x000035, "Member 'NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth::CallFunc_Less_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth, K2Node_Select_Default_2) == 0x000038, "Member 'NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth, K2Node_Select_Default_3) == 0x000048, "Member 'NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth, K2Node_Select_Default_4) == 0x000058, "Member 'NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth, K2Node_Select_Default_5) == 0x000068, "Member 'NPCStatusWidgetBar_C_SetHealthBarColorDependingHealth::K2Node_Select_Default_5' has a wrong offset!");

// Function NPCStatusWidgetBar.NPCStatusWidgetBar_C.SetNumPips
// 0x0004 (0x0004 - 0x0000)
struct NPCStatusWidgetBar_C_SetNumPips final
{
public:
	int32                                         NumPips;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPCStatusWidgetBar_C_SetNumPips) == 0x000004, "Wrong alignment on NPCStatusWidgetBar_C_SetNumPips");
static_assert(sizeof(NPCStatusWidgetBar_C_SetNumPips) == 0x000004, "Wrong size on NPCStatusWidgetBar_C_SetNumPips");
static_assert(offsetof(NPCStatusWidgetBar_C_SetNumPips, NumPips) == 0x000000, "Member 'NPCStatusWidgetBar_C_SetNumPips::NumPips' has a wrong offset!");

// Function NPCStatusWidgetBar.NPCStatusWidgetBar_C.SetPercent
// 0x0008 (0x0008 - 0x0000)
struct NPCStatusWidgetBar_C_SetPercent final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPCStatusWidgetBar_C_SetPercent) == 0x000008, "Wrong alignment on NPCStatusWidgetBar_C_SetPercent");
static_assert(sizeof(NPCStatusWidgetBar_C_SetPercent) == 0x000008, "Wrong size on NPCStatusWidgetBar_C_SetPercent");
static_assert(offsetof(NPCStatusWidgetBar_C_SetPercent, Value) == 0x000000, "Member 'NPCStatusWidgetBar_C_SetPercent::Value' has a wrong offset!");

}

