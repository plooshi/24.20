#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MatchmakingPortalUI

#include "Basic.hpp"

#include "CommonUI_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// Class MatchmakingPortalUI.FortMatchmakingPortalCountdown
// 0x0030 (0x03D8 - 0x03A8)
class UFortMatchmakingPortalCountdown final : public UCommonActivatableWidget
{
public:
	uint8                                         Pad_3A8[0x8];                                      // 0x03A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputComponent*                        MatchmakingPortalInputComponent;                   // 0x03B0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortActivityScalingTextBlock*          Text_IslandName;                                   // 0x03B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         CountdownTime;                                     // 0x03C0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3C4[0x4];                                      // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnFinishedCountdown;                               // 0x03C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void FinishTimer();
	void HandleCancelClicked();
	void StartCountdown();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortMatchmakingPortalCountdown">();
	}
	static class UFortMatchmakingPortalCountdown* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortMatchmakingPortalCountdown>();
	}
};
static_assert(alignof(UFortMatchmakingPortalCountdown) == 0x000008, "Wrong alignment on UFortMatchmakingPortalCountdown");
static_assert(sizeof(UFortMatchmakingPortalCountdown) == 0x0003D8, "Wrong size on UFortMatchmakingPortalCountdown");
static_assert(offsetof(UFortMatchmakingPortalCountdown, MatchmakingPortalInputComponent) == 0x0003B0, "Member 'UFortMatchmakingPortalCountdown::MatchmakingPortalInputComponent' has a wrong offset!");
static_assert(offsetof(UFortMatchmakingPortalCountdown, Text_IslandName) == 0x0003B8, "Member 'UFortMatchmakingPortalCountdown::Text_IslandName' has a wrong offset!");
static_assert(offsetof(UFortMatchmakingPortalCountdown, CountdownTime) == 0x0003C0, "Member 'UFortMatchmakingPortalCountdown::CountdownTime' has a wrong offset!");
static_assert(offsetof(UFortMatchmakingPortalCountdown, OnFinishedCountdown) == 0x0003C8, "Member 'UFortMatchmakingPortalCountdown::OnFinishedCountdown' has a wrong offset!");

// Class MatchmakingPortalUI.FortMatchmakingPortalModal
// 0x03D0 (0x07C8 - 0x03F8)
class UFortMatchmakingPortalModal final : public UFortActivityView
{
public:
	struct FTimerHandle                           MatchmakingStartTimerHandle;                       // 0x03F8(0x0008)(BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_400[0x358];                                    // 0x0400(0x0358)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         XpTagMnemonicWhitelist;                            // 0x0758(0x0010)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	class UCommonRichTextBlock*                   Text_ActivityOrigin;                               // 0x0768(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonRichTextBlock*                   Text_LinkCode;                                     // 0x0770(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                       Text_ActivityName;                                 // 0x0778(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                       Text_ActivityDescription;                          // 0x0780(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UScrollBox*                             ScrollBox_ActivityDescription;                     // 0x0788(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDynamicEntryBox*                       EntryBox_ActivityTags;                             // 0x0790(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortSimpleMaterialProgressBar*         ProgressBar_ContentDownload;                       // 0x0798(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_AcceptPublic;                               // 0x07A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_AcceptPrivate;                              // 0x07A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_Favorite;                                   // 0x07B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_Cancel;                                     // 0x07B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortModalBackground*                   ModalBackground;                                   // 0x07C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	class FText GetCodeTextFormat(const class FText& IslandCode);
	class FText GetCreatorTextFormat(const class FText& CreatorName);
	void HandleOnMatchmakingError();
	void OnAdditionalContentUpdate(const class FText& MatchmakingState, const float Progress, bool bShowProgressBar);
	void OnMatchmakingStarted(const class FText& MatchmakingState);
	void OnMatchmakingStopped();
	void SendLinkCodeToParty();
	void SetMatchmakingStateText(const class FText& MatchmakingStateText);
	void SetMatchmakingTimer();

	TArray<class FString> GetContentWarningStrings() const;
	EFortInvalidActivityReason GetInvalidActivityReason() const;
	bool IsDownloadRequired() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortMatchmakingPortalModal">();
	}
	static class UFortMatchmakingPortalModal* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortMatchmakingPortalModal>();
	}
};
static_assert(alignof(UFortMatchmakingPortalModal) == 0x000008, "Wrong alignment on UFortMatchmakingPortalModal");
static_assert(sizeof(UFortMatchmakingPortalModal) == 0x0007C8, "Wrong size on UFortMatchmakingPortalModal");
static_assert(offsetof(UFortMatchmakingPortalModal, MatchmakingStartTimerHandle) == 0x0003F8, "Member 'UFortMatchmakingPortalModal::MatchmakingStartTimerHandle' has a wrong offset!");
static_assert(offsetof(UFortMatchmakingPortalModal, XpTagMnemonicWhitelist) == 0x000758, "Member 'UFortMatchmakingPortalModal::XpTagMnemonicWhitelist' has a wrong offset!");
static_assert(offsetof(UFortMatchmakingPortalModal, Text_ActivityOrigin) == 0x000768, "Member 'UFortMatchmakingPortalModal::Text_ActivityOrigin' has a wrong offset!");
static_assert(offsetof(UFortMatchmakingPortalModal, Text_LinkCode) == 0x000770, "Member 'UFortMatchmakingPortalModal::Text_LinkCode' has a wrong offset!");
static_assert(offsetof(UFortMatchmakingPortalModal, Text_ActivityName) == 0x000778, "Member 'UFortMatchmakingPortalModal::Text_ActivityName' has a wrong offset!");
static_assert(offsetof(UFortMatchmakingPortalModal, Text_ActivityDescription) == 0x000780, "Member 'UFortMatchmakingPortalModal::Text_ActivityDescription' has a wrong offset!");
static_assert(offsetof(UFortMatchmakingPortalModal, ScrollBox_ActivityDescription) == 0x000788, "Member 'UFortMatchmakingPortalModal::ScrollBox_ActivityDescription' has a wrong offset!");
static_assert(offsetof(UFortMatchmakingPortalModal, EntryBox_ActivityTags) == 0x000790, "Member 'UFortMatchmakingPortalModal::EntryBox_ActivityTags' has a wrong offset!");
static_assert(offsetof(UFortMatchmakingPortalModal, ProgressBar_ContentDownload) == 0x000798, "Member 'UFortMatchmakingPortalModal::ProgressBar_ContentDownload' has a wrong offset!");
static_assert(offsetof(UFortMatchmakingPortalModal, Button_AcceptPublic) == 0x0007A0, "Member 'UFortMatchmakingPortalModal::Button_AcceptPublic' has a wrong offset!");
static_assert(offsetof(UFortMatchmakingPortalModal, Button_AcceptPrivate) == 0x0007A8, "Member 'UFortMatchmakingPortalModal::Button_AcceptPrivate' has a wrong offset!");
static_assert(offsetof(UFortMatchmakingPortalModal, Button_Favorite) == 0x0007B0, "Member 'UFortMatchmakingPortalModal::Button_Favorite' has a wrong offset!");
static_assert(offsetof(UFortMatchmakingPortalModal, Button_Cancel) == 0x0007B8, "Member 'UFortMatchmakingPortalModal::Button_Cancel' has a wrong offset!");
static_assert(offsetof(UFortMatchmakingPortalModal, ModalBackground) == 0x0007C0, "Member 'UFortMatchmakingPortalModal::ModalBackground' has a wrong offset!");

// Class MatchmakingPortalUI.FortMatchmakingPortalPopup
// 0x0128 (0x04D8 - 0x03B0)
class UFortMatchmakingPortalPopup final : public UFortPortalHUDDetails
{
public:
	uint8                                         Pad_3B0[0x10];                                     // 0x03B0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGameActivity*                      CachedGameActivity;                                // 0x03C0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortMatchmakingPortalModal*            MatchmakingPortalModalWidget;                      // 0x03C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UCommonActivatableWidget>   MatchmakingFeedbackClass;                          // 0x03D0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UFortMatchmakingPortalCountdown> MatchmakingCountdownClass;                         // 0x03D8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                WorldPointerLocation;                              // 0x03E0(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   CreatorNameTextFormat;                             // 0x03F8(0x0018)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UHeaderDescriptionHUDComponent> CachedHUDComponent;                                // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortMatchmakingPortalModal> IslandModal;                                       // 0x0418(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMatchmakingPortalPopupData            CachedIslandData;                                  // 0x0420(0x0060)(BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FText                                   InvalidLinkCodeWarningText;                        // 0x0480(0x0018)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                         MatchmakingFeedbackDelayTime;                      // 0x0498(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bIsWithinPortalRange : 1;                          // 0x049C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_49D[0x3];                                      // 0x049D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMatchmakingPortalCountdown*        MatchmakingCountdownWidget;                        // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonActivatableWidget*               MatchmakingFeedbackContainerWidget;                // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortAthenaCreativeMatchmakingWidget*   MatchmakingFeedbackWidget;                         // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonRichTextBlock*                   RichText_CreatorName;                              // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       Text_IslandName;                                   // 0x04C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDynamicEntryBox*                       EntryBox_ActivityTags;                             // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortKeybindWidget*                     GlobalActionKeybindWidget;                         // 0x04D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BindOverlapEvents();
	bool GetIslandData(struct FMatchmakingPortalPopupData* OutIslandData, class UHeaderDescriptionHUDComponent* HUDComponent);
	void HandleFinishedCountdown();
	void HandleHUDShow(const bool bShow, const bool bShouldAnimate);
	void HandleLoadScreenChanged(class AFortPlayerControllerAthena* PlayerController, bool bLoadScreenEnabled, const class FText& HUDReason);
	void HandleOnPortalDetailsVisibilityCheck(bool bShowWidget);
	void HandleStartedRespawn(class AFortPlayerControllerZone* PlayerController);
	void HandleWidgetUpdate();
	bool IsInteractingDeviceAMatchmakingPortal();
	void OnPlayerCanInteractChanged(const bool bPlayerCanInteract);
	void OnShowPortalPopup(const bool bShow, const bool bAnimate);
	void UpdateVisuals(const class UHeaderDescriptionHUDComponent* HUDComponent);

	class UFortAthenaCreativeMatchmakingWidget* GetMatchmakingFeedbackWidget(const class UCommonActivatableWidget* MatchmakingFeedbackContainer) const;
	bool HasActivityToShow() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortMatchmakingPortalPopup">();
	}
	static class UFortMatchmakingPortalPopup* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortMatchmakingPortalPopup>();
	}
};
static_assert(alignof(UFortMatchmakingPortalPopup) == 0x000008, "Wrong alignment on UFortMatchmakingPortalPopup");
static_assert(sizeof(UFortMatchmakingPortalPopup) == 0x0004D8, "Wrong size on UFortMatchmakingPortalPopup");
static_assert(offsetof(UFortMatchmakingPortalPopup, CachedGameActivity) == 0x0003C0, "Member 'UFortMatchmakingPortalPopup::CachedGameActivity' has a wrong offset!");
static_assert(offsetof(UFortMatchmakingPortalPopup, MatchmakingPortalModalWidget) == 0x0003C8, "Member 'UFortMatchmakingPortalPopup::MatchmakingPortalModalWidget' has a wrong offset!");
static_assert(offsetof(UFortMatchmakingPortalPopup, MatchmakingFeedbackClass) == 0x0003D0, "Member 'UFortMatchmakingPortalPopup::MatchmakingFeedbackClass' has a wrong offset!");
static_assert(offsetof(UFortMatchmakingPortalPopup, MatchmakingCountdownClass) == 0x0003D8, "Member 'UFortMatchmakingPortalPopup::MatchmakingCountdownClass' has a wrong offset!");
static_assert(offsetof(UFortMatchmakingPortalPopup, WorldPointerLocation) == 0x0003E0, "Member 'UFortMatchmakingPortalPopup::WorldPointerLocation' has a wrong offset!");
static_assert(offsetof(UFortMatchmakingPortalPopup, CreatorNameTextFormat) == 0x0003F8, "Member 'UFortMatchmakingPortalPopup::CreatorNameTextFormat' has a wrong offset!");
static_assert(offsetof(UFortMatchmakingPortalPopup, CachedHUDComponent) == 0x000410, "Member 'UFortMatchmakingPortalPopup::CachedHUDComponent' has a wrong offset!");
static_assert(offsetof(UFortMatchmakingPortalPopup, IslandModal) == 0x000418, "Member 'UFortMatchmakingPortalPopup::IslandModal' has a wrong offset!");
static_assert(offsetof(UFortMatchmakingPortalPopup, CachedIslandData) == 0x000420, "Member 'UFortMatchmakingPortalPopup::CachedIslandData' has a wrong offset!");
static_assert(offsetof(UFortMatchmakingPortalPopup, InvalidLinkCodeWarningText) == 0x000480, "Member 'UFortMatchmakingPortalPopup::InvalidLinkCodeWarningText' has a wrong offset!");
static_assert(offsetof(UFortMatchmakingPortalPopup, MatchmakingFeedbackDelayTime) == 0x000498, "Member 'UFortMatchmakingPortalPopup::MatchmakingFeedbackDelayTime' has a wrong offset!");
static_assert(offsetof(UFortMatchmakingPortalPopup, MatchmakingCountdownWidget) == 0x0004A0, "Member 'UFortMatchmakingPortalPopup::MatchmakingCountdownWidget' has a wrong offset!");
static_assert(offsetof(UFortMatchmakingPortalPopup, MatchmakingFeedbackContainerWidget) == 0x0004A8, "Member 'UFortMatchmakingPortalPopup::MatchmakingFeedbackContainerWidget' has a wrong offset!");
static_assert(offsetof(UFortMatchmakingPortalPopup, MatchmakingFeedbackWidget) == 0x0004B0, "Member 'UFortMatchmakingPortalPopup::MatchmakingFeedbackWidget' has a wrong offset!");
static_assert(offsetof(UFortMatchmakingPortalPopup, RichText_CreatorName) == 0x0004B8, "Member 'UFortMatchmakingPortalPopup::RichText_CreatorName' has a wrong offset!");
static_assert(offsetof(UFortMatchmakingPortalPopup, Text_IslandName) == 0x0004C0, "Member 'UFortMatchmakingPortalPopup::Text_IslandName' has a wrong offset!");
static_assert(offsetof(UFortMatchmakingPortalPopup, EntryBox_ActivityTags) == 0x0004C8, "Member 'UFortMatchmakingPortalPopup::EntryBox_ActivityTags' has a wrong offset!");
static_assert(offsetof(UFortMatchmakingPortalPopup, GlobalActionKeybindWidget) == 0x0004D0, "Member 'UFortMatchmakingPortalPopup::GlobalActionKeybindWidget' has a wrong offset!");

// Class MatchmakingPortalUI.FortModalBackground
// 0x0038 (0x03E0 - 0x03A8)
class UFortModalBackground final : public UCommonActivatableWidget
{
public:
	uint8                                         Pad_3A8[0x20];                                     // 0x03A8(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      Button_Back;                                       // 0x03C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_BackBoard;                                  // 0x03D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_MobileClose;                                // 0x03D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnPreviewImageChanged(const bool bIsLoading, const class UTexture* InTexture);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortModalBackground">();
	}
	static class UFortModalBackground* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortModalBackground>();
	}
};
static_assert(alignof(UFortModalBackground) == 0x000008, "Wrong alignment on UFortModalBackground");
static_assert(sizeof(UFortModalBackground) == 0x0003E0, "Wrong size on UFortModalBackground");
static_assert(offsetof(UFortModalBackground, Button_Back) == 0x0003C8, "Member 'UFortModalBackground::Button_Back' has a wrong offset!");
static_assert(offsetof(UFortModalBackground, Button_BackBoard) == 0x0003D0, "Member 'UFortModalBackground::Button_BackBoard' has a wrong offset!");
static_assert(offsetof(UFortModalBackground, Button_MobileClose) == 0x0003D8, "Member 'UFortModalBackground::Button_MobileClose' has a wrong offset!");

// Class MatchmakingPortalUI.FortUIGameFeatureAction_OverridePortalHUDDetails
// 0x0028 (0x0050 - 0x0028)
class UFortUIGameFeatureAction_OverridePortalHUDDetails final : public UFortUIGameFeatureAction
{
public:
	TSoftClassPtr<class UClass>                   SoftPortalHUDDetailsClass;                         // 0x0028(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortUIGameFeatureAction_OverridePortalHUDDetails">();
	}
	static class UFortUIGameFeatureAction_OverridePortalHUDDetails* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortUIGameFeatureAction_OverridePortalHUDDetails>();
	}
};
static_assert(alignof(UFortUIGameFeatureAction_OverridePortalHUDDetails) == 0x000008, "Wrong alignment on UFortUIGameFeatureAction_OverridePortalHUDDetails");
static_assert(sizeof(UFortUIGameFeatureAction_OverridePortalHUDDetails) == 0x000050, "Wrong size on UFortUIGameFeatureAction_OverridePortalHUDDetails");
static_assert(offsetof(UFortUIGameFeatureAction_OverridePortalHUDDetails, SoftPortalHUDDetailsClass) == 0x000028, "Member 'UFortUIGameFeatureAction_OverridePortalHUDDetails::SoftPortalHUDDetailsClass' has a wrong offset!");

}

