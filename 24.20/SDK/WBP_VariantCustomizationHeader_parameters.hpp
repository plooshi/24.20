#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_VariantCustomizationHeader

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_VariantCustomizationHeader.WBP_VariantCustomizationHeader_C.ExecuteUbergraph_WBP_VariantCustomizationHeader
// 0x0008 (0x0008 - 0x0000)
struct WBP_VariantCustomizationHeader_C_ExecuteUbergraph_WBP_VariantCustomizationHeader final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_VariantCustomizationHeader_C_ExecuteUbergraph_WBP_VariantCustomizationHeader) == 0x000004, "Wrong alignment on WBP_VariantCustomizationHeader_C_ExecuteUbergraph_WBP_VariantCustomizationHeader");
static_assert(sizeof(WBP_VariantCustomizationHeader_C_ExecuteUbergraph_WBP_VariantCustomizationHeader) == 0x000008, "Wrong size on WBP_VariantCustomizationHeader_C_ExecuteUbergraph_WBP_VariantCustomizationHeader");
static_assert(offsetof(WBP_VariantCustomizationHeader_C_ExecuteUbergraph_WBP_VariantCustomizationHeader, EntryPoint) == 0x000000, "Member 'WBP_VariantCustomizationHeader_C_ExecuteUbergraph_WBP_VariantCustomizationHeader::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_VariantCustomizationHeader_C_ExecuteUbergraph_WBP_VariantCustomizationHeader, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_VariantCustomizationHeader_C_ExecuteUbergraph_WBP_VariantCustomizationHeader::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_VariantCustomizationHeader.WBP_VariantCustomizationHeader_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_VariantCustomizationHeader_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_VariantCustomizationHeader_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_VariantCustomizationHeader_C_PreConstruct");
static_assert(sizeof(WBP_VariantCustomizationHeader_C_PreConstruct) == 0x000001, "Wrong size on WBP_VariantCustomizationHeader_C_PreConstruct");
static_assert(offsetof(WBP_VariantCustomizationHeader_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_VariantCustomizationHeader_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_VariantCustomizationHeader.WBP_VariantCustomizationHeader_C.Set Header
// 0x0028 (0x0028 - 0x0000)
struct WBP_VariantCustomizationHeader_C_Set_Header final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UMaterialInterface*                     Image;                                             // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_VariantCustomizationHeader_C_Set_Header) == 0x000008, "Wrong alignment on WBP_VariantCustomizationHeader_C_Set_Header");
static_assert(sizeof(WBP_VariantCustomizationHeader_C_Set_Header) == 0x000028, "Wrong size on WBP_VariantCustomizationHeader_C_Set_Header");
static_assert(offsetof(WBP_VariantCustomizationHeader_C_Set_Header, InText) == 0x000000, "Member 'WBP_VariantCustomizationHeader_C_Set_Header::InText' has a wrong offset!");
static_assert(offsetof(WBP_VariantCustomizationHeader_C_Set_Header, Image) == 0x000018, "Member 'WBP_VariantCustomizationHeader_C_Set_Header::Image' has a wrong offset!");
static_assert(offsetof(WBP_VariantCustomizationHeader_C_Set_Header, Temp_byte_Variable) == 0x000020, "Member 'WBP_VariantCustomizationHeader_C_Set_Header::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_VariantCustomizationHeader_C_Set_Header, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'WBP_VariantCustomizationHeader_C_Set_Header::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VariantCustomizationHeader_C_Set_Header, Temp_byte_Variable_1) == 0x000022, "Member 'WBP_VariantCustomizationHeader_C_Set_Header::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_VariantCustomizationHeader_C_Set_Header, Temp_bool_Variable) == 0x000023, "Member 'WBP_VariantCustomizationHeader_C_Set_Header::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_VariantCustomizationHeader_C_Set_Header, K2Node_Select_Default) == 0x000024, "Member 'WBP_VariantCustomizationHeader_C_Set_Header::K2Node_Select_Default' has a wrong offset!");

// Function WBP_VariantCustomizationHeader.WBP_VariantCustomizationHeader_C.Set Subheader
// 0x0048 (0x0048 - 0x0000)
struct WBP_VariantCustomizationHeader_C_Set_Subheader final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UTexture2D*                             Image;                                             // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default_1;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_VariantCustomizationHeader_C_Set_Subheader) == 0x000008, "Wrong alignment on WBP_VariantCustomizationHeader_C_Set_Subheader");
static_assert(sizeof(WBP_VariantCustomizationHeader_C_Set_Subheader) == 0x000048, "Wrong size on WBP_VariantCustomizationHeader_C_Set_Subheader");
static_assert(offsetof(WBP_VariantCustomizationHeader_C_Set_Subheader, InText) == 0x000000, "Member 'WBP_VariantCustomizationHeader_C_Set_Subheader::InText' has a wrong offset!");
static_assert(offsetof(WBP_VariantCustomizationHeader_C_Set_Subheader, Image) == 0x000018, "Member 'WBP_VariantCustomizationHeader_C_Set_Subheader::Image' has a wrong offset!");
static_assert(offsetof(WBP_VariantCustomizationHeader_C_Set_Subheader, Temp_byte_Variable) == 0x000020, "Member 'WBP_VariantCustomizationHeader_C_Set_Subheader::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_VariantCustomizationHeader_C_Set_Subheader, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'WBP_VariantCustomizationHeader_C_Set_Subheader::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VariantCustomizationHeader_C_Set_Subheader, CallFunc_TextIsEmpty_ReturnValue) == 0x000022, "Member 'WBP_VariantCustomizationHeader_C_Set_Subheader::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VariantCustomizationHeader_C_Set_Subheader, CallFunc_Not_PreBool_ReturnValue) == 0x000023, "Member 'WBP_VariantCustomizationHeader_C_Set_Subheader::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VariantCustomizationHeader_C_Set_Subheader, CallFunc_BooleanOR_ReturnValue) == 0x000024, "Member 'WBP_VariantCustomizationHeader_C_Set_Subheader::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VariantCustomizationHeader_C_Set_Subheader, Temp_byte_Variable_1) == 0x000025, "Member 'WBP_VariantCustomizationHeader_C_Set_Subheader::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_VariantCustomizationHeader_C_Set_Subheader, Temp_bool_Variable) == 0x000026, "Member 'WBP_VariantCustomizationHeader_C_Set_Subheader::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_VariantCustomizationHeader_C_Set_Subheader, CallFunc_PlayAnimation_ReturnValue) == 0x000028, "Member 'WBP_VariantCustomizationHeader_C_Set_Subheader::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_VariantCustomizationHeader_C_Set_Subheader, K2Node_Select_Default) == 0x000030, "Member 'WBP_VariantCustomizationHeader_C_Set_Subheader::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_VariantCustomizationHeader_C_Set_Subheader, Temp_bool_Variable_1) == 0x000031, "Member 'WBP_VariantCustomizationHeader_C_Set_Subheader::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_VariantCustomizationHeader_C_Set_Subheader, K2Node_Select_Default_1) == 0x000038, "Member 'WBP_VariantCustomizationHeader_C_Set_Subheader::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_VariantCustomizationHeader_C_Set_Subheader, CallFunc_PlayAnimation_ReturnValue_1) == 0x000040, "Member 'WBP_VariantCustomizationHeader_C_Set_Subheader::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

}

