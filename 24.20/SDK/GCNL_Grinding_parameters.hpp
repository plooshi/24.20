#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCNL_Grinding

#include "Basic.hpp"

#include "GrindRailRuntime_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GCNL_Grinding.GCNL_Grinding_C.ExecuteUbergraph_GCNL_Grinding
// 0x03D0 (0x03D0 - 0x0000)
struct GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AFortGrindRail* OldRail, class AFortGrindRail* NewRail)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bNewIsSprinting;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGrindRailBoosterMode                         K2Node_CustomEvent_PreviousBoosterMode;            // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EGrindRailBoosterMode PreviousBoosterMode)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_GrindingComponent_C*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortGrindRail*                         K2Node_CustomEvent_OldRail;                        // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortGrindRail*                         K2Node_CustomEvent_NewRail;                        // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_MyTarget_2;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters_2;                         // 0x0058(0x00D0)(ConstParm, ContainsInstancedReference)
	TArray<class UFXSystemComponent*>             K2Node_Event_ParticleComponents_2;                 // 0x0128(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                K2Node_Event_AudioComponents_2;                    // 0x0138(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class ULegacyCameraShake*                     K2Node_Event_BurstCameraShakeInstance_1;           // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            K2Node_Event_BurstDecalInstance_1;                 // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABGA_GrindRail_C*                       K2Node_DynamicCast_AsBGA_Grind_Rail;               // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_MyTarget_1;                           // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters_1;                         // 0x0180(0x00D0)(ConstParm, ContainsInstancedReference)
	TArray<class UFXSystemComponent*>             K2Node_Event_ParticleComponents_1;                 // 0x0250(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                K2Node_Event_AudioComponents_1;                    // 0x0260(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class ULegacyCameraShake*                     K2Node_Event_BurstCameraShakeInstance;             // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            K2Node_Event_BurstDecalInstance;                   // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bNewState;                            // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_285[0x3];                                      // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0288(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0290(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bNewIsSprinting)>         K2Node_CreateDelegate_OutputDelegate_3;            // 0x0298(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetConsoleVariableFloatValue_ReturnValue; // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_MyTarget;                             // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters;                           // 0x02B0(0x00D0)(ConstParm, ContainsInstancedReference)
	TArray<class UFXSystemComponent*>             K2Node_Event_ParticleComponents;                   // 0x0380(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                K2Node_Event_AudioComponents;                      // 0x0390(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UAudioComponent*                        CallFunc_Array_Get_Item;                           // 0x03A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFXSystemComponent*                     CallFunc_Array_Get_Item_1;                         // 0x03A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_GrindingComponent_C*                CallFunc_GetComponentByClass_ReturnValue_1;        // 0x03B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn_1;           // 0x03B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1[0x3];                                      // 0x03C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x03C4(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding) == 0x000008, "Wrong alignment on GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding");
static_assert(sizeof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding) == 0x0003D0, "Wrong size on GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, EntryPoint) == 0x000000, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::EntryPoint' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_CustomEvent_bNewIsSprinting) == 0x000020, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_CustomEvent_bNewIsSprinting' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_CustomEvent_PreviousBoosterMode) == 0x000022, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_CustomEvent_PreviousBoosterMode' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_SwitchEnum_CmpSuccess_1) == 0x000023, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_Event_DeltaSeconds) == 0x000038, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_CustomEvent_OldRail) == 0x000040, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_CustomEvent_OldRail' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_CustomEvent_NewRail) == 0x000048, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_CustomEvent_NewRail' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_Event_MyTarget_2) == 0x000050, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_Event_MyTarget_2' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_Event_Parameters_2) == 0x000058, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_Event_Parameters_2' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_Event_ParticleComponents_2) == 0x000128, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_Event_ParticleComponents_2' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_Event_AudioComponents_2) == 0x000138, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_Event_AudioComponents_2' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_Event_BurstCameraShakeInstance_1) == 0x000148, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_Event_BurstCameraShakeInstance_1' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_Event_BurstDecalInstance_1) == 0x000150, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_Event_BurstDecalInstance_1' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000158, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_DynamicCast_bSuccess) == 0x000160, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_DynamicCast_AsBGA_Grind_Rail) == 0x000168, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_DynamicCast_AsBGA_Grind_Rail' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_DynamicCast_bSuccess_1) == 0x000170, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_Event_MyTarget_1) == 0x000178, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_Event_MyTarget_1' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_Event_Parameters_1) == 0x000180, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_Event_Parameters_1' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_Event_ParticleComponents_1) == 0x000250, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_Event_ParticleComponents_1' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_Event_AudioComponents_1) == 0x000260, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_Event_AudioComponents_1' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_Event_BurstCameraShakeInstance) == 0x000270, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_Event_BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_Event_BurstDecalInstance) == 0x000278, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_Event_BurstDecalInstance' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000280, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_Event_bNewState) == 0x000284, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_Event_bNewState' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000288, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000290, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_CreateDelegate_OutputDelegate_3) == 0x000298, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, CallFunc_GetConsoleVariableFloatValue_ReturnValue) == 0x0002A4, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::CallFunc_GetConsoleVariableFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_Event_MyTarget) == 0x0002A8, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_Event_MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_Event_Parameters) == 0x0002B0, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_Event_Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_Event_ParticleComponents) == 0x000380, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_Event_ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_Event_AudioComponents) == 0x000390, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_Event_AudioComponents' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, CallFunc_Array_Get_Item) == 0x0003A0, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, CallFunc_Array_Get_Item_1) == 0x0003A8, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, CallFunc_GetComponentByClass_ReturnValue_1) == 0x0003B0, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_DynamicCast_AsFort_Player_Pawn_1) == 0x0003B8, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_DynamicCast_AsFort_Player_Pawn_1' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_DynamicCast_bSuccess_2) == 0x0003C0, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding, K2Node_CreateDelegate_OutputDelegate_4) == 0x0003C4, "Member 'GCNL_Grinding_C_ExecuteUbergraph_GCNL_Grinding::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");

// Function GCNL_Grinding.GCNL_Grinding_C.GrindAudioState
// 0x0030 (0x0030 - 0x0000)
struct GCNL_Grinding_C_GrindAudioState final
{
public:
	bool                                          Start;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnLocalPlayersTeam_Return_Value;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnLocalPlayersTeam_Return_Value_1;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_1;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue_1;         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_Grinding_C_GrindAudioState) == 0x000008, "Wrong alignment on GCNL_Grinding_C_GrindAudioState");
static_assert(sizeof(GCNL_Grinding_C_GrindAudioState) == 0x000030, "Wrong size on GCNL_Grinding_C_GrindAudioState");
static_assert(offsetof(GCNL_Grinding_C_GrindAudioState, Start) == 0x000000, "Member 'GCNL_Grinding_C_GrindAudioState::Start' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_GrindAudioState, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'GCNL_Grinding_C_GrindAudioState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_GrindAudioState, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'GCNL_Grinding_C_GrindAudioState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_GrindAudioState, CallFunc_OnLocalPlayersTeam_Return_Value) == 0x000003, "Member 'GCNL_Grinding_C_GrindAudioState::CallFunc_OnLocalPlayersTeam_Return_Value' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_GrindAudioState, CallFunc_OnLocalPlayersTeam_Return_Value_1) == 0x000004, "Member 'GCNL_Grinding_C_GrindAudioState::CallFunc_OnLocalPlayersTeam_Return_Value_1' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_GrindAudioState, CallFunc_IsValid_ReturnValue_2) == 0x000005, "Member 'GCNL_Grinding_C_GrindAudioState::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_GrindAudioState, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000008, "Member 'GCNL_Grinding_C_GrindAudioState::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_GrindAudioState, CallFunc_K2_GetRootComponent_ReturnValue_1) == 0x000010, "Member 'GCNL_Grinding_C_GrindAudioState::CallFunc_K2_GetRootComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_GrindAudioState, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000018, "Member 'GCNL_Grinding_C_GrindAudioState::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_GrindAudioState, CallFunc_SpawnSoundAttached_ReturnValue_1) == 0x000020, "Member 'GCNL_Grinding_C_GrindAudioState::CallFunc_SpawnSoundAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_GrindAudioState, CallFunc_IsValid_ReturnValue_3) == 0x000028, "Member 'GCNL_Grinding_C_GrindAudioState::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function GCNL_Grinding.GCNL_Grinding_C.HandleGrindRailChanged
// 0x0010 (0x0010 - 0x0000)
struct GCNL_Grinding_C_HandleGrindRailChanged final
{
public:
	class AFortGrindRail*                         OldRail;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortGrindRail*                         NewRail;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_Grinding_C_HandleGrindRailChanged) == 0x000008, "Wrong alignment on GCNL_Grinding_C_HandleGrindRailChanged");
static_assert(sizeof(GCNL_Grinding_C_HandleGrindRailChanged) == 0x000010, "Wrong size on GCNL_Grinding_C_HandleGrindRailChanged");
static_assert(offsetof(GCNL_Grinding_C_HandleGrindRailChanged, OldRail) == 0x000000, "Member 'GCNL_Grinding_C_HandleGrindRailChanged::OldRail' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_HandleGrindRailChanged, NewRail) == 0x000008, "Member 'GCNL_Grinding_C_HandleGrindRailChanged::NewRail' has a wrong offset!");

// Function GCNL_Grinding.GCNL_Grinding_C.OnApplicationGeneric
// 0x0108 (0x0108 - 0x0000)
struct GCNL_Grinding_C_OnApplicationGeneric final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UFXSystemComponent*>             ParticleComponents;                                // 0x00D8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x00E8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class ULegacyCameraShake*                     BurstCameraShakeInstance;                          // 0x00F8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            BurstDecalInstance;                                // 0x0100(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_Grinding_C_OnApplicationGeneric) == 0x000008, "Wrong alignment on GCNL_Grinding_C_OnApplicationGeneric");
static_assert(sizeof(GCNL_Grinding_C_OnApplicationGeneric) == 0x000108, "Wrong size on GCNL_Grinding_C_OnApplicationGeneric");
static_assert(offsetof(GCNL_Grinding_C_OnApplicationGeneric, MyTarget) == 0x000000, "Member 'GCNL_Grinding_C_OnApplicationGeneric::MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_OnApplicationGeneric, Parameters) == 0x000008, "Member 'GCNL_Grinding_C_OnApplicationGeneric::Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_OnApplicationGeneric, ParticleComponents) == 0x0000D8, "Member 'GCNL_Grinding_C_OnApplicationGeneric::ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_OnApplicationGeneric, AudioComponents) == 0x0000E8, "Member 'GCNL_Grinding_C_OnApplicationGeneric::AudioComponents' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_OnApplicationGeneric, BurstCameraShakeInstance) == 0x0000F8, "Member 'GCNL_Grinding_C_OnApplicationGeneric::BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_OnApplicationGeneric, BurstDecalInstance) == 0x000100, "Member 'GCNL_Grinding_C_OnApplicationGeneric::BurstDecalInstance' has a wrong offset!");

// Function GCNL_Grinding.GCNL_Grinding_C.OnForwardChanged
// 0x0001 (0x0001 - 0x0000)
struct GCNL_Grinding_C_OnForwardChanged final
{
public:
	bool                                          bNewState;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_Grinding_C_OnForwardChanged) == 0x000001, "Wrong alignment on GCNL_Grinding_C_OnForwardChanged");
static_assert(sizeof(GCNL_Grinding_C_OnForwardChanged) == 0x000001, "Wrong size on GCNL_Grinding_C_OnForwardChanged");
static_assert(offsetof(GCNL_Grinding_C_OnForwardChanged, bNewState) == 0x000000, "Member 'GCNL_Grinding_C_OnForwardChanged::bNewState' has a wrong offset!");

// Function GCNL_Grinding.GCNL_Grinding_C.OnGrindRailBoosterMode
// 0x0001 (0x0001 - 0x0000)
struct GCNL_Grinding_C_OnGrindRailBoosterMode final
{
public:
	EGrindRailBoosterMode                         PreviousBoosterMode;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_Grinding_C_OnGrindRailBoosterMode) == 0x000001, "Wrong alignment on GCNL_Grinding_C_OnGrindRailBoosterMode");
static_assert(sizeof(GCNL_Grinding_C_OnGrindRailBoosterMode) == 0x000001, "Wrong size on GCNL_Grinding_C_OnGrindRailBoosterMode");
static_assert(offsetof(GCNL_Grinding_C_OnGrindRailBoosterMode, PreviousBoosterMode) == 0x000000, "Member 'GCNL_Grinding_C_OnGrindRailBoosterMode::PreviousBoosterMode' has a wrong offset!");

// Function GCNL_Grinding.GCNL_Grinding_C.OnGrindRailSprint
// 0x0001 (0x0001 - 0x0000)
struct GCNL_Grinding_C_OnGrindRailSprint final
{
public:
	bool                                          bNewIsSprinting;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_Grinding_C_OnGrindRailSprint) == 0x000001, "Wrong alignment on GCNL_Grinding_C_OnGrindRailSprint");
static_assert(sizeof(GCNL_Grinding_C_OnGrindRailSprint) == 0x000001, "Wrong size on GCNL_Grinding_C_OnGrindRailSprint");
static_assert(offsetof(GCNL_Grinding_C_OnGrindRailSprint, bNewIsSprinting) == 0x000000, "Member 'GCNL_Grinding_C_OnGrindRailSprint::bNewIsSprinting' has a wrong offset!");

// Function GCNL_Grinding.GCNL_Grinding_C.OnJumpedOff
// 0x0010 (0x0010 - 0x0000)
struct GCNL_Grinding_C_OnJumpedOff final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_Grinding_C_OnJumpedOff) == 0x000008, "Wrong alignment on GCNL_Grinding_C_OnJumpedOff");
static_assert(sizeof(GCNL_Grinding_C_OnJumpedOff) == 0x000010, "Wrong size on GCNL_Grinding_C_OnJumpedOff");
static_assert(offsetof(GCNL_Grinding_C_OnJumpedOff, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'GCNL_Grinding_C_OnJumpedOff::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_OnJumpedOff, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000008, "Member 'GCNL_Grinding_C_OnJumpedOff::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");

// Function GCNL_Grinding.GCNL_Grinding_C.OnLoopingStartGeneric
// 0x00F8 (0x00F8 - 0x0000)
struct GCNL_Grinding_C_OnLoopingStartGeneric final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UFXSystemComponent*>             ParticleComponents;                                // 0x00D8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x00E8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GCNL_Grinding_C_OnLoopingStartGeneric) == 0x000008, "Wrong alignment on GCNL_Grinding_C_OnLoopingStartGeneric");
static_assert(sizeof(GCNL_Grinding_C_OnLoopingStartGeneric) == 0x0000F8, "Wrong size on GCNL_Grinding_C_OnLoopingStartGeneric");
static_assert(offsetof(GCNL_Grinding_C_OnLoopingStartGeneric, MyTarget) == 0x000000, "Member 'GCNL_Grinding_C_OnLoopingStartGeneric::MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_OnLoopingStartGeneric, Parameters) == 0x000008, "Member 'GCNL_Grinding_C_OnLoopingStartGeneric::Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_OnLoopingStartGeneric, ParticleComponents) == 0x0000D8, "Member 'GCNL_Grinding_C_OnLoopingStartGeneric::ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_OnLoopingStartGeneric, AudioComponents) == 0x0000E8, "Member 'GCNL_Grinding_C_OnLoopingStartGeneric::AudioComponents' has a wrong offset!");

// Function GCNL_Grinding.GCNL_Grinding_C.OnRemovalGeneric
// 0x0108 (0x0108 - 0x0000)
struct GCNL_Grinding_C_OnRemovalGeneric final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UFXSystemComponent*>             ParticleComponents;                                // 0x00D8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x00E8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class ULegacyCameraShake*                     BurstCameraShakeInstance;                          // 0x00F8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            BurstDecalInstance;                                // 0x0100(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_Grinding_C_OnRemovalGeneric) == 0x000008, "Wrong alignment on GCNL_Grinding_C_OnRemovalGeneric");
static_assert(sizeof(GCNL_Grinding_C_OnRemovalGeneric) == 0x000108, "Wrong size on GCNL_Grinding_C_OnRemovalGeneric");
static_assert(offsetof(GCNL_Grinding_C_OnRemovalGeneric, MyTarget) == 0x000000, "Member 'GCNL_Grinding_C_OnRemovalGeneric::MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_OnRemovalGeneric, Parameters) == 0x000008, "Member 'GCNL_Grinding_C_OnRemovalGeneric::Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_OnRemovalGeneric, ParticleComponents) == 0x0000D8, "Member 'GCNL_Grinding_C_OnRemovalGeneric::ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_OnRemovalGeneric, AudioComponents) == 0x0000E8, "Member 'GCNL_Grinding_C_OnRemovalGeneric::AudioComponents' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_OnRemovalGeneric, BurstCameraShakeInstance) == 0x0000F8, "Member 'GCNL_Grinding_C_OnRemovalGeneric::BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_OnRemovalGeneric, BurstDecalInstance) == 0x000100, "Member 'GCNL_Grinding_C_OnRemovalGeneric::BurstDecalInstance' has a wrong offset!");

// Function GCNL_Grinding.GCNL_Grinding_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct GCNL_Grinding_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_Grinding_C_ReceiveTick) == 0x000004, "Wrong alignment on GCNL_Grinding_C_ReceiveTick");
static_assert(sizeof(GCNL_Grinding_C_ReceiveTick) == 0x000004, "Wrong size on GCNL_Grinding_C_ReceiveTick");
static_assert(offsetof(GCNL_Grinding_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'GCNL_Grinding_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function GCNL_Grinding.GCNL_Grinding_C.UpdateAudioParams
// 0x0158 (0x0158 - 0x0000)
struct GCNL_Grinding_C_UpdateAudioParams final
{
public:
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_1;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGrinding_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_2;           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_3;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IAudioParameterControllerInterface> CallFunc_SetFloatParameter_self_CastInput;         // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IAudioParameterControllerInterface> CallFunc_SetFloatParameter_self_CastInput_1;       // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_1;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_3;           // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_ReturnValue_2;                  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAudioParameterControllerInterface> CallFunc_SetFloatParameter_self_CastInput_2;       // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IAudioParameterControllerInterface> CallFunc_SetFloatParameter_self_CastInput_3;       // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_4;       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_3;                  // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IAudioParameterControllerInterface> CallFunc_SetFloatParameter_self_CastInput_4;       // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_4;                  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_5;       // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IAudioParameterControllerInterface> CallFunc_SetFloatParameter_self_CastInput_5;       // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_5;                  // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Target_ImplicitCast;            // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast;   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast_1; // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Target_ImplicitCast_1;          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast_2; // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast_3; // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Target_ImplicitCast_2;          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast_4; // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast_5; // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_Grinding_C_UpdateAudioParams) == 0x000008, "Wrong alignment on GCNL_Grinding_C_UpdateAudioParams");
static_assert(sizeof(GCNL_Grinding_C_UpdateAudioParams) == 0x000158, "Wrong size on GCNL_Grinding_C_UpdateAudioParams");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000000, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x00000C, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_Conv_BoolToFloat_ReturnValue_1) == 0x000010, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_Conv_BoolToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000014, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000018, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_IsGrinding_ReturnValue) == 0x000020, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_IsGrinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_Conv_BoolToFloat_ReturnValue_2) == 0x000024, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_Conv_BoolToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_FInterpTo_ReturnValue) == 0x000028, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x000030, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_SelectFloat_ReturnValue) == 0x000038, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_GetWorldDeltaSeconds_ReturnValue_3) == 0x000040, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_GetWorldDeltaSeconds_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_SetFloatParameter_self_CastInput) == 0x000048, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_SetFloatParameter_self_CastInput' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_Abs_ReturnValue) == 0x000058, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_SetFloatParameter_self_CastInput_1) == 0x000060, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_SetFloatParameter_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_MapRangeClamped_ReturnValue) == 0x000070, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_FInterpTo_ReturnValue_1) == 0x000078, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_Conv_BoolToFloat_ReturnValue_3) == 0x000080, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_Conv_BoolToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_FInterpTo_ReturnValue_2) == 0x000088, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_FInterpTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000090, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_BooleanOR_ReturnValue) == 0x000091, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_SetFloatParameter_self_CastInput_2) == 0x000098, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_SetFloatParameter_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_SetFloatParameter_self_CastInput_3) == 0x0000A8, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_SetFloatParameter_self_CastInput_3' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_GetWorldDeltaSeconds_ReturnValue_4) == 0x0000B8, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_GetWorldDeltaSeconds_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_FInterpTo_ReturnValue_3) == 0x0000C0, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_FInterpTo_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_SetFloatParameter_self_CastInput_4) == 0x0000C8, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_SetFloatParameter_self_CastInput_4' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_FInterpTo_ReturnValue_4) == 0x0000D8, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_FInterpTo_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_GetWorldDeltaSeconds_ReturnValue_5) == 0x0000E0, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_GetWorldDeltaSeconds_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_Abs_ReturnValue_1) == 0x0000E8, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_SetFloatParameter_self_CastInput_5) == 0x0000F0, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_SetFloatParameter_self_CastInput_5' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000100, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_FInterpTo_ReturnValue_5) == 0x000108, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_FInterpTo_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_FInterpTo_Target_ImplicitCast) == 0x000110, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_FInterpTo_Target_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000118, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_SetFloatParameter_InFloat_ImplicitCast) == 0x000120, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_SetFloatParameter_InFloat_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_SetFloatParameter_InFloat_ImplicitCast_1) == 0x000124, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_SetFloatParameter_InFloat_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_FInterpTo_Target_ImplicitCast_1) == 0x000128, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_FInterpTo_Target_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_SetFloatParameter_InFloat_ImplicitCast_2) == 0x000130, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_SetFloatParameter_InFloat_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_SetFloatParameter_InFloat_ImplicitCast_3) == 0x000134, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_SetFloatParameter_InFloat_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x000138, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_FInterpTo_Target_ImplicitCast_2) == 0x000140, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_FInterpTo_Target_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_SetFloatParameter_InFloat_ImplicitCast_4) == 0x000148, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_SetFloatParameter_InFloat_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_SetFloatParameter_InFloat_ImplicitCast_5) == 0x00014C, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_SetFloatParameter_InFloat_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(GCNL_Grinding_C_UpdateAudioParams, CallFunc_Abs_A_ImplicitCast) == 0x000150, "Member 'GCNL_Grinding_C_UpdateAudioParams::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");

}

