#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCN_Loop_PlayerWorldPFX_Persistent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GCN_Loop_PlayerWorldPFX_Persistent.GCN_Loop_PlayerWorldPFX_Persistent_C
// 0x0030 (0x0990 - 0x0960)
class AGCN_Loop_PlayerWorldPFX_Persistent_C final : public AFortGameplayCueNotify_Loop
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0960(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      NS_Loop_WorldFX_Persistent_Motes01;                // 0x0968(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Loop_WorldFX_Persistent;                        // 0x0970(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 My_Target;                                         // 0x0978(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Timer;                                             // 0x0980(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        LoopingCheckTime;                                  // 0x0988(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GCN_Loop_PlayerWorldPFX_Persistent(int32 EntryPoint);
	void OnApplicationGeneric(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UFXSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents, class ULegacyCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance);
	void OnLoopingStartGeneric(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UFXSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents);
	void OnLoopingStartNiagara(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UNiagaraComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents);
	void OnRemovalGeneric(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UFXSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents, class ULegacyCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance);
	void SpawnNiagara();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GCN_Loop_PlayerWorldPFX_Persistent_C">();
	}
	static class AGCN_Loop_PlayerWorldPFX_Persistent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGCN_Loop_PlayerWorldPFX_Persistent_C>();
	}
};
static_assert(alignof(AGCN_Loop_PlayerWorldPFX_Persistent_C) == 0x000008, "Wrong alignment on AGCN_Loop_PlayerWorldPFX_Persistent_C");
static_assert(sizeof(AGCN_Loop_PlayerWorldPFX_Persistent_C) == 0x000990, "Wrong size on AGCN_Loop_PlayerWorldPFX_Persistent_C");
static_assert(offsetof(AGCN_Loop_PlayerWorldPFX_Persistent_C, UberGraphFrame) == 0x000960, "Member 'AGCN_Loop_PlayerWorldPFX_Persistent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_PlayerWorldPFX_Persistent_C, NS_Loop_WorldFX_Persistent_Motes01) == 0x000968, "Member 'AGCN_Loop_PlayerWorldPFX_Persistent_C::NS_Loop_WorldFX_Persistent_Motes01' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_PlayerWorldPFX_Persistent_C, NS_Loop_WorldFX_Persistent) == 0x000970, "Member 'AGCN_Loop_PlayerWorldPFX_Persistent_C::NS_Loop_WorldFX_Persistent' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_PlayerWorldPFX_Persistent_C, My_Target) == 0x000978, "Member 'AGCN_Loop_PlayerWorldPFX_Persistent_C::My_Target' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_PlayerWorldPFX_Persistent_C, Timer) == 0x000980, "Member 'AGCN_Loop_PlayerWorldPFX_Persistent_C::Timer' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_PlayerWorldPFX_Persistent_C, LoopingCheckTime) == 0x000988, "Member 'AGCN_Loop_PlayerWorldPFX_Persistent_C::LoopingCheckTime' has a wrong offset!");

}

