#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TournamentDetails

#include "Basic.hpp"

#include "TournamentDetails_classes.hpp"
#include "TournamentDetails_parameters.hpp"


namespace SDK
{

// Function TournamentDetails.TournamentDetails_C.AnimTransition
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidgetAnimation*                 Animation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  PlaySpeed                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTournamentDetails_C::AnimTransition(bool In, class UWidgetAnimation* Animation, double PlaySpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "AnimTransition");

	Params::TournamentDetails_C_AnimTransition Parms{};

	Parms.In = In;
	Parms.Animation = Animation;
	Parms.PlaySpeed = PlaySpeed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TournamentDetails.TournamentDetails_C.BndEvt__BackButton2_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButtonLegacy*              Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UTournamentDetails_C::BndEvt__BackButton2_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature(class UCommonButtonLegacy* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "BndEvt__BackButton2_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature");

	Params::TournamentDetails_C_BndEvt__BackButton2_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TournamentDetails.TournamentDetails_C.BndEvt__Button_EnableMFA_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButtonLegacy*              Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UTournamentDetails_C::BndEvt__Button_EnableMFA_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature(class UCommonButtonLegacy* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "BndEvt__Button_EnableMFA_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature");

	Params::TournamentDetails_C_BndEvt__Button_EnableMFA_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TournamentDetails.TournamentDetails_C.BndEvt__CloseButton_K2Node_ComponentBoundEvent_6_CommonButtonClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButtonLegacy*              Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UTournamentDetails_C::BndEvt__CloseButton_K2Node_ComponentBoundEvent_6_CommonButtonClicked__DelegateSignature(class UCommonButtonLegacy* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "BndEvt__CloseButton_K2Node_ComponentBoundEvent_6_CommonButtonClicked__DelegateSignature");

	Params::TournamentDetails_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_6_CommonButtonClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TournamentDetails.TournamentDetails_C.BndEvt__DetailsPanelButton2_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButtonLegacy*              Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UTournamentDetails_C::BndEvt__DetailsPanelButton2_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature(class UCommonButtonLegacy* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "BndEvt__DetailsPanelButton2_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature");

	Params::TournamentDetails_C_BndEvt__DetailsPanelButton2_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TournamentDetails.TournamentDetails_C.BndEvt__OverviewPanelButton2_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButtonLegacy*              Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UTournamentDetails_C::BndEvt__OverviewPanelButton2_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature(class UCommonButtonLegacy* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "BndEvt__OverviewPanelButton2_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature");

	Params::TournamentDetails_C_BndEvt__OverviewPanelButton2_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TournamentDetails.TournamentDetails_C.BndEvt__TournamentDetails_FloatingLeaderboardButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButtonLegacy*              Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UTournamentDetails_C::BndEvt__TournamentDetails_FloatingLeaderboardButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature(class UCommonButtonLegacy* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "BndEvt__TournamentDetails_FloatingLeaderboardButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature");

	Params::TournamentDetails_C_BndEvt__TournamentDetails_FloatingLeaderboardButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TournamentDetails.TournamentDetails_C.CloseEventWindowDetails
// (BlueprintCallable, BlueprintEvent)

void UTournamentDetails_C::CloseEventWindowDetails()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "CloseEventWindowDetails");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TournamentDetails.TournamentDetails_C.CloseTournamentDetails
// (BlueprintCallable, BlueprintEvent)

void UTournamentDetails_C::CloseTournamentDetails()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "CloseTournamentDetails");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TournamentDetails.TournamentDetails_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UTournamentDetails_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TournamentDetails.TournamentDetails_C.CreateScoringWidgets
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           TournamentSeriesId                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           TournamentId                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UTournamentDetails_C::CreateScoringWidgets(const class FString& TournamentSeriesId, const class FString& TournamentId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "CreateScoringWidgets");

	Params::TournamentDetails_C_CreateScoringWidgets Parms{};

	Parms.TournamentSeriesId = std::move(TournamentSeriesId);
	Parms.TournamentId = std::move(TournamentId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TournamentDetails.TournamentDetails_C.EventBackoutLiveGames
// (BlueprintCallable, BlueprintEvent)

void UTournamentDetails_C::EventBackoutLiveGames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "EventBackoutLiveGames");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TournamentDetails.TournamentDetails_C.EventCenterEventWindow
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UTournamentDetails_C::EventCenterEventWindow(class UWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "EventCenterEventWindow");

	Params::TournamentDetails_C_EventCenterEventWindow Parms{};

	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TournamentDetails.TournamentDetails_C.EventCloseLeaderboard
// (BlueprintCallable, BlueprintEvent)

void UTournamentDetails_C::EventCloseLeaderboard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "EventCloseLeaderboard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TournamentDetails.TournamentDetails_C.EventclosePayout
// (BlueprintCallable, BlueprintEvent)

void UTournamentDetails_C::EventclosePayout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "EventclosePayout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TournamentDetails.TournamentDetails_C.EventDeselectWindows
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          SelectedWidget                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UTournamentDetails_C::EventDeselectWindows(class UWidget* SelectedWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "EventDeselectWindows");

	Params::TournamentDetails_C_EventDeselectWindows Parms{};

	Parms.SelectedWidget = SelectedWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TournamentDetails.TournamentDetails_C.EventFullScreenAnimOutFinished
// (BlueprintCallable, BlueprintEvent)

void UTournamentDetails_C::EventFullScreenAnimOutFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "EventFullScreenAnimOutFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TournamentDetails.TournamentDetails_C.EventShowWindowDetails
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCommonButtonLegacy*              Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UTournamentDetails_C::EventShowWindowDetails(class UCommonButtonLegacy* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "EventShowWindowDetails");

	Params::TournamentDetails_C_EventShowWindowDetails Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TournamentDetails.TournamentDetails_C.EventStartCentering
// (BlueprintCallable, BlueprintEvent)

void UTournamentDetails_C::EventStartCentering()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "EventStartCentering");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TournamentDetails.TournamentDetails_C.EventStopCentering
// (BlueprintCallable, BlueprintEvent)

void UTournamentDetails_C::EventStopCentering()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "EventStopCentering");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TournamentDetails.TournamentDetails_C.EventToggleFullScreenContent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTournamentDetails_C::EventToggleFullScreenContent(bool In)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "EventToggleFullScreenContent");

	Params::TournamentDetails_C_EventToggleFullScreenContent Parms{};

	Parms.In = In;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TournamentDetails.TournamentDetails_C.EventViewFullLeaderboard
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           TournamentId                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           EventId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UTournamentDetails_C::EventViewFullLeaderboard(const class FString& TournamentId, const class FString& EventId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "EventViewFullLeaderboard");

	Params::TournamentDetails_C_EventViewFullLeaderboard Parms{};

	Parms.TournamentId = std::move(TournamentId);
	Parms.EventId = std::move(EventId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TournamentDetails.TournamentDetails_C.EventViewLiveGames
// (BlueprintCallable, BlueprintEvent)

void UTournamentDetails_C::EventViewLiveGames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "EventViewLiveGames");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TournamentDetails.TournamentDetails_C.EventViewPayout
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           EventWindowId                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           EventId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UTournamentDetails_C::EventViewPayout(const class FString& EventWindowId, const class FString& EventId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "EventViewPayout");

	Params::TournamentDetails_C_EventViewPayout Parms{};

	Parms.EventWindowId = std::move(EventWindowId);
	Parms.EventId = std::move(EventId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TournamentDetails.TournamentDetails_C.ExecuteUbergraph_TournamentDetails
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTournamentDetails_C::ExecuteUbergraph_TournamentDetails(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "ExecuteUbergraph_TournamentDetails");

	Params::TournamentDetails_C_ExecuteUbergraph_TournamentDetails Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TournamentDetails.TournamentDetails_C.Handle_Back
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    PassThrough                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTournamentDetails_C::Handle_Back(bool* PassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "Handle_Back");

	Params::TournamentDetails_C_Handle_Back Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PassThrough != nullptr)
		*PassThrough = Parms.PassThrough;
}


// Function TournamentDetails.TournamentDetails_C.Is Scoring Rule Valid
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFortShowdownScoringRuleInfo     ScoringRuleInfo                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTournamentDetails_C::Is_Scoring_Rule_Valid(const struct FFortShowdownScoringRuleInfo& ScoringRuleInfo, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "Is Scoring Rule Valid");

	Params::TournamentDetails_C_Is_Scoring_Rule_Valid Parms{};

	Parms.ScoringRuleInfo = std::move(ScoringRuleInfo);

	UObject::ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function TournamentDetails.TournamentDetails_C.No payouts
// (BlueprintCallable, BlueprintEvent)

void UTournamentDetails_C::No_payouts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "No payouts");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TournamentDetails.TournamentDetails_C.OnActivateScreen
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UTournamentDetails_C::OnActivateScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "OnActivateScreen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TournamentDetails.TournamentDetails_C.OnHandleBack
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTournamentDetails_C::OnHandleBack(bool* bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "OnHandleBack");

	Params::TournamentDetails_C_OnHandleBack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function TournamentDetails.TournamentDetails_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UTournamentDetails_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TournamentDetails.TournamentDetails_C.Refresh
// (Public, BlueprintCallable, BlueprintEvent)

void UTournamentDetails_C::Refresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "Refresh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TournamentDetails.TournamentDetails_C.RefreshDataBP
// (Event, Protected, BlueprintEvent)

void UTournamentDetails_C::RefreshDataBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "RefreshDataBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TournamentDetails.TournamentDetails_C.RefreshDetailsPanel
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UTournamentDetails_C::RefreshDetailsPanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "RefreshDetailsPanel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TournamentDetails.TournamentDetails_C.RefreshEvents
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UTournamentDetails_C::RefreshEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "RefreshEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TournamentDetails.TournamentDetails_C.RefreshOverviewPanel
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UTournamentDetails_C::RefreshOverviewPanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "RefreshOverviewPanel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TournamentDetails.TournamentDetails_C.RefreshScoringRules
// (Public, BlueprintCallable, BlueprintEvent)

void UTournamentDetails_C::RefreshScoringRules()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "RefreshScoringRules");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TournamentDetails.TournamentDetails_C.RefreshViolators
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UTournamentDetails_C::RefreshViolators()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "RefreshViolators");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TournamentDetails.TournamentDetails_C.RemoveInvalidScoringRules
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FFortShowdownScoringRuleInfo>UnfilteredScoringRules                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FFortShowdownScoringRuleInfo>FilteredScoringRules                                   (Parm, OutParm)

void UTournamentDetails_C::RemoveInvalidScoringRules(TArray<struct FFortShowdownScoringRuleInfo>& UnfilteredScoringRules, TArray<struct FFortShowdownScoringRuleInfo>* FilteredScoringRules)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "RemoveInvalidScoringRules");

	Params::TournamentDetails_C_RemoveInvalidScoringRules Parms{};

	Parms.UnfilteredScoringRules = std::move(UnfilteredScoringRules);

	UObject::ProcessEvent(Func, &Parms);

	UnfilteredScoringRules = std::move(Parms.UnfilteredScoringRules);

	if (FilteredScoringRules != nullptr)
		*FilteredScoringRules = std::move(Parms.FilteredScoringRules);
}


// Function TournamentDetails.TournamentDetails_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTournamentDetails_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "Tick");

	Params::TournamentDetails_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TournamentDetails.TournamentDetails_C.UpdateDefaultTournamentEvent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   TournamentEvents                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UTournamentDetails_C::UpdateDefaultTournamentEvent(TArray<class FString>& TournamentEvents)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TournamentDetails_C", "UpdateDefaultTournamentEvent");

	Params::TournamentDetails_C_UpdateDefaultTournamentEvent Parms{};

	Parms.TournamentEvents = std::move(TournamentEvents);

	UObject::ProcessEvent(Func, &Parms);

	TournamentEvents = std::move(Parms.TournamentEvents);
}

}

