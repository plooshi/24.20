#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HmxUtl

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// Class HmxUtl.BehaviorTreeActor
// 0x0018 (0x02A0 - 0x0288)
class ABehaviorTreeActor final : public AActor
{
public:
	class UBehaviorTree*                          BehaviorTree;                                      // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_290[0x10];                                     // 0x0290(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UBlackboardComponent* GetBlackboard();
	bool RunBehaviorTree();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BehaviorTreeActor">();
	}
	static class ABehaviorTreeActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABehaviorTreeActor>();
	}
};
static_assert(alignof(ABehaviorTreeActor) == 0x000008, "Wrong alignment on ABehaviorTreeActor");
static_assert(sizeof(ABehaviorTreeActor) == 0x0002A0, "Wrong size on ABehaviorTreeActor");
static_assert(offsetof(ABehaviorTreeActor, BehaviorTree) == 0x000288, "Member 'ABehaviorTreeActor::BehaviorTree' has a wrong offset!");

// Class HmxUtl.HmxBPFL
// 0x0000 (0x0028 - 0x0028)
class UHmxBPFL final : public UBlueprintFunctionLibrary
{
public:
	static bool IsNone(const class FName& Name_0);
	static int32 LoopDecrement(int32 Value, int32 min_0, int32 max_0);
	static int32 LoopIncrement(int32 Value, int32 min_0, int32 max_0);
	static int32 Modulo(int32 Value, int32 Mod);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HmxBPFL">();
	}
	static class UHmxBPFL* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHmxBPFL>();
	}
};
static_assert(alignof(UHmxBPFL) == 0x000008, "Wrong alignment on UHmxBPFL");
static_assert(sizeof(UHmxBPFL) == 0x000028, "Wrong size on UHmxBPFL");

}

