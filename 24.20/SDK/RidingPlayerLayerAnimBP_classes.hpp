#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RidingPlayerLayerAnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "RidingPlayerLayerAnimBP_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ValetRuntime_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass RidingPlayerLayerAnimBP.RidingPlayerLayerAnimBP_C
// 0x1AA0 (0x2310 - 0x0870)
class URidingPlayerLayerAnimBP_C final : public UFortValetPassengerAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0870(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct RidingPlayerLayerAnimBP::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0878(0x001C)(HasGetValueTypeHash)
	uint8                                         Pad_894[0x4];                                      // 0x0894(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0898(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x08A0(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root_4;                              // 0x08A8(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_6;                   // 0x08C8(0x00C0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x0988(0x0100)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0A88(0x00E0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x0B68(0x0028)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_4;                        // 0x0B90(0x0128)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0CB8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0CD8(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x0CF8(0x0100)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x0DF8(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_7;                   // 0x0E20(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x0E68(0x0028)()
	struct FAnimNode_RotateRootBone               AnimGraphNode_RotateRootBone_1;                    // 0x0E90(0x00A8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0F38(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0F80(0x0048)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_1;          // 0x0FC8(0x0118)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x10E0(0x0070)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x1150(0x00C8)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x1218(0x0128)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_5;                   // 0x1340(0x00C0)()
	struct FAnimNode_Root                         AnimGraphNode_Root_3;                              // 0x1400(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x1420(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_6;                   // 0x1468(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x14B0(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_5;                   // 0x14F8(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1540(0x0100)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x1640(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x1668(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_4;                   // 0x1690(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x16D8(0x0070)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x1748(0x0048)()
	struct FAnimNode_RotateRootBone               AnimGraphNode_RotateRootBone;                      // 0x1790(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1838(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x1880(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x18C8(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x18F0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1938(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1980(0x0048)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0x19C8(0x0118)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x1AE0(0x0028)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x1B08(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x1C30(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x1D58(0x0128)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x1E80(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_4;                   // 0x1EA0(0x00C0)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_3;                   // 0x1F60(0x00C0)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x2020(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_2;                   // 0x2040(0x00C0)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x2100(0x00C0)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x21C0(0x00C0)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x2280(0x0020)()
	struct FRotator                               MatchRootYaw;                                      // 0x22A0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Is_Targeting;                                      // 0x22B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22B9[0x7];                                     // 0x22B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        FortPlayer;                                        // 0x22C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Timer;                                             // 0x22C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldTransitionToRiding;                          // 0x22D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22D1[0x7];                                     // 0x22D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LowerBodyYaw;                                      // 0x22D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRideMode;                                        // 0x22E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSprinting;                                       // 0x22E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStandingStill;                                   // 0x22E2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInCombat;                                        // 0x22E3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22E4[0x4];                                     // 0x22E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAIPawn*                            WildlifePawn;                                      // 0x22E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSmackie;                                         // 0x22F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22F1[0x7];                                     // 0x22F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Velocity;                                          // 0x22F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsNug;                                             // 0x2300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_RidingPlayerLayerAnimBP_AnimGraphNode_BlendListByBool_D1B22730415169A7290CBFAD6C915976();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_RidingPlayerLayerAnimBP_AnimGraphNode_RotateRootBone_D73766CE4BF0C956278D7FA8259A40CA();
	void ExecuteUbergraph_RidingPlayerLayerAnimBP(int32 EntryPoint);
	void VehicleFinalPoseOverride(const struct FPoseLink& InFinalPose, struct FPoseLink* VehicleFinalPoseOverride_0);
	void VehicleFullBodyOverride(const struct FPoseLink& InPoseFullBody, struct FPoseLink* VehicleFullBodyOverride_0);
	void VehicleLowerBodyOverride(const struct FPoseLink& InPoseLowerBodyDefault, const struct FPoseLink& InPoseUpperBody, struct FPoseLink* VehicleLowerBodyOverride_0);
	void VehicleSplitBodyOverride(const struct FPoseLink& InPoseSplitBody, const struct FPoseLink& InPoseUpperAndLowerBody, const struct FFortAnimInput_TurnInPlace& TurnInPlace, const struct FPoseLink& InPoseUpperAndLowerBodyRemoveRoot, struct FPoseLink* VehicleSplitBodyOverride_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"RidingPlayerLayerAnimBP_C">();
	}
	static class URidingPlayerLayerAnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<URidingPlayerLayerAnimBP_C>();
	}
};
static_assert(alignof(URidingPlayerLayerAnimBP_C) == 0x000010, "Wrong alignment on URidingPlayerLayerAnimBP_C");
static_assert(sizeof(URidingPlayerLayerAnimBP_C) == 0x002310, "Wrong size on URidingPlayerLayerAnimBP_C");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, UberGraphFrame) == 0x000870, "Member 'URidingPlayerLayerAnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, __AnimBlueprintMutables) == 0x000878, "Member 'URidingPlayerLayerAnimBP_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimBlueprintExtension_PropertyAccess) == 0x000898, "Member 'URidingPlayerLayerAnimBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimBlueprintExtension_Base) == 0x0008A0, "Member 'URidingPlayerLayerAnimBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_Root_4) == 0x0008A8, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_Root_4' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_LinkedInputPose_6) == 0x0008C8, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_LinkedInputPose_6' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_SaveCachedPose_2) == 0x000988, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_LayeredBoneBlend) == 0x000A88, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_UseCachedPose_6) == 0x000B68, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_ModifyBone_4) == 0x000B90, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_ModifyBone_4' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_LocalToComponentSpace) == 0x000CB8, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_ComponentToLocalSpace) == 0x000CD8, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_SaveCachedPose_1) == 0x000CF8, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_UseCachedPose_5) == 0x000DF8, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_BlendListByBool_7) == 0x000E20, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_BlendListByBool_7' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_UseCachedPose_4) == 0x000E68, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_RotateRootBone_1) == 0x000E90, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_RotateRootBone_1' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_Slot_1) == 0x000F38, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x000F80, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_RotationOffsetBlendSpace_1) == 0x000FC8, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_RotationOffsetBlendSpace_1' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer_1) == 0x0010E0, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_ApplyAdditive) == 0x001150, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_ModifyBone_3) == 0x001218, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_LinkedInputPose_5) == 0x001340, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_LinkedInputPose_5' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_Root_3) == 0x001400, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_Root_3' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_Slot) == 0x001420, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_BlendListByBool_6) == 0x001468, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_BlendListByBool_6' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x0014B0, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_BlendListByBool_5) == 0x0014F8, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_BlendListByBool_5' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_SaveCachedPose) == 0x001540, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_UseCachedPose_3) == 0x001640, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_UseCachedPose_2) == 0x001668, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_BlendListByBool_4) == 0x001690, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_BlendListByBool_4' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer) == 0x0016D8, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_BlendListByBool_3) == 0x001748, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_RotateRootBone) == 0x001790, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_RotateRootBone' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x001838, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_BlendListByBool_2) == 0x001880, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_UseCachedPose_1) == 0x0018C8, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_BlendListByBool_1) == 0x0018F0, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_SequencePlayer) == 0x001938, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_BlendListByBool) == 0x001980, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x0019C8, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_UseCachedPose) == 0x001AE0, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_ModifyBone_2) == 0x001B08, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_ModifyBone_1) == 0x001C30, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_ModifyBone) == 0x001D58, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_Root_2) == 0x001E80, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_LinkedInputPose_4) == 0x001EA0, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_LinkedInputPose_4' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_LinkedInputPose_3) == 0x001F60, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_LinkedInputPose_3' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_Root_1) == 0x002020, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_LinkedInputPose_2) == 0x002040, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_LinkedInputPose_2' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_LinkedInputPose_1) == 0x002100, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_LinkedInputPose) == 0x0021C0, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, AnimGraphNode_Root) == 0x002280, "Member 'URidingPlayerLayerAnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, MatchRootYaw) == 0x0022A0, "Member 'URidingPlayerLayerAnimBP_C::MatchRootYaw' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, Is_Targeting) == 0x0022B8, "Member 'URidingPlayerLayerAnimBP_C::Is_Targeting' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, FortPlayer) == 0x0022C0, "Member 'URidingPlayerLayerAnimBP_C::FortPlayer' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, Timer) == 0x0022C8, "Member 'URidingPlayerLayerAnimBP_C::Timer' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, ShouldTransitionToRiding) == 0x0022D0, "Member 'URidingPlayerLayerAnimBP_C::ShouldTransitionToRiding' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, LowerBodyYaw) == 0x0022D8, "Member 'URidingPlayerLayerAnimBP_C::LowerBodyYaw' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, IsRideMode) == 0x0022E0, "Member 'URidingPlayerLayerAnimBP_C::IsRideMode' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, IsSprinting) == 0x0022E1, "Member 'URidingPlayerLayerAnimBP_C::IsSprinting' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, IsStandingStill) == 0x0022E2, "Member 'URidingPlayerLayerAnimBP_C::IsStandingStill' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, IsInCombat) == 0x0022E3, "Member 'URidingPlayerLayerAnimBP_C::IsInCombat' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, WildlifePawn) == 0x0022E8, "Member 'URidingPlayerLayerAnimBP_C::WildlifePawn' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, IsSmackie) == 0x0022F0, "Member 'URidingPlayerLayerAnimBP_C::IsSmackie' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, Velocity) == 0x0022F8, "Member 'URidingPlayerLayerAnimBP_C::Velocity' has a wrong offset!");
static_assert(offsetof(URidingPlayerLayerAnimBP_C, IsNug) == 0x002300, "Member 'URidingPlayerLayerAnimBP_C::IsNug' has a wrong offset!");

}

