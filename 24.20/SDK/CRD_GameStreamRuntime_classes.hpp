#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CRD_GameStreamRuntime

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "FortniteGame_structs.hpp"
#include "PlayspaceSystem_classes.hpp"


namespace SDK
{

// Class CRD_GameStreamRuntime.CreativeGameStreamDeviceComponent
// 0x0010 (0x00B0 - 0x00A0)
class UCreativeGameStreamDeviceComponent final : public UActorComponent
{
public:
	FMulticastSparseDelegateProperty_             OnTriggered;                                       // 0x00A0(0x0001)(InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class UFortMinigameLogicComponent> MinigameLogicComponent;                            // 0x00A4(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddToEndGameQueue();
	void Init(class UFortMinigameLogicComponent* InMinigameLogicComponent);
	void OnMinigameStateChanged(class AFortMinigame* Minigame, const EFortMinigameState NewMinigameState);
	void RemoveFromEndGameQueue();

	bool IsWithinPublishedPlayspace() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CreativeGameStreamDeviceComponent">();
	}
	static class UCreativeGameStreamDeviceComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCreativeGameStreamDeviceComponent>();
	}
};
static_assert(alignof(UCreativeGameStreamDeviceComponent) == 0x000008, "Wrong alignment on UCreativeGameStreamDeviceComponent");
static_assert(sizeof(UCreativeGameStreamDeviceComponent) == 0x0000B0, "Wrong size on UCreativeGameStreamDeviceComponent");
static_assert(offsetof(UCreativeGameStreamDeviceComponent, OnTriggered) == 0x0000A0, "Member 'UCreativeGameStreamDeviceComponent::OnTriggered' has a wrong offset!");
static_assert(offsetof(UCreativeGameStreamDeviceComponent, MinigameLogicComponent) == 0x0000A4, "Member 'UCreativeGameStreamDeviceComponent::MinigameLogicComponent' has a wrong offset!");

// Class CRD_GameStreamRuntime.CreativeGameStreamDeviceCoordinatorComponent
// 0x0018 (0x00B8 - 0x00A0)
class UCreativeGameStreamDeviceCoordinatorComponent final : public UPlayspaceComponent
{
public:
	TArray<TWeakObjectPtr<class UCreativeGameStreamDeviceComponent>> EndGameCreativeGameStreamDeviceComponentQueue;     // 0x00A0(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class AFortMinigame>           Minigame;                                          // 0x00B0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnMinigameStateChanged(class AFortMinigame* InMinigame, const EFortMinigameState NewMinigameState);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CreativeGameStreamDeviceCoordinatorComponent">();
	}
	static class UCreativeGameStreamDeviceCoordinatorComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCreativeGameStreamDeviceCoordinatorComponent>();
	}
};
static_assert(alignof(UCreativeGameStreamDeviceCoordinatorComponent) == 0x000008, "Wrong alignment on UCreativeGameStreamDeviceCoordinatorComponent");
static_assert(sizeof(UCreativeGameStreamDeviceCoordinatorComponent) == 0x0000B8, "Wrong size on UCreativeGameStreamDeviceCoordinatorComponent");
static_assert(offsetof(UCreativeGameStreamDeviceCoordinatorComponent, EndGameCreativeGameStreamDeviceComponentQueue) == 0x0000A0, "Member 'UCreativeGameStreamDeviceCoordinatorComponent::EndGameCreativeGameStreamDeviceComponentQueue' has a wrong offset!");
static_assert(offsetof(UCreativeGameStreamDeviceCoordinatorComponent, Minigame) == 0x0000B0, "Member 'UCreativeGameStreamDeviceCoordinatorComponent::Minigame' has a wrong offset!");

}

