#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortAudioClustersRuntime

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function FortAudioClustersRuntime.GameFeatureAction_AddAudioCluster.HandleRegisteredActorDeath
// 0x0148 (0x0148 - 0x0000)
struct GameFeatureAction_AddAudioCluster_HandleRegisteredActorDeath final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FVector                                Momentum;                                          // 0x0028(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHitResult                             HitInfo;                                           // 0x0040(0x00E0)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class AFortPawn*                              InstigatedBy;                                      // 0x0120(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 DamageCauser;                                      // 0x0128(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x0130(0x0018)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GameFeatureAction_AddAudioCluster_HandleRegisteredActorDeath) == 0x000008, "Wrong alignment on GameFeatureAction_AddAudioCluster_HandleRegisteredActorDeath");
static_assert(sizeof(GameFeatureAction_AddAudioCluster_HandleRegisteredActorDeath) == 0x000148, "Wrong size on GameFeatureAction_AddAudioCluster_HandleRegisteredActorDeath");
static_assert(offsetof(GameFeatureAction_AddAudioCluster_HandleRegisteredActorDeath, Damage) == 0x000000, "Member 'GameFeatureAction_AddAudioCluster_HandleRegisteredActorDeath::Damage' has a wrong offset!");
static_assert(offsetof(GameFeatureAction_AddAudioCluster_HandleRegisteredActorDeath, DamageTags) == 0x000008, "Member 'GameFeatureAction_AddAudioCluster_HandleRegisteredActorDeath::DamageTags' has a wrong offset!");
static_assert(offsetof(GameFeatureAction_AddAudioCluster_HandleRegisteredActorDeath, Momentum) == 0x000028, "Member 'GameFeatureAction_AddAudioCluster_HandleRegisteredActorDeath::Momentum' has a wrong offset!");
static_assert(offsetof(GameFeatureAction_AddAudioCluster_HandleRegisteredActorDeath, HitInfo) == 0x000040, "Member 'GameFeatureAction_AddAudioCluster_HandleRegisteredActorDeath::HitInfo' has a wrong offset!");
static_assert(offsetof(GameFeatureAction_AddAudioCluster_HandleRegisteredActorDeath, InstigatedBy) == 0x000120, "Member 'GameFeatureAction_AddAudioCluster_HandleRegisteredActorDeath::InstigatedBy' has a wrong offset!");
static_assert(offsetof(GameFeatureAction_AddAudioCluster_HandleRegisteredActorDeath, DamageCauser) == 0x000128, "Member 'GameFeatureAction_AddAudioCluster_HandleRegisteredActorDeath::DamageCauser' has a wrong offset!");
static_assert(offsetof(GameFeatureAction_AddAudioCluster_HandleRegisteredActorDeath, EffectContext) == 0x000130, "Member 'GameFeatureAction_AddAudioCluster_HandleRegisteredActorDeath::EffectContext' has a wrong offset!");

}

