#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DeploymentConsole

#include "Basic.hpp"

#include "DeploymentConsole_classes.hpp"
#include "DeploymentConsole_parameters.hpp"


namespace SDK
{

// Function DeploymentConsole.DeploymentConsoleComponent.ForcePlayerEnterAircraft
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerControllerAthena*      InController                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortAthenaAircraft*              InAircraft                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDeploymentConsoleComponent::ForcePlayerEnterAircraft(class AFortPlayerControllerAthena* InController, class AFortAthenaAircraft* InAircraft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DeploymentConsoleComponent", "ForcePlayerEnterAircraft");

	Params::DeploymentConsoleComponent_ForcePlayerEnterAircraft Parms{};

	Parms.InController = InController;
	Parms.InAircraft = InAircraft;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DeploymentConsole.DeploymentConsoleComponent.GetMinigameTeamsWithPlayers
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortMinigame*                    InMinigame                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> UDeploymentConsoleComponent::GetMinigameTeamsWithPlayers(const class AFortMinigame* InMinigame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DeploymentConsoleComponent", "GetMinigameTeamsWithPlayers");

	Params::DeploymentConsoleComponent_GetMinigameTeamsWithPlayers Parms{};

	Parms.InMinigame = InMinigame;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DeploymentConsole.DeploymentConsoleComponent.MoveBoxTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBox2D                           InBox                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector2D                        VectorToMoveTo                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBox2D                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FBox2D UDeploymentConsoleComponent::MoveBoxTo(const struct FBox2D& InBox, const struct FVector2D& VectorToMoveTo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DeploymentConsoleComponent", "MoveBoxTo");

	Params::DeploymentConsoleComponent_MoveBoxTo Parms{};

	Parms.InBox = std::move(InBox);
	Parms.VectorToMoveTo = std::move(VectorToMoveTo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DeploymentConsole.DeploymentConsoleComponent.ConstructInventoryOnController
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerControllerAthena*      InController                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDeploymentConsoleComponent::ConstructInventoryOnController(class AFortPlayerControllerAthena* InController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeploymentConsoleComponent", "ConstructInventoryOnController");

	Params::DeploymentConsoleComponent_ConstructInventoryOnController Parms{};

	Parms.InController = InController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DeploymentConsole.DeploymentConsoleComponent.InitializeFlightPath
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortGameStateAthena*             GSA                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAircraftFlightConstructionInfo  FlightPathConstructionInfo                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UDeploymentConsoleComponent::InitializeFlightPath(class AFortGameStateAthena* GSA, const struct FAircraftFlightConstructionInfo& FlightPathConstructionInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeploymentConsoleComponent", "InitializeFlightPath");

	Params::DeploymentConsoleComponent_InitializeFlightPath Parms{};

	Parms.GSA = GSA;
	Parms.FlightPathConstructionInfo = std::move(FlightPathConstructionInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DeploymentConsole.DeploymentConsoleComponent.RetrievePlayerSpawnLocation
// (Final, BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// bool                                    bIsGameInProgress                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bGroupTeams                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   InTeam                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UDeploymentConsoleComponent::RetrievePlayerSpawnLocation(const bool bIsGameInProgress, const bool bGroupTeams, const uint8 InTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeploymentConsoleComponent", "RetrievePlayerSpawnLocation");

	Params::DeploymentConsoleComponent_RetrievePlayerSpawnLocation Parms{};

	Parms.bIsGameInProgress = bIsGameInProgress;
	Parms.bGroupTeams = bGroupTeams;
	Parms.InTeam = InTeam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DeploymentConsole.DeploymentConsoleComponent.SetAircraftDropZone
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FBox2D                           InDropZone                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UDeploymentConsoleComponent::SetAircraftDropZone(const struct FBox2D& InDropZone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeploymentConsoleComponent", "SetAircraftDropZone");

	Params::DeploymentConsoleComponent_SetAircraftDropZone Parms{};

	Parms.InDropZone = std::move(InDropZone);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DeploymentConsole.DeploymentConsoleComponent.SetAircraftLock
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsLocked                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDeploymentConsoleComponent::SetAircraftLock(const bool bIsLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeploymentConsoleComponent", "SetAircraftLock");

	Params::DeploymentConsoleComponent_SetAircraftLock Parms{};

	Parms.bIsLocked = bIsLocked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DeploymentConsole.DeploymentConsoleComponent.SetPlayerIsWaiting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AController*                      InController                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInPlayerIsWaiting                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDeploymentConsoleComponent::SetPlayerIsWaiting(class AController* InController, const bool bInPlayerIsWaiting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeploymentConsoleComponent", "SetPlayerIsWaiting");

	Params::DeploymentConsoleComponent_SetPlayerIsWaiting Parms{};

	Parms.InController = InController;
	Parms.bInPlayerIsWaiting = bInPlayerIsWaiting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DeploymentConsole.DeploymentConsoleComponent.SetupTeamSpawnPoints
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bGroupTeams                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDeploymentConsoleComponent::SetupTeamSpawnPoints(const bool bGroupTeams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeploymentConsoleComponent", "SetupTeamSpawnPoints");

	Params::DeploymentConsoleComponent_SetupTeamSpawnPoints Parms{};

	Parms.bGroupTeams = bGroupTeams;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DeploymentConsole.DeploymentConsoleComponent.SpawnAircraft
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   FlightIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortAthenaAircraft*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortAthenaAircraft* UDeploymentConsoleComponent::SpawnAircraft(const int32 FlightIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeploymentConsoleComponent", "SpawnAircraft");

	Params::DeploymentConsoleComponent_SpawnAircraft Parms{};

	Parms.FlightIndex = FlightIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DeploymentConsole.DeploymentConsoleComponent.SpawnAircrafts
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bSpawnAircraftForEachTeam                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FDeploymentConsoleAircraftData>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FDeploymentConsoleAircraftData> UDeploymentConsoleComponent::SpawnAircrafts(const bool bSpawnAircraftForEachTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeploymentConsoleComponent", "SpawnAircrafts");

	Params::DeploymentConsoleComponent_SpawnAircrafts Parms{};

	Parms.bSpawnAircraftForEachTeam = bSpawnAircraftForEachTeam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DeploymentConsole.DeploymentConsoleComponent.AdjustLocationToValidHeight
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          RespawnLocation                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UDeploymentConsoleComponent::AdjustLocationToValidHeight(const struct FVector& RespawnLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeploymentConsoleComponent", "AdjustLocationToValidHeight");

	Params::DeploymentConsoleComponent_AdjustLocationToValidHeight Parms{};

	Parms.RespawnLocation = std::move(RespawnLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DeploymentConsole.DeploymentConsoleComponent.CalculateSpawnRotationFromLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          InSpawnLocation                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UDeploymentConsoleComponent::CalculateSpawnRotationFromLocation(const struct FVector& InSpawnLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeploymentConsoleComponent", "CalculateSpawnRotationFromLocation");

	Params::DeploymentConsoleComponent_CalculateSpawnRotationFromLocation Parms{};

	Parms.InSpawnLocation = std::move(InSpawnLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DeploymentConsole.DeploymentConsoleComponent.ClearFlightInfos
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, Const)

void UDeploymentConsoleComponent::ClearFlightInfos() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeploymentConsoleComponent", "ClearFlightInfos");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DeploymentConsole.DeploymentConsoleComponent.GetCachedAircraftSpawnZone
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FBox2D                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

const struct FBox2D UDeploymentConsoleComponent::GetCachedAircraftSpawnZone() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeploymentConsoleComponent", "GetCachedAircraftSpawnZone");

	Params::DeploymentConsoleComponent_GetCachedAircraftSpawnZone Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DeploymentConsole.DeploymentConsoleComponent.GetDefaultFlightPathConstructionInfo
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortGameStateAthena*             GameStateAthena                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAirCraftBehavior                       AirCraftBehavior                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAircraftFlightConstructionInfo  ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAircraftFlightConstructionInfo UDeploymentConsoleComponent::GetDefaultFlightPathConstructionInfo(const class AFortGameStateAthena* GameStateAthena, const EAirCraftBehavior AirCraftBehavior) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeploymentConsoleComponent", "GetDefaultFlightPathConstructionInfo");

	Params::DeploymentConsoleComponent_GetDefaultFlightPathConstructionInfo Parms{};

	Parms.GameStateAthena = GameStateAthena;
	Parms.AirCraftBehavior = AirCraftBehavior;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DeploymentConsole.DeploymentConsoleComponent.GetMapInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortAthenaMapInfo*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortAthenaMapInfo* UDeploymentConsoleComponent::GetMapInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeploymentConsoleComponent", "GetMapInfo");

	Params::DeploymentConsoleComponent_GetMapInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DeploymentConsole.DeploymentConsoleComponent.GetSpawnPoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<struct FVector2D>          ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<struct FVector2D> UDeploymentConsoleComponent::GetSpawnPoints() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeploymentConsoleComponent", "GetSpawnPoints");

	Params::DeploymentConsoleComponent_GetSpawnPoints Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DeploymentConsole.DeploymentConsoleComponent.GetTeamSpawnData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<struct FDeploymentConsoleTeamData>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<struct FDeploymentConsoleTeamData> UDeploymentConsoleComponent::GetTeamSpawnData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeploymentConsoleComponent", "GetTeamSpawnData");

	Params::DeploymentConsoleComponent_GetTeamSpawnData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

