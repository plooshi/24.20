#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattlePassCrewPurchaseContainer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CrewUI_structs.hpp"
#include "CrewUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BattlePassCrewPurchaseContainer.BattlePassCrewPurchaseContainer_C
// 0x00B8 (0x04E0 - 0x0428)
class UBattlePassCrewPurchaseContainer_C final : public UBattlePassCrewPurchaseContainer
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0428(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       TransitionLeft;                                    // 0x0430(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TransitionRight;                                   // 0x0438(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCrewBenefitsAnim_C*                    CrewBenefitsAnim;                                  // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCrewPurchaseScreen_C*                  CrewPurchaseScreen;                                // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCrewSeasonLaunchScreen_C*              CrewSeasonLaunchScreen;                            // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_BackgroundFill;                              // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Blackout;                                    // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Blackout_quickintro;                         // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_BPEmblem;                                    // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_IntroBG;                                     // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Sparks;                                      // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Transition;                                  // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       LastPlayedAnimation;                               // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UBattlePassPurchaseScreen_C*            As_Battle_Pass_Purchase_Screen;                    // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           MusicControllerHandle;                             // 0x04A0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundMix*                              BattlePassMix;                                     // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABattlepass_MusicController_Quartz_C*   MusicController_Quartz;                            // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        BattlepassSplashAudio;                             // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CrewSplashAudio;                                   // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        TransitionLeftAlpha;                               // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TransitionRightAlpha;                              // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassCrewContentState                   BPState;                                           // 0x04D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BattlePassMusic();
	void BP_OnActivated();
	void BP_OnDeactivated();
	void CallMusicController();
	void Construct();
	void ExecuteUbergraph_BattlePassCrewPurchaseContainer(int32 EntryPoint);
	void OnContentStateUpdated(EBattlePassCrewContentState InState, bool bInScreenOpened);
	void OnLastPlayedAnimationFinished();
	void OnTransitionLeftEvaluated();
	void OnTransitionRightEvaluated();
	void OnTriggerIntroAnimation(bool bCanClaimRewards);
	void PlayBattlepassSplashAudio();
	void PlaySubscriptionSplashAudio();
	void ResetAnimations();
	void SequenceEvent__ENTRYPOINTBattlePassCrewPurchaseContainer();
	void SequenceEvent__ENTRYPOINTBattlePassCrewPurchaseContainer_0();
	void SequenceEvent__ENTRYPOINTBattlePassCrewPurchaseContainer_1();
	void SequenceEvent__ENTRYPOINTBattlePassCrewPurchaseContainer_2();
	void SequenceEvent_ToggleScreens(bool isLeft);
	void StopAllBattlePassMusic();
	void SubscriptionMusic();
	void TriggerSubTransitionIn(EBattlePassCrewContentState TransitionState);
	void TriggerSubTransitionOut(EBattlePassCrewContentState TransitionState);
	void UpSellMusic();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BattlePassCrewPurchaseContainer_C">();
	}
	static class UBattlePassCrewPurchaseContainer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattlePassCrewPurchaseContainer_C>();
	}
};
static_assert(alignof(UBattlePassCrewPurchaseContainer_C) == 0x000008, "Wrong alignment on UBattlePassCrewPurchaseContainer_C");
static_assert(sizeof(UBattlePassCrewPurchaseContainer_C) == 0x0004E0, "Wrong size on UBattlePassCrewPurchaseContainer_C");
static_assert(offsetof(UBattlePassCrewPurchaseContainer_C, UberGraphFrame) == 0x000428, "Member 'UBattlePassCrewPurchaseContainer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseContainer_C, TransitionLeft) == 0x000430, "Member 'UBattlePassCrewPurchaseContainer_C::TransitionLeft' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseContainer_C, TransitionRight) == 0x000438, "Member 'UBattlePassCrewPurchaseContainer_C::TransitionRight' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseContainer_C, CrewBenefitsAnim) == 0x000440, "Member 'UBattlePassCrewPurchaseContainer_C::CrewBenefitsAnim' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseContainer_C, CrewPurchaseScreen) == 0x000448, "Member 'UBattlePassCrewPurchaseContainer_C::CrewPurchaseScreen' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseContainer_C, CrewSeasonLaunchScreen) == 0x000450, "Member 'UBattlePassCrewPurchaseContainer_C::CrewSeasonLaunchScreen' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseContainer_C, Image_BackgroundFill) == 0x000458, "Member 'UBattlePassCrewPurchaseContainer_C::Image_BackgroundFill' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseContainer_C, Image_Blackout) == 0x000460, "Member 'UBattlePassCrewPurchaseContainer_C::Image_Blackout' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseContainer_C, Image_Blackout_quickintro) == 0x000468, "Member 'UBattlePassCrewPurchaseContainer_C::Image_Blackout_quickintro' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseContainer_C, Image_BPEmblem) == 0x000470, "Member 'UBattlePassCrewPurchaseContainer_C::Image_BPEmblem' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseContainer_C, Image_IntroBG) == 0x000478, "Member 'UBattlePassCrewPurchaseContainer_C::Image_IntroBG' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseContainer_C, Image_Sparks) == 0x000480, "Member 'UBattlePassCrewPurchaseContainer_C::Image_Sparks' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseContainer_C, Image_Transition) == 0x000488, "Member 'UBattlePassCrewPurchaseContainer_C::Image_Transition' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseContainer_C, LastPlayedAnimation) == 0x000490, "Member 'UBattlePassCrewPurchaseContainer_C::LastPlayedAnimation' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseContainer_C, As_Battle_Pass_Purchase_Screen) == 0x000498, "Member 'UBattlePassCrewPurchaseContainer_C::As_Battle_Pass_Purchase_Screen' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseContainer_C, MusicControllerHandle) == 0x0004A0, "Member 'UBattlePassCrewPurchaseContainer_C::MusicControllerHandle' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseContainer_C, BattlePassMix) == 0x0004A8, "Member 'UBattlePassCrewPurchaseContainer_C::BattlePassMix' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseContainer_C, MusicController_Quartz) == 0x0004B0, "Member 'UBattlePassCrewPurchaseContainer_C::MusicController_Quartz' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseContainer_C, BattlepassSplashAudio) == 0x0004B8, "Member 'UBattlePassCrewPurchaseContainer_C::BattlepassSplashAudio' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseContainer_C, CrewSplashAudio) == 0x0004C0, "Member 'UBattlePassCrewPurchaseContainer_C::CrewSplashAudio' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseContainer_C, TransitionLeftAlpha) == 0x0004C8, "Member 'UBattlePassCrewPurchaseContainer_C::TransitionLeftAlpha' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseContainer_C, TransitionRightAlpha) == 0x0004D0, "Member 'UBattlePassCrewPurchaseContainer_C::TransitionRightAlpha' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseContainer_C, BPState) == 0x0004D8, "Member 'UBattlePassCrewPurchaseContainer_C::BPState' has a wrong offset!");

}

