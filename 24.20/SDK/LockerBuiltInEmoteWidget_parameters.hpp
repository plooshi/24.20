#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LockerBuiltInEmoteWidget

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function LockerBuiltInEmoteWidget.LockerBuiltInEmoteWidget_C.ExecuteUbergraph_LockerBuiltInEmoteWidget
// 0x0030 (0x0030 - 0x0000)
struct LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAthenaLockerInfoRestrictionWarning           Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShouldShow;                          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAthenaLockerInfoRestrictionWarning           K2Node_Event_WarningType;                          // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget) == 0x000008, "Wrong alignment on LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget");
static_assert(sizeof(LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget) == 0x000030, "Wrong size on LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget");
static_assert(offsetof(LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget, EntryPoint) == 0x000000, "Member 'LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget, Temp_bool_Variable) == 0x000004, "Member 'LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget, Temp_byte_Variable) == 0x000005, "Member 'LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget, Temp_byte_Variable_1) == 0x000006, "Member 'LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget, Temp_int_Variable) == 0x000008, "Member 'LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget, Temp_int_Variable_1) == 0x00000C, "Member 'LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget, Temp_int_Variable_2) == 0x000010, "Member 'LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget, Temp_int_Variable_3) == 0x000014, "Member 'LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget, Temp_int_Variable_4) == 0x000018, "Member 'LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget, K2Node_Event_bShouldShow) == 0x00001C, "Member 'LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget::K2Node_Event_bShouldShow' has a wrong offset!");
static_assert(offsetof(LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget, K2Node_Event_WarningType) == 0x00001D, "Member 'LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget::K2Node_Event_WarningType' has a wrong offset!");
static_assert(offsetof(LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00001E, "Member 'LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget, K2Node_Select_Default) == 0x000020, "Member 'LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget, Temp_byte_Variable_2) == 0x000024, "Member 'LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget, K2Node_Select_Default_1) == 0x000025, "Member 'LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget, CallFunc_PlayAnimation_ReturnValue) == 0x000028, "Member 'LockerBuiltInEmoteWidget_C_ExecuteUbergraph_LockerBuiltInEmoteWidget::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function LockerBuiltInEmoteWidget.LockerBuiltInEmoteWidget_C.OnUpdateAccessRestrictionWarning
// 0x0002 (0x0002 - 0x0000)
struct LockerBuiltInEmoteWidget_C_OnUpdateAccessRestrictionWarning final
{
public:
	bool                                          bShouldShow;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAthenaLockerInfoRestrictionWarning           WarningType;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LockerBuiltInEmoteWidget_C_OnUpdateAccessRestrictionWarning) == 0x000001, "Wrong alignment on LockerBuiltInEmoteWidget_C_OnUpdateAccessRestrictionWarning");
static_assert(sizeof(LockerBuiltInEmoteWidget_C_OnUpdateAccessRestrictionWarning) == 0x000002, "Wrong size on LockerBuiltInEmoteWidget_C_OnUpdateAccessRestrictionWarning");
static_assert(offsetof(LockerBuiltInEmoteWidget_C_OnUpdateAccessRestrictionWarning, bShouldShow) == 0x000000, "Member 'LockerBuiltInEmoteWidget_C_OnUpdateAccessRestrictionWarning::bShouldShow' has a wrong offset!");
static_assert(offsetof(LockerBuiltInEmoteWidget_C_OnUpdateAccessRestrictionWarning, WarningType) == 0x000001, "Member 'LockerBuiltInEmoteWidget_C_OnUpdateAccessRestrictionWarning::WarningType' has a wrong offset!");

}

