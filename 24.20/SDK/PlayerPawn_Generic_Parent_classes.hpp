#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerPawn_Generic_Parent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CharacterPartMidArrayStruct_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PlayerPawn_Generic_Parent.PlayerPawn_Generic_Parent_C
// 0x00E0 (0x4500 - 0x4420)
class APlayerPawn_Generic_Parent_C : public AFortPlayerPawn
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x4420(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class UMaterialInterface*>             Default_Weapon_Materials;                          // 0x4428(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UMaterialInstanceDynamic*>       PawnBackpackMaterials;                             // 0x4438(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, Deprecated)
	TArray<class UMaterialInstanceDynamic*>       PawnHatMaterials;                                  // 0x4448(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, Deprecated)
	TArray<class UMaterialInstanceDynamic*>       PawnHeadMaterials;                                 // 0x4458(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, Deprecated)
	TArray<class UMaterialInstanceDynamic*>       PawnBodyMaterials;                                 // 0x4468(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, Deprecated)
	TArray<class UMaterialInstanceDynamic*>       PawnCharmMaterials;                                // 0x4478(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, Deprecated)
	TArray<class UMaterialInstanceDynamic*>       PawnFaceMaterials;                                 // 0x4488(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, Deprecated)
	class UPostProcessComponent*                  PlayerPostProcessFX;                               // 0x4498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         SkeletalMeshes;                                    // 0x44A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UMaterialInstanceDynamic*>       PawnMaterials_ALL;                                 // 0x44B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         WaterCounter;                                      // 0x44C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44C4[0x4];                                     // 0x44C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CurrentWaterMeshActor;                             // 0x44C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInWater;                                         // 0x44D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44D1[0x7];                                     // 0x44D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Time_when_you_ll_be_able_to_splash_again;          // 0x44D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(bool bIsInWater, class AFortPlayerPawn* Pawn, class AActor* Water)> OnOverlapWaterVolume;                              // 0x44E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<struct FCharacterPartMidArrayStruct>   PawnPartMaterials;                                 // 0x44F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_PlayerPawn_Generic_Parent(int32 EntryPoint);
	void Entered_Water_Volume();
	void Find_Stored_Char_Part_Materials(EFortCustomPartType PartType, bool* Found, int32* Index_0, TArray<class UMaterialInstanceDynamic*>* MIDs);
	void Player_Creates_a_Splash(const struct FTransform& NewTransform);
	void ReceiveBeginPlay();
	void ReinitializeWeaponMaterials();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerPawn_Generic_Parent_C">();
	}
	static class APlayerPawn_Generic_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlayerPawn_Generic_Parent_C>();
	}
};
static_assert(alignof(APlayerPawn_Generic_Parent_C) == 0x000010, "Wrong alignment on APlayerPawn_Generic_Parent_C");
static_assert(sizeof(APlayerPawn_Generic_Parent_C) == 0x004500, "Wrong size on APlayerPawn_Generic_Parent_C");
static_assert(offsetof(APlayerPawn_Generic_Parent_C, UberGraphFrame) == 0x004420, "Member 'APlayerPawn_Generic_Parent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_Parent_C, Default_Weapon_Materials) == 0x004428, "Member 'APlayerPawn_Generic_Parent_C::Default_Weapon_Materials' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_Parent_C, PawnBackpackMaterials) == 0x004438, "Member 'APlayerPawn_Generic_Parent_C::PawnBackpackMaterials' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_Parent_C, PawnHatMaterials) == 0x004448, "Member 'APlayerPawn_Generic_Parent_C::PawnHatMaterials' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_Parent_C, PawnHeadMaterials) == 0x004458, "Member 'APlayerPawn_Generic_Parent_C::PawnHeadMaterials' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_Parent_C, PawnBodyMaterials) == 0x004468, "Member 'APlayerPawn_Generic_Parent_C::PawnBodyMaterials' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_Parent_C, PawnCharmMaterials) == 0x004478, "Member 'APlayerPawn_Generic_Parent_C::PawnCharmMaterials' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_Parent_C, PawnFaceMaterials) == 0x004488, "Member 'APlayerPawn_Generic_Parent_C::PawnFaceMaterials' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_Parent_C, PlayerPostProcessFX) == 0x004498, "Member 'APlayerPawn_Generic_Parent_C::PlayerPostProcessFX' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_Parent_C, SkeletalMeshes) == 0x0044A0, "Member 'APlayerPawn_Generic_Parent_C::SkeletalMeshes' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_Parent_C, PawnMaterials_ALL) == 0x0044B0, "Member 'APlayerPawn_Generic_Parent_C::PawnMaterials_ALL' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_Parent_C, WaterCounter) == 0x0044C0, "Member 'APlayerPawn_Generic_Parent_C::WaterCounter' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_Parent_C, CurrentWaterMeshActor) == 0x0044C8, "Member 'APlayerPawn_Generic_Parent_C::CurrentWaterMeshActor' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_Parent_C, IsInWater) == 0x0044D0, "Member 'APlayerPawn_Generic_Parent_C::IsInWater' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_Parent_C, Time_when_you_ll_be_able_to_splash_again) == 0x0044D8, "Member 'APlayerPawn_Generic_Parent_C::Time_when_you_ll_be_able_to_splash_again' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_Parent_C, OnOverlapWaterVolume) == 0x0044E0, "Member 'APlayerPawn_Generic_Parent_C::OnOverlapWaterVolume' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_Parent_C, PawnPartMaterials) == 0x0044F0, "Member 'APlayerPawn_Generic_Parent_C::PawnPartMaterials' has a wrong offset!");

}

