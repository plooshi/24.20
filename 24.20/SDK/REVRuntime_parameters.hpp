#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: REVRuntime

#include "Basic.hpp"


namespace SDK::Params
{

// Function REVRuntime.REVComponent.SetRevModel
// 0x0008 (0x0008 - 0x0000)
struct REVComponent_SetRevModel final
{
public:
	class UREVModel*                              InModel;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(REVComponent_SetRevModel) == 0x000008, "Wrong alignment on REVComponent_SetRevModel");
static_assert(sizeof(REVComponent_SetRevModel) == 0x000008, "Wrong size on REVComponent_SetRevModel");
static_assert(offsetof(REVComponent_SetRevModel, InModel) == 0x000000, "Member 'REVComponent_SetRevModel::InModel' has a wrong offset!");

// Function REVRuntime.REVComponent.SetSettings
// 0x0008 (0x0008 - 0x0000)
struct REVComponent_SetSettings final
{
public:
	class URevSettings*                           InSettings;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(REVComponent_SetSettings) == 0x000008, "Wrong alignment on REVComponent_SetSettings");
static_assert(sizeof(REVComponent_SetSettings) == 0x000008, "Wrong size on REVComponent_SetSettings");
static_assert(offsetof(REVComponent_SetSettings, InSettings) == 0x000000, "Member 'REVComponent_SetSettings::InSettings' has a wrong offset!");

// Function REVRuntime.REVComponent.UpdateParameters
// 0x0018 (0x0018 - 0x0000)
struct REVComponent_UpdateParameters final
{
public:
	float                                         InPitch;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InRPM;                                             // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InThrottle;                                        // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InVelocity;                                        // 0x000C(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InGear;                                            // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInEnableShifting;                                 // 0x0014(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(REVComponent_UpdateParameters) == 0x000004, "Wrong alignment on REVComponent_UpdateParameters");
static_assert(sizeof(REVComponent_UpdateParameters) == 0x000018, "Wrong size on REVComponent_UpdateParameters");
static_assert(offsetof(REVComponent_UpdateParameters, InPitch) == 0x000000, "Member 'REVComponent_UpdateParameters::InPitch' has a wrong offset!");
static_assert(offsetof(REVComponent_UpdateParameters, InRPM) == 0x000004, "Member 'REVComponent_UpdateParameters::InRPM' has a wrong offset!");
static_assert(offsetof(REVComponent_UpdateParameters, InThrottle) == 0x000008, "Member 'REVComponent_UpdateParameters::InThrottle' has a wrong offset!");
static_assert(offsetof(REVComponent_UpdateParameters, InVelocity) == 0x00000C, "Member 'REVComponent_UpdateParameters::InVelocity' has a wrong offset!");
static_assert(offsetof(REVComponent_UpdateParameters, InGear) == 0x000010, "Member 'REVComponent_UpdateParameters::InGear' has a wrong offset!");
static_assert(offsetof(REVComponent_UpdateParameters, bInEnableShifting) == 0x000014, "Member 'REVComponent_UpdateParameters::bInEnableShifting' has a wrong offset!");

}

