#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerseRestricted

#include "Basic.hpp"

#include "VerseRestricted_classes.hpp"
#include "VerseRestricted_parameters.hpp"


namespace SDK
{

// Function VerseRestricted.Restricted._L_2fVerse_2eorg_2fRestricted_N_Rsticky__event
// (Final, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct VerseRestricted::Ftuple_L_R      __verse_0xB2CDDD72_Argument                            (Parm, HasGetValueTypeHash)
// class UClass*                           RetVal                                                 (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)

class UClass* URestricted::_L_2fVerse_2eorg_2fRestricted_N_Rsticky__event(const struct VerseRestricted::Ftuple_L_R& __verse_0xB2CDDD72_Argument)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Restricted", "_L_2fVerse_2eorg_2fRestricted_N_Rsticky__event");

	Params::Restricted__L_2fVerse_2eorg_2fRestricted_N_Rsticky__event Parms{};

	Parms.__verse_0xB2CDDD72_Argument = std::move(__verse_0xB2CDDD72_Argument);

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function VerseRestricted.Restricted._L_2fVerse_2eorg_2fRestricted_N_Rsticky__event_L_Nany_R
// (Final, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UClass*                           __verse_0xB2CDDD72_Argument                            (ExportObject, Parm, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
// class UClass*                           RetVal                                                 (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)

class UClass* URestricted::_L_2fVerse_2eorg_2fRestricted_N_Rsticky__event_L_Nany_R(class UClass* __verse_0xB2CDDD72_Argument)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Restricted", "_L_2fVerse_2eorg_2fRestricted_N_Rsticky__event_L_Nany_R");

	Params::Restricted__L_2fVerse_2eorg_2fRestricted_N_Rsticky__event_L_Nany_R Parms{};

	Parms.__verse_0xB2CDDD72_Argument = __verse_0xB2CDDD72_Argument;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function VerseRestricted.Restricted.$InitCDO
// ()

void URestricted::_InitCDO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Restricted", "$InitCDO");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VerseRestricted.Restricted_sticky_event.$Block
// ()

void URestricted_sticky_event::_Block()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Restricted_sticky_event", "$Block");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VerseRestricted.Restricted_sticky_event.$InitCDO
// ()

void URestricted_sticky_event::_InitCDO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Restricted_sticky_event", "$InitCDO");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VerseRestricted.Restricted_sticky_event.$InitInstance
// ()

void URestricted_sticky_event::_InitInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Restricted_sticky_event", "$InitInstance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VerseRestricted.Restricted_sticky_event._L_2fVerse_2eorg_2fRestricted_2fsticky__event_2fsticky__event_Lt_R_N_RClearSignal
// (Native, Public, BlueprintCallable)
// Parameters:
// struct VerseRestricted::Ftuple_L_R      __verse_0xB2CDDD72_Argument                            (Parm, HasGetValueTypeHash)

void URestricted_sticky_event::_L_2fVerse_2eorg_2fRestricted_2fsticky__event_2fsticky__event_Lt_R_N_RClearSignal(const struct VerseRestricted::Ftuple_L_R& __verse_0xB2CDDD72_Argument)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Restricted_sticky_event", "_L_2fVerse_2eorg_2fRestricted_2fsticky__event_2fsticky__event_Lt_R_N_RClearSignal");

	Params::Restricted_sticky_event__L_2fVerse_2eorg_2fRestricted_2fsticky__event_2fsticky__event_Lt_R_N_RClearSignal Parms{};

	Parms.__verse_0xB2CDDD72_Argument = std::move(__verse_0xB2CDDD72_Argument);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VerseRestricted.Restricted_sticky_event._L_2fVerse_2eorg_2fRestricted_2fsticky__event_2fsticky__event_Lt_R_N_RGetAwaitCount
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct VerseRestricted::Ftuple_L_R      __verse_0xB2CDDD72_Argument                            (Parm, HasGetValueTypeHash)
// int64                                   RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int64 URestricted_sticky_event::_L_2fVerse_2eorg_2fRestricted_2fsticky__event_2fsticky__event_Lt_R_N_RGetAwaitCount(const struct VerseRestricted::Ftuple_L_R& __verse_0xB2CDDD72_Argument)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Restricted_sticky_event", "_L_2fVerse_2eorg_2fRestricted_2fsticky__event_2fsticky__event_Lt_R_N_RGetAwaitCount");

	Params::Restricted_sticky_event__L_2fVerse_2eorg_2fRestricted_2fsticky__event_2fsticky__event_Lt_R_N_RGetAwaitCount Parms{};

	Parms.__verse_0xB2CDDD72_Argument = std::move(__verse_0xB2CDDD72_Argument);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VerseRestricted.Restricted_sticky_event._L_2fVerse_2eorg_2fRestricted_2fsticky__event_2fsticky__event_Lt_R_N_RIsSignaled
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct VerseRestricted::Ftuple_L_R      __verse_0xB2CDDD72_Argument                            (Parm, HasGetValueTypeHash)
// FOptionProperty_                        RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

FOptionProperty_ URestricted_sticky_event::_L_2fVerse_2eorg_2fRestricted_2fsticky__event_2fsticky__event_Lt_R_N_RIsSignaled(const struct VerseRestricted::Ftuple_L_R& __verse_0xB2CDDD72_Argument)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Restricted_sticky_event", "_L_2fVerse_2eorg_2fRestricted_2fsticky__event_2fsticky__event_Lt_R_N_RIsSignaled");

	Params::Restricted_sticky_event__L_2fVerse_2eorg_2fRestricted_2fsticky__event_2fsticky__event_Lt_R_N_RIsSignaled Parms{};

	Parms.__verse_0xB2CDDD72_Argument = std::move(__verse_0xB2CDDD72_Argument);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VerseRestricted.Restricted_sticky_event._L_2fVerse_2eorg_2fVerse_2fsignalable_2fsignalable_Lpayload_R_N_RSignal_L_Npayload_R
// (Native, Public, BlueprintCallable)
// Parameters:
// FVerseDynamicProperty_                  __verse_0xB2CDDD72_Argument                            (Parm, HasGetValueTypeHash)

void URestricted_sticky_event::_L_2fVerse_2eorg_2fVerse_2fsignalable_2fsignalable_Lpayload_R_N_RSignal_L_Npayload_R(FVerseDynamicProperty_ __verse_0xB2CDDD72_Argument)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Restricted_sticky_event", "_L_2fVerse_2eorg_2fVerse_2fsignalable_2fsignalable_Lpayload_R_N_RSignal_L_Npayload_R");

	Params::Restricted_sticky_event__L_2fVerse_2eorg_2fVerse_2fsignalable_2fsignalable_Lpayload_R_N_RSignal_L_Npayload_R Parms{};

	Parms.__verse_0xB2CDDD72_Argument = __verse_0xB2CDDD72_Argument;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VerseRestricted.Restricted_sticky_event.Await
// (Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UConcurrency_task*                __verse_0xC1E81372_CallingTask                         (ExportObject, Parm, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
// int64                                   __verse_0xA3A00DDB_CallerResumeState                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int64                                   __verse_0x2AC0E4D8_CallerCancelState                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct VerseRestricted::Ftuple_L_R      __verse_0xB2CDDD72_Argument                            (Parm, HasGetValueTypeHash)
// class UConcurrency_task*                RetVal                                                 (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)

class UConcurrency_task* URestricted_sticky_event::Await(class UConcurrency_task* __verse_0xC1E81372_CallingTask, int64 __verse_0xA3A00DDB_CallerResumeState, int64 __verse_0x2AC0E4D8_CallerCancelState, const struct VerseRestricted::Ftuple_L_R& __verse_0xB2CDDD72_Argument)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Restricted_sticky_event", "Await");

	Params::Restricted_sticky_event_Await Parms{};

	Parms.__verse_0xC1E81372_CallingTask = __verse_0xC1E81372_CallingTask;
	Parms.__verse_0xA3A00DDB_CallerResumeState = __verse_0xA3A00DDB_CallerResumeState;
	Parms.__verse_0x2AC0E4D8_CallerCancelState = __verse_0x2AC0E4D8_CallerCancelState;
	Parms.__verse_0xB2CDDD72_Argument = std::move(__verse_0xB2CDDD72_Argument);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function VerseRestricted.task_Restricted_sticky_event$Await.Update
// (Native, Public, HasOutParams)
// Parameters:
// int64                                   RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int64 Utask_Restricted_sticky_event_Await::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("task_Restricted_sticky_event$Await", "Update");

	Params::task_Restricted_sticky_event_Await_Update Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

