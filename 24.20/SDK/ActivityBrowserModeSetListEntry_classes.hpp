#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ActivityBrowserModeSetListEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonInput_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ActivityBrowserModeSetListEntry.ActivityBrowserModeSetListEntry_C
// 0x0090 (0x1490 - 0x1400)
class UActivityBrowserModeSetListEntry_C : public UFortActivityBrowserModeSetListEntry
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1400(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       SetDisabledColoration;                             // 0x1408(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnHoverUnhoverRehover;                             // 0x1410(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnImageLoaded;                                     // 0x1418(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCategoryButton_C*                      CategoryButton;                                    // 0x1420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       DisabledWarningMessage;                            // 0x1428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Ovr_Primary;                                       // 0x1430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OvrDisabledWarning;                                // 0x1438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Primary;                                   // 0x1440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Thumbnail;                                         // 0x1448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FName                                   ThumbnailImageParam;                               // 0x1450(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ThumbnailAlphaParam;                               // 0x1454(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsKeyArtValid;                                     // 0x1458(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1459[0x7];                                     // 0x1459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               DefaultImage;                                      // 0x1460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        DisabledClickDuration;                             // 0x1468(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActivityValid;                                   // 0x1470(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1471[0x7];                                     // 0x1471(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              TileSize;                                          // 0x1478(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ThumbnailOverlayOpacityParam;                      // 0x1488(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInHoveredState;                                  // 0x148C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Pad_Left;                                          // 0x148D(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Pad_Right;                                         // 0x148E(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BP_OnClicked();
	void BP_OnHovered();
	void BP_OnItemSelectionChanged(bool bIsSelected);
	void BP_OnUnhovered();
	void Construct();
	void ExecuteUbergraph_ActivityBrowserModeSetListEntry(int32 EntryPoint);
	void OnActivityNameSet(const class FText& ActivityName);
	void OnFocusLost(const struct FFocusEvent& InFocusEvent);
	void OnPartySizeChanged(const int32 PartySize);
	void OnPreviewImageChanged(const bool bIsLoading, const class UTexture* Texture);
	void OnSavedActivitySet(const bool IsSaved);
	void PreConstruct(bool IsDesignTime);
	void RefreshDisabledState();
	void ResetSetDisabledColorationAnimation();
	void SetHoveredState(bool IsHovered_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ActivityBrowserModeSetListEntry_C">();
	}
	static class UActivityBrowserModeSetListEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActivityBrowserModeSetListEntry_C>();
	}
};
static_assert(alignof(UActivityBrowserModeSetListEntry_C) == 0x000010, "Wrong alignment on UActivityBrowserModeSetListEntry_C");
static_assert(sizeof(UActivityBrowserModeSetListEntry_C) == 0x001490, "Wrong size on UActivityBrowserModeSetListEntry_C");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, UberGraphFrame) == 0x001400, "Member 'UActivityBrowserModeSetListEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, SetDisabledColoration) == 0x001408, "Member 'UActivityBrowserModeSetListEntry_C::SetDisabledColoration' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, OnHoverUnhoverRehover) == 0x001410, "Member 'UActivityBrowserModeSetListEntry_C::OnHoverUnhoverRehover' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, OnImageLoaded) == 0x001418, "Member 'UActivityBrowserModeSetListEntry_C::OnImageLoaded' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, CategoryButton) == 0x001420, "Member 'UActivityBrowserModeSetListEntry_C::CategoryButton' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, DisabledWarningMessage) == 0x001428, "Member 'UActivityBrowserModeSetListEntry_C::DisabledWarningMessage' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, Ovr_Primary) == 0x001430, "Member 'UActivityBrowserModeSetListEntry_C::Ovr_Primary' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, OvrDisabledWarning) == 0x001438, "Member 'UActivityBrowserModeSetListEntry_C::OvrDisabledWarning' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, SizeBox_Primary) == 0x001440, "Member 'UActivityBrowserModeSetListEntry_C::SizeBox_Primary' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, Thumbnail) == 0x001448, "Member 'UActivityBrowserModeSetListEntry_C::Thumbnail' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, ThumbnailImageParam) == 0x001450, "Member 'UActivityBrowserModeSetListEntry_C::ThumbnailImageParam' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, ThumbnailAlphaParam) == 0x001454, "Member 'UActivityBrowserModeSetListEntry_C::ThumbnailAlphaParam' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, IsKeyArtValid) == 0x001458, "Member 'UActivityBrowserModeSetListEntry_C::IsKeyArtValid' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, DefaultImage) == 0x001460, "Member 'UActivityBrowserModeSetListEntry_C::DefaultImage' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, DisabledClickDuration) == 0x001468, "Member 'UActivityBrowserModeSetListEntry_C::DisabledClickDuration' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, IsActivityValid) == 0x001470, "Member 'UActivityBrowserModeSetListEntry_C::IsActivityValid' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, TileSize) == 0x001478, "Member 'UActivityBrowserModeSetListEntry_C::TileSize' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, ThumbnailOverlayOpacityParam) == 0x001488, "Member 'UActivityBrowserModeSetListEntry_C::ThumbnailOverlayOpacityParam' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, IsInHoveredState) == 0x00148C, "Member 'UActivityBrowserModeSetListEntry_C::IsInHoveredState' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, Pad_Left) == 0x00148D, "Member 'UActivityBrowserModeSetListEntry_C::Pad_Left' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, Pad_Right) == 0x00148E, "Member 'UActivityBrowserModeSetListEntry_C::Pad_Right' has a wrong offset!");

}

