#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_GrindRail

#include "Basic.hpp"

#include "GrindRail_Connection_structs.hpp"
#include "GrindRailRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GrindRail_Booster_Directional_structs.hpp"
#include "ColorSelect_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "RailConnectionOption_structs.hpp"
#include "Engine_structs.hpp"
#include "GleefulRake_BoosterMode_structs.hpp"
#include "GrindRail_ResourceSpawns_structs.hpp"
#include "GrindRail_ResourceSpawns_Type_structs.hpp"


namespace SDK::Params
{

// Function BGA_GrindRail.BGA_GrindRail_C.AddBoosterModel
// 0x05F0 (0x05F0 - 0x0000)
struct BGA_GrindRail_C_AddBoosterModel final
{
public:
	struct FGrindRail_Booster_Directional         Booster;                                           // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Array_Index_0;                                     // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      NewLocalVar_0;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         BoosterMeshes_0;                                   // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     Transforms;                                        // 0x0030(0x0010)(Edit, BlueprintVisible)
	class UStaticMeshComponent*                   BaseMesh;                                          // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetCustomDataValue_ReturnValue;           // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetCustomDataValue_ReturnValue_1;         // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E[0x2];                                       // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_1;           // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetCustomDataValue_ReturnValue_2;         // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetCustomDataValue_ReturnValue_3;         // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetCustomDataValue_ReturnValue_4;         // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetCustomDataValue_ReturnValue_5;         // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BoosterLengthToSplineLength_Length_Along_Spline__cm_; // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue; // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_1;         // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue;         // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGleefulRake_BoosterMode                      Temp_byte_Variable;                                // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x3];                                      // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_4;           // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetCustomDataValue_ReturnValue_6;         // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMod_Remainder;                           // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue;                         // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_3;        // 0x0300(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0338(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0350(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0368(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_388[0x8];                                      // 0x0388(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0390(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BoosterLengthToSplineLength_Length_Along_Spline__cm__1; // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstance_ReturnValue;                  // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414[0x4];                                      // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1; // 0x0418(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5;                              // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGleefulRake_BoosterMode                      Temp_byte_Variable_1;                              // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_439[0x7];                                      // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0440(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetCustomDataValue_ReturnValue_7;         // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue_1; // 0x0468(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_2;         // 0x0480(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_3;         // 0x0498(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x04B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_4;      // 0x04C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x04E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x04F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue_1;       // 0x0510(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x0528(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x0540(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_558[0x8];                                      // 0x0558(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0560(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x05C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstance_ReturnValue_1;                // 0x05C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCustomDataValue_CustomDataValue_ImplicitCast; // 0x05C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDirectionAtDistanceAlongSpline_Distance_ImplicitCast; // 0x05CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast; // 0x05D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCustomDataValue_CustomDataValue_ImplicitCast_1; // 0x05D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1; // 0x05DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDirectionAtDistanceAlongSpline_Distance_ImplicitCast_1; // 0x05E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCustomDataValue_CustomDataValue_ImplicitCast_2; // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_AddBoosterModel) == 0x000010, "Wrong alignment on BGA_GrindRail_C_AddBoosterModel");
static_assert(sizeof(BGA_GrindRail_C_AddBoosterModel) == 0x0005F0, "Wrong size on BGA_GrindRail_C_AddBoosterModel");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, Booster) == 0x000000, "Member 'BGA_GrindRail_C_AddBoosterModel::Booster' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, Array_Index_0) == 0x000018, "Member 'BGA_GrindRail_C_AddBoosterModel::Array_Index_0' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, NewLocalVar_0) == 0x000020, "Member 'BGA_GrindRail_C_AddBoosterModel::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, BoosterMeshes_0) == 0x000028, "Member 'BGA_GrindRail_C_AddBoosterModel::BoosterMeshes_0' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, Transforms) == 0x000030, "Member 'BGA_GrindRail_C_AddBoosterModel::Transforms' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, BaseMesh) == 0x000040, "Member 'BGA_GrindRail_C_AddBoosterModel::BaseMesh' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000048, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000068, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000070, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000074, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000078, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_SetCustomDataValue_ReturnValue) == 0x00007C, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_SetCustomDataValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_SetCustomDataValue_ReturnValue_1) == 0x00007D, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_SetCustomDataValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Conv_BoolToFloat_ReturnValue_1) == 0x000080, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Conv_BoolToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_SetCustomDataValue_ReturnValue_2) == 0x000084, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_SetCustomDataValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Subtract_IntInt_ReturnValue) == 0x000088, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000090, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_SetCustomDataValue_ReturnValue_3) == 0x0000A0, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_SetCustomDataValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_SetCustomDataValue_ReturnValue_4) == 0x0000A1, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_SetCustomDataValue_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Array_Add_ReturnValue) == 0x0000A4, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_MakeVector_ReturnValue) == 0x0000A8, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x0000C0, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000C8, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0000CC, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_SetCustomDataValue_ReturnValue_5) == 0x0000D0, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_SetCustomDataValue_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, Temp_real_Variable) == 0x0000D8, "Member 'BGA_GrindRail_C_AddBoosterModel::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, Temp_real_Variable_1) == 0x0000E0, "Member 'BGA_GrindRail_C_AddBoosterModel::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, Temp_int_Variable) == 0x0000E8, "Member 'BGA_GrindRail_C_AddBoosterModel::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x0000F0, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000F8, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Add_IntInt_ReturnValue) == 0x0000FC, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Array_Add_ReturnValue_1) == 0x000100, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000108, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000110, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_BoosterLengthToSplineLength_Length_Along_Spline__cm_) == 0x000128, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_BoosterLengthToSplineLength_Length_Along_Spline__cm_' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, Temp_real_Variable_2) == 0x000130, "Member 'BGA_GrindRail_C_AddBoosterModel::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000138, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue) == 0x000150, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Cross_VectorVector_ReturnValue) == 0x000168, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000180, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Cross_VectorVector_ReturnValue_1) == 0x000198, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Cross_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0001B0, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_RotateAngleAxis_ReturnValue) == 0x0001C8, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Normal_ReturnValue) == 0x0001E0, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0001F8, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000200, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_RandomFloatInRange_ReturnValue) == 0x000218, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_MakeRotationFromAxes_ReturnValue) == 0x000220, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_MakeRotationFromAxes_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x000238, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x000250, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, Temp_byte_Variable) == 0x000268, "Member 'BGA_GrindRail_C_AddBoosterModel::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, Temp_int_Variable_1) == 0x00026C, "Member 'BGA_GrindRail_C_AddBoosterModel::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, K2Node_Select_Default) == 0x000270, "Member 'BGA_GrindRail_C_AddBoosterModel::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Conv_IntToDouble_ReturnValue_4) == 0x000278, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Conv_IntToDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_SetCustomDataValue_ReturnValue_6) == 0x000280, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_SetCustomDataValue_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_FMod_Remainder) == 0x000288, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_FMod_Remainder' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_FMod_ReturnValue) == 0x000290, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_FMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000298, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_FClamp_ReturnValue) == 0x0002A0, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0002A8, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0002B0, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_MakeRotator_ReturnValue) == 0x0002B8, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0002D0, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_ComposeRotators_ReturnValue) == 0x0002D8, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0002F0, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Add_IntInt_ReturnValue_1) == 0x0002F8, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Conv_DoubleToVector_ReturnValue_3) == 0x000300, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Conv_DoubleToVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x000318, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, Temp_real_Variable_3) == 0x000330, "Member 'BGA_GrindRail_C_AddBoosterModel::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Add_VectorVector_ReturnValue) == 0x000338, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000350, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000368, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000380, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_MakeTransform_ReturnValue) == 0x000390, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_BoosterLengthToSplineLength_Length_Along_Spline__cm__1) == 0x0003F0, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_BoosterLengthToSplineLength_Length_Along_Spline__cm__1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_AddInstance_ReturnValue) == 0x0003F8, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_AddInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Array_Add_ReturnValue_2) == 0x0003FC, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, Temp_real_Variable_4) == 0x000400, "Member 'BGA_GrindRail_C_AddBoosterModel::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000408, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Round_ReturnValue) == 0x000410, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1) == 0x000418, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, Temp_real_Variable_5) == 0x000430, "Member 'BGA_GrindRail_C_AddBoosterModel::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, Temp_byte_Variable_1) == 0x000438, "Member 'BGA_GrindRail_C_AddBoosterModel::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_MakeVector_ReturnValue_1) == 0x000440, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, K2Node_Select_Default_1) == 0x000458, "Member 'BGA_GrindRail_C_AddBoosterModel::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_SetCustomDataValue_ReturnValue_7) == 0x000460, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_SetCustomDataValue_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue_1) == 0x000468, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Cross_VectorVector_ReturnValue_2) == 0x000480, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Cross_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Cross_VectorVector_ReturnValue_3) == 0x000498, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Cross_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x0004B0, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Multiply_VectorVector_ReturnValue_4) == 0x0004C8, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Multiply_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Normal_ReturnValue_1) == 0x0004E0, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0004F8, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_MakeRotationFromAxes_ReturnValue_1) == 0x000510, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_MakeRotationFromAxes_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Add_VectorVector_ReturnValue_4) == 0x000528, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_ComposeRotators_ReturnValue_1) == 0x000540, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_MakeTransform_ReturnValue_1) == 0x000560, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_Array_Add_ReturnValue_3) == 0x0005C0, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_AddInstance_ReturnValue_1) == 0x0005C4, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_AddInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_SetCustomDataValue_CustomDataValue_ImplicitCast) == 0x0005C8, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_SetCustomDataValue_CustomDataValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_GetDirectionAtDistanceAlongSpline_Distance_ImplicitCast) == 0x0005CC, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_GetDirectionAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast) == 0x0005D0, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_SetCustomDataValue_CustomDataValue_ImplicitCast_1) == 0x0005D4, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_SetCustomDataValue_CustomDataValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0005D8, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1) == 0x0005DC, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_GetDirectionAtDistanceAlongSpline_Distance_ImplicitCast_1) == 0x0005E0, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_GetDirectionAtDistanceAlongSpline_Distance_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddBoosterModel, CallFunc_SetCustomDataValue_CustomDataValue_ImplicitCast_2) == 0x0005E4, "Member 'BGA_GrindRail_C_AddBoosterModel::CallFunc_SetCustomDataValue_CustomDataValue_ImplicitCast_2' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.AddInteractionRailMeshComponent
// 0x0080 (0x0080 - 0x0000)
struct BGA_GrindRail_C_AddInteractionRailMeshComponent final
{
public:
	class USplineMeshComponent*                   SplineMeshComponent;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0010(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_AddInteractionRailMeshComponent) == 0x000010, "Wrong alignment on BGA_GrindRail_C_AddInteractionRailMeshComponent");
static_assert(sizeof(BGA_GrindRail_C_AddInteractionRailMeshComponent) == 0x000080, "Wrong size on BGA_GrindRail_C_AddInteractionRailMeshComponent");
static_assert(offsetof(BGA_GrindRail_C_AddInteractionRailMeshComponent, SplineMeshComponent) == 0x000000, "Member 'BGA_GrindRail_C_AddInteractionRailMeshComponent::SplineMeshComponent' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddInteractionRailMeshComponent, Temp_struct_Variable) == 0x000010, "Member 'BGA_GrindRail_C_AddInteractionRailMeshComponent::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddInteractionRailMeshComponent, CallFunc_AddComponent_ReturnValue) == 0x000070, "Member 'BGA_GrindRail_C_AddInteractionRailMeshComponent::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddInteractionRailMeshComponent, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'BGA_GrindRail_C_AddInteractionRailMeshComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddInteractionRailMeshComponent, CallFunc_SetStaticMesh_ReturnValue) == 0x000079, "Member 'BGA_GrindRail_C_AddInteractionRailMeshComponent::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.AddRailConnection
// 0x01D8 (0x01D8 - 0x0000)
struct BGA_GrindRail_C_AddRailConnection final
{
public:
	struct FGrindRail_Connection                  NewConnection;                                     // 0x0000(0x0148)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_AddRailConnection) == 0x000008, "Wrong alignment on BGA_GrindRail_C_AddRailConnection");
static_assert(sizeof(BGA_GrindRail_C_AddRailConnection) == 0x0001D8, "Wrong size on BGA_GrindRail_C_AddRailConnection");
static_assert(offsetof(BGA_GrindRail_C_AddRailConnection, NewConnection) == 0x000000, "Member 'BGA_GrindRail_C_AddRailConnection::NewConnection' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddRailConnection, CallFunc_Array_Length_ReturnValue) == 0x000148, "Member 'BGA_GrindRail_C_AddRailConnection::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddRailConnection, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000150, "Member 'BGA_GrindRail_C_AddRailConnection::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddRailConnection, CallFunc_Conv_IntToString_ReturnValue) == 0x000160, "Member 'BGA_GrindRail_C_AddRailConnection::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddRailConnection, CallFunc_GetDisplayName_ReturnValue) == 0x000170, "Member 'BGA_GrindRail_C_AddRailConnection::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddRailConnection, CallFunc_Concat_StrStr_ReturnValue) == 0x000180, "Member 'BGA_GrindRail_C_AddRailConnection::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddRailConnection, CallFunc_Array_Add_ReturnValue) == 0x000190, "Member 'BGA_GrindRail_C_AddRailConnection::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddRailConnection, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000198, "Member 'BGA_GrindRail_C_AddRailConnection::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddRailConnection, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0001A8, "Member 'BGA_GrindRail_C_AddRailConnection::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddRailConnection, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0001B8, "Member 'BGA_GrindRail_C_AddRailConnection::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddRailConnection, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0001C8, "Member 'BGA_GrindRail_C_AddRailConnection::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.AddSolidRailMeshComponent
// 0x0080 (0x0080 - 0x0000)
struct BGA_GrindRail_C_AddSolidRailMeshComponent final
{
public:
	class USplineMeshComponent*                   SplineMeshComponent;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0010(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_AddSolidRailMeshComponent) == 0x000010, "Wrong alignment on BGA_GrindRail_C_AddSolidRailMeshComponent");
static_assert(sizeof(BGA_GrindRail_C_AddSolidRailMeshComponent) == 0x000080, "Wrong size on BGA_GrindRail_C_AddSolidRailMeshComponent");
static_assert(offsetof(BGA_GrindRail_C_AddSolidRailMeshComponent, SplineMeshComponent) == 0x000000, "Member 'BGA_GrindRail_C_AddSolidRailMeshComponent::SplineMeshComponent' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddSolidRailMeshComponent, Temp_struct_Variable) == 0x000010, "Member 'BGA_GrindRail_C_AddSolidRailMeshComponent::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddSolidRailMeshComponent, CallFunc_AddComponent_ReturnValue) == 0x000070, "Member 'BGA_GrindRail_C_AddSolidRailMeshComponent::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddSolidRailMeshComponent, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'BGA_GrindRail_C_AddSolidRailMeshComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddSolidRailMeshComponent, CallFunc_SetStaticMesh_ReturnValue) == 0x000079, "Member 'BGA_GrindRail_C_AddSolidRailMeshComponent::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.AddTip
// 0x0660 (0x0660 - 0x0000)
struct BGA_GrindRail_C_AddTip final
{
public:
	bool                                          EndTip_0;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnlyUpdateSpline;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            TipMesh_0;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               TipRotation;                                       // 0x0010(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        TipDistanceAlongSpline;                            // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGrindRail_TipComponent_C*              NewComp;                                           // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABGA_RailConnector_GrindRail_C*         Connector;                                         // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TipConnectorDirection;                             // 0x0040(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TipConnectorLocation;                              // 0x0058(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ConnectedAtThisTip;                                // 0x0070(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TipLocation;                                       // 0x0078(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0090(0x0010)(ConstParm, ReferenceParm)
	struct FRotator                               CallFunc_GetRotationForTip_Rotator;                // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        CallFunc_AddComponentByClass_ReturnValue;          // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGrindRail_TipComponent_C*              K2Node_DynamicCast_AsGrind_Rail_Tip_Component;     // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGrindRail_Connection                  CallFunc_Array_Get_Item;                           // 0x0180(0x0148)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InEditor_ReturnValue;                     // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x02CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x02CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x02CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InEditor_ReturnValue_1;                   // 0x02D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InEditor_ReturnValue_2;                   // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x02D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D7[0x1];                                      // 0x02D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue; // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_NegateVector_ReturnValue;                 // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue;                 // 0x0308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0328(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A[0x2];                                      // 0x040A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Square_ReturnValue;                       // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_419[0x3];                                      // 0x0419(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0420(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x0438(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0518(0x0010)(ConstParm, ReferenceParm)
	uint8                                         Pad_528[0x8];                                      // 0x0528(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue; // 0x0530(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_594[0x4];                                      // 0x0594(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0598(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x05B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x05C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x05E8(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x05F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F9[0x3];                                      // 0x05F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x05FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_601[0x7];                                      // 0x0601(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0608(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_611[0x7];                                      // 0x0611(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABGA_RailConnector_GrindRail_C*         K2Node_DynamicCast_AsBGA_Rail_Connector_Grind_Rail; // 0x0618(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_621[0x7];                                      // 0x0621(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0628(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_DistanceSquared_ReturnValue;       // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0648(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_649[0x3];                                      // 0x0649(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDirectionAtDistanceAlongSpline_Distance_ImplicitCast; // 0x064C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTransformAtDistanceAlongSpline_Distance_ImplicitCast; // 0x0650(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_654[0x4];                                      // 0x0654(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_AddTip) == 0x000010, "Wrong alignment on BGA_GrindRail_C_AddTip");
static_assert(sizeof(BGA_GrindRail_C_AddTip) == 0x000660, "Wrong size on BGA_GrindRail_C_AddTip");
static_assert(offsetof(BGA_GrindRail_C_AddTip, EndTip_0) == 0x000000, "Member 'BGA_GrindRail_C_AddTip::EndTip_0' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, OnlyUpdateSpline) == 0x000001, "Member 'BGA_GrindRail_C_AddTip::OnlyUpdateSpline' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, TipMesh_0) == 0x000008, "Member 'BGA_GrindRail_C_AddTip::TipMesh_0' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, TipRotation) == 0x000010, "Member 'BGA_GrindRail_C_AddTip::TipRotation' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, TipDistanceAlongSpline) == 0x000028, "Member 'BGA_GrindRail_C_AddTip::TipDistanceAlongSpline' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, NewComp) == 0x000030, "Member 'BGA_GrindRail_C_AddTip::NewComp' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, Connector) == 0x000038, "Member 'BGA_GrindRail_C_AddTip::Connector' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, TipConnectorDirection) == 0x000040, "Member 'BGA_GrindRail_C_AddTip::TipConnectorDirection' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, TipConnectorLocation) == 0x000058, "Member 'BGA_GrindRail_C_AddTip::TipConnectorLocation' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, ConnectedAtThisTip) == 0x000070, "Member 'BGA_GrindRail_C_AddTip::ConnectedAtThisTip' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, TipLocation) == 0x000078, "Member 'BGA_GrindRail_C_AddTip::TipLocation' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, Temp_object_Variable) == 0x000090, "Member 'BGA_GrindRail_C_AddTip::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_GetRotationForTip_Rotator) == 0x0000A0, "Member 'BGA_GrindRail_C_AddTip::CallFunc_GetRotationForTip_Rotator' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, Temp_int_Loop_Counter_Variable) == 0x0000B8, "Member 'BGA_GrindRail_C_AddTip::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_Add_IntInt_ReturnValue) == 0x0000BC, "Member 'BGA_GrindRail_C_AddTip::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, Temp_bool_True_if_break_was_hit_Variable) == 0x0000C0, "Member 'BGA_GrindRail_C_AddTip::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, Temp_int_Array_Index_Variable) == 0x0000C4, "Member 'BGA_GrindRail_C_AddTip::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_Not_PreBool_ReturnValue) == 0x0000C8, "Member 'BGA_GrindRail_C_AddTip::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_MakeTransform_ReturnValue) == 0x0000D0, "Member 'BGA_GrindRail_C_AddTip::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_AddComponentByClass_ReturnValue) == 0x000130, "Member 'BGA_GrindRail_C_AddTip::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, K2Node_DynamicCast_AsGrind_Rail_Tip_Component) == 0x000138, "Member 'BGA_GrindRail_C_AddTip::K2Node_DynamicCast_AsGrind_Rail_Tip_Component' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'BGA_GrindRail_C_AddTip::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_GetUpVector_ReturnValue) == 0x000148, "Member 'BGA_GrindRail_C_AddTip::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000160, "Member 'BGA_GrindRail_C_AddTip::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, Temp_int_Array_Index_Variable_1) == 0x000178, "Member 'BGA_GrindRail_C_AddTip::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_Array_Get_Item) == 0x000180, "Member 'BGA_GrindRail_C_AddTip::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_Array_Length_ReturnValue) == 0x0002C8, "Member 'BGA_GrindRail_C_AddTip::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_InEditor_ReturnValue) == 0x0002CC, "Member 'BGA_GrindRail_C_AddTip::CallFunc_InEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x0002CD, "Member 'BGA_GrindRail_C_AddTip::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_Not_PreBool_ReturnValue_1) == 0x0002CE, "Member 'BGA_GrindRail_C_AddTip::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_Not_PreBool_ReturnValue_2) == 0x0002CF, "Member 'BGA_GrindRail_C_AddTip::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_BooleanAND_ReturnValue) == 0x0002D0, "Member 'BGA_GrindRail_C_AddTip::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_Not_PreBool_ReturnValue_3) == 0x0002D1, "Member 'BGA_GrindRail_C_AddTip::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_InEditor_ReturnValue_1) == 0x0002D2, "Member 'BGA_GrindRail_C_AddTip::CallFunc_InEditor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_BooleanAND_ReturnValue_1) == 0x0002D3, "Member 'BGA_GrindRail_C_AddTip::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_InEditor_ReturnValue_2) == 0x0002D4, "Member 'BGA_GrindRail_C_AddTip::CallFunc_InEditor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_BooleanOR_ReturnValue) == 0x0002D5, "Member 'BGA_GrindRail_C_AddTip::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_BooleanOR_ReturnValue_1) == 0x0002D6, "Member 'BGA_GrindRail_C_AddTip::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue) == 0x0002D8, "Member 'BGA_GrindRail_C_AddTip::CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_NegateVector_ReturnValue) == 0x0002F0, "Member 'BGA_GrindRail_C_AddTip::CallFunc_NegateVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_MakeRotFromZ_ReturnValue) == 0x000308, "Member 'BGA_GrindRail_C_AddTip::CallFunc_MakeRotFromZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_SetStaticMesh_ReturnValue) == 0x000320, "Member 'BGA_GrindRail_C_AddTip::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000328, "Member 'BGA_GrindRail_C_AddTip::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_BooleanAND_ReturnValue_2) == 0x000408, "Member 'BGA_GrindRail_C_AddTip::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_BooleanAND_ReturnValue_3) == 0x000409, "Member 'BGA_GrindRail_C_AddTip::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, Temp_int_Loop_Counter_Variable_1) == 0x00040C, "Member 'BGA_GrindRail_C_AddTip::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_Square_ReturnValue) == 0x000410, "Member 'BGA_GrindRail_C_AddTip::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_Less_IntInt_ReturnValue) == 0x000418, "Member 'BGA_GrindRail_C_AddTip::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_Add_IntInt_ReturnValue_1) == 0x00041C, "Member 'BGA_GrindRail_C_AddTip::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_Add_VectorVector_ReturnValue) == 0x000420, "Member 'BGA_GrindRail_C_AddTip::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x000438, "Member 'BGA_GrindRail_C_AddTip::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, K2Node_MakeArray_Array) == 0x000518, "Member 'BGA_GrindRail_C_AddTip::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue) == 0x000530, "Member 'BGA_GrindRail_C_AddTip::CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_GetSplineLength_ReturnValue) == 0x000590, "Member 'BGA_GrindRail_C_AddTip::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_BreakTransform_Location) == 0x000598, "Member 'BGA_GrindRail_C_AddTip::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_BreakTransform_Rotation) == 0x0005B0, "Member 'BGA_GrindRail_C_AddTip::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_BreakTransform_Scale) == 0x0005C8, "Member 'BGA_GrindRail_C_AddTip::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_SelectFloat_ReturnValue) == 0x0005E0, "Member 'BGA_GrindRail_C_AddTip::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_SphereOverlapActors_OutActors) == 0x0005E8, "Member 'BGA_GrindRail_C_AddTip::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_SphereOverlapActors_ReturnValue) == 0x0005F8, "Member 'BGA_GrindRail_C_AddTip::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_Array_Length_ReturnValue_1) == 0x0005FC, "Member 'BGA_GrindRail_C_AddTip::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_Less_IntInt_ReturnValue_1) == 0x000600, "Member 'BGA_GrindRail_C_AddTip::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_Array_Get_Item_1) == 0x000608, "Member 'BGA_GrindRail_C_AddTip::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_BooleanAND_ReturnValue_4) == 0x000610, "Member 'BGA_GrindRail_C_AddTip::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, K2Node_DynamicCast_AsBGA_Rail_Connector_Grind_Rail) == 0x000618, "Member 'BGA_GrindRail_C_AddTip::K2Node_DynamicCast_AsBGA_Rail_Connector_Grind_Rail' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, K2Node_DynamicCast_bSuccess_1) == 0x000620, "Member 'BGA_GrindRail_C_AddTip::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000628, "Member 'BGA_GrindRail_C_AddTip::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_Vector_DistanceSquared_ReturnValue) == 0x000640, "Member 'BGA_GrindRail_C_AddTip::CallFunc_Vector_DistanceSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000648, "Member 'BGA_GrindRail_C_AddTip::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_GetDirectionAtDistanceAlongSpline_Distance_ImplicitCast) == 0x00064C, "Member 'BGA_GrindRail_C_AddTip::CallFunc_GetDirectionAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_GetTransformAtDistanceAlongSpline_Distance_ImplicitCast) == 0x000650, "Member 'BGA_GrindRail_C_AddTip::CallFunc_GetTransformAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AddTip, CallFunc_SelectFloat_A_ImplicitCast) == 0x000658, "Member 'BGA_GrindRail_C_AddTip::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.AllowJumpOffEnd
// 0x0006 (0x0006 - 0x0000)
struct BGA_GrindRail_C_AllowJumpOffEnd final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_AllowJumpOffEnd) == 0x000001, "Wrong alignment on BGA_GrindRail_C_AllowJumpOffEnd");
static_assert(sizeof(BGA_GrindRail_C_AllowJumpOffEnd) == 0x000006, "Wrong size on BGA_GrindRail_C_AllowJumpOffEnd");
static_assert(offsetof(BGA_GrindRail_C_AllowJumpOffEnd, ReturnValue) == 0x000000, "Member 'BGA_GrindRail_C_AllowJumpOffEnd::ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AllowJumpOffEnd, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BGA_GrindRail_C_AllowJumpOffEnd::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AllowJumpOffEnd, CallFunc_Not_PreBool_ReturnValue_1) == 0x000002, "Member 'BGA_GrindRail_C_AllowJumpOffEnd::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AllowJumpOffEnd, CallFunc_Not_PreBool_ReturnValue_2) == 0x000003, "Member 'BGA_GrindRail_C_AllowJumpOffEnd::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AllowJumpOffEnd, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'BGA_GrindRail_C_AllowJumpOffEnd::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AllowJumpOffEnd, CallFunc_BooleanAND_ReturnValue_1) == 0x000005, "Member 'BGA_GrindRail_C_AllowJumpOffEnd::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.AllowJumpOffStart
// 0x0006 (0x0006 - 0x0000)
struct BGA_GrindRail_C_AllowJumpOffStart final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_AllowJumpOffStart) == 0x000001, "Wrong alignment on BGA_GrindRail_C_AllowJumpOffStart");
static_assert(sizeof(BGA_GrindRail_C_AllowJumpOffStart) == 0x000006, "Wrong size on BGA_GrindRail_C_AllowJumpOffStart");
static_assert(offsetof(BGA_GrindRail_C_AllowJumpOffStart, ReturnValue) == 0x000000, "Member 'BGA_GrindRail_C_AllowJumpOffStart::ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AllowJumpOffStart, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BGA_GrindRail_C_AllowJumpOffStart::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AllowJumpOffStart, CallFunc_Not_PreBool_ReturnValue_1) == 0x000002, "Member 'BGA_GrindRail_C_AllowJumpOffStart::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AllowJumpOffStart, CallFunc_Not_PreBool_ReturnValue_2) == 0x000003, "Member 'BGA_GrindRail_C_AllowJumpOffStart::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AllowJumpOffStart, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'BGA_GrindRail_C_AllowJumpOffStart::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_AllowJumpOffStart, CallFunc_BooleanAND_ReturnValue_1) == 0x000005, "Member 'BGA_GrindRail_C_AllowJumpOffStart::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.BlueprintOnLocalInteract
// 0x0018 (0x0018 - 0x0000)
struct BGA_GrindRail_C_BlueprintOnLocalInteract final
{
public:
	class AFortPlayerPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    InteractionBeingAttempted;                         // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GrindingComponent_C*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_BlueprintOnLocalInteract) == 0x000008, "Wrong alignment on BGA_GrindRail_C_BlueprintOnLocalInteract");
static_assert(sizeof(BGA_GrindRail_C_BlueprintOnLocalInteract) == 0x000018, "Wrong size on BGA_GrindRail_C_BlueprintOnLocalInteract");
static_assert(offsetof(BGA_GrindRail_C_BlueprintOnLocalInteract, InteractingPawn) == 0x000000, "Member 'BGA_GrindRail_C_BlueprintOnLocalInteract::InteractingPawn' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_BlueprintOnLocalInteract, InteractionBeingAttempted) == 0x000008, "Member 'BGA_GrindRail_C_BlueprintOnLocalInteract::InteractionBeingAttempted' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_BlueprintOnLocalInteract, ReturnValue) == 0x000009, "Member 'BGA_GrindRail_C_BlueprintOnLocalInteract::ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_BlueprintOnLocalInteract, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BGA_GrindRail_C_BlueprintOnLocalInteract::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.BoosterLengthToSplineLength
// 0x0068 (0x0068 - 0x0000)
struct BGA_GrindRail_C_BoosterLengthToSplineLength final
{
public:
	struct FGrindRail_Booster_Directional         Booster;                                           // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Length_Along_Booster__cm_;                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Length_Along_Spline__cm_;                          // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_BoosterLengthToSplineLength) == 0x000008, "Wrong alignment on BGA_GrindRail_C_BoosterLengthToSplineLength");
static_assert(sizeof(BGA_GrindRail_C_BoosterLengthToSplineLength) == 0x000068, "Wrong size on BGA_GrindRail_C_BoosterLengthToSplineLength");
static_assert(offsetof(BGA_GrindRail_C_BoosterLengthToSplineLength, Booster) == 0x000000, "Member 'BGA_GrindRail_C_BoosterLengthToSplineLength::Booster' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_BoosterLengthToSplineLength, Length_Along_Booster__cm_) == 0x000018, "Member 'BGA_GrindRail_C_BoosterLengthToSplineLength::Length_Along_Booster__cm_' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_BoosterLengthToSplineLength, Length_Along_Spline__cm_) == 0x000020, "Member 'BGA_GrindRail_C_BoosterLengthToSplineLength::Length_Along_Spline__cm_' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_BoosterLengthToSplineLength, CallFunc_GetSplineLength_ReturnValue) == 0x000028, "Member 'BGA_GrindRail_C_BoosterLengthToSplineLength::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_BoosterLengthToSplineLength, CallFunc_SelectFloat_ReturnValue) == 0x000030, "Member 'BGA_GrindRail_C_BoosterLengthToSplineLength::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_BoosterLengthToSplineLength, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'BGA_GrindRail_C_BoosterLengthToSplineLength::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_BoosterLengthToSplineLength, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'BGA_GrindRail_C_BoosterLengthToSplineLength::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_BoosterLengthToSplineLength, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'BGA_GrindRail_C_BoosterLengthToSplineLength::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_BoosterLengthToSplineLength, CallFunc_SelectFloat_ReturnValue_1) == 0x000050, "Member 'BGA_GrindRail_C_BoosterLengthToSplineLength::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_BoosterLengthToSplineLength, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000058, "Member 'BGA_GrindRail_C_BoosterLengthToSplineLength::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_BoosterLengthToSplineLength, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000060, "Member 'BGA_GrindRail_C_BoosterLengthToSplineLength::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.CollisionCheck
// 0x0048 (0x0048 - 0x0000)
struct BGA_GrindRail_C_CollisionCheck final
{
public:
	class APlayerPawn_Athena_C*                   Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_CollisionCheck) == 0x000008, "Wrong alignment on BGA_GrindRail_C_CollisionCheck");
static_assert(sizeof(BGA_GrindRail_C_CollisionCheck) == 0x000048, "Wrong size on BGA_GrindRail_C_CollisionCheck");
static_assert(offsetof(BGA_GrindRail_C_CollisionCheck, Player) == 0x000000, "Member 'BGA_GrindRail_C_CollisionCheck::Player' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CollisionCheck, Return) == 0x000008, "Member 'BGA_GrindRail_C_CollisionCheck::Return' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CollisionCheck, CallFunc_GetVelocity_ReturnValue) == 0x000010, "Member 'BGA_GrindRail_C_CollisionCheck::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CollisionCheck, CallFunc_BreakVector_X) == 0x000028, "Member 'BGA_GrindRail_C_CollisionCheck::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CollisionCheck, CallFunc_BreakVector_Y) == 0x000030, "Member 'BGA_GrindRail_C_CollisionCheck::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CollisionCheck, CallFunc_BreakVector_Z) == 0x000038, "Member 'BGA_GrindRail_C_CollisionCheck::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CollisionCheck, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000040, "Member 'BGA_GrindRail_C_CollisionCheck::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CollisionCheck, CallFunc_BooleanAND_ReturnValue) == 0x000041, "Member 'BGA_GrindRail_C_CollisionCheck::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CollisionCheck, CallFunc_BooleanAND_ReturnValue_1) == 0x000042, "Member 'BGA_GrindRail_C_CollisionCheck::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.CreateSplineMesh
// 0x02C0 (0x02C0 - 0x0000)
struct BGA_GrindRail_C_CreateSplineMesh final
{
public:
	int32                                         FirstPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SecondPoint;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             MeshEditorSprite;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   InteractionRailMeshComp;                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   SolidRailMeshComp;                                 // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              SpriteAsset;                                       // 0x0020(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_AddInteractionRailMeshComponent_SplineMeshComponent; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CallFunc_AddSolidRailMeshComponent_SplineMeshComponent; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63[0x1];                                       // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue; // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InEditor_ReturnValue;                     // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F[0x1];                                       // 0x007F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00C0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBillboardComponent*                    CallFunc_AddComponent_ReturnValue;                 // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0130(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue_1;   // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTangentAtSplinePoint_ReturnValue;      // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue_2;   // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTangentAtSplinePoint_ReturnValue_1;    // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_B_ImplicitCast;               // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetupMeshInfo_EndDistance_ImplicitCast;   // 0x02B0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_CreateSplineMesh) == 0x000010, "Wrong alignment on BGA_GrindRail_C_CreateSplineMesh");
static_assert(sizeof(BGA_GrindRail_C_CreateSplineMesh) == 0x0002C0, "Wrong size on BGA_GrindRail_C_CreateSplineMesh");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, FirstPoint) == 0x000000, "Member 'BGA_GrindRail_C_CreateSplineMesh::FirstPoint' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, SecondPoint) == 0x000004, "Member 'BGA_GrindRail_C_CreateSplineMesh::SecondPoint' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, MeshEditorSprite) == 0x000008, "Member 'BGA_GrindRail_C_CreateSplineMesh::MeshEditorSprite' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, InteractionRailMeshComp) == 0x000010, "Member 'BGA_GrindRail_C_CreateSplineMesh::InteractionRailMeshComp' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, SolidRailMeshComp) == 0x000018, "Member 'BGA_GrindRail_C_CreateSplineMesh::SolidRailMeshComp' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, SpriteAsset) == 0x000020, "Member 'BGA_GrindRail_C_CreateSplineMesh::SpriteAsset' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, CallFunc_AddInteractionRailMeshComponent_SplineMeshComponent) == 0x000048, "Member 'BGA_GrindRail_C_CreateSplineMesh::CallFunc_AddInteractionRailMeshComponent_SplineMeshComponent' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000050, "Member 'BGA_GrindRail_C_CreateSplineMesh::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, CallFunc_AddSolidRailMeshComponent_SplineMeshComponent) == 0x000058, "Member 'BGA_GrindRail_C_CreateSplineMesh::CallFunc_AddSolidRailMeshComponent_SplineMeshComponent' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BGA_GrindRail_C_CreateSplineMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, CallFunc_IsValid_ReturnValue_1) == 0x000061, "Member 'BGA_GrindRail_C_CreateSplineMesh::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, CallFunc_IsValid_ReturnValue_2) == 0x000062, "Member 'BGA_GrindRail_C_CreateSplineMesh::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, CallFunc_Array_Add_ReturnValue) == 0x000064, "Member 'BGA_GrindRail_C_CreateSplineMesh::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, CallFunc_GetSplineLength_ReturnValue) == 0x000068, "Member 'BGA_GrindRail_C_CreateSplineMesh::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue) == 0x00006C, "Member 'BGA_GrindRail_C_CreateSplineMesh::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, CallFunc_SelectFloat_ReturnValue) == 0x000070, "Member 'BGA_GrindRail_C_CreateSplineMesh::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1) == 0x000078, "Member 'BGA_GrindRail_C_CreateSplineMesh::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, CallFunc_Not_PreBool_ReturnValue) == 0x00007C, "Member 'BGA_GrindRail_C_CreateSplineMesh::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, CallFunc_Greater_IntInt_ReturnValue) == 0x00007D, "Member 'BGA_GrindRail_C_CreateSplineMesh::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, CallFunc_InEditor_ReturnValue) == 0x00007E, "Member 'BGA_GrindRail_C_CreateSplineMesh::CallFunc_InEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000080, "Member 'BGA_GrindRail_C_CreateSplineMesh::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, CallFunc_BooleanAND_ReturnValue) == 0x000098, "Member 'BGA_GrindRail_C_CreateSplineMesh::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A0, "Member 'BGA_GrindRail_C_CreateSplineMesh::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, CallFunc_BooleanAND_ReturnValue_1) == 0x0000B8, "Member 'BGA_GrindRail_C_CreateSplineMesh::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, CallFunc_MakeTransform_ReturnValue) == 0x0000C0, "Member 'BGA_GrindRail_C_CreateSplineMesh::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, CallFunc_BooleanAND_ReturnValue_2) == 0x000120, "Member 'BGA_GrindRail_C_CreateSplineMesh::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, CallFunc_AddComponent_ReturnValue) == 0x000128, "Member 'BGA_GrindRail_C_CreateSplineMesh::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000130, "Member 'BGA_GrindRail_C_CreateSplineMesh::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, CallFunc_GetLocationAtSplinePoint_ReturnValue_1) == 0x000210, "Member 'BGA_GrindRail_C_CreateSplineMesh::CallFunc_GetLocationAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, CallFunc_GetTangentAtSplinePoint_ReturnValue) == 0x000228, "Member 'BGA_GrindRail_C_CreateSplineMesh::CallFunc_GetTangentAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000240, "Member 'BGA_GrindRail_C_CreateSplineMesh::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, CallFunc_GetLocationAtSplinePoint_ReturnValue_2) == 0x000258, "Member 'BGA_GrindRail_C_CreateSplineMesh::CallFunc_GetLocationAtSplinePoint_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, CallFunc_GetTangentAtSplinePoint_ReturnValue_1) == 0x000270, "Member 'BGA_GrindRail_C_CreateSplineMesh::CallFunc_GetTangentAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000288, "Member 'BGA_GrindRail_C_CreateSplineMesh::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, CallFunc_SelectFloat_A_ImplicitCast) == 0x0002A0, "Member 'BGA_GrindRail_C_CreateSplineMesh::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, CallFunc_SelectFloat_B_ImplicitCast) == 0x0002A8, "Member 'BGA_GrindRail_C_CreateSplineMesh::CallFunc_SelectFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_CreateSplineMesh, CallFunc_SetupMeshInfo_EndDistance_ImplicitCast) == 0x0002B0, "Member 'BGA_GrindRail_C_CreateSplineMesh::CallFunc_SetupMeshInfo_EndDistance_ImplicitCast' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.DestroyTip
// 0x0008 (0x0008 - 0x0000)
struct BGA_GrindRail_C_DestroyTip final
{
public:
	class UActorComponent*                        Target_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_DestroyTip) == 0x000008, "Wrong alignment on BGA_GrindRail_C_DestroyTip");
static_assert(sizeof(BGA_GrindRail_C_DestroyTip) == 0x000008, "Wrong size on BGA_GrindRail_C_DestroyTip");
static_assert(offsetof(BGA_GrindRail_C_DestroyTip, Target_0) == 0x000000, "Member 'BGA_GrindRail_C_DestroyTip::Target_0' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.ExecuteUbergraph_BGA_GrindRail
// 0x0BB0 (0x0BB0 - 0x0000)
struct BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AFortGrindRail* OldRail, class AFortGrindRail* NewRail)> K2Node_CreateDelegate_OutputDelegate;              // 0x0064(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bWasAlreadyGrinding, bool bWasJumpingFromRail, bool bEnteredFromInteraction, const struct FVector& PreviousPlayerLocation)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0098(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_7;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_12;                // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_OtherActor_1;                         // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerPawn_Athena_C*                   K2Node_CustomEvent_Player;                         // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerPawn_Athena_C*                   K2Node_CustomEvent_InputPin_1;                     // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_GrindingComponent_C*                CallFunc_GetComponentByClass_ReturnValue;          // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetWantsToGrind_ReturnValue;              // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB[0x5];                                       // 0x00FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerPawn_Athena_C*                   K2Node_CustomEvent_InputPin;                       // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGrindRail_ResourceSpawns              CallFunc_Array_Get_Item;                           // 0x0108(0x0018)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0128(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x0158(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue; // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_FromRailConnectorMovement;      // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABGA_RailConnector_GrindRail_C*         K2Node_CustomEvent_TheConnector;                   // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGrindRail_ResourceSpawns              CallFunc_Array_Get_Item_1;                         // 0x0260(0x0018)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue_1; // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x02D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_1;         // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x3];                                      // 0x0321(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bNewIsSprinting)>         K2Node_CreateDelegate_OutputDelegate_2;            // 0x0324(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InEditor_ReturnValue;                     // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x3];                                      // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_7;                  // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x3];                                      // 0x0339(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_13;                // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0340(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UActorComponent*                        CallFunc_Array_Get_Item_2;                         // 0x0350(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35D[0x3];                                      // 0x035D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        K2Node_CustomEvent_Target;                         // 0x0360(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_369[0x3];                                      // 0x0369(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0378(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_1;    // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USplineMeshComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue_1;    // 0x0398(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CallFunc_Array_Get_Item_3;                         // 0x03B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x03BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BD[0x3];                                      // 0x03BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable;                              // 0x03C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bNewIsSprinting;                // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGrindRail_Booster_Directional         CallFunc_Array_Get_Item_4;                         // 0x03E0(0x0018)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_401[0x7];                                      // 0x0401(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0408(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_1;                            // 0x0420(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_2;    // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_441[0xF];                                      // 0x0441(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransformAtSplinePoint_ReturnValue;    // 0x0450(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x04B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x04C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x04E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x04F8(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                Temp_struct_Variable_2;                            // 0x0508(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0520(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_531[0x7];                                      // 0x0531(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_5;                         // 0x0538(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGrindRail_ResourceSpawns_Type                Temp_byte_Variable;                                // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_541[0x7];                                      // 0x0541(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x0548(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0560(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Connector;                      // 0x05C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x05C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x05D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E8[0x8];                                      // 0x05E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransformAtSplinePoint_ReturnValue_1;  // 0x05F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0650(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0668(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0680(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_3;    // 0x0698(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69C[0x4];                                      // 0x069C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_DistanceSquared_ReturnValue;       // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x06A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGrindRail_ResourceSpawns_Type                Temp_byte_Variable_1;                              // 0x06AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_4;           // 0x06AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6AE[0x2];                                      // 0x06AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Square_ReturnValue;                       // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x06B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B9[0x7];                                      // 0x06B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x06C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x06C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x06D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D9[0x7];                                      // 0x06D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x06E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x06F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x0710(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0728(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class APlayerPawn_Athena_C*                   K2Node_CustomEvent_AttachedPlayer;                 // 0x0808(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerPawn_Athena_C*                   K2Node_DynamicCast_AsPlayer_Pawn_Athena;           // 0x0810(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0818(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CollisionCheck_Return;                    // 0x0819(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81A[0x6];                                      // 0x081A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GrindingComponent_C*                CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0820(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0828(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bWasAlreadyGrinding_1;          // 0x0829(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bWasJumpingFromRail_1;          // 0x082A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bEnteredFromInteraction_1;      // 0x082B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82C[0x4];                                      // 0x082C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_PreviousPlayerLocation_1;       // 0x0830(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortGrindRail*                         K2Node_CustomEvent_OldRail;                        // 0x0848(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortGrindRail*                         K2Node_CustomEvent_NewRail;                        // 0x0850(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_6;                         // 0x0858(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0860(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0864(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_865[0x3];                                      // 0x0865(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0868(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh;                  // 0x0870(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0878(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0879(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87A[0x6];                                      // 0x087A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x0880(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh_1;                // 0x0888(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0890(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_891[0x7];                                      // 0x0891(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_2;         // 0x0898(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x08A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x08A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InEditor_ReturnValue_1;                   // 0x08A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InEditor_ReturnValue_2;                   // 0x08AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InEditor_ReturnValue_3;                   // 0x08AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8AC[0x4];                                      // 0x08AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_3;         // 0x08B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortWorldItemDefinition*               K2Node_DynamicCast_AsFort_World_Item_Definition;   // 0x08B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x08C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue_1;              // 0x08C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x08C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x08C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x08C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C5[0x3];                                      // 0x08C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_4;         // 0x08C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      K2Node_DynamicCast_AsMaterial_Instance;            // 0x08D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x08D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D9[0x7];                                      // 0x08D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_5;         // 0x08E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_6;         // 0x08E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      K2Node_DynamicCast_AsMaterial_Instance_1;          // 0x08F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x08F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F9[0x7];                                      // 0x08F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      K2Node_DynamicCast_AsMaterial_Instance_2;          // 0x0900(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0908(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_909[0x7];                                      // 0x0909(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default_1;                           // 0x0910(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue_2; // 0x0918(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_2;         // 0x0930(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1; // 0x0948(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_3;         // 0x0960(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0978(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0990(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x09A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x09C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPickup*                            CallFunc_K2_SpawnPickupInWorld_ReturnValue;        // 0x09D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x09E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E1[0x7];                                      // 0x09E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x09E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABGA_GrindRail_C*>               CallFunc_GetAllActorsOfClass_OutActors;            // 0x09F0(0x0010)(ReferenceParm)
	class ABGA_GrindRail_C*                       CallFunc_Array_Get_Item_7;                         // 0x0A00(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x0A08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x0A0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A0D[0x3];                                      // 0x0A0D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UActorComponent*>                CallFunc_K2_GetComponentsByClass_ReturnValue_2;    // 0x0A10(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue_1;         // 0x0A20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        CallFunc_Array_Get_Item_8;                         // 0x0A38(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0A40(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0A58(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x0A70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A74[0x4];                                      // 0x0A74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0A78(0x00E0)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x0B58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B59[0x3];                                      // 0x0B59(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bWasAlreadyGrinding, bool bWasJumpingFromRail, bool bEnteredFromInteraction, const struct FVector& PreviousPlayerLocation)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0B5C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bWasAlreadyGrinding;            // 0x0B68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bWasJumpingFromRail;            // 0x0B69(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bEnteredFromInteraction;        // 0x0B6A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B6B[0x5];                                      // 0x0B6B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_PreviousPlayerLocation;         // 0x0B70(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0B88(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDirectionAtDistanceAlongSpline_Distance_ImplicitCast; // 0x0B94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDirectionAtDistanceAlongSpline_Distance_ImplicitCast_1; // 0x0B98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast; // 0x0B9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDirectionAtDistanceAlongSpline_Distance_ImplicitCast_2; // 0x0BA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1; // 0x0BA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail) == 0x000010, "Wrong alignment on BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail");
static_assert(sizeof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail) == 0x000BB0, "Wrong size on BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, EntryPoint) == 0x000000, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::EntryPoint' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, Temp_int_Variable) == 0x000008, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, Temp_int_Variable_1) == 0x000014, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000018, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Add_IntInt_ReturnValue_2) == 0x000020, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_MakeVector_ReturnValue) == 0x000028, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Add_IntInt_ReturnValue_3) == 0x000044, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, Temp_int_Array_Index_Variable_1) == 0x000048, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, Temp_int_Loop_Counter_Variable_1) == 0x00004C, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Add_IntInt_ReturnValue_4) == 0x000050, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, Temp_int_Array_Index_Variable_2) == 0x000054, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, Temp_int_Loop_Counter_Variable_2) == 0x000058, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Add_IntInt_ReturnValue_5) == 0x00005C, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, Temp_int_Variable_2) == 0x000060, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_CreateDelegate_OutputDelegate) == 0x000064, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Add_IntInt_ReturnValue_6) == 0x000070, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, Temp_int_Variable_3) == 0x000074, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Add_IntInt_ReturnValue_7) == 0x000078, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, Temp_int_Variable_4) == 0x00007C, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000080, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Add_IntInt_ReturnValue_8) == 0x000088, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, Temp_int_Loop_Counter_Variable_3) == 0x00008C, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Add_IntInt_ReturnValue_9) == 0x000090, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, Temp_int_Array_Index_Variable_3) == 0x000094, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_CreateDelegate_OutputDelegate_1) == 0x000098, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, Temp_int_Array_Index_Variable_4) == 0x0000A4, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, Temp_int_Loop_Counter_Variable_4) == 0x0000A8, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Add_IntInt_ReturnValue_10) == 0x0000AC, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, Temp_int_Array_Index_Variable_5) == 0x0000B0, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, Temp_int_Array_Index_Variable_6) == 0x0000B4, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, Temp_int_Loop_Counter_Variable_5) == 0x0000B8, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Add_IntInt_ReturnValue_11) == 0x0000BC, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, Temp_int_Array_Index_Variable_7) == 0x0000C0, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::Temp_int_Array_Index_Variable_7' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, Temp_int_Loop_Counter_Variable_6) == 0x0000C4, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Add_IntInt_ReturnValue_12) == 0x0000C8, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Add_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_Event_OtherActor_1) == 0x0000D0, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_Event_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_Event_OtherActor) == 0x0000D8, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_CustomEvent_Player) == 0x0000E0, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_CustomEvent_InputPin_1) == 0x0000E8, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_CustomEvent_InputPin_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_GetComponentByClass_ReturnValue) == 0x0000F0, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_IsValid_ReturnValue) == 0x0000F8, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_GetWantsToGrind_ReturnValue) == 0x0000F9, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_GetWantsToGrind_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Not_PreBool_ReturnValue) == 0x0000FA, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_CustomEvent_InputPin) == 0x000100, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_CustomEvent_InputPin' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Array_Get_Item) == 0x000108, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, Temp_object_Variable) == 0x000128, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000138, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Subtract_IntInt_ReturnValue) == 0x000140, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000148, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000150, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_MakeHitResult_ReturnValue) == 0x000158, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue) == 0x000238, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_CustomEvent_FromRailConnectorMovement) == 0x000250, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_CustomEvent_FromRailConnectorMovement' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_CustomEvent_TheConnector) == 0x000258, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_CustomEvent_TheConnector' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Array_Get_Item_1) == 0x000260, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Array_Length_ReturnValue_1) == 0x000278, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000280, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Less_IntInt_ReturnValue) == 0x000288, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000290, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000298, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue_1) == 0x0002B0, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0002C8, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Cross_VectorVector_ReturnValue) == 0x0002D0, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0002E8, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Cross_VectorVector_ReturnValue_1) == 0x0002F0, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Cross_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Normal_ReturnValue) == 0x000308, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Array_IsEmpty_ReturnValue) == 0x000320, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_CreateDelegate_OutputDelegate_2) == 0x000324, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_InEditor_ReturnValue) == 0x000330, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_InEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, Temp_int_Loop_Counter_Variable_7) == 0x000334, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::Temp_int_Loop_Counter_Variable_7' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Less_IntInt_ReturnValue_1) == 0x000338, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Add_IntInt_ReturnValue_13) == 0x00033C, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Add_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000340, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Array_Get_Item_2) == 0x000350, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Array_Length_ReturnValue_2) == 0x000358, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Less_IntInt_ReturnValue_2) == 0x00035C, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_CustomEvent_Target) == 0x000360, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000368, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x00036C, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000370, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000378, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_GetNumberOfSplinePoints_ReturnValue_1) == 0x000390, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_GetNumberOfSplinePoints_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000394, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_K2_GetComponentsByClass_ReturnValue_1) == 0x000398, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_K2_GetComponentsByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0003A8, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Array_Get_Item_3) == 0x0003B0, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Array_Length_ReturnValue_3) == 0x0003B8, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Less_IntInt_ReturnValue_3) == 0x0003BC, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, Temp_struct_Variable) == 0x0003C0, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_CustomEvent_bNewIsSprinting) == 0x0003D8, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_CustomEvent_bNewIsSprinting' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Array_Get_Item_4) == 0x0003E0, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Array_Length_ReturnValue_4) == 0x0003F8, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Array_Length_ReturnValue_5) == 0x0003FC, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Less_IntInt_ReturnValue_4) == 0x000400, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_MakeVector_ReturnValue_1) == 0x000408, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, Temp_struct_Variable_1) == 0x000420, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_GetNumberOfSplinePoints_ReturnValue_2) == 0x000438, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_GetNumberOfSplinePoints_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x00043C, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x000440, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_GetTransformAtSplinePoint_ReturnValue) == 0x000450, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_GetTransformAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_BreakTransform_Location) == 0x0004B0, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_BreakTransform_Rotation) == 0x0004C8, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_BreakTransform_Scale) == 0x0004E0, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_MakeArray_Array) == 0x0004F8, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, Temp_struct_Variable_2) == 0x000508, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_SphereOverlapActors_OutActors) == 0x000520, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_SphereOverlapActors_ReturnValue) == 0x000530, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Array_Get_Item_5) == 0x000538, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, Temp_byte_Variable) == 0x000540, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_Select_Default) == 0x000548, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_MakeTransform_ReturnValue) == 0x000560, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_CustomEvent_Connector) == 0x0005C0, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_CustomEvent_Connector' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_AddComponent_ReturnValue) == 0x0005C8, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0005D0, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_GetTransformAtSplinePoint_ReturnValue_1) == 0x0005F0, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_GetTransformAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_BreakTransform_Location_1) == 0x000650, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_BreakTransform_Rotation_1) == 0x000668, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_BreakTransform_Scale_1) == 0x000680, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_GetNumberOfSplinePoints_ReturnValue_3) == 0x000698, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_GetNumberOfSplinePoints_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Vector_DistanceSquared_ReturnValue) == 0x0006A0, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Vector_DistanceSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x0006A8, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, Temp_byte_Variable_1) == 0x0006AC, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_LessEqual_IntInt_ReturnValue_4) == 0x0006AD, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_LessEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Square_ReturnValue) == 0x0006B0, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0006B8, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_Event_MyComp) == 0x0006C0, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_Event_Other) == 0x0006C8, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_Event_OtherComp) == 0x0006D0, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_Event_bSelfMoved) == 0x0006D8, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_Event_HitLocation) == 0x0006E0, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_Event_HitNormal) == 0x0006F8, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_Event_NormalImpulse) == 0x000710, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_Event_Hit) == 0x000728, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_CustomEvent_AttachedPlayer) == 0x000808, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_CustomEvent_AttachedPlayer' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_DynamicCast_AsPlayer_Pawn_Athena) == 0x000810, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_DynamicCast_AsPlayer_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_DynamicCast_bSuccess) == 0x000818, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_CollisionCheck_Return) == 0x000819, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_CollisionCheck_Return' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000820, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_IsLocallyControlled_ReturnValue) == 0x000828, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_CustomEvent_bWasAlreadyGrinding_1) == 0x000829, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_CustomEvent_bWasAlreadyGrinding_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_CustomEvent_bWasJumpingFromRail_1) == 0x00082A, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_CustomEvent_bWasJumpingFromRail_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_CustomEvent_bEnteredFromInteraction_1) == 0x00082B, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_CustomEvent_bEnteredFromInteraction_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_CustomEvent_PreviousPlayerLocation_1) == 0x000830, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_CustomEvent_PreviousPlayerLocation_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_CustomEvent_OldRail) == 0x000848, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_CustomEvent_OldRail' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_CustomEvent_NewRail) == 0x000850, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_CustomEvent_NewRail' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Array_Get_Item_6) == 0x000858, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Array_Length_ReturnValue_6) == 0x000860, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Less_IntInt_ReturnValue_5) == 0x000864, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000868, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_DynamicCast_AsStatic_Mesh) == 0x000870, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_DynamicCast_AsStatic_Mesh' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_DynamicCast_bSuccess_1) == 0x000878, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_SetStaticMesh_ReturnValue) == 0x000879, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x000880, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_DynamicCast_AsStatic_Mesh_1) == 0x000888, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_DynamicCast_AsStatic_Mesh_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_DynamicCast_bSuccess_2) == 0x000890, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_LoadAsset_Blocking_ReturnValue_2) == 0x000898, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_LoadAsset_Blocking_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_DynamicCast_AsTexture_2D) == 0x0008A0, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_DynamicCast_bSuccess_3) == 0x0008A8, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_InEditor_ReturnValue_1) == 0x0008A9, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_InEditor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_InEditor_ReturnValue_2) == 0x0008AA, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_InEditor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_InEditor_ReturnValue_3) == 0x0008AB, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_InEditor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_LoadAsset_Blocking_ReturnValue_3) == 0x0008B0, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_LoadAsset_Blocking_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_DynamicCast_AsFort_World_Item_Definition) == 0x0008B8, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_DynamicCast_AsFort_World_Item_Definition' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_DynamicCast_bSuccess_4) == 0x0008C0, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Array_IsEmpty_ReturnValue_1) == 0x0008C1, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Array_IsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_IsServer_ReturnValue) == 0x0008C2, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Not_PreBool_ReturnValue_1) == 0x0008C3, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_BooleanAND_ReturnValue) == 0x0008C4, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_LoadAsset_Blocking_ReturnValue_4) == 0x0008C8, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_LoadAsset_Blocking_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_DynamicCast_AsMaterial_Instance) == 0x0008D0, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_DynamicCast_AsMaterial_Instance' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_DynamicCast_bSuccess_5) == 0x0008D8, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_LoadAsset_Blocking_ReturnValue_5) == 0x0008E0, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_LoadAsset_Blocking_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_LoadAsset_Blocking_ReturnValue_6) == 0x0008E8, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_LoadAsset_Blocking_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_DynamicCast_AsMaterial_Instance_1) == 0x0008F0, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_DynamicCast_AsMaterial_Instance_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_DynamicCast_bSuccess_6) == 0x0008F8, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_DynamicCast_AsMaterial_Instance_2) == 0x000900, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_DynamicCast_AsMaterial_Instance_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_DynamicCast_bSuccess_7) == 0x000908, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_Select_Default_1) == 0x000910, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue_2) == 0x000918, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Cross_VectorVector_ReturnValue_2) == 0x000930, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Cross_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1) == 0x000948, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Cross_VectorVector_ReturnValue_3) == 0x000960, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Cross_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Normal_ReturnValue_1) == 0x000978, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000990, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Add_VectorVector_ReturnValue) == 0x0009A8, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0009C0, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_K2_SpawnPickupInWorld_ReturnValue) == 0x0009D8, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_K2_SpawnPickupInWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_IsValid_ReturnValue_1) == 0x0009E0, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_GetObjectClass_ReturnValue) == 0x0009E8, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_GetAllActorsOfClass_OutActors) == 0x0009F0, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Array_Get_Item_7) == 0x000A00, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Array_Length_ReturnValue_7) == 0x000A08, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Less_IntInt_ReturnValue_6) == 0x000A0C, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_K2_GetComponentsByClass_ReturnValue_2) == 0x000A10, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_K2_GetComponentsByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Conv_FloatToVector_ReturnValue_1) == 0x000A20, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Conv_FloatToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Array_Get_Item_8) == 0x000A38, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000A40, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000A58, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Array_Length_ReturnValue_8) == 0x000A70, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000A78, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_Less_IntInt_ReturnValue_7) == 0x000B58, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_CreateDelegate_OutputDelegate_3) == 0x000B5C, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_CustomEvent_bWasAlreadyGrinding) == 0x000B68, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_CustomEvent_bWasAlreadyGrinding' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_CustomEvent_bWasJumpingFromRail) == 0x000B69, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_CustomEvent_bWasJumpingFromRail' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_CustomEvent_bEnteredFromInteraction) == 0x000B6A, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_CustomEvent_bEnteredFromInteraction' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_CustomEvent_PreviousPlayerLocation) == 0x000B70, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_CustomEvent_PreviousPlayerLocation' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, K2Node_CreateDelegate_OutputDelegate_4) == 0x000B88, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_GetDirectionAtDistanceAlongSpline_Distance_ImplicitCast) == 0x000B94, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_GetDirectionAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_GetDirectionAtDistanceAlongSpline_Distance_ImplicitCast_1) == 0x000B98, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_GetDirectionAtDistanceAlongSpline_Distance_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast) == 0x000B9C, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_GetDirectionAtDistanceAlongSpline_Distance_ImplicitCast_2) == 0x000BA0, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_GetDirectionAtDistanceAlongSpline_Distance_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1) == 0x000BA4, "Member 'BGA_GrindRail_C_ExecuteUbergraph_BGA_GrindRail::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.FillInBoosterInfo
// 0x0078 (0x0078 - 0x0000)
struct BGA_GrindRail_C_FillInBoosterInfo final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGrindRail_Booster_Directional         CallFunc_Array_Get_Item;                           // 0x0008(0x0018)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BoosterLengthToSplineLength_Length_Along_Spline__cm_; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BoosterLengthToSplineLength_Length_Along_Spline__cm__1; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGrindRailBoosterInfo                  K2Node_MakeStruct_GrindRailBoosterInfo;            // 0x0060(0x000C)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_MinDistanceAlongSpline_ImplicitCast; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_MaxDistanceAlongSpline_ImplicitCast; // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_FillInBoosterInfo) == 0x000008, "Wrong alignment on BGA_GrindRail_C_FillInBoosterInfo");
static_assert(sizeof(BGA_GrindRail_C_FillInBoosterInfo) == 0x000078, "Wrong size on BGA_GrindRail_C_FillInBoosterInfo");
static_assert(offsetof(BGA_GrindRail_C_FillInBoosterInfo, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BGA_GrindRail_C_FillInBoosterInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_FillInBoosterInfo, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BGA_GrindRail_C_FillInBoosterInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_FillInBoosterInfo, CallFunc_Array_Get_Item) == 0x000008, "Member 'BGA_GrindRail_C_FillInBoosterInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_FillInBoosterInfo, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BGA_GrindRail_C_FillInBoosterInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_FillInBoosterInfo, CallFunc_BoosterLengthToSplineLength_Length_Along_Spline__cm_) == 0x000028, "Member 'BGA_GrindRail_C_FillInBoosterInfo::CallFunc_BoosterLengthToSplineLength_Length_Along_Spline__cm_' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_FillInBoosterInfo, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BGA_GrindRail_C_FillInBoosterInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_FillInBoosterInfo, CallFunc_GetValidValue_ReturnValue) == 0x000031, "Member 'BGA_GrindRail_C_FillInBoosterInfo::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_FillInBoosterInfo, CallFunc_GetValidValue_ReturnValue_1) == 0x000032, "Member 'BGA_GrindRail_C_FillInBoosterInfo::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_FillInBoosterInfo, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'BGA_GrindRail_C_FillInBoosterInfo::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_FillInBoosterInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BGA_GrindRail_C_FillInBoosterInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_FillInBoosterInfo, CallFunc_BoosterLengthToSplineLength_Length_Along_Spline__cm__1) == 0x000048, "Member 'BGA_GrindRail_C_FillInBoosterInfo::CallFunc_BoosterLengthToSplineLength_Length_Along_Spline__cm__1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_FillInBoosterInfo, CallFunc_FMin_ReturnValue) == 0x000050, "Member 'BGA_GrindRail_C_FillInBoosterInfo::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_FillInBoosterInfo, CallFunc_FMax_ReturnValue) == 0x000058, "Member 'BGA_GrindRail_C_FillInBoosterInfo::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_FillInBoosterInfo, K2Node_MakeStruct_GrindRailBoosterInfo) == 0x000060, "Member 'BGA_GrindRail_C_FillInBoosterInfo::K2Node_MakeStruct_GrindRailBoosterInfo' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_FillInBoosterInfo, CallFunc_Array_Add_ReturnValue) == 0x00006C, "Member 'BGA_GrindRail_C_FillInBoosterInfo::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_FillInBoosterInfo, K2Node_MakeStruct_MinDistanceAlongSpline_ImplicitCast) == 0x000070, "Member 'BGA_GrindRail_C_FillInBoosterInfo::K2Node_MakeStruct_MinDistanceAlongSpline_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_FillInBoosterInfo, K2Node_MakeStruct_MaxDistanceAlongSpline_ImplicitCast) == 0x000074, "Member 'BGA_GrindRail_C_FillInBoosterInfo::K2Node_MakeStruct_MaxDistanceAlongSpline_ImplicitCast' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.GenerateRailComponents
// 0x0010 (0x0010 - 0x0000)
struct BGA_GrindRail_C_GenerateRailComponents final
{
public:
	bool                                          FromRailConnectorMovement;                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABGA_RailConnector_GrindRail_C*         TheConnector;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_GenerateRailComponents) == 0x000008, "Wrong alignment on BGA_GrindRail_C_GenerateRailComponents");
static_assert(sizeof(BGA_GrindRail_C_GenerateRailComponents) == 0x000010, "Wrong size on BGA_GrindRail_C_GenerateRailComponents");
static_assert(offsetof(BGA_GrindRail_C_GenerateRailComponents, FromRailConnectorMovement) == 0x000000, "Member 'BGA_GrindRail_C_GenerateRailComponents::FromRailConnectorMovement' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GenerateRailComponents, TheConnector) == 0x000008, "Member 'BGA_GrindRail_C_GenerateRailComponents::TheConnector' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.GetConnectionForGrinding
// 0x02A0 (0x02A0 - 0x0000)
struct BGA_GrindRail_C_GetConnectionForGrinding final
{
public:
	float                                         DistanceToTravel;                                  // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentDistanceAlongSpline;                        // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NextDistanceOnRail;                                // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RightLeanValue;                                    // 0x000C(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNewRail;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DistanceAlongNewRail;                              // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortGrindRail*                         TheNewRail;                                        // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bNewRailReverseDirection;                          // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        OutDistanceAlongNewRail;                           // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABGA_GrindRail_C*                       NewRail;                                           // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          OutNewRailReverseDirection;                        // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OutNewRail;                                        // 0x0039(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRailConnectionOption                  ChosenOption;                                      // 0x0040(0x0050)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABGA_GrindRail_C*                       K2Node_DynamicCast_AsBGA_Grind_Rail;               // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue; // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SignOfFloat_ReturnValue;                  // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SignOfFloat_ReturnValue_1;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGrindRail_Connection                  CallFunc_Array_Get_Item;                           // 0x00D8(0x0148)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x3];                                      // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0262(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_263[0x1];                                      // 0x0263(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_FunctionResult_DistanceAlongNewRail_ImplicitCast; // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SignOfFloat_A_ImplicitCast;               // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_OutDistanceAlongNewRail_ImplicitCast; // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SignOfFloat_A_ImplicitCast_1;             // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_GetConnectionForGrinding) == 0x000008, "Wrong alignment on BGA_GrindRail_C_GetConnectionForGrinding");
static_assert(sizeof(BGA_GrindRail_C_GetConnectionForGrinding) == 0x0002A0, "Wrong size on BGA_GrindRail_C_GetConnectionForGrinding");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, DistanceToTravel) == 0x000000, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::DistanceToTravel' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, CurrentDistanceAlongSpline) == 0x000004, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::CurrentDistanceAlongSpline' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, NextDistanceOnRail) == 0x000008, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::NextDistanceOnRail' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, RightLeanValue) == 0x00000C, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::RightLeanValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, bNewRail) == 0x000010, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::bNewRail' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, DistanceAlongNewRail) == 0x000014, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::DistanceAlongNewRail' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, TheNewRail) == 0x000018, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::TheNewRail' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, bNewRailReverseDirection) == 0x000020, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::bNewRailReverseDirection' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, OutDistanceAlongNewRail) == 0x000028, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::OutDistanceAlongNewRail' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, NewRail) == 0x000030, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::NewRail' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, OutNewRailReverseDirection) == 0x000038, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::OutNewRailReverseDirection' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, OutNewRail) == 0x000039, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::OutNewRail' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, ChosenOption) == 0x000040, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::ChosenOption' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, Temp_int_Array_Index_Variable) == 0x000090, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000094, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000095, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000098, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, K2Node_DynamicCast_AsBGA_Grind_Rail) == 0x0000A0, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::K2Node_DynamicCast_AsBGA_Grind_Rail' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0000A9, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue) == 0x0000AC, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, CallFunc_SignOfFloat_ReturnValue) == 0x0000B0, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, CallFunc_Round_ReturnValue) == 0x0000B8, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000BC, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, CallFunc_SignOfFloat_ReturnValue_1) == 0x0000C0, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::CallFunc_SignOfFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, CallFunc_Round_ReturnValue_1) == 0x0000C8, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, Temp_int_Loop_Counter_Variable) == 0x0000CC, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, CallFunc_Add_IntInt_ReturnValue) == 0x0000D0, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, CallFunc_Array_Length_ReturnValue) == 0x0000D4, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, CallFunc_Less_IntInt_ReturnValue) == 0x000220, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, CallFunc_Multiply_IntInt_ReturnValue) == 0x000224, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000228, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000230, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000238, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000240, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000248, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000250, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000258, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000260, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000261, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, CallFunc_BooleanAND_ReturnValue) == 0x000262, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, K2Node_FunctionResult_DistanceAlongNewRail_ImplicitCast) == 0x000264, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::K2Node_FunctionResult_DistanceAlongNewRail_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000268, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000270, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000278, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, CallFunc_SignOfFloat_A_ImplicitCast) == 0x000280, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::CallFunc_SignOfFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, K2Node_VariableSet_OutDistanceAlongNewRail_ImplicitCast) == 0x000288, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::K2Node_VariableSet_OutDistanceAlongNewRail_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000290, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetConnectionForGrinding, CallFunc_SignOfFloat_A_ImplicitCast_1) == 0x000298, "Member 'BGA_GrindRail_C_GetConnectionForGrinding::CallFunc_SignOfFloat_A_ImplicitCast_1' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.GetCurvatureAtDistance
// 0x0078 (0x0078 - 0x0000)
struct BGA_GrindRail_C_GetCurvatureAtDistance final
{
public:
	double                                        Distance;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Curvature;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue; // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue_1; // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetAngleBetweenTwoVectors_Angle__Degrees_; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDirectionAtDistanceAlongSpline_Distance_ImplicitCast; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDirectionAtDistanceAlongSpline_Distance_ImplicitCast_1; // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_GetCurvatureAtDistance) == 0x000008, "Wrong alignment on BGA_GrindRail_C_GetCurvatureAtDistance");
static_assert(sizeof(BGA_GrindRail_C_GetCurvatureAtDistance) == 0x000078, "Wrong size on BGA_GrindRail_C_GetCurvatureAtDistance");
static_assert(offsetof(BGA_GrindRail_C_GetCurvatureAtDistance, Distance) == 0x000000, "Member 'BGA_GrindRail_C_GetCurvatureAtDistance::Distance' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetCurvatureAtDistance, Curvature) == 0x000008, "Member 'BGA_GrindRail_C_GetCurvatureAtDistance::Curvature' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetCurvatureAtDistance, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'BGA_GrindRail_C_GetCurvatureAtDistance::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetCurvatureAtDistance, CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue) == 0x000018, "Member 'BGA_GrindRail_C_GetCurvatureAtDistance::CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetCurvatureAtDistance, CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue_1) == 0x000030, "Member 'BGA_GrindRail_C_GetCurvatureAtDistance::CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetCurvatureAtDistance, CallFunc_Cross_VectorVector_ReturnValue) == 0x000048, "Member 'BGA_GrindRail_C_GetCurvatureAtDistance::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetCurvatureAtDistance, CallFunc_GetAngleBetweenTwoVectors_Angle__Degrees_) == 0x000060, "Member 'BGA_GrindRail_C_GetCurvatureAtDistance::CallFunc_GetAngleBetweenTwoVectors_Angle__Degrees_' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetCurvatureAtDistance, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'BGA_GrindRail_C_GetCurvatureAtDistance::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetCurvatureAtDistance, CallFunc_GetDirectionAtDistanceAlongSpline_Distance_ImplicitCast) == 0x000070, "Member 'BGA_GrindRail_C_GetCurvatureAtDistance::CallFunc_GetDirectionAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetCurvatureAtDistance, CallFunc_GetDirectionAtDistanceAlongSpline_Distance_ImplicitCast_1) == 0x000074, "Member 'BGA_GrindRail_C_GetCurvatureAtDistance::CallFunc_GetDirectionAtDistanceAlongSpline_Distance_ImplicitCast_1' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.GetDirectionAtDistance
// 0x0038 (0x0038 - 0x0000)
struct BGA_GrindRail_C_GetDirectionAtDistance final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue; // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_GetDirectionAtDistance) == 0x000008, "Wrong alignment on BGA_GrindRail_C_GetDirectionAtDistance");
static_assert(sizeof(BGA_GrindRail_C_GetDirectionAtDistance) == 0x000038, "Wrong size on BGA_GrindRail_C_GetDirectionAtDistance");
static_assert(offsetof(BGA_GrindRail_C_GetDirectionAtDistance, Distance) == 0x000000, "Member 'BGA_GrindRail_C_GetDirectionAtDistance::Distance' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetDirectionAtDistance, ReturnValue) == 0x000008, "Member 'BGA_GrindRail_C_GetDirectionAtDistance::ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetDirectionAtDistance, CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue) == 0x000020, "Member 'BGA_GrindRail_C_GetDirectionAtDistance::CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.GetLength
// 0x0008 (0x0008 - 0x0000)
struct BGA_GrindRail_C_GetLength final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_GetLength) == 0x000004, "Wrong alignment on BGA_GrindRail_C_GetLength");
static_assert(sizeof(BGA_GrindRail_C_GetLength) == 0x000008, "Wrong size on BGA_GrindRail_C_GetLength");
static_assert(offsetof(BGA_GrindRail_C_GetLength, ReturnValue) == 0x000000, "Member 'BGA_GrindRail_C_GetLength::ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetLength, CallFunc_GetSplineLength_ReturnValue) == 0x000004, "Member 'BGA_GrindRail_C_GetLength::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.GetRotationForTip
// 0x00F0 (0x00F0 - 0x0000)
struct BGA_GrindRail_C_GetRotationForTip final
{
public:
	bool                                          bEndTip;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Rotator;                                           // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue; // 0x0030(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTransformAtDistanceAlongSpline_Distance_ImplicitCast; // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_GetRotationForTip) == 0x000010, "Wrong alignment on BGA_GrindRail_C_GetRotationForTip");
static_assert(sizeof(BGA_GrindRail_C_GetRotationForTip) == 0x0000F0, "Wrong size on BGA_GrindRail_C_GetRotationForTip");
static_assert(offsetof(BGA_GrindRail_C_GetRotationForTip, bEndTip) == 0x000000, "Member 'BGA_GrindRail_C_GetRotationForTip::bEndTip' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetRotationForTip, Rotator) == 0x000008, "Member 'BGA_GrindRail_C_GetRotationForTip::Rotator' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetRotationForTip, CallFunc_GetSplineLength_ReturnValue) == 0x000020, "Member 'BGA_GrindRail_C_GetRotationForTip::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetRotationForTip, CallFunc_SelectFloat_ReturnValue) == 0x000028, "Member 'BGA_GrindRail_C_GetRotationForTip::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetRotationForTip, CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue) == 0x000030, "Member 'BGA_GrindRail_C_GetRotationForTip::CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetRotationForTip, CallFunc_BreakTransform_Location) == 0x000090, "Member 'BGA_GrindRail_C_GetRotationForTip::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetRotationForTip, CallFunc_BreakTransform_Rotation) == 0x0000A8, "Member 'BGA_GrindRail_C_GetRotationForTip::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetRotationForTip, CallFunc_BreakTransform_Scale) == 0x0000C0, "Member 'BGA_GrindRail_C_GetRotationForTip::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetRotationForTip, CallFunc_SelectFloat_A_ImplicitCast) == 0x0000D8, "Member 'BGA_GrindRail_C_GetRotationForTip::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetRotationForTip, CallFunc_GetTransformAtDistanceAlongSpline_Distance_ImplicitCast) == 0x0000E0, "Member 'BGA_GrindRail_C_GetRotationForTip::CallFunc_GetTransformAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.GetSnapPosition
// 0x0058 (0x0058 - 0x0000)
struct BGA_GrindRail_C_GetSnapPosition final
{
public:
	struct FVector                                CurrentPosition;                                   // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OutPos;                                            // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutDistance;                                       // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_FindLocationClosestToWorldLocation_ReturnValue; // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FindInputKeyClosestToWorldLocation_ReturnValue; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplineInputKey_ReturnValue; // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_GetSnapPosition) == 0x000008, "Wrong alignment on BGA_GrindRail_C_GetSnapPosition");
static_assert(sizeof(BGA_GrindRail_C_GetSnapPosition) == 0x000058, "Wrong size on BGA_GrindRail_C_GetSnapPosition");
static_assert(offsetof(BGA_GrindRail_C_GetSnapPosition, CurrentPosition) == 0x000000, "Member 'BGA_GrindRail_C_GetSnapPosition::CurrentPosition' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetSnapPosition, OutPos) == 0x000018, "Member 'BGA_GrindRail_C_GetSnapPosition::OutPos' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetSnapPosition, OutDistance) == 0x000030, "Member 'BGA_GrindRail_C_GetSnapPosition::OutDistance' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetSnapPosition, CallFunc_FindLocationClosestToWorldLocation_ReturnValue) == 0x000038, "Member 'BGA_GrindRail_C_GetSnapPosition::CallFunc_FindLocationClosestToWorldLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetSnapPosition, CallFunc_FindInputKeyClosestToWorldLocation_ReturnValue) == 0x000050, "Member 'BGA_GrindRail_C_GetSnapPosition::CallFunc_FindInputKeyClosestToWorldLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GetSnapPosition, CallFunc_GetDistanceAlongSplineAtSplineInputKey_ReturnValue) == 0x000054, "Member 'BGA_GrindRail_C_GetSnapPosition::CallFunc_GetDistanceAlongSplineAtSplineInputKey_ReturnValue' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.GrindRailChanged
// 0x0010 (0x0010 - 0x0000)
struct BGA_GrindRail_C_GrindRailChanged final
{
public:
	class AFortGrindRail*                         OldRail;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortGrindRail*                         NewRail;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_GrindRailChanged) == 0x000008, "Wrong alignment on BGA_GrindRail_C_GrindRailChanged");
static_assert(sizeof(BGA_GrindRail_C_GrindRailChanged) == 0x000010, "Wrong size on BGA_GrindRail_C_GrindRailChanged");
static_assert(offsetof(BGA_GrindRail_C_GrindRailChanged, OldRail) == 0x000000, "Member 'BGA_GrindRail_C_GrindRailChanged::OldRail' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_GrindRailChanged, NewRail) == 0x000008, "Member 'BGA_GrindRail_C_GrindRailChanged::NewRail' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.HandlePlayerGrindStart
// 0x0008 (0x0008 - 0x0000)
struct BGA_GrindRail_C_HandlePlayerGrindStart final
{
public:
	class APlayerPawn_Athena_C*                   AttachedPlayer;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_HandlePlayerGrindStart) == 0x000008, "Wrong alignment on BGA_GrindRail_C_HandlePlayerGrindStart");
static_assert(sizeof(BGA_GrindRail_C_HandlePlayerGrindStart) == 0x000008, "Wrong size on BGA_GrindRail_C_HandlePlayerGrindStart");
static_assert(offsetof(BGA_GrindRail_C_HandlePlayerGrindStart, AttachedPlayer) == 0x000000, "Member 'BGA_GrindRail_C_HandlePlayerGrindStart::AttachedPlayer' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.IsATip
// 0x0014 (0x0014 - 0x0000)
struct BGA_GrindRail_C_IsATip final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_IsATip) == 0x000004, "Wrong alignment on BGA_GrindRail_C_IsATip");
static_assert(sizeof(BGA_GrindRail_C_IsATip) == 0x000014, "Wrong size on BGA_GrindRail_C_IsATip");
static_assert(offsetof(BGA_GrindRail_C_IsATip, Index_0) == 0x000000, "Member 'BGA_GrindRail_C_IsATip::Index_0' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_IsATip, ReturnValue) == 0x000004, "Member 'BGA_GrindRail_C_IsATip::ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_IsATip, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000005, "Member 'BGA_GrindRail_C_IsATip::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_IsATip, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000008, "Member 'BGA_GrindRail_C_IsATip::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_IsATip, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'BGA_GrindRail_C_IsATip::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_IsATip, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000010, "Member 'BGA_GrindRail_C_IsATip::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_IsATip, CallFunc_BooleanOR_ReturnValue) == 0x000011, "Member 'BGA_GrindRail_C_IsATip::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.IsTipCapped
// 0x0006 (0x0006 - 0x0000)
struct BGA_GrindRail_C_IsTipCapped final
{
public:
	bool                                          bStartTip;                                         // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_IsTipCapped) == 0x000001, "Wrong alignment on BGA_GrindRail_C_IsTipCapped");
static_assert(sizeof(BGA_GrindRail_C_IsTipCapped) == 0x000006, "Wrong size on BGA_GrindRail_C_IsTipCapped");
static_assert(offsetof(BGA_GrindRail_C_IsTipCapped, bStartTip) == 0x000000, "Member 'BGA_GrindRail_C_IsTipCapped::bStartTip' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_IsTipCapped, ReturnValue) == 0x000001, "Member 'BGA_GrindRail_C_IsTipCapped::ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_IsTipCapped, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BGA_GrindRail_C_IsTipCapped::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_IsTipCapped, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BGA_GrindRail_C_IsTipCapped::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_IsTipCapped, CallFunc_BooleanAND_ReturnValue_1) == 0x000004, "Member 'BGA_GrindRail_C_IsTipCapped::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_IsTipCapped, CallFunc_BooleanOR_ReturnValue) == 0x000005, "Member 'BGA_GrindRail_C_IsTipCapped::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.IsTipConnected
// 0x0006 (0x0006 - 0x0000)
struct BGA_GrindRail_C_IsTipConnected final
{
public:
	bool                                          bStartTip;                                         // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_IsTipConnected) == 0x000001, "Wrong alignment on BGA_GrindRail_C_IsTipConnected");
static_assert(sizeof(BGA_GrindRail_C_IsTipConnected) == 0x000006, "Wrong size on BGA_GrindRail_C_IsTipConnected");
static_assert(offsetof(BGA_GrindRail_C_IsTipConnected, bStartTip) == 0x000000, "Member 'BGA_GrindRail_C_IsTipConnected::bStartTip' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_IsTipConnected, ReturnValue) == 0x000001, "Member 'BGA_GrindRail_C_IsTipConnected::ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_IsTipConnected, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BGA_GrindRail_C_IsTipConnected::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_IsTipConnected, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BGA_GrindRail_C_IsTipConnected::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_IsTipConnected, CallFunc_BooleanAND_ReturnValue_1) == 0x000004, "Member 'BGA_GrindRail_C_IsTipConnected::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_IsTipConnected, CallFunc_BooleanOR_ReturnValue) == 0x000005, "Member 'BGA_GrindRail_C_IsTipConnected::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.JumpOffMaterial
// 0x0020 (0x0020 - 0x0000)
struct BGA_GrindRail_C_JumpOffMaterial final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_JumpOffMaterial) == 0x000008, "Wrong alignment on BGA_GrindRail_C_JumpOffMaterial");
static_assert(sizeof(BGA_GrindRail_C_JumpOffMaterial) == 0x000020, "Wrong size on BGA_GrindRail_C_JumpOffMaterial");
static_assert(offsetof(BGA_GrindRail_C_JumpOffMaterial, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BGA_GrindRail_C_JumpOffMaterial::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_JumpOffMaterial, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BGA_GrindRail_C_JumpOffMaterial::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_JumpOffMaterial, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BGA_GrindRail_C_JumpOffMaterial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_JumpOffMaterial, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BGA_GrindRail_C_JumpOffMaterial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_JumpOffMaterial, CallFunc_Array_Get_Item) == 0x000010, "Member 'BGA_GrindRail_C_JumpOffMaterial::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_JumpOffMaterial, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BGA_GrindRail_C_JumpOffMaterial::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.OnRep_Connections
// 0x0048 (0x0048 - 0x0000)
struct BGA_GrindRail_C_OnRep_Connections final
{
public:
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_OnRep_Connections) == 0x000008, "Wrong alignment on BGA_GrindRail_C_OnRep_Connections");
static_assert(sizeof(BGA_GrindRail_C_OnRep_Connections) == 0x000048, "Wrong size on BGA_GrindRail_C_OnRep_Connections");
static_assert(offsetof(BGA_GrindRail_C_OnRep_Connections, CallFunc_GetDisplayName_ReturnValue) == 0x000000, "Member 'BGA_GrindRail_C_OnRep_Connections::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_OnRep_Connections, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BGA_GrindRail_C_OnRep_Connections::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_OnRep_Connections, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'BGA_GrindRail_C_OnRep_Connections::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_OnRep_Connections, CallFunc_Conv_IntToString_ReturnValue) == 0x000028, "Member 'BGA_GrindRail_C_OnRep_Connections::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_OnRep_Connections, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000038, "Member 'BGA_GrindRail_C_OnRep_Connections::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.PushGrindingSoundMix
// 0x0020 (0x0020 - 0x0000)
struct BGA_GrindRail_C_PushGrindingSoundMix final
{
public:
	bool                                          bWasAlreadyGrinding;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWasJumpingFromRail;                               // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnteredFromInteraction;                           // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PreviousPlayerLocation;                            // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_PushGrindingSoundMix) == 0x000008, "Wrong alignment on BGA_GrindRail_C_PushGrindingSoundMix");
static_assert(sizeof(BGA_GrindRail_C_PushGrindingSoundMix) == 0x000020, "Wrong size on BGA_GrindRail_C_PushGrindingSoundMix");
static_assert(offsetof(BGA_GrindRail_C_PushGrindingSoundMix, bWasAlreadyGrinding) == 0x000000, "Member 'BGA_GrindRail_C_PushGrindingSoundMix::bWasAlreadyGrinding' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_PushGrindingSoundMix, bWasJumpingFromRail) == 0x000001, "Member 'BGA_GrindRail_C_PushGrindingSoundMix::bWasJumpingFromRail' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_PushGrindingSoundMix, bEnteredFromInteraction) == 0x000002, "Member 'BGA_GrindRail_C_PushGrindingSoundMix::bEnteredFromInteraction' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_PushGrindingSoundMix, PreviousPlayerLocation) == 0x000008, "Member 'BGA_GrindRail_C_PushGrindingSoundMix::PreviousPlayerLocation' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.PutPlayerOnRail
// 0x0008 (0x0008 - 0x0000)
struct BGA_GrindRail_C_PutPlayerOnRail final
{
public:
	class APlayerPawn_Athena_C*                   Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_PutPlayerOnRail) == 0x000008, "Wrong alignment on BGA_GrindRail_C_PutPlayerOnRail");
static_assert(sizeof(BGA_GrindRail_C_PutPlayerOnRail) == 0x000008, "Wrong size on BGA_GrindRail_C_PutPlayerOnRail");
static_assert(offsetof(BGA_GrindRail_C_PutPlayerOnRail, Player) == 0x000000, "Member 'BGA_GrindRail_C_PutPlayerOnRail::Player' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.PutPlayerOnRail_ClientAndServer
// 0x0008 (0x0008 - 0x0000)
struct BGA_GrindRail_C_PutPlayerOnRail_ClientAndServer final
{
public:
	class APlayerPawn_Athena_C*                   InputPin;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_PutPlayerOnRail_ClientAndServer) == 0x000008, "Wrong alignment on BGA_GrindRail_C_PutPlayerOnRail_ClientAndServer");
static_assert(sizeof(BGA_GrindRail_C_PutPlayerOnRail_ClientAndServer) == 0x000008, "Wrong size on BGA_GrindRail_C_PutPlayerOnRail_ClientAndServer");
static_assert(offsetof(BGA_GrindRail_C_PutPlayerOnRail_ClientAndServer, InputPin) == 0x000000, "Member 'BGA_GrindRail_C_PutPlayerOnRail_ClientAndServer::InputPin' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.PutPlayerOnRail_Server
// 0x0008 (0x0008 - 0x0000)
struct BGA_GrindRail_C_PutPlayerOnRail_Server final
{
public:
	class APlayerPawn_Athena_C*                   InputPin;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_PutPlayerOnRail_Server) == 0x000008, "Wrong alignment on BGA_GrindRail_C_PutPlayerOnRail_Server");
static_assert(sizeof(BGA_GrindRail_C_PutPlayerOnRail_Server) == 0x000008, "Wrong size on BGA_GrindRail_C_PutPlayerOnRail_Server");
static_assert(offsetof(BGA_GrindRail_C_PutPlayerOnRail_Server, InputPin) == 0x000000, "Member 'BGA_GrindRail_C_PutPlayerOnRail_Server::InputPin' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.ReceiveActorBeginOverlap
// 0x0008 (0x0008 - 0x0000)
struct BGA_GrindRail_C_ReceiveActorBeginOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong alignment on BGA_GrindRail_C_ReceiveActorBeginOverlap");
static_assert(sizeof(BGA_GrindRail_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong size on BGA_GrindRail_C_ReceiveActorBeginOverlap");
static_assert(offsetof(BGA_GrindRail_C_ReceiveActorBeginOverlap, OtherActor) == 0x000000, "Member 'BGA_GrindRail_C_ReceiveActorBeginOverlap::OtherActor' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.ReceiveActorEndOverlap
// 0x0008 (0x0008 - 0x0000)
struct BGA_GrindRail_C_ReceiveActorEndOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_ReceiveActorEndOverlap) == 0x000008, "Wrong alignment on BGA_GrindRail_C_ReceiveActorEndOverlap");
static_assert(sizeof(BGA_GrindRail_C_ReceiveActorEndOverlap) == 0x000008, "Wrong size on BGA_GrindRail_C_ReceiveActorEndOverlap");
static_assert(offsetof(BGA_GrindRail_C_ReceiveActorEndOverlap, OtherActor) == 0x000000, "Member 'BGA_GrindRail_C_ReceiveActorEndOverlap::OtherActor' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.ReceiveHit
// 0x0148 (0x0148 - 0x0000)
struct BGA_GrindRail_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0068(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BGA_GrindRail_C_ReceiveHit) == 0x000008, "Wrong alignment on BGA_GrindRail_C_ReceiveHit");
static_assert(sizeof(BGA_GrindRail_C_ReceiveHit) == 0x000148, "Wrong size on BGA_GrindRail_C_ReceiveHit");
static_assert(offsetof(BGA_GrindRail_C_ReceiveHit, MyComp) == 0x000000, "Member 'BGA_GrindRail_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ReceiveHit, Other) == 0x000008, "Member 'BGA_GrindRail_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ReceiveHit, OtherComp) == 0x000010, "Member 'BGA_GrindRail_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'BGA_GrindRail_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ReceiveHit, HitLocation) == 0x000020, "Member 'BGA_GrindRail_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ReceiveHit, HitNormal) == 0x000038, "Member 'BGA_GrindRail_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ReceiveHit, NormalImpulse) == 0x000050, "Member 'BGA_GrindRail_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_ReceiveHit, Hit) == 0x000068, "Member 'BGA_GrindRail_C_ReceiveHit::Hit' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.SnapNearbyPointsToConnector
// 0x0008 (0x0008 - 0x0000)
struct BGA_GrindRail_C_SnapNearbyPointsToConnector final
{
public:
	class AActor*                                 Connector;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_SnapNearbyPointsToConnector) == 0x000008, "Wrong alignment on BGA_GrindRail_C_SnapNearbyPointsToConnector");
static_assert(sizeof(BGA_GrindRail_C_SnapNearbyPointsToConnector) == 0x000008, "Wrong size on BGA_GrindRail_C_SnapNearbyPointsToConnector");
static_assert(offsetof(BGA_GrindRail_C_SnapNearbyPointsToConnector, Connector) == 0x000000, "Member 'BGA_GrindRail_C_SnapNearbyPointsToConnector::Connector' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.SnapPointToConnector
// 0x00D8 (0x00D8 - 0x0000)
struct BGA_GrindRail_C_SnapPointToConnector final
{
public:
	class AActor*                                 Connector;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         PointIndex;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTangentAtSplinePoint_ReturnValue;      // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABGA_RailConnector_GrindRail_C*         K2Node_DynamicCast_AsBGA_Rail_Connector_Grind_Rail; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_NegateVector_ReturnValue;                 // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_SnapPointToConnector) == 0x000008, "Wrong alignment on BGA_GrindRail_C_SnapPointToConnector");
static_assert(sizeof(BGA_GrindRail_C_SnapPointToConnector) == 0x0000D8, "Wrong size on BGA_GrindRail_C_SnapPointToConnector");
static_assert(offsetof(BGA_GrindRail_C_SnapPointToConnector, Connector) == 0x000000, "Member 'BGA_GrindRail_C_SnapPointToConnector::Connector' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_SnapPointToConnector, PointIndex) == 0x000008, "Member 'BGA_GrindRail_C_SnapPointToConnector::PointIndex' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_SnapPointToConnector, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BGA_GrindRail_C_SnapPointToConnector::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_SnapPointToConnector, CallFunc_GetTangentAtSplinePoint_ReturnValue) == 0x000028, "Member 'BGA_GrindRail_C_SnapPointToConnector::CallFunc_GetTangentAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_SnapPointToConnector, CallFunc_GetActorForwardVector_ReturnValue) == 0x000040, "Member 'BGA_GrindRail_C_SnapPointToConnector::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_SnapPointToConnector, K2Node_DynamicCast_AsBGA_Rail_Connector_Grind_Rail) == 0x000058, "Member 'BGA_GrindRail_C_SnapPointToConnector::K2Node_DynamicCast_AsBGA_Rail_Connector_Grind_Rail' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_SnapPointToConnector, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BGA_GrindRail_C_SnapPointToConnector::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_SnapPointToConnector, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000068, "Member 'BGA_GrindRail_C_SnapPointToConnector::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_SnapPointToConnector, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000080, "Member 'BGA_GrindRail_C_SnapPointToConnector::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_SnapPointToConnector, CallFunc_Dot_VectorVector_ReturnValue) == 0x000098, "Member 'BGA_GrindRail_C_SnapPointToConnector::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_SnapPointToConnector, CallFunc_NegateVector_ReturnValue) == 0x0000A0, "Member 'BGA_GrindRail_C_SnapPointToConnector::CallFunc_NegateVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_SnapPointToConnector, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'BGA_GrindRail_C_SnapPointToConnector::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_SnapPointToConnector, CallFunc_SelectVector_ReturnValue) == 0x0000C0, "Member 'BGA_GrindRail_C_SnapPointToConnector::CallFunc_SelectVector_ReturnValue' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.sprinting state
// 0x0001 (0x0001 - 0x0000)
struct BGA_GrindRail_C_sprinting_state final
{
public:
	bool                                          bNewIsSprinting;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_sprinting_state) == 0x000001, "Wrong alignment on BGA_GrindRail_C_sprinting_state");
static_assert(sizeof(BGA_GrindRail_C_sprinting_state) == 0x000001, "Wrong size on BGA_GrindRail_C_sprinting_state");
static_assert(offsetof(BGA_GrindRail_C_sprinting_state, bNewIsSprinting) == 0x000000, "Member 'BGA_GrindRail_C_sprinting_state::bNewIsSprinting' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.Sprinting StateMaterial
// 0x0038 (0x0038 - 0x0000)
struct BGA_GrindRail_C_Sprinting_StateMaterial final
{
public:
	bool                                          Sprinting;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_Sprinting_StateMaterial) == 0x000008, "Wrong alignment on BGA_GrindRail_C_Sprinting_StateMaterial");
static_assert(sizeof(BGA_GrindRail_C_Sprinting_StateMaterial) == 0x000038, "Wrong size on BGA_GrindRail_C_Sprinting_StateMaterial");
static_assert(offsetof(BGA_GrindRail_C_Sprinting_StateMaterial, Sprinting) == 0x000000, "Member 'BGA_GrindRail_C_Sprinting_StateMaterial::Sprinting' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Sprinting_StateMaterial, Temp_int_Variable) == 0x000004, "Member 'BGA_GrindRail_C_Sprinting_StateMaterial::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Sprinting_StateMaterial, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BGA_GrindRail_C_Sprinting_StateMaterial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Sprinting_StateMaterial, Temp_int_Variable_1) == 0x00000C, "Member 'BGA_GrindRail_C_Sprinting_StateMaterial::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Sprinting_StateMaterial, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'BGA_GrindRail_C_Sprinting_StateMaterial::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Sprinting_StateMaterial, CallFunc_Array_Get_Item) == 0x000018, "Member 'BGA_GrindRail_C_Sprinting_StateMaterial::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Sprinting_StateMaterial, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BGA_GrindRail_C_Sprinting_StateMaterial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Sprinting_StateMaterial, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BGA_GrindRail_C_Sprinting_StateMaterial::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Sprinting_StateMaterial, CallFunc_Array_Get_Item_1) == 0x000028, "Member 'BGA_GrindRail_C_Sprinting_StateMaterial::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Sprinting_StateMaterial, CallFunc_Array_Length_ReturnValue_1) == 0x000030, "Member 'BGA_GrindRail_C_Sprinting_StateMaterial::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Sprinting_StateMaterial, CallFunc_Less_IntInt_ReturnValue_1) == 0x000034, "Member 'BGA_GrindRail_C_Sprinting_StateMaterial::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.StartedGrinding
// 0x0020 (0x0020 - 0x0000)
struct BGA_GrindRail_C_StartedGrinding final
{
public:
	bool                                          bWasAlreadyGrinding;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWasJumpingFromRail;                               // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnteredFromInteraction;                           // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PreviousPlayerLocation;                            // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_StartedGrinding) == 0x000008, "Wrong alignment on BGA_GrindRail_C_StartedGrinding");
static_assert(sizeof(BGA_GrindRail_C_StartedGrinding) == 0x000020, "Wrong size on BGA_GrindRail_C_StartedGrinding");
static_assert(offsetof(BGA_GrindRail_C_StartedGrinding, bWasAlreadyGrinding) == 0x000000, "Member 'BGA_GrindRail_C_StartedGrinding::bWasAlreadyGrinding' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_StartedGrinding, bWasJumpingFromRail) == 0x000001, "Member 'BGA_GrindRail_C_StartedGrinding::bWasJumpingFromRail' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_StartedGrinding, bEnteredFromInteraction) == 0x000002, "Member 'BGA_GrindRail_C_StartedGrinding::bEnteredFromInteraction' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_StartedGrinding, PreviousPlayerLocation) == 0x000008, "Member 'BGA_GrindRail_C_StartedGrinding::PreviousPlayerLocation' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.StartedGrindingMaterial
// 0x0020 (0x0020 - 0x0000)
struct BGA_GrindRail_C_StartedGrindingMaterial final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_StartedGrindingMaterial) == 0x000008, "Wrong alignment on BGA_GrindRail_C_StartedGrindingMaterial");
static_assert(sizeof(BGA_GrindRail_C_StartedGrindingMaterial) == 0x000020, "Wrong size on BGA_GrindRail_C_StartedGrindingMaterial");
static_assert(offsetof(BGA_GrindRail_C_StartedGrindingMaterial, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BGA_GrindRail_C_StartedGrindingMaterial::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_StartedGrindingMaterial, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BGA_GrindRail_C_StartedGrindingMaterial::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_StartedGrindingMaterial, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BGA_GrindRail_C_StartedGrindingMaterial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_StartedGrindingMaterial, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BGA_GrindRail_C_StartedGrindingMaterial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_StartedGrindingMaterial, CallFunc_Array_Get_Item) == 0x000010, "Member 'BGA_GrindRail_C_StartedGrindingMaterial::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_StartedGrindingMaterial, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BGA_GrindRail_C_StartedGrindingMaterial::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.Unified Material and UV
// 0x0130 (0x0130 - 0x0000)
struct BGA_GrindRail_C_Unified_Material_and_UV final
{
public:
	int32                                         FirstPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SecondPoint;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   Add_Spline_mesh;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EColorSelect                                  Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_1;           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0xC];                                       // 0x0054(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               CallFunc_MakeVector4_ReturnValue;                  // 0x0060(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1; // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_2; // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_3; // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_ReturnValue_1;                 // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector4_X_ImplicitCast;               // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector4_Y_ImplicitCast;               // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector4_Z_ImplicitCast;               // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector4_W_ImplicitCast;               // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_B_ImplicitCast;                // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_B_ImplicitCast_1;              // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetDefaultCustomPrimitiveDataFloat_Value_ImplicitCast; // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_A_ImplicitCast;                // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetDefaultCustomPrimitiveDataFloat_Value_ImplicitCast_1; // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_A_ImplicitCast_1;              // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetDefaultCustomPrimitiveDataFloat_Value_ImplicitCast_2; // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_Unified_Material_and_UV) == 0x000010, "Wrong alignment on BGA_GrindRail_C_Unified_Material_and_UV");
static_assert(sizeof(BGA_GrindRail_C_Unified_Material_and_UV) == 0x000130, "Wrong size on BGA_GrindRail_C_Unified_Material_and_UV");
static_assert(offsetof(BGA_GrindRail_C_Unified_Material_and_UV, FirstPoint) == 0x000000, "Member 'BGA_GrindRail_C_Unified_Material_and_UV::FirstPoint' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Unified_Material_and_UV, SecondPoint) == 0x000004, "Member 'BGA_GrindRail_C_Unified_Material_and_UV::SecondPoint' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Unified_Material_and_UV, Add_Spline_mesh) == 0x000008, "Member 'BGA_GrindRail_C_Unified_Material_and_UV::Add_Spline_mesh' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Unified_Material_and_UV, Temp_byte_Variable) == 0x000010, "Member 'BGA_GrindRail_C_Unified_Material_and_UV::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Unified_Material_and_UV, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000014, "Member 'BGA_GrindRail_C_Unified_Material_and_UV::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Unified_Material_and_UV, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000024, "Member 'BGA_GrindRail_C_Unified_Material_and_UV::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Unified_Material_and_UV, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000028, "Member 'BGA_GrindRail_C_Unified_Material_and_UV::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Unified_Material_and_UV, CallFunc_Conv_BoolToFloat_ReturnValue_1) == 0x00002C, "Member 'BGA_GrindRail_C_Unified_Material_and_UV::CallFunc_Conv_BoolToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Unified_Material_and_UV, K2Node_Select_Default) == 0x000030, "Member 'BGA_GrindRail_C_Unified_Material_and_UV::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Unified_Material_and_UV, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000040, "Member 'BGA_GrindRail_C_Unified_Material_and_UV::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Unified_Material_and_UV, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue) == 0x000050, "Member 'BGA_GrindRail_C_Unified_Material_and_UV::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Unified_Material_and_UV, CallFunc_MakeVector4_ReturnValue) == 0x000060, "Member 'BGA_GrindRail_C_Unified_Material_and_UV::CallFunc_MakeVector4_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Unified_Material_and_UV, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1) == 0x000080, "Member 'BGA_GrindRail_C_Unified_Material_and_UV::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Unified_Material_and_UV, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000088, "Member 'BGA_GrindRail_C_Unified_Material_and_UV::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Unified_Material_and_UV, CallFunc_GetSplineLength_ReturnValue) == 0x000090, "Member 'BGA_GrindRail_C_Unified_Material_and_UV::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Unified_Material_and_UV, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000098, "Member 'BGA_GrindRail_C_Unified_Material_and_UV::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Unified_Material_and_UV, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_2) == 0x0000A0, "Member 'BGA_GrindRail_C_Unified_Material_and_UV::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Unified_Material_and_UV, CallFunc_SafeDivide_ReturnValue) == 0x0000A8, "Member 'BGA_GrindRail_C_Unified_Material_and_UV::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Unified_Material_and_UV, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_3) == 0x0000B0, "Member 'BGA_GrindRail_C_Unified_Material_and_UV::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Unified_Material_and_UV, CallFunc_SafeDivide_ReturnValue_1) == 0x0000B8, "Member 'BGA_GrindRail_C_Unified_Material_and_UV::CallFunc_SafeDivide_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Unified_Material_and_UV, CallFunc_MakeVector4_X_ImplicitCast) == 0x0000C0, "Member 'BGA_GrindRail_C_Unified_Material_and_UV::CallFunc_MakeVector4_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Unified_Material_and_UV, CallFunc_MakeVector4_Y_ImplicitCast) == 0x0000C8, "Member 'BGA_GrindRail_C_Unified_Material_and_UV::CallFunc_MakeVector4_Y_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Unified_Material_and_UV, CallFunc_MakeVector4_Z_ImplicitCast) == 0x0000D0, "Member 'BGA_GrindRail_C_Unified_Material_and_UV::CallFunc_MakeVector4_Z_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Unified_Material_and_UV, CallFunc_MakeVector4_W_ImplicitCast) == 0x0000D8, "Member 'BGA_GrindRail_C_Unified_Material_and_UV::CallFunc_MakeVector4_W_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Unified_Material_and_UV, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x0000E0, "Member 'BGA_GrindRail_C_Unified_Material_and_UV::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Unified_Material_and_UV, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0000E8, "Member 'BGA_GrindRail_C_Unified_Material_and_UV::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Unified_Material_and_UV, CallFunc_SafeDivide_B_ImplicitCast) == 0x0000F0, "Member 'BGA_GrindRail_C_Unified_Material_and_UV::CallFunc_SafeDivide_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Unified_Material_and_UV, CallFunc_SafeDivide_B_ImplicitCast_1) == 0x0000F8, "Member 'BGA_GrindRail_C_Unified_Material_and_UV::CallFunc_SafeDivide_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Unified_Material_and_UV, CallFunc_SetDefaultCustomPrimitiveDataFloat_Value_ImplicitCast) == 0x000100, "Member 'BGA_GrindRail_C_Unified_Material_and_UV::CallFunc_SetDefaultCustomPrimitiveDataFloat_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Unified_Material_and_UV, CallFunc_SafeDivide_A_ImplicitCast) == 0x000108, "Member 'BGA_GrindRail_C_Unified_Material_and_UV::CallFunc_SafeDivide_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Unified_Material_and_UV, CallFunc_SetDefaultCustomPrimitiveDataFloat_Value_ImplicitCast_1) == 0x000110, "Member 'BGA_GrindRail_C_Unified_Material_and_UV::CallFunc_SetDefaultCustomPrimitiveDataFloat_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Unified_Material_and_UV, CallFunc_SafeDivide_A_ImplicitCast_1) == 0x000118, "Member 'BGA_GrindRail_C_Unified_Material_and_UV::CallFunc_SafeDivide_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_Unified_Material_and_UV, CallFunc_SetDefaultCustomPrimitiveDataFloat_Value_ImplicitCast_2) == 0x000120, "Member 'BGA_GrindRail_C_Unified_Material_and_UV::CallFunc_SetDefaultCustomPrimitiveDataFloat_Value_ImplicitCast_2' has a wrong offset!");

// Function BGA_GrindRail.BGA_GrindRail_C.BlueprintGetInteractionTime
// 0x0010 (0x0010 - 0x0000)
struct BGA_GrindRail_C_BlueprintGetInteractionTime final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         OutInteractionTime;                                // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    InteractionBeingAttempted;                         // 0x000C(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_GrindRail_C_BlueprintGetInteractionTime) == 0x000008, "Wrong alignment on BGA_GrindRail_C_BlueprintGetInteractionTime");
static_assert(sizeof(BGA_GrindRail_C_BlueprintGetInteractionTime) == 0x000010, "Wrong size on BGA_GrindRail_C_BlueprintGetInteractionTime");
static_assert(offsetof(BGA_GrindRail_C_BlueprintGetInteractionTime, InteractingPawn) == 0x000000, "Member 'BGA_GrindRail_C_BlueprintGetInteractionTime::InteractingPawn' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_BlueprintGetInteractionTime, OutInteractionTime) == 0x000008, "Member 'BGA_GrindRail_C_BlueprintGetInteractionTime::OutInteractionTime' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_BlueprintGetInteractionTime, InteractionBeingAttempted) == 0x00000C, "Member 'BGA_GrindRail_C_BlueprintGetInteractionTime::InteractionBeingAttempted' has a wrong offset!");
static_assert(offsetof(BGA_GrindRail_C_BlueprintGetInteractionTime, ReturnValue) == 0x00000D, "Member 'BGA_GrindRail_C_BlueprintGetInteractionTime::ReturnValue' has a wrong offset!");

}

