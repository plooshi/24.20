#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerseSimulationMetadata

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class VerseSimulationMetadata.VerseSimulationAttribConfig
// 0x0038 (0x0060 - 0x0028)
class UVerseSimulationAttribConfig final : public UObject
{
public:
	TArray<class FName>                           AllowedEditablePropertyNames;                      // 0x0028(0x0010)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	TArray<class FName>                           DisallowedEditablePropertyNames;                   // 0x0038(0x0010)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	TArray<struct FSoftClassPath>                 DisallowedObjectPropertyClasses;                   // 0x0048(0x0010)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	bool                                          bAllowTuples;                                      // 0x0058(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bAllowMultidimensionalArrays;                      // 0x0059(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bFilterProperties;                                 // 0x005A(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bFilterObjectProperties;                           // 0x005B(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerseSimulationAttribConfig">();
	}
	static class UVerseSimulationAttribConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerseSimulationAttribConfig>();
	}
};
static_assert(alignof(UVerseSimulationAttribConfig) == 0x000008, "Wrong alignment on UVerseSimulationAttribConfig");
static_assert(sizeof(UVerseSimulationAttribConfig) == 0x000060, "Wrong size on UVerseSimulationAttribConfig");
static_assert(offsetof(UVerseSimulationAttribConfig, AllowedEditablePropertyNames) == 0x000028, "Member 'UVerseSimulationAttribConfig::AllowedEditablePropertyNames' has a wrong offset!");
static_assert(offsetof(UVerseSimulationAttribConfig, DisallowedEditablePropertyNames) == 0x000038, "Member 'UVerseSimulationAttribConfig::DisallowedEditablePropertyNames' has a wrong offset!");
static_assert(offsetof(UVerseSimulationAttribConfig, DisallowedObjectPropertyClasses) == 0x000048, "Member 'UVerseSimulationAttribConfig::DisallowedObjectPropertyClasses' has a wrong offset!");
static_assert(offsetof(UVerseSimulationAttribConfig, bAllowTuples) == 0x000058, "Member 'UVerseSimulationAttribConfig::bAllowTuples' has a wrong offset!");
static_assert(offsetof(UVerseSimulationAttribConfig, bAllowMultidimensionalArrays) == 0x000059, "Member 'UVerseSimulationAttribConfig::bAllowMultidimensionalArrays' has a wrong offset!");
static_assert(offsetof(UVerseSimulationAttribConfig, bFilterProperties) == 0x00005A, "Member 'UVerseSimulationAttribConfig::bFilterProperties' has a wrong offset!");
static_assert(offsetof(UVerseSimulationAttribConfig, bFilterObjectProperties) == 0x00005B, "Member 'UVerseSimulationAttribConfig::bFilterObjectProperties' has a wrong offset!");

}

