#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GoalsPageQuestCard

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function GoalsPageQuestCard.GoalsPageQuestCard_C.ExecuteUbergraph_GoalsPageQuestCard
// 0x0230 (0x0230 - 0x0000)
struct GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBundleGoalCardDisplayData             K2Node_Event_GoalCardDisplayData;                  // 0x0010(0x0080)(ConstParm)
	EAthenaChallengeTimerState                    K2Node_Event_TimerState;                           // 0x0090(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0098(0x0040)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x00D8(0x0098)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0170(0x0098)(ConstParm)
	bool                                          CallFunc_GetIsSelectable_ReturnValue;              // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsSelectable_ReturnValue_1;            // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bCardIsSelectable;                    // 0x020A(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnabled;                             // 0x020B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bBattlePassRequired;                  // 0x0220(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x3];                                      // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x022A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x022B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x022D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard) == 0x000008, "Wrong alignment on GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard");
static_assert(sizeof(GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard) == 0x000230, "Wrong size on GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard");
static_assert(offsetof(GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard, EntryPoint) == 0x000000, "Member 'GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard::EntryPoint' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard, Temp_bool_Variable) == 0x000004, "Member 'GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard, Temp_bool_Variable_1) == 0x000005, "Member 'GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard, Temp_real_Variable) == 0x000008, "Member 'GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard, Temp_real_Variable_1) == 0x00000C, "Member 'GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard, K2Node_Event_GoalCardDisplayData) == 0x000010, "Member 'GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard::K2Node_Event_GoalCardDisplayData' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard, K2Node_Event_TimerState) == 0x000090, "Member 'GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard::K2Node_Event_TimerState' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard, Temp_byte_Variable) == 0x000091, "Member 'GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard, K2Node_Event_MyGeometry) == 0x000098, "Member 'GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard, K2Node_Event_MouseEvent_1) == 0x0000D8, "Member 'GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard, K2Node_Event_MouseEvent) == 0x000170, "Member 'GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard, CallFunc_GetIsSelectable_ReturnValue) == 0x000208, "Member 'GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard::CallFunc_GetIsSelectable_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard, CallFunc_GetIsSelectable_ReturnValue_1) == 0x000209, "Member 'GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard::CallFunc_GetIsSelectable_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard, K2Node_Event_bCardIsSelectable) == 0x00020A, "Member 'GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard::K2Node_Event_bCardIsSelectable' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard, K2Node_Event_bEnabled) == 0x00020B, "Member 'GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard::K2Node_Event_bEnabled' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000210, "Member 'GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard, CallFunc_PlayAnimationForward_ReturnValue) == 0x000218, "Member 'GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard, K2Node_Event_bBattlePassRequired) == 0x000220, "Member 'GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard::K2Node_Event_bBattlePassRequired' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard, K2Node_Select_Default) == 0x000224, "Member 'GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard, Temp_byte_Variable_1) == 0x000228, "Member 'GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard, Temp_bool_Variable_2) == 0x000229, "Member 'GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard, Temp_byte_Variable_2) == 0x00022A, "Member 'GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard, K2Node_Select_Default_1) == 0x00022B, "Member 'GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard, Temp_byte_Variable_3) == 0x00022C, "Member 'GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard, K2Node_Select_Default_2) == 0x00022D, "Member 'GoalsPageQuestCard_C_ExecuteUbergraph_GoalsPageQuestCard::K2Node_Select_Default_2' has a wrong offset!");

// Function GoalsPageQuestCard.GoalsPageQuestCard_C.OnMouseEnter
// 0x00D8 (0x00D8 - 0x0000)
struct GoalsPageQuestCard_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0040(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GoalsPageQuestCard_C_OnMouseEnter) == 0x000008, "Wrong alignment on GoalsPageQuestCard_C_OnMouseEnter");
static_assert(sizeof(GoalsPageQuestCard_C_OnMouseEnter) == 0x0000D8, "Wrong size on GoalsPageQuestCard_C_OnMouseEnter");
static_assert(offsetof(GoalsPageQuestCard_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'GoalsPageQuestCard_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_OnMouseEnter, MouseEvent) == 0x000040, "Member 'GoalsPageQuestCard_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function GoalsPageQuestCard.GoalsPageQuestCard_C.OnMouseLeave
// 0x0098 (0x0098 - 0x0000)
struct GoalsPageQuestCard_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GoalsPageQuestCard_C_OnMouseLeave) == 0x000008, "Wrong alignment on GoalsPageQuestCard_C_OnMouseLeave");
static_assert(sizeof(GoalsPageQuestCard_C_OnMouseLeave) == 0x000098, "Wrong size on GoalsPageQuestCard_C_OnMouseLeave");
static_assert(offsetof(GoalsPageQuestCard_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'GoalsPageQuestCard_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function GoalsPageQuestCard.GoalsPageQuestCard_C.OnTimerSet
// 0x0001 (0x0001 - 0x0000)
struct GoalsPageQuestCard_C_OnTimerSet final
{
public:
	EAthenaChallengeTimerState                    TimerState;                                        // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GoalsPageQuestCard_C_OnTimerSet) == 0x000001, "Wrong alignment on GoalsPageQuestCard_C_OnTimerSet");
static_assert(sizeof(GoalsPageQuestCard_C_OnTimerSet) == 0x000001, "Wrong size on GoalsPageQuestCard_C_OnTimerSet");
static_assert(offsetof(GoalsPageQuestCard_C_OnTimerSet, TimerState) == 0x000000, "Member 'GoalsPageQuestCard_C_OnTimerSet::TimerState' has a wrong offset!");

// Function GoalsPageQuestCard.GoalsPageQuestCard_C.PopulateBattlePassRequirement
// 0x0001 (0x0001 - 0x0000)
struct GoalsPageQuestCard_C_PopulateBattlePassRequirement final
{
public:
	bool                                          bBattlePassRequired;                               // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GoalsPageQuestCard_C_PopulateBattlePassRequirement) == 0x000001, "Wrong alignment on GoalsPageQuestCard_C_PopulateBattlePassRequirement");
static_assert(sizeof(GoalsPageQuestCard_C_PopulateBattlePassRequirement) == 0x000001, "Wrong size on GoalsPageQuestCard_C_PopulateBattlePassRequirement");
static_assert(offsetof(GoalsPageQuestCard_C_PopulateBattlePassRequirement, bBattlePassRequired) == 0x000000, "Member 'GoalsPageQuestCard_C_PopulateBattlePassRequirement::bBattlePassRequired' has a wrong offset!");

// Function GoalsPageQuestCard.GoalsPageQuestCard_C.PopulateHeader
// 0x0080 (0x0080 - 0x0000)
struct GoalsPageQuestCard_C_PopulateHeader final
{
public:
	struct FBundleGoalCardDisplayData             GoalCardDisplayData;                               // 0x0000(0x0080)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GoalsPageQuestCard_C_PopulateHeader) == 0x000008, "Wrong alignment on GoalsPageQuestCard_C_PopulateHeader");
static_assert(sizeof(GoalsPageQuestCard_C_PopulateHeader) == 0x000080, "Wrong size on GoalsPageQuestCard_C_PopulateHeader");
static_assert(offsetof(GoalsPageQuestCard_C_PopulateHeader, GoalCardDisplayData) == 0x000000, "Member 'GoalsPageQuestCard_C_PopulateHeader::GoalCardDisplayData' has a wrong offset!");

// Function GoalsPageQuestCard.GoalsPageQuestCard_C.PopulateHeaderText
// 0x0040 (0x0040 - 0x0000)
struct GoalsPageQuestCard_C_PopulateHeaderText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FLinearColor                           Color;                                             // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0028(0x0014)()
};
static_assert(alignof(GoalsPageQuestCard_C_PopulateHeaderText) == 0x000008, "Wrong alignment on GoalsPageQuestCard_C_PopulateHeaderText");
static_assert(sizeof(GoalsPageQuestCard_C_PopulateHeaderText) == 0x000040, "Wrong size on GoalsPageQuestCard_C_PopulateHeaderText");
static_assert(offsetof(GoalsPageQuestCard_C_PopulateHeaderText, Text) == 0x000000, "Member 'GoalsPageQuestCard_C_PopulateHeaderText::Text' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_PopulateHeaderText, Color) == 0x000018, "Member 'GoalsPageQuestCard_C_PopulateHeaderText::Color' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_PopulateHeaderText, K2Node_MakeStruct_SlateColor) == 0x000028, "Member 'GoalsPageQuestCard_C_PopulateHeaderText::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function GoalsPageQuestCard.GoalsPageQuestCard_C.PopulateIcon
// 0x00C8 (0x00C8 - 0x0000)
struct GoalsPageQuestCard_C_PopulateIcon final
{
public:
	TSoftObjectPtr<class UObject>                 Icon;                                              // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         MilestoneTier;                                     // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0030(0x0018)()
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFontOutlineSettings                   K2Node_MakeStruct_FontOutlineSettings;             // 0x0050(0x0020)(NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0070(0x0058)(HasGetValueTypeHash)
};
static_assert(alignof(GoalsPageQuestCard_C_PopulateIcon) == 0x000008, "Wrong alignment on GoalsPageQuestCard_C_PopulateIcon");
static_assert(sizeof(GoalsPageQuestCard_C_PopulateIcon) == 0x0000C8, "Wrong size on GoalsPageQuestCard_C_PopulateIcon");
static_assert(offsetof(GoalsPageQuestCard_C_PopulateIcon, Icon) == 0x000000, "Member 'GoalsPageQuestCard_C_PopulateIcon::Icon' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_PopulateIcon, MilestoneTier) == 0x000028, "Member 'GoalsPageQuestCard_C_PopulateIcon::MilestoneTier' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_PopulateIcon, CallFunc_Greater_IntInt_ReturnValue) == 0x00002C, "Member 'GoalsPageQuestCard_C_PopulateIcon::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_PopulateIcon, CallFunc_Conv_IntToText_ReturnValue) == 0x000030, "Member 'GoalsPageQuestCard_C_PopulateIcon::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_PopulateIcon, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000048, "Member 'GoalsPageQuestCard_C_PopulateIcon::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_PopulateIcon, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000049, "Member 'GoalsPageQuestCard_C_PopulateIcon::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_PopulateIcon, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x00004A, "Member 'GoalsPageQuestCard_C_PopulateIcon::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_PopulateIcon, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x00004B, "Member 'GoalsPageQuestCard_C_PopulateIcon::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_PopulateIcon, K2Node_MakeStruct_FontOutlineSettings) == 0x000050, "Member 'GoalsPageQuestCard_C_PopulateIcon::K2Node_MakeStruct_FontOutlineSettings' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_PopulateIcon, K2Node_MakeStruct_SlateFontInfo) == 0x000070, "Member 'GoalsPageQuestCard_C_PopulateIcon::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");

// Function GoalsPageQuestCard.GoalsPageQuestCard_C.PopulateIsSelectable
// 0x0001 (0x0001 - 0x0000)
struct GoalsPageQuestCard_C_PopulateIsSelectable final
{
public:
	bool                                          bCardIsSelectable;                                 // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GoalsPageQuestCard_C_PopulateIsSelectable) == 0x000001, "Wrong alignment on GoalsPageQuestCard_C_PopulateIsSelectable");
static_assert(sizeof(GoalsPageQuestCard_C_PopulateIsSelectable) == 0x000001, "Wrong size on GoalsPageQuestCard_C_PopulateIsSelectable");
static_assert(offsetof(GoalsPageQuestCard_C_PopulateIsSelectable, bCardIsSelectable) == 0x000000, "Member 'GoalsPageQuestCard_C_PopulateIsSelectable::bCardIsSelectable' has a wrong offset!");

// Function GoalsPageQuestCard.GoalsPageQuestCard_C.PopulateSubHeaderText
// 0x00E8 (0x00E8 - 0x0000)
struct GoalsPageQuestCard_C_PopulateSubHeaderText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         MilestoneTier;                                     // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x001C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x002C(0x0014)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0050(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0068(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C8(0x0018)()
	ESlateVisibility                              Temp_byte_Variable;                                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GoalsPageQuestCard_C_PopulateSubHeaderText) == 0x000008, "Wrong alignment on GoalsPageQuestCard_C_PopulateSubHeaderText");
static_assert(sizeof(GoalsPageQuestCard_C_PopulateSubHeaderText) == 0x0000E8, "Wrong size on GoalsPageQuestCard_C_PopulateSubHeaderText");
static_assert(offsetof(GoalsPageQuestCard_C_PopulateSubHeaderText, Text) == 0x000000, "Member 'GoalsPageQuestCard_C_PopulateSubHeaderText::Text' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_PopulateSubHeaderText, MilestoneTier) == 0x000018, "Member 'GoalsPageQuestCard_C_PopulateSubHeaderText::MilestoneTier' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_PopulateSubHeaderText, Color) == 0x00001C, "Member 'GoalsPageQuestCard_C_PopulateSubHeaderText::Color' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_PopulateSubHeaderText, K2Node_MakeStruct_SlateColor) == 0x00002C, "Member 'GoalsPageQuestCard_C_PopulateSubHeaderText::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_PopulateSubHeaderText, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000040, "Member 'GoalsPageQuestCard_C_PopulateSubHeaderText::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_PopulateSubHeaderText, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000041, "Member 'GoalsPageQuestCard_C_PopulateSubHeaderText::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_PopulateSubHeaderText, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'GoalsPageQuestCard_C_PopulateSubHeaderText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_PopulateSubHeaderText, CallFunc_TextIsEmpty_ReturnValue) == 0x000048, "Member 'GoalsPageQuestCard_C_PopulateSubHeaderText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_PopulateSubHeaderText, CallFunc_Conv_IntToText_ReturnValue) == 0x000050, "Member 'GoalsPageQuestCard_C_PopulateSubHeaderText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_PopulateSubHeaderText, K2Node_MakeStruct_FormatArgumentData) == 0x000068, "Member 'GoalsPageQuestCard_C_PopulateSubHeaderText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_PopulateSubHeaderText, K2Node_MakeArray_Array) == 0x0000B8, "Member 'GoalsPageQuestCard_C_PopulateSubHeaderText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_PopulateSubHeaderText, CallFunc_Format_ReturnValue) == 0x0000C8, "Member 'GoalsPageQuestCard_C_PopulateSubHeaderText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_PopulateSubHeaderText, Temp_byte_Variable) == 0x0000E0, "Member 'GoalsPageQuestCard_C_PopulateSubHeaderText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_PopulateSubHeaderText, Temp_byte_Variable_1) == 0x0000E1, "Member 'GoalsPageQuestCard_C_PopulateSubHeaderText::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_PopulateSubHeaderText, Temp_bool_Variable) == 0x0000E2, "Member 'GoalsPageQuestCard_C_PopulateSubHeaderText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_PopulateSubHeaderText, K2Node_Select_Default) == 0x0000E3, "Member 'GoalsPageQuestCard_C_PopulateSubHeaderText::K2Node_Select_Default' has a wrong offset!");

// Function GoalsPageQuestCard.GoalsPageQuestCard_C.Reset
// 0x0060 (0x0060 - 0x0000)
struct GoalsPageQuestCard_C_Reset final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue;                // 0x0010(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGoalsPageQuestCardLine_C*              K2Node_DynamicCast_AsGoals_Page_Quest_Card_Line;   // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default_1;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GoalsPageQuestCard_C_Reset) == 0x000008, "Wrong alignment on GoalsPageQuestCard_C_Reset");
static_assert(sizeof(GoalsPageQuestCard_C_Reset) == 0x000060, "Wrong size on GoalsPageQuestCard_C_Reset");
static_assert(offsetof(GoalsPageQuestCard_C_Reset, Temp_bool_Variable) == 0x000000, "Member 'GoalsPageQuestCard_C_Reset::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_Reset, Temp_int_Array_Index_Variable) == 0x000004, "Member 'GoalsPageQuestCard_C_Reset::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_Reset, Temp_bool_Variable_1) == 0x000008, "Member 'GoalsPageQuestCard_C_Reset::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_Reset, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'GoalsPageQuestCard_C_Reset::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_Reset, CallFunc_GetAllEntries_ReturnValue) == 0x000010, "Member 'GoalsPageQuestCard_C_Reset::CallFunc_GetAllEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_Reset, CallFunc_Array_Get_Item) == 0x000020, "Member 'GoalsPageQuestCard_C_Reset::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_Reset, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'GoalsPageQuestCard_C_Reset::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_Reset, K2Node_DynamicCast_AsGoals_Page_Quest_Card_Line) == 0x000030, "Member 'GoalsPageQuestCard_C_Reset::K2Node_DynamicCast_AsGoals_Page_Quest_Card_Line' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_Reset, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'GoalsPageQuestCard_C_Reset::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_Reset, CallFunc_Less_IntInt_ReturnValue) == 0x000039, "Member 'GoalsPageQuestCard_C_Reset::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_Reset, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'GoalsPageQuestCard_C_Reset::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_Reset, CallFunc_GetEndTime_ReturnValue) == 0x000040, "Member 'GoalsPageQuestCard_C_Reset::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_Reset, CallFunc_GetEndTime_ReturnValue_1) == 0x000044, "Member 'GoalsPageQuestCard_C_Reset::CallFunc_GetEndTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_Reset, K2Node_Select_Default) == 0x000048, "Member 'GoalsPageQuestCard_C_Reset::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_Reset, K2Node_Select_Default_1) == 0x000050, "Member 'GoalsPageQuestCard_C_Reset::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_Reset, CallFunc_PlayAnimation_ReturnValue) == 0x000058, "Member 'GoalsPageQuestCard_C_Reset::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function GoalsPageQuestCard.GoalsPageQuestCard_C.SetIsSelected
// 0x0098 (0x0098 - 0x0000)
struct GoalsPageQuestCard_C_SetIsSelected final
{
public:
	bool                                          IsSelected;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue;                // 0x0020(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue_1;              // 0x0030(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGoalsPageQuestCardLine_C*              K2Node_DynamicCast_AsGoals_Page_Quest_Card_Line;   // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGoalsPageQuestCardLine_C*              K2Node_DynamicCast_AsGoals_Page_Quest_Card_Line_1; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GoalsPageQuestCard_C_SetIsSelected) == 0x000008, "Wrong alignment on GoalsPageQuestCard_C_SetIsSelected");
static_assert(sizeof(GoalsPageQuestCard_C_SetIsSelected) == 0x000098, "Wrong size on GoalsPageQuestCard_C_SetIsSelected");
static_assert(offsetof(GoalsPageQuestCard_C_SetIsSelected, IsSelected) == 0x000000, "Member 'GoalsPageQuestCard_C_SetIsSelected::IsSelected' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_SetIsSelected, Temp_int_Array_Index_Variable) == 0x000004, "Member 'GoalsPageQuestCard_C_SetIsSelected::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_SetIsSelected, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'GoalsPageQuestCard_C_SetIsSelected::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_SetIsSelected, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'GoalsPageQuestCard_C_SetIsSelected::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_SetIsSelected, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'GoalsPageQuestCard_C_SetIsSelected::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_SetIsSelected, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'GoalsPageQuestCard_C_SetIsSelected::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_SetIsSelected, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'GoalsPageQuestCard_C_SetIsSelected::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_SetIsSelected, CallFunc_GetAllEntries_ReturnValue) == 0x000020, "Member 'GoalsPageQuestCard_C_SetIsSelected::CallFunc_GetAllEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_SetIsSelected, CallFunc_GetAllEntries_ReturnValue_1) == 0x000030, "Member 'GoalsPageQuestCard_C_SetIsSelected::CallFunc_GetAllEntries_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_SetIsSelected, CallFunc_Array_Get_Item) == 0x000040, "Member 'GoalsPageQuestCard_C_SetIsSelected::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_SetIsSelected, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'GoalsPageQuestCard_C_SetIsSelected::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_SetIsSelected, K2Node_DynamicCast_AsGoals_Page_Quest_Card_Line) == 0x000050, "Member 'GoalsPageQuestCard_C_SetIsSelected::K2Node_DynamicCast_AsGoals_Page_Quest_Card_Line' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_SetIsSelected, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'GoalsPageQuestCard_C_SetIsSelected::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_SetIsSelected, K2Node_DynamicCast_AsGoals_Page_Quest_Card_Line_1) == 0x000060, "Member 'GoalsPageQuestCard_C_SetIsSelected::K2Node_DynamicCast_AsGoals_Page_Quest_Card_Line_1' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_SetIsSelected, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'GoalsPageQuestCard_C_SetIsSelected::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_SetIsSelected, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'GoalsPageQuestCard_C_SetIsSelected::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_SetIsSelected, CallFunc_Array_Length_ReturnValue_1) == 0x000070, "Member 'GoalsPageQuestCard_C_SetIsSelected::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_SetIsSelected, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'GoalsPageQuestCard_C_SetIsSelected::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_SetIsSelected, CallFunc_Less_IntInt_ReturnValue_1) == 0x000075, "Member 'GoalsPageQuestCard_C_SetIsSelected::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_SetIsSelected, CallFunc_GetEndTime_ReturnValue) == 0x000078, "Member 'GoalsPageQuestCard_C_SetIsSelected::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_SetIsSelected, CallFunc_PlayAnimation_ReturnValue) == 0x000080, "Member 'GoalsPageQuestCard_C_SetIsSelected::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_SetIsSelected, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000088, "Member 'GoalsPageQuestCard_C_SetIsSelected::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_SetIsSelected, CallFunc_PlayAnimationForward_ReturnValue) == 0x000090, "Member 'GoalsPageQuestCard_C_SetIsSelected::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function GoalsPageQuestCard.GoalsPageQuestCard_C.SetTimerStyling
// 0x0088 (0x0088 - 0x0000)
struct GoalsPageQuestCard_C_SetTimerStyling final
{
public:
	EAthenaChallengeTimerState                    TimerState;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAthenaChallengeTimerState                    Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicFontMaterial_ReturnValue;       // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GoalsPageQuestCard_C_SetTimerStyling) == 0x000008, "Wrong alignment on GoalsPageQuestCard_C_SetTimerStyling");
static_assert(sizeof(GoalsPageQuestCard_C_SetTimerStyling) == 0x000088, "Wrong size on GoalsPageQuestCard_C_SetTimerStyling");
static_assert(offsetof(GoalsPageQuestCard_C_SetTimerStyling, TimerState) == 0x000000, "Member 'GoalsPageQuestCard_C_SetTimerStyling::TimerState' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_SetTimerStyling, Temp_byte_Variable) == 0x000001, "Member 'GoalsPageQuestCard_C_SetTimerStyling::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_SetTimerStyling, Temp_struct_Variable) == 0x000004, "Member 'GoalsPageQuestCard_C_SetTimerStyling::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_SetTimerStyling, Temp_struct_Variable_1) == 0x000014, "Member 'GoalsPageQuestCard_C_SetTimerStyling::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_SetTimerStyling, Temp_struct_Variable_2) == 0x000024, "Member 'GoalsPageQuestCard_C_SetTimerStyling::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_SetTimerStyling, Temp_struct_Variable_3) == 0x000034, "Member 'GoalsPageQuestCard_C_SetTimerStyling::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_SetTimerStyling, Temp_struct_Variable_4) == 0x000044, "Member 'GoalsPageQuestCard_C_SetTimerStyling::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_SetTimerStyling, Temp_struct_Variable_5) == 0x000054, "Member 'GoalsPageQuestCard_C_SetTimerStyling::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_SetTimerStyling, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000068, "Member 'GoalsPageQuestCard_C_SetTimerStyling::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_SetTimerStyling, K2Node_Select_Default) == 0x000070, "Member 'GoalsPageQuestCard_C_SetTimerStyling::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GoalsPageQuestCard_C_SetTimerStyling, CallFunc_GetDynamicFontMaterial_ReturnValue) == 0x000080, "Member 'GoalsPageQuestCard_C_SetTimerStyling::CallFunc_GetDynamicFontMaterial_ReturnValue' has a wrong offset!");

// Function GoalsPageQuestCard.GoalsPageQuestCard_C.ShowNewBang
// 0x0001 (0x0001 - 0x0000)
struct GoalsPageQuestCard_C_ShowNewBang final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GoalsPageQuestCard_C_ShowNewBang) == 0x000001, "Wrong alignment on GoalsPageQuestCard_C_ShowNewBang");
static_assert(sizeof(GoalsPageQuestCard_C_ShowNewBang) == 0x000001, "Wrong size on GoalsPageQuestCard_C_ShowNewBang");
static_assert(offsetof(GoalsPageQuestCard_C_ShowNewBang, bEnabled) == 0x000000, "Member 'GoalsPageQuestCard_C_ShowNewBang::bEnabled' has a wrong offset!");

}

