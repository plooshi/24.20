#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerPawn_Tandem

#include "Basic.hpp"

#include "BP_PlayerPawn_Tandem_classes.hpp"
#include "BP_PlayerPawn_Tandem_parameters.hpp"


namespace SDK
{

// Function BP_PlayerPawn_Tandem.BP_PlayerPawn_Tandem_C.EnableHiredTandemHealthBar
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerPawn_Tandem_C::EnableHiredTandemHealthBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPawn_Tandem_C", "EnableHiredTandemHealthBar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPawn_Tandem.BP_PlayerPawn_Tandem_C.ExecuteUbergraph_BP_PlayerPawn_Tandem
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerPawn_Tandem_C::ExecuteUbergraph_BP_PlayerPawn_Tandem(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPawn_Tandem_C", "ExecuteUbergraph_BP_PlayerPawn_Tandem");

	Params::BP_PlayerPawn_Tandem_C_ExecuteUbergraph_BP_PlayerPawn_Tandem Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerPawn_Tandem.BP_PlayerPawn_Tandem_C.HandlePawnConverted
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPawn*                        InstigatorPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AFortPawn*                        ConvertedPawn                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerPawn_Tandem_C::HandlePawnConverted(class AFortPawn* InstigatorPawn, class AFortPawn* ConvertedPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPawn_Tandem_C", "HandlePawnConverted");

	Params::BP_PlayerPawn_Tandem_C_HandlePawnConverted Parms{};

	Parms.InstigatorPawn = InstigatorPawn;
	Parms.ConvertedPawn = ConvertedPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerPawn_Tandem.BP_PlayerPawn_Tandem_C.HandlePawnUnconverted
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPawn*                        UnconvertedPawn                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerPawn_Tandem_C::HandlePawnUnconverted(class AFortPawn* UnconvertedPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPawn_Tandem_C", "HandlePawnUnconverted");

	Params::BP_PlayerPawn_Tandem_C_HandlePawnUnconverted Parms{};

	Parms.UnconvertedPawn = UnconvertedPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerPawn_Tandem.BP_PlayerPawn_Tandem_C.NPCSetupHealthBarOnDeath
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerPawn_Tandem_C::NPCSetupHealthBarOnDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPawn_Tandem_C", "NPCSetupHealthBarOnDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPawn_Tandem.BP_PlayerPawn_Tandem_C.NPCTandemDisableHealthBar
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerPawn_Tandem_C::NPCTandemDisableHealthBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPawn_Tandem_C", "NPCTandemDisableHealthBar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPawn_Tandem.BP_PlayerPawn_Tandem_C.NPCTandemEnableHealthBars
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerPawn_Tandem_C::NPCTandemEnableHealthBars()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPawn_Tandem_C", "NPCTandemEnableHealthBars");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPawn_Tandem.BP_PlayerPawn_Tandem_C.OnDeathPlayEffects
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          Momentum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AFortPawn*                        InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectContextHandle     EffectContext                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_PlayerPawn_Tandem_C::OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPawn_Tandem_C", "OnDeathPlayEffects");

	Params::BP_PlayerPawn_Tandem_C_OnDeathPlayEffects Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = std::move(DamageTags);
	Parms.Momentum = std::move(Momentum);
	Parms.HitInfo = std::move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = std::move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerPawn_Tandem.BP_PlayerPawn_Tandem_C.OnRep_HealthInfo
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerPawn_Tandem_C::OnRep_HealthInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPawn_Tandem_C", "OnRep_HealthInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPawn_Tandem.BP_PlayerPawn_Tandem_C.PawnHealthChanged
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerPawn_Tandem_C::PawnHealthChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPawn_Tandem_C", "PawnHealthChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPawn_Tandem.BP_PlayerPawn_Tandem_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerPawn_Tandem_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPawn_Tandem_C", "ReceiveEndPlay");

	Params::BP_PlayerPawn_Tandem_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerPawn_Tandem.BP_PlayerPawn_Tandem_C.StartHealthBar
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerPawn_Tandem_C::StartHealthBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPawn_Tandem_C", "StartHealthBar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPawn_Tandem.BP_PlayerPawn_Tandem_C.StartUpdatingHealthWidget
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerPawn_Tandem_C::StartUpdatingHealthWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPawn_Tandem_C", "StartUpdatingHealthWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPawn_Tandem.BP_PlayerPawn_Tandem_C.StopUpdatingHealthWidget
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerPawn_Tandem_C::StopUpdatingHealthWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPawn_Tandem_C", "StopUpdatingHealthWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPawn_Tandem.BP_PlayerPawn_Tandem_C.UpdateConvertIndicator
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlayerPawn_Tandem_C::UpdateConvertIndicator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPawn_Tandem_C", "UpdateConvertIndicator");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPawn_Tandem.BP_PlayerPawn_Tandem_C.UpdatePawnHealthHUD
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_PlayerPawn_Tandem_C::UpdatePawnHealthHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPawn_Tandem_C", "UpdatePawnHealthHUD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPawn_Tandem.BP_PlayerPawn_Tandem_C.WidgetVisibilityChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerPawn_Tandem_C::WidgetVisibilityChanged(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPawn_Tandem_C", "WidgetVisibilityChanged");

	Params::BP_PlayerPawn_Tandem_C_WidgetVisibilityChanged Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}

}

