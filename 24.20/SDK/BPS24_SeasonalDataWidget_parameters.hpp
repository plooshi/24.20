#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPS24_SeasonalDataWidget

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPS24_SeasonalDataWidget.BPS24_SeasonalDataWidget_C.ExecuteUbergraph_BPS24_SeasonalDataWidget
// 0x0020 (0x0020 - 0x0000)
struct BPS24_SeasonalDataWidget_C_ExecuteUbergraph_BPS24_SeasonalDataWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS24_SeasonalDataWidget_C_ExecuteUbergraph_BPS24_SeasonalDataWidget) == 0x000008, "Wrong alignment on BPS24_SeasonalDataWidget_C_ExecuteUbergraph_BPS24_SeasonalDataWidget");
static_assert(sizeof(BPS24_SeasonalDataWidget_C_ExecuteUbergraph_BPS24_SeasonalDataWidget) == 0x000020, "Wrong size on BPS24_SeasonalDataWidget_C_ExecuteUbergraph_BPS24_SeasonalDataWidget");
static_assert(offsetof(BPS24_SeasonalDataWidget_C_ExecuteUbergraph_BPS24_SeasonalDataWidget, EntryPoint) == 0x000000, "Member 'BPS24_SeasonalDataWidget_C_ExecuteUbergraph_BPS24_SeasonalDataWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPS24_SeasonalDataWidget_C_ExecuteUbergraph_BPS24_SeasonalDataWidget, K2Node_Event_IsDesignTime) == 0x000004, "Member 'BPS24_SeasonalDataWidget_C_ExecuteUbergraph_BPS24_SeasonalDataWidget::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BPS24_SeasonalDataWidget_C_ExecuteUbergraph_BPS24_SeasonalDataWidget, K2Node_MakeStruct_LinearColor) == 0x000008, "Member 'BPS24_SeasonalDataWidget_C_ExecuteUbergraph_BPS24_SeasonalDataWidget::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BPS24_SeasonalDataWidget_C_ExecuteUbergraph_BPS24_SeasonalDataWidget, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000018, "Member 'BPS24_SeasonalDataWidget_C_ExecuteUbergraph_BPS24_SeasonalDataWidget::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function BPS24_SeasonalDataWidget.BPS24_SeasonalDataWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BPS24_SeasonalDataWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS24_SeasonalDataWidget_C_PreConstruct) == 0x000001, "Wrong alignment on BPS24_SeasonalDataWidget_C_PreConstruct");
static_assert(sizeof(BPS24_SeasonalDataWidget_C_PreConstruct) == 0x000001, "Wrong size on BPS24_SeasonalDataWidget_C_PreConstruct");
static_assert(offsetof(BPS24_SeasonalDataWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BPS24_SeasonalDataWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BPS24_SeasonalDataWidget.BPS24_SeasonalDataWidget_C.UpdateText
// 0x0188 (0x0188 - 0x0000)
struct BPS24_SeasonalDataWidget_C_UpdateText final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A0(0x0050)(HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F3[0x5];                                       // 0x00F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_2;            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0110(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0160(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0170(0x0018)()
};
static_assert(alignof(BPS24_SeasonalDataWidget_C_UpdateText) == 0x000008, "Wrong alignment on BPS24_SeasonalDataWidget_C_UpdateText");
static_assert(sizeof(BPS24_SeasonalDataWidget_C_UpdateText) == 0x000188, "Wrong size on BPS24_SeasonalDataWidget_C_UpdateText");
static_assert(offsetof(BPS24_SeasonalDataWidget_C_UpdateText, Temp_byte_Variable) == 0x000000, "Member 'BPS24_SeasonalDataWidget_C_UpdateText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPS24_SeasonalDataWidget_C_UpdateText, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000008, "Member 'BPS24_SeasonalDataWidget_C_UpdateText::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_SeasonalDataWidget_C_UpdateText, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'BPS24_SeasonalDataWidget_C_UpdateText::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_SeasonalDataWidget_C_UpdateText, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'BPS24_SeasonalDataWidget_C_UpdateText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BPS24_SeasonalDataWidget_C_UpdateText, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BPS24_SeasonalDataWidget_C_UpdateText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_SeasonalDataWidget_C_UpdateText, K2Node_MakeArray_Array) == 0x000070, "Member 'BPS24_SeasonalDataWidget_C_UpdateText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPS24_SeasonalDataWidget_C_UpdateText, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000080, "Member 'BPS24_SeasonalDataWidget_C_UpdateText::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS24_SeasonalDataWidget_C_UpdateText, CallFunc_Format_ReturnValue) == 0x000088, "Member 'BPS24_SeasonalDataWidget_C_UpdateText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_SeasonalDataWidget_C_UpdateText, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A0, "Member 'BPS24_SeasonalDataWidget_C_UpdateText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BPS24_SeasonalDataWidget_C_UpdateText, Temp_byte_Variable_1) == 0x0000F0, "Member 'BPS24_SeasonalDataWidget_C_UpdateText::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS24_SeasonalDataWidget_C_UpdateText, Temp_bool_Variable) == 0x0000F1, "Member 'BPS24_SeasonalDataWidget_C_UpdateText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPS24_SeasonalDataWidget_C_UpdateText, K2Node_Select_Default) == 0x0000F2, "Member 'BPS24_SeasonalDataWidget_C_UpdateText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPS24_SeasonalDataWidget_C_UpdateText, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0000F8, "Member 'BPS24_SeasonalDataWidget_C_UpdateText::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_SeasonalDataWidget_C_UpdateText, CallFunc_Subtract_IntInt_ReturnValue) == 0x000100, "Member 'BPS24_SeasonalDataWidget_C_UpdateText::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS24_SeasonalDataWidget_C_UpdateText, CallFunc_Conv_IntToInt64_ReturnValue_2) == 0x000108, "Member 'BPS24_SeasonalDataWidget_C_UpdateText::CallFunc_Conv_IntToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS24_SeasonalDataWidget_C_UpdateText, K2Node_MakeStruct_FormatArgumentData_2) == 0x000110, "Member 'BPS24_SeasonalDataWidget_C_UpdateText::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BPS24_SeasonalDataWidget_C_UpdateText, K2Node_MakeArray_Array_1) == 0x000160, "Member 'BPS24_SeasonalDataWidget_C_UpdateText::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BPS24_SeasonalDataWidget_C_UpdateText, CallFunc_Format_ReturnValue_1) == 0x000170, "Member 'BPS24_SeasonalDataWidget_C_UpdateText::CallFunc_Format_ReturnValue_1' has a wrong offset!");

}

