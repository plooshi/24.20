#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CrewPurchaseScreen

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CrewUI_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function CrewPurchaseScreen.CrewPurchaseScreen_C.BeginProgress
// 0x0018 (0x0018 - 0x0000)
struct CrewPurchaseScreen_C_BeginProgress final
{
public:
	class FText                                   ProgressLabel;                                     // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(CrewPurchaseScreen_C_BeginProgress) == 0x000008, "Wrong alignment on CrewPurchaseScreen_C_BeginProgress");
static_assert(sizeof(CrewPurchaseScreen_C_BeginProgress) == 0x000018, "Wrong size on CrewPurchaseScreen_C_BeginProgress");
static_assert(offsetof(CrewPurchaseScreen_C_BeginProgress, ProgressLabel) == 0x000000, "Member 'CrewPurchaseScreen_C_BeginProgress::ProgressLabel' has a wrong offset!");

// Function CrewPurchaseScreen.CrewPurchaseScreen_C.BlockScreenContent
// 0x0020 (0x0020 - 0x0000)
struct CrewPurchaseScreen_C_BlockScreenContent final
{
public:
	bool                                          bBlockScreen;                                      // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ContentBlockedText;                                // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(CrewPurchaseScreen_C_BlockScreenContent) == 0x000008, "Wrong alignment on CrewPurchaseScreen_C_BlockScreenContent");
static_assert(sizeof(CrewPurchaseScreen_C_BlockScreenContent) == 0x000020, "Wrong size on CrewPurchaseScreen_C_BlockScreenContent");
static_assert(offsetof(CrewPurchaseScreen_C_BlockScreenContent, bBlockScreen) == 0x000000, "Member 'CrewPurchaseScreen_C_BlockScreenContent::bBlockScreen' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_BlockScreenContent, ContentBlockedText) == 0x000008, "Member 'CrewPurchaseScreen_C_BlockScreenContent::ContentBlockedText' has a wrong offset!");

// Function CrewPurchaseScreen.CrewPurchaseScreen_C.ContentBlocked
// 0x0028 (0x0028 - 0x0000)
struct CrewPurchaseScreen_C_ContentBlocked final
{
public:
	bool                                          isContentBlocked;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ContentBlockedText;                                // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CrewPurchaseScreen_C_ContentBlocked) == 0x000008, "Wrong alignment on CrewPurchaseScreen_C_ContentBlocked");
static_assert(sizeof(CrewPurchaseScreen_C_ContentBlocked) == 0x000028, "Wrong size on CrewPurchaseScreen_C_ContentBlocked");
static_assert(offsetof(CrewPurchaseScreen_C_ContentBlocked, isContentBlocked) == 0x000000, "Member 'CrewPurchaseScreen_C_ContentBlocked::isContentBlocked' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ContentBlocked, ContentBlockedText) == 0x000008, "Member 'CrewPurchaseScreen_C_ContentBlocked::ContentBlockedText' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ContentBlocked, Temp_bool_Variable) == 0x000020, "Member 'CrewPurchaseScreen_C_ContentBlocked::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ContentBlocked, Temp_byte_Variable) == 0x000021, "Member 'CrewPurchaseScreen_C_ContentBlocked::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ContentBlocked, Temp_byte_Variable_1) == 0x000022, "Member 'CrewPurchaseScreen_C_ContentBlocked::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ContentBlocked, Temp_bool_Variable_1) == 0x000023, "Member 'CrewPurchaseScreen_C_ContentBlocked::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ContentBlocked, K2Node_Select_Default) == 0x000024, "Member 'CrewPurchaseScreen_C_ContentBlocked::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ContentBlocked, Temp_byte_Variable_2) == 0x000025, "Member 'CrewPurchaseScreen_C_ContentBlocked::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ContentBlocked, Temp_byte_Variable_3) == 0x000026, "Member 'CrewPurchaseScreen_C_ContentBlocked::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ContentBlocked, K2Node_Select_Default_1) == 0x000027, "Member 'CrewPurchaseScreen_C_ContentBlocked::K2Node_Select_Default_1' has a wrong offset!");

// Function CrewPurchaseScreen.CrewPurchaseScreen_C.DownFromRecurringRewards
// 0x0198 (0x0198 - 0x0000)
struct CrewPurchaseScreen_C_DownFromRecurringRewards final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         NumTilesPerRow;                                    // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectedTileColumn;                                // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectedTileRow;                                   // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                LocalReward;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectedTileIndex;                                 // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                Temp_object_Variable;                              // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_MathExpression_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_MathExpression_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue;                // 0x0050(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumEntries_ReturnValue;                // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue_1;              // 0x0098(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	double                                        CallFunc_BreakVector2D_X;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Array_Get_Item_1;                         // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue_1;             // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue;              // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_Select_Default;                             // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_Select_Default_1;                           // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue_2;              // 0x0138(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue_3;              // 0x0148(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Array_Get_Item_2;                         // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_DynamicCast_AsCommon_Button_Base;           // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Min_ReturnValue_1;                        // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSelected_ReturnValue;                  // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item_3;                         // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CrewPurchaseScreen_C_DownFromRecurringRewards) == 0x000008, "Wrong alignment on CrewPurchaseScreen_C_DownFromRecurringRewards");
static_assert(sizeof(CrewPurchaseScreen_C_DownFromRecurringRewards) == 0x000198, "Wrong size on CrewPurchaseScreen_C_DownFromRecurringRewards");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, Navigation_0) == 0x000000, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::Navigation_0' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, ReturnValue) == 0x000008, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, NumTilesPerRow) == 0x000010, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::NumTilesPerRow' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, SelectedTileColumn) == 0x000014, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::SelectedTileColumn' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, SelectedTileRow) == 0x000018, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::SelectedTileRow' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, LocalReward) == 0x000020, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::LocalReward' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, SelectedTileIndex) == 0x000028, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::SelectedTileIndex' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002C, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, Temp_int_Array_Index_Variable) == 0x000030, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, Temp_object_Variable) == 0x000038, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, Temp_bool_Variable) == 0x000040, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, K2Node_MathExpression_ReturnValue) == 0x000044, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, K2Node_MathExpression_ReturnValue_1) == 0x000048, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::K2Node_MathExpression_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_GetAllEntries_ReturnValue) == 0x000050, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_GetAllEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_GetNumEntries_ReturnValue) == 0x000064, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_GetNumEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_Subtract_IntInt_ReturnValue) == 0x000068, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_Greater_IntInt_ReturnValue) == 0x00006C, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_Min_ReturnValue) == 0x000070, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_Array_Get_Item) == 0x000078, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, Temp_bool_Variable_1) == 0x000080, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_GetDesiredSize_ReturnValue) == 0x000088, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_GetAllEntries_ReturnValue_1) == 0x000098, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_GetAllEntries_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_BreakVector2D_X) == 0x0000A8, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_BreakVector2D_Y) == 0x0000B0, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_Array_Get_Item_1) == 0x0000B8, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_GetDesiredSize_ReturnValue_1) == 0x0000C0, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_GetDesiredSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_IsValid_ReturnValue) == 0x0000D0, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_BreakVector2D_X_1) == 0x0000D8, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_BreakVector2D_Y_1) == 0x0000E0, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_IsValid_ReturnValue_1) == 0x0000E8, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_SelectFloat_ReturnValue) == 0x0000F0, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000F8, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_Divide_IntInt_ReturnValue) == 0x000100, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_FTrunc_ReturnValue) == 0x000104, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_Max_ReturnValue) == 0x000108, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_Percent_IntInt_ReturnValue) == 0x00010C, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, Temp_int_Loop_Counter_Variable) == 0x000110, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_GetActiveWidget_ReturnValue) == 0x000118, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_GetActiveWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_IsValid_ReturnValue_2) == 0x000120, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_Add_IntInt_ReturnValue_3) == 0x000124, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, K2Node_Select_Default) == 0x000128, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, K2Node_Select_Default_1) == 0x000130, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_GetAllEntries_ReturnValue_2) == 0x000138, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_GetAllEntries_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_GetAllEntries_ReturnValue_3) == 0x000148, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_GetAllEntries_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_Array_Get_Item_2) == 0x000158, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_Array_LastIndex_ReturnValue) == 0x000160, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, K2Node_DynamicCast_AsCommon_Button_Base) == 0x000168, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::K2Node_DynamicCast_AsCommon_Button_Base' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, K2Node_DynamicCast_bSuccess) == 0x000170, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_Min_ReturnValue_1) == 0x000174, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_Min_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_GetSelected_ReturnValue) == 0x000178, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_GetSelected_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_Array_Get_Item_3) == 0x000180, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_IsValid_ReturnValue_3) == 0x000188, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_Array_Length_ReturnValue_1) == 0x00018C, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_DownFromRecurringRewards, CallFunc_Less_IntInt_ReturnValue) == 0x000190, "Member 'CrewPurchaseScreen_C_DownFromRecurringRewards::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function CrewPurchaseScreen.CrewPurchaseScreen_C.ExecuteUbergraph_CrewPurchaseScreen
// 0x01D8 (0x01D8 - 0x0000)
struct CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Temp_byte_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Temp_byte_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Temp_byte_Variable_2;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Temp_byte_Variable_3;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Event_NewBackground;                        // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_3;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UBorder*>                        K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UPurchaseNavButton_C*                   K2Node_DynamicCast_AsPurchase_Nav_Button;          // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable;                              // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_DynamicCast_AsTexture;                      // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVisible;                             // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bTabsVisible;                         // 0x00F8(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_SpacingAdjustmentForTabs;             // 0x00FC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShowNotification;                    // 0x0100(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_NotificationText;                     // 0x0108(0x0018)(ConstParm)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_UserInformationText1;                 // 0x0128(0x0018)(ConstParm)
	class FText                                   K2Node_Event_UserInformationText2;                 // 0x0140(0x0018)(ConstParm)
	EMcpSubscriptionState                         K2Node_Event_SubscriptionState;                    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UScaleBoxSlot*                          CallFunc_SlotAsScaleBoxSlot_ReturnValue;           // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            K2Node_Select_Default_2;                           // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            K2Node_Select_Default_3;                           // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17A[0x2];                                      // 0x017A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_4;                           // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_1;    // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0194(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bBlockScreen;                         // 0x01A8(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_ContentBlockedText;                   // 0x01B0(0x0018)(ConstParm)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CA[0x2];                                      // 0x01CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_MakeStruct_Left_ImplicitCast;               // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateLayoutForTabs_SpacingAdjustmentForTabs_ImplicitCast; // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen) == 0x000008, "Wrong alignment on CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen");
static_assert(sizeof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen) == 0x0001D8, "Wrong size on CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, EntryPoint) == 0x000000, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, Temp_bool_Variable) == 0x000004, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, Temp_bool_Variable_1) == 0x000005, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, Temp_byte_Variable) == 0x000006, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, Temp_byte_Variable_1) == 0x000007, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, Temp_bool_Variable_2) == 0x000008, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, Temp_byte_Variable_2) == 0x000009, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, Temp_byte_Variable_3) == 0x00000A, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, Temp_bool_Variable_3) == 0x00000B, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, Temp_real_Variable) == 0x00000C, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, Temp_real_Variable_1) == 0x000010, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, K2Node_Event_IsDesignTime) == 0x000014, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, K2Node_Event_NewBackground) == 0x000020, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::K2Node_Event_NewBackground' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000028, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, Temp_real_Variable_2) == 0x000030, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, CallFunc_PlayAnimation_ReturnValue) == 0x000038, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, CallFunc_GetEndTime_ReturnValue) == 0x000040, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, Temp_real_Variable_3) == 0x000048, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, CallFunc_PlayAnimation_ReturnValue_1) == 0x000050, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, K2Node_MakeArray_Array) == 0x000058, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, K2Node_DynamicCast_AsPurchase_Nav_Button) == 0x000068, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::K2Node_DynamicCast_AsPurchase_Nav_Button' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, Temp_bool_Variable_4) == 0x000071, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, Temp_int_Array_Index_Variable) == 0x000074, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, CallFunc_Array_Get_Item) == 0x000078, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, K2Node_Select_Default) == 0x000080, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000088, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, CallFunc_PlayAnimation_ReturnValue_2) == 0x000090, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, Temp_struct_Variable) == 0x000098, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, Temp_struct_Variable_1) == 0x0000A8, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, Temp_bool_Variable_5) == 0x0000B8, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x0000C0, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, K2Node_Select_Default_1) == 0x0000C8, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0000D8, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, K2Node_DynamicCast_AsTexture) == 0x0000E0, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::K2Node_DynamicCast_AsTexture' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, K2Node_DynamicCast_bSuccess_1) == 0x0000E8, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, K2Node_Event_bVisible) == 0x0000E9, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::K2Node_Event_bVisible' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x0000F0, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, K2Node_Event_bTabsVisible) == 0x0000F8, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::K2Node_Event_bTabsVisible' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, K2Node_Event_SpacingAdjustmentForTabs) == 0x0000FC, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::K2Node_Event_SpacingAdjustmentForTabs' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, K2Node_Event_bShowNotification) == 0x000100, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::K2Node_Event_bShowNotification' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, K2Node_Event_NotificationText) == 0x000108, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::K2Node_Event_NotificationText' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, Temp_byte_Variable_4) == 0x000120, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, K2Node_Event_UserInformationText1) == 0x000128, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::K2Node_Event_UserInformationText1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, K2Node_Event_UserInformationText2) == 0x000140, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::K2Node_Event_UserInformationText2' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, K2Node_Event_SubscriptionState) == 0x000158, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::K2Node_Event_SubscriptionState' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000160, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, CallFunc_IsMobileGame_ReturnValue) == 0x000168, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, CallFunc_SlotAsScaleBoxSlot_ReturnValue) == 0x000170, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::CallFunc_SlotAsScaleBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, K2Node_Select_Default_2) == 0x000178, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, K2Node_Select_Default_3) == 0x000179, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, K2Node_Select_Default_4) == 0x00017C, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, Temp_int_Loop_Counter_Variable) == 0x000180, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_1) == 0x000188, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, CallFunc_Less_IntInt_ReturnValue) == 0x000190, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, K2Node_MakeStruct_Margin) == 0x000194, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, CallFunc_Add_IntInt_ReturnValue) == 0x0001A4, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, K2Node_Event_bBlockScreen) == 0x0001A8, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::K2Node_Event_bBlockScreen' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, K2Node_Event_ContentBlockedText) == 0x0001B0, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::K2Node_Event_ContentBlockedText' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, Temp_byte_Variable_5) == 0x0001C8, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, K2Node_Select_Default_5) == 0x0001C9, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, K2Node_MakeStruct_Left_ImplicitCast) == 0x0001CC, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::K2Node_MakeStruct_Left_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen, CallFunc_UpdateLayoutForTabs_SpacingAdjustmentForTabs_ImplicitCast) == 0x0001D0, "Member 'CrewPurchaseScreen_C_ExecuteUbergraph_CrewPurchaseScreen::CallFunc_UpdateLayoutForTabs_SpacingAdjustmentForTabs_ImplicitCast' has a wrong offset!");

// Function CrewPurchaseScreen.CrewPurchaseScreen_C.OnContainerTabVisibilityUpdated
// 0x0008 (0x0008 - 0x0000)
struct CrewPurchaseScreen_C_OnContainerTabVisibilityUpdated final
{
public:
	bool                                          bTabsVisible;                                      // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpacingAdjustmentForTabs;                          // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CrewPurchaseScreen_C_OnContainerTabVisibilityUpdated) == 0x000004, "Wrong alignment on CrewPurchaseScreen_C_OnContainerTabVisibilityUpdated");
static_assert(sizeof(CrewPurchaseScreen_C_OnContainerTabVisibilityUpdated) == 0x000008, "Wrong size on CrewPurchaseScreen_C_OnContainerTabVisibilityUpdated");
static_assert(offsetof(CrewPurchaseScreen_C_OnContainerTabVisibilityUpdated, bTabsVisible) == 0x000000, "Member 'CrewPurchaseScreen_C_OnContainerTabVisibilityUpdated::bTabsVisible' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_OnContainerTabVisibilityUpdated, SpacingAdjustmentForTabs) == 0x000004, "Member 'CrewPurchaseScreen_C_OnContainerTabVisibilityUpdated::SpacingAdjustmentForTabs' has a wrong offset!");

// Function CrewPurchaseScreen.CrewPurchaseScreen_C.OnDownloadBackgroundComplete
// 0x0008 (0x0008 - 0x0000)
struct CrewPurchaseScreen_C_OnDownloadBackgroundComplete final
{
public:
	class UTexture2D*                             NewBackground;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CrewPurchaseScreen_C_OnDownloadBackgroundComplete) == 0x000008, "Wrong alignment on CrewPurchaseScreen_C_OnDownloadBackgroundComplete");
static_assert(sizeof(CrewPurchaseScreen_C_OnDownloadBackgroundComplete) == 0x000008, "Wrong size on CrewPurchaseScreen_C_OnDownloadBackgroundComplete");
static_assert(offsetof(CrewPurchaseScreen_C_OnDownloadBackgroundComplete, NewBackground) == 0x000000, "Member 'CrewPurchaseScreen_C_OnDownloadBackgroundComplete::NewBackground' has a wrong offset!");

// Function CrewPurchaseScreen.CrewPurchaseScreen_C.OnSetNavButtonNotificationText
// 0x0018 (0x0018 - 0x0000)
struct CrewPurchaseScreen_C_OnSetNavButtonNotificationText final
{
public:
	class FText                                   NotificationText;                                  // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(CrewPurchaseScreen_C_OnSetNavButtonNotificationText) == 0x000008, "Wrong alignment on CrewPurchaseScreen_C_OnSetNavButtonNotificationText");
static_assert(sizeof(CrewPurchaseScreen_C_OnSetNavButtonNotificationText) == 0x000018, "Wrong size on CrewPurchaseScreen_C_OnSetNavButtonNotificationText");
static_assert(offsetof(CrewPurchaseScreen_C_OnSetNavButtonNotificationText, NotificationText) == 0x000000, "Member 'CrewPurchaseScreen_C_OnSetNavButtonNotificationText::NotificationText' has a wrong offset!");

// Function CrewPurchaseScreen.CrewPurchaseScreen_C.OnShowNavButtonNotification
// 0x0001 (0x0001 - 0x0000)
struct CrewPurchaseScreen_C_OnShowNavButtonNotification final
{
public:
	bool                                          bShowNotification;                                 // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CrewPurchaseScreen_C_OnShowNavButtonNotification) == 0x000001, "Wrong alignment on CrewPurchaseScreen_C_OnShowNavButtonNotification");
static_assert(sizeof(CrewPurchaseScreen_C_OnShowNavButtonNotification) == 0x000001, "Wrong size on CrewPurchaseScreen_C_OnShowNavButtonNotification");
static_assert(offsetof(CrewPurchaseScreen_C_OnShowNavButtonNotification, bShowNotification) == 0x000000, "Member 'CrewPurchaseScreen_C_OnShowNavButtonNotification::bShowNotification' has a wrong offset!");

// Function CrewPurchaseScreen.CrewPurchaseScreen_C.OnUpdatePurchaseButtonState
// 0x0018 (0x0018 - 0x0000)
struct CrewPurchaseScreen_C_OnUpdatePurchaseButtonState final
{
public:
	ECrewPurchaseButtonState                      ButtonState;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECrewPurchaseButtonState                      Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECrewPurchaseButtonState                      Temp_byte_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	const class UWidget*                          K2Node_Select_Default;                             // 0x0008(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CrewPurchaseScreen_C_OnUpdatePurchaseButtonState) == 0x000008, "Wrong alignment on CrewPurchaseScreen_C_OnUpdatePurchaseButtonState");
static_assert(sizeof(CrewPurchaseScreen_C_OnUpdatePurchaseButtonState) == 0x000018, "Wrong size on CrewPurchaseScreen_C_OnUpdatePurchaseButtonState");
static_assert(offsetof(CrewPurchaseScreen_C_OnUpdatePurchaseButtonState, ButtonState) == 0x000000, "Member 'CrewPurchaseScreen_C_OnUpdatePurchaseButtonState::ButtonState' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_OnUpdatePurchaseButtonState, Temp_byte_Variable) == 0x000001, "Member 'CrewPurchaseScreen_C_OnUpdatePurchaseButtonState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_OnUpdatePurchaseButtonState, Temp_byte_Variable_1) == 0x000002, "Member 'CrewPurchaseScreen_C_OnUpdatePurchaseButtonState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_OnUpdatePurchaseButtonState, Temp_byte_Variable_2) == 0x000003, "Member 'CrewPurchaseScreen_C_OnUpdatePurchaseButtonState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_OnUpdatePurchaseButtonState, Temp_byte_Variable_3) == 0x000004, "Member 'CrewPurchaseScreen_C_OnUpdatePurchaseButtonState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_OnUpdatePurchaseButtonState, Temp_byte_Variable_4) == 0x000005, "Member 'CrewPurchaseScreen_C_OnUpdatePurchaseButtonState::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_OnUpdatePurchaseButtonState, K2Node_Select_Default) == 0x000008, "Member 'CrewPurchaseScreen_C_OnUpdatePurchaseButtonState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_OnUpdatePurchaseButtonState, K2Node_Select_Default_1) == 0x000010, "Member 'CrewPurchaseScreen_C_OnUpdatePurchaseButtonState::K2Node_Select_Default_1' has a wrong offset!");

// Function CrewPurchaseScreen.CrewPurchaseScreen_C.OnUpdateVBuckRefundVisibility
// 0x0001 (0x0001 - 0x0000)
struct CrewPurchaseScreen_C_OnUpdateVBuckRefundVisibility final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CrewPurchaseScreen_C_OnUpdateVBuckRefundVisibility) == 0x000001, "Wrong alignment on CrewPurchaseScreen_C_OnUpdateVBuckRefundVisibility");
static_assert(sizeof(CrewPurchaseScreen_C_OnUpdateVBuckRefundVisibility) == 0x000001, "Wrong size on CrewPurchaseScreen_C_OnUpdateVBuckRefundVisibility");
static_assert(offsetof(CrewPurchaseScreen_C_OnUpdateVBuckRefundVisibility, bVisible) == 0x000000, "Member 'CrewPurchaseScreen_C_OnUpdateVBuckRefundVisibility::bVisible' has a wrong offset!");

// Function CrewPurchaseScreen.CrewPurchaseScreen_C.OnUserInformationTextsUpdated
// 0x0038 (0x0038 - 0x0000)
struct CrewPurchaseScreen_C_OnUserInformationTextsUpdated final
{
public:
	class FText                                   UserInformationText1;                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   UserInformationText2;                              // 0x0018(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	EMcpSubscriptionState                         SubscriptionState;                                 // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CrewPurchaseScreen_C_OnUserInformationTextsUpdated) == 0x000008, "Wrong alignment on CrewPurchaseScreen_C_OnUserInformationTextsUpdated");
static_assert(sizeof(CrewPurchaseScreen_C_OnUserInformationTextsUpdated) == 0x000038, "Wrong size on CrewPurchaseScreen_C_OnUserInformationTextsUpdated");
static_assert(offsetof(CrewPurchaseScreen_C_OnUserInformationTextsUpdated, UserInformationText1) == 0x000000, "Member 'CrewPurchaseScreen_C_OnUserInformationTextsUpdated::UserInformationText1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_OnUserInformationTextsUpdated, UserInformationText2) == 0x000018, "Member 'CrewPurchaseScreen_C_OnUserInformationTextsUpdated::UserInformationText2' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_OnUserInformationTextsUpdated, SubscriptionState) == 0x000030, "Member 'CrewPurchaseScreen_C_OnUserInformationTextsUpdated::SubscriptionState' has a wrong offset!");

// Function CrewPurchaseScreen.CrewPurchaseScreen_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct CrewPurchaseScreen_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CrewPurchaseScreen_C_PreConstruct) == 0x000001, "Wrong alignment on CrewPurchaseScreen_C_PreConstruct");
static_assert(sizeof(CrewPurchaseScreen_C_PreConstruct) == 0x000001, "Wrong size on CrewPurchaseScreen_C_PreConstruct");
static_assert(offsetof(CrewPurchaseScreen_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'CrewPurchaseScreen_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function CrewPurchaseScreen.CrewPurchaseScreen_C.Set Up Error Info Flags
// 0x0038 (0x0038 - 0x0000)
struct CrewPurchaseScreen_C_Set_Up_Error_Info_Flags final
{
public:
	class FText                                   UserInformationText_1;                             // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   UserInformationText_2;                             // 0x0018(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	EMcpSubscriptionState                         SubscriptionState;                                 // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CrewPurchaseScreen_C_Set_Up_Error_Info_Flags) == 0x000008, "Wrong alignment on CrewPurchaseScreen_C_Set_Up_Error_Info_Flags");
static_assert(sizeof(CrewPurchaseScreen_C_Set_Up_Error_Info_Flags) == 0x000038, "Wrong size on CrewPurchaseScreen_C_Set_Up_Error_Info_Flags");
static_assert(offsetof(CrewPurchaseScreen_C_Set_Up_Error_Info_Flags, UserInformationText_1) == 0x000000, "Member 'CrewPurchaseScreen_C_Set_Up_Error_Info_Flags::UserInformationText_1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_Set_Up_Error_Info_Flags, UserInformationText_2) == 0x000018, "Member 'CrewPurchaseScreen_C_Set_Up_Error_Info_Flags::UserInformationText_2' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_Set_Up_Error_Info_Flags, SubscriptionState) == 0x000030, "Member 'CrewPurchaseScreen_C_Set_Up_Error_Info_Flags::SubscriptionState' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_Set_Up_Error_Info_Flags, K2Node_SwitchEnum_CmpSuccess) == 0x000031, "Member 'CrewPurchaseScreen_C_Set_Up_Error_Info_Flags::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function CrewPurchaseScreen.CrewPurchaseScreen_C.UpdateLayoutForTabs
// 0x0050 (0x0050 - 0x0000)
struct CrewPurchaseScreen_C_UpdateLayoutForTabs final
{
public:
	bool                                          bTabsVisible;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SpacingAdjustmentForTabs;                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0018(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0030(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_MakeStruct_Top_ImplicitCast;                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CrewPurchaseScreen_C_UpdateLayoutForTabs) == 0x000008, "Wrong alignment on CrewPurchaseScreen_C_UpdateLayoutForTabs");
static_assert(sizeof(CrewPurchaseScreen_C_UpdateLayoutForTabs) == 0x000050, "Wrong size on CrewPurchaseScreen_C_UpdateLayoutForTabs");
static_assert(offsetof(CrewPurchaseScreen_C_UpdateLayoutForTabs, bTabsVisible) == 0x000000, "Member 'CrewPurchaseScreen_C_UpdateLayoutForTabs::bTabsVisible' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpdateLayoutForTabs, SpacingAdjustmentForTabs) == 0x000008, "Member 'CrewPurchaseScreen_C_UpdateLayoutForTabs::SpacingAdjustmentForTabs' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpdateLayoutForTabs, Temp_bool_Variable) == 0x000010, "Member 'CrewPurchaseScreen_C_UpdateLayoutForTabs::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpdateLayoutForTabs, Temp_real_Variable) == 0x000018, "Member 'CrewPurchaseScreen_C_UpdateLayoutForTabs::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpdateLayoutForTabs, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x000020, "Member 'CrewPurchaseScreen_C_UpdateLayoutForTabs::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpdateLayoutForTabs, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'CrewPurchaseScreen_C_UpdateLayoutForTabs::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpdateLayoutForTabs, K2Node_Select_Default) == 0x000030, "Member 'CrewPurchaseScreen_C_UpdateLayoutForTabs::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpdateLayoutForTabs, K2Node_MakeStruct_Margin) == 0x000038, "Member 'CrewPurchaseScreen_C_UpdateLayoutForTabs::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpdateLayoutForTabs, K2Node_MakeStruct_Top_ImplicitCast) == 0x000048, "Member 'CrewPurchaseScreen_C_UpdateLayoutForTabs::K2Node_MakeStruct_Top_ImplicitCast' has a wrong offset!");

// Function CrewPurchaseScreen.CrewPurchaseScreen_C.UpFromLimitedTimeRewards
// 0x0100 (0x0100 - 0x0000)
struct CrewPurchaseScreen_C_UpFromLimitedTimeRewards final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         NumRows;                                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectedTileColumn;                                // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectedTileIndex;                                 // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue;                // 0x0028(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_GetNumEntries_ReturnValue;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue_1;              // 0x0050(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue_1;             // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue_2;              // 0x0088(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Array_Get_Item_1;                         // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_DynamicCast_AsCommon_Button_Base;           // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSelected_ReturnValue;                  // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C3[0x5];                                       // 0x00C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_MathExpression_ReturnValue;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item_2;                         // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards) == 0x000008, "Wrong alignment on CrewPurchaseScreen_C_UpFromLimitedTimeRewards");
static_assert(sizeof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards) == 0x000100, "Wrong size on CrewPurchaseScreen_C_UpFromLimitedTimeRewards");
static_assert(offsetof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards, Navigation_0) == 0x000000, "Member 'CrewPurchaseScreen_C_UpFromLimitedTimeRewards::Navigation_0' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards, ReturnValue) == 0x000008, "Member 'CrewPurchaseScreen_C_UpFromLimitedTimeRewards::ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards, NumRows) == 0x000010, "Member 'CrewPurchaseScreen_C_UpFromLimitedTimeRewards::NumRows' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards, SelectedTileColumn) == 0x000014, "Member 'CrewPurchaseScreen_C_UpFromLimitedTimeRewards::SelectedTileColumn' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards, SelectedTileIndex) == 0x000018, "Member 'CrewPurchaseScreen_C_UpFromLimitedTimeRewards::SelectedTileIndex' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001C, "Member 'CrewPurchaseScreen_C_UpFromLimitedTimeRewards::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards, Temp_int_Array_Index_Variable) == 0x000020, "Member 'CrewPurchaseScreen_C_UpFromLimitedTimeRewards::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards, CallFunc_GetAllEntries_ReturnValue) == 0x000028, "Member 'CrewPurchaseScreen_C_UpFromLimitedTimeRewards::CallFunc_GetAllEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards, CallFunc_GetNumEntries_ReturnValue) == 0x000038, "Member 'CrewPurchaseScreen_C_UpFromLimitedTimeRewards::CallFunc_GetNumEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards, CallFunc_GetDesiredSize_ReturnValue) == 0x000040, "Member 'CrewPurchaseScreen_C_UpFromLimitedTimeRewards::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards, CallFunc_GetAllEntries_ReturnValue_1) == 0x000050, "Member 'CrewPurchaseScreen_C_UpFromLimitedTimeRewards::CallFunc_GetAllEntries_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards, CallFunc_BreakVector2D_X) == 0x000060, "Member 'CrewPurchaseScreen_C_UpFromLimitedTimeRewards::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards, CallFunc_BreakVector2D_Y) == 0x000068, "Member 'CrewPurchaseScreen_C_UpFromLimitedTimeRewards::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards, CallFunc_Array_Get_Item) == 0x000070, "Member 'CrewPurchaseScreen_C_UpFromLimitedTimeRewards::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards, CallFunc_GetDesiredSize_ReturnValue_1) == 0x000078, "Member 'CrewPurchaseScreen_C_UpFromLimitedTimeRewards::CallFunc_GetDesiredSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards, CallFunc_GetAllEntries_ReturnValue_2) == 0x000088, "Member 'CrewPurchaseScreen_C_UpFromLimitedTimeRewards::CallFunc_GetAllEntries_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards, CallFunc_BreakVector2D_X_1) == 0x000098, "Member 'CrewPurchaseScreen_C_UpFromLimitedTimeRewards::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards, CallFunc_BreakVector2D_Y_1) == 0x0000A0, "Member 'CrewPurchaseScreen_C_UpFromLimitedTimeRewards::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards, CallFunc_Array_Get_Item_1) == 0x0000A8, "Member 'CrewPurchaseScreen_C_UpFromLimitedTimeRewards::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'CrewPurchaseScreen_C_UpFromLimitedTimeRewards::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards, K2Node_DynamicCast_AsCommon_Button_Base) == 0x0000B8, "Member 'CrewPurchaseScreen_C_UpFromLimitedTimeRewards::K2Node_DynamicCast_AsCommon_Button_Base' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'CrewPurchaseScreen_C_UpFromLimitedTimeRewards::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards, CallFunc_IsValid_ReturnValue) == 0x0000C1, "Member 'CrewPurchaseScreen_C_UpFromLimitedTimeRewards::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards, CallFunc_GetSelected_ReturnValue) == 0x0000C2, "Member 'CrewPurchaseScreen_C_UpFromLimitedTimeRewards::CallFunc_GetSelected_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards, CallFunc_SelectFloat_ReturnValue) == 0x0000C8, "Member 'CrewPurchaseScreen_C_UpFromLimitedTimeRewards::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'CrewPurchaseScreen_C_UpFromLimitedTimeRewards::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards, Temp_int_Loop_Counter_Variable) == 0x0000D8, "Member 'CrewPurchaseScreen_C_UpFromLimitedTimeRewards::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards, CallFunc_FTrunc_ReturnValue) == 0x0000DC, "Member 'CrewPurchaseScreen_C_UpFromLimitedTimeRewards::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards, CallFunc_Max_ReturnValue) == 0x0000E0, "Member 'CrewPurchaseScreen_C_UpFromLimitedTimeRewards::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards, CallFunc_Less_IntInt_ReturnValue) == 0x0000E4, "Member 'CrewPurchaseScreen_C_UpFromLimitedTimeRewards::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards, K2Node_MathExpression_ReturnValue) == 0x0000E8, "Member 'CrewPurchaseScreen_C_UpFromLimitedTimeRewards::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards, CallFunc_Array_Get_Item_2) == 0x0000F0, "Member 'CrewPurchaseScreen_C_UpFromLimitedTimeRewards::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpFromLimitedTimeRewards, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000F8, "Member 'CrewPurchaseScreen_C_UpFromLimitedTimeRewards::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function CrewPurchaseScreen.CrewPurchaseScreen_C.UpToFirstTile
// 0x0068 (0x0068 - 0x0000)
struct CrewPurchaseScreen_C_UpToFirstTile final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue;                // 0x0020(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue_1;              // 0x0030(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_Select_Default_1;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CrewPurchaseScreen_C_UpToFirstTile) == 0x000008, "Wrong alignment on CrewPurchaseScreen_C_UpToFirstTile");
static_assert(sizeof(CrewPurchaseScreen_C_UpToFirstTile) == 0x000068, "Wrong size on CrewPurchaseScreen_C_UpToFirstTile");
static_assert(offsetof(CrewPurchaseScreen_C_UpToFirstTile, Navigation_0) == 0x000000, "Member 'CrewPurchaseScreen_C_UpToFirstTile::Navigation_0' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpToFirstTile, ReturnValue) == 0x000008, "Member 'CrewPurchaseScreen_C_UpToFirstTile::ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpToFirstTile, Temp_object_Variable) == 0x000010, "Member 'CrewPurchaseScreen_C_UpToFirstTile::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpToFirstTile, Temp_bool_Variable) == 0x000018, "Member 'CrewPurchaseScreen_C_UpToFirstTile::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpToFirstTile, Temp_bool_Variable_1) == 0x000019, "Member 'CrewPurchaseScreen_C_UpToFirstTile::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpToFirstTile, CallFunc_GetAllEntries_ReturnValue) == 0x000020, "Member 'CrewPurchaseScreen_C_UpToFirstTile::CallFunc_GetAllEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpToFirstTile, CallFunc_GetAllEntries_ReturnValue_1) == 0x000030, "Member 'CrewPurchaseScreen_C_UpToFirstTile::CallFunc_GetAllEntries_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpToFirstTile, CallFunc_Array_Get_Item) == 0x000040, "Member 'CrewPurchaseScreen_C_UpToFirstTile::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpToFirstTile, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'CrewPurchaseScreen_C_UpToFirstTile::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpToFirstTile, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'CrewPurchaseScreen_C_UpToFirstTile::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpToFirstTile, CallFunc_IsValid_ReturnValue_1) == 0x000051, "Member 'CrewPurchaseScreen_C_UpToFirstTile::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpToFirstTile, K2Node_Select_Default) == 0x000058, "Member 'CrewPurchaseScreen_C_UpToFirstTile::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_C_UpToFirstTile, K2Node_Select_Default_1) == 0x000060, "Member 'CrewPurchaseScreen_C_UpToFirstTile::K2Node_Select_Default_1' has a wrong offset!");

}

