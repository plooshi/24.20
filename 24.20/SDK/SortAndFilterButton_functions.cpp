#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SortAndFilterButton

#include "Basic.hpp"

#include "SortAndFilterButton_classes.hpp"
#include "SortAndFilterButton_parameters.hpp"


namespace SDK
{

// Function SortAndFilterButton.SortAndFilterButton_C.BP_OnDeselected
// (Event, Protected, BlueprintEvent)

void USortAndFilterButton_C::BP_OnDeselected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SortAndFilterButton_C", "BP_OnDeselected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SortAndFilterButton.SortAndFilterButton_C.BP_OnSelected
// (Event, Protected, BlueprintEvent)

void USortAndFilterButton_C::BP_OnSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SortAndFilterButton_C", "BP_OnSelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SortAndFilterButton.SortAndFilterButton_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void USortAndFilterButton_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SortAndFilterButton_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SortAndFilterButton.SortAndFilterButton_C.ExecuteUbergraph_SortAndFilterButton
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USortAndFilterButton_C::ExecuteUbergraph_SortAndFilterButton(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SortAndFilterButton_C", "ExecuteUbergraph_SortAndFilterButton");

	Params::SortAndFilterButton_C_ExecuteUbergraph_SortAndFilterButton Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SortAndFilterButton.SortAndFilterButton_C.HandleBladeOpenChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bBladeOpen                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USortAndFilterButton_C::HandleBladeOpenChanged(bool bBladeOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SortAndFilterButton_C", "HandleBladeOpenChanged");

	Params::SortAndFilterButton_C_HandleBladeOpenChanged Parms{};

	Parms.bBladeOpen = bBladeOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SortAndFilterButton.SortAndFilterButton_C.OnMouseEnter
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void USortAndFilterButton_C::OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SortAndFilterButton_C", "OnMouseEnter");

	Params::SortAndFilterButton_C_OnMouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SortAndFilterButton.SortAndFilterButton_C.OnMouseLeave
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void USortAndFilterButton_C::OnMouseLeave(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SortAndFilterButton_C", "OnMouseLeave");

	Params::SortAndFilterButton_C_OnMouseLeave Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SortAndFilterButton.SortAndFilterButton_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USortAndFilterButton_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SortAndFilterButton_C", "PreConstruct");

	Params::SortAndFilterButton_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SortAndFilterButton.SortAndFilterButton_C.ResetAnimations
// (Public, BlueprintCallable, BlueprintEvent)

void USortAndFilterButton_C::ResetAnimations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SortAndFilterButton_C", "ResetAnimations");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SortAndFilterButton.SortAndFilterButton_C.SetHighlightBorderVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USortAndFilterButton_C::SetHighlightBorderVisibility(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SortAndFilterButton_C", "SetHighlightBorderVisibility");

	Params::SortAndFilterButton_C_SetHighlightBorderVisibility Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SortAndFilterButton.SortAndFilterButton_C.SetText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void USortAndFilterButton_C::SetText(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SortAndFilterButton_C", "SetText");

	Params::SortAndFilterButton_C_SetText Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SortAndFilterButton.SortAndFilterButton_C.SnapToEndOfAnimation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidgetAnimation*                 Animation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EUMGSequencePlayMode                    PlayMode                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USortAndFilterButton_C::SnapToEndOfAnimation(class UWidgetAnimation* Animation, EUMGSequencePlayMode PlayMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SortAndFilterButton_C", "SnapToEndOfAnimation");

	Params::SortAndFilterButton_C_SnapToEndOfAnimation Parms{};

	Parms.Animation = Animation;
	Parms.PlayMode = PlayMode;

	UObject::ProcessEvent(Func, &Parms);
}

}

