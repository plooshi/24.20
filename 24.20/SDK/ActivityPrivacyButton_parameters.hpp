#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ActivityPrivacyButton

#include "Basic.hpp"


namespace SDK::Params
{

// Function ActivityPrivacyButton.ActivityPrivacyButton_C.ExecuteUbergraph_ActivityPrivacyButton
// 0x0080 (0x0080 - 0x0000)
struct ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_1;       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationTimeRangeProxyObject_Result; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationTimeRangeProxyObject_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_DynamicCast_AsSound_Base;                   // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetFirstLocalFortPlayerController_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingGamepad_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_2;       // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0078(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsAvailable;                         // 0x0079(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton) == 0x000008, "Wrong alignment on ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton");
static_assert(sizeof(ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton) == 0x000080, "Wrong size on ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton");
static_assert(offsetof(ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton, EntryPoint) == 0x000000, "Member 'ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton, CallFunc_PlayAnimationForward_ReturnValue) == 0x000008, "Member 'ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000010, "Member 'ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000018, "Member 'ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton, CallFunc_PlayAnimationReverse_ReturnValue_1) == 0x000020, "Member 'ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton::CallFunc_PlayAnimationReverse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x000028, "Member 'ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton, CallFunc_CreatePlayAnimationTimeRangeProxyObject_Result) == 0x000038, "Member 'ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton::CallFunc_CreatePlayAnimationTimeRangeProxyObject_Result' has a wrong offset!");
static_assert(offsetof(ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton, CallFunc_CreatePlayAnimationTimeRangeProxyObject_ReturnValue) == 0x000040, "Member 'ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton::CallFunc_CreatePlayAnimationTimeRangeProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton, K2Node_DynamicCast_AsSound_Base) == 0x000050, "Member 'ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton::K2Node_DynamicCast_AsSound_Base' has a wrong offset!");
static_assert(offsetof(ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton, CallFunc_GetFirstLocalFortPlayerController_ReturnValue) == 0x000060, "Member 'ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton::CallFunc_GetFirstLocalFortPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton, CallFunc_IsUsingGamepad_ReturnValue) == 0x000068, "Member 'ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton::CallFunc_IsUsingGamepad_ReturnValue' has a wrong offset!");
static_assert(offsetof(ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton, CallFunc_PlayAnimationReverse_ReturnValue_2) == 0x000070, "Member 'ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton::CallFunc_PlayAnimationReverse_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton, K2Node_Event_bIsSelected) == 0x000078, "Member 'ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton, K2Node_Event_bIsAvailable) == 0x000079, "Member 'ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton::K2Node_Event_bIsAvailable' has a wrong offset!");
static_assert(offsetof(ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton, K2Node_Event_IsDesignTime) == 0x00007A, "Member 'ActivityPrivacyButton_C_ExecuteUbergraph_ActivityPrivacyButton::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function ActivityPrivacyButton.ActivityPrivacyButton_C.OnDesiredPrivacySelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct ActivityPrivacyButton_C_OnDesiredPrivacySelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityPrivacyButton_C_OnDesiredPrivacySelectionChanged) == 0x000001, "Wrong alignment on ActivityPrivacyButton_C_OnDesiredPrivacySelectionChanged");
static_assert(sizeof(ActivityPrivacyButton_C_OnDesiredPrivacySelectionChanged) == 0x000001, "Wrong size on ActivityPrivacyButton_C_OnDesiredPrivacySelectionChanged");
static_assert(offsetof(ActivityPrivacyButton_C_OnDesiredPrivacySelectionChanged, bIsSelected) == 0x000000, "Member 'ActivityPrivacyButton_C_OnDesiredPrivacySelectionChanged::bIsSelected' has a wrong offset!");

// Function ActivityPrivacyButton.ActivityPrivacyButton_C.OnPrivacyAvailabilityChanged
// 0x0001 (0x0001 - 0x0000)
struct ActivityPrivacyButton_C_OnPrivacyAvailabilityChanged final
{
public:
	bool                                          bIsAvailable;                                      // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityPrivacyButton_C_OnPrivacyAvailabilityChanged) == 0x000001, "Wrong alignment on ActivityPrivacyButton_C_OnPrivacyAvailabilityChanged");
static_assert(sizeof(ActivityPrivacyButton_C_OnPrivacyAvailabilityChanged) == 0x000001, "Wrong size on ActivityPrivacyButton_C_OnPrivacyAvailabilityChanged");
static_assert(offsetof(ActivityPrivacyButton_C_OnPrivacyAvailabilityChanged, bIsAvailable) == 0x000000, "Member 'ActivityPrivacyButton_C_OnPrivacyAvailabilityChanged::bIsAvailable' has a wrong offset!");

// Function ActivityPrivacyButton.ActivityPrivacyButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ActivityPrivacyButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ActivityPrivacyButton_C_PreConstruct) == 0x000001, "Wrong alignment on ActivityPrivacyButton_C_PreConstruct");
static_assert(sizeof(ActivityPrivacyButton_C_PreConstruct) == 0x000001, "Wrong size on ActivityPrivacyButton_C_PreConstruct");
static_assert(offsetof(ActivityPrivacyButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ActivityPrivacyButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

