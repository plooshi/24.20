#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Player_Sprint_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "Player_Sprint_AnimBP_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Player_Sprint_AnimBP.Player_Sprint_AnimBP_C
// 0x11C0 (0x1880 - 0x06C0)
class UPlayer_Sprint_AnimBP_C final : public UFortSprintAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct Player_Sprint_AnimBP::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x06C8(0x002C)(HasGetValueTypeHash)
	uint8                                         Pad_6F4[0x4];                                      // 0x06F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x06F8(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0700(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0708(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0728(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0750(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0778(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x07A0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x07C8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x0810(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_4;                   // 0x0858(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x08A0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x08C0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0908(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x0950(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0998(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x09B8(0x0028)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x09E0(0x00C8)()
	struct FAnimNode_RotateRootBone               AnimGraphNode_RotateRootBone;                      // 0x0AA8(0x00A8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x0B50(0x0070)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_4;                     // 0x0BC0(0x00C8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_3;                     // 0x0C88(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0D50(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x0D98(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0DE0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0E28(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0E70(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0EB8(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_2;                     // 0x0F00(0x00C8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x0FC8(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1090(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x10D8(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x11A0(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x11E8(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x1210(0x00E0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x12F0(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x1360(0x0070)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x13D0(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x1418(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x1440(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x1468(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x14B0(0x00E0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1590(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x15B0(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1678(0x0100)()
	struct FAnimNode_Inertialization              AnimGraphNode_Inertialization;                     // 0x1778(0x0100)()

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void ExecuteUbergraph_Player_Sprint_AnimBP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Player_Sprint_AnimBP_C">();
	}
	static class UPlayer_Sprint_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayer_Sprint_AnimBP_C>();
	}
};
static_assert(alignof(UPlayer_Sprint_AnimBP_C) == 0x000010, "Wrong alignment on UPlayer_Sprint_AnimBP_C");
static_assert(sizeof(UPlayer_Sprint_AnimBP_C) == 0x001880, "Wrong size on UPlayer_Sprint_AnimBP_C");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, UberGraphFrame) == 0x0006C0, "Member 'UPlayer_Sprint_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, __AnimBlueprintMutables) == 0x0006C8, "Member 'UPlayer_Sprint_AnimBP_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimBlueprintExtension_PropertyAccess) == 0x0006F8, "Member 'UPlayer_Sprint_AnimBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimBlueprintExtension_Base) == 0x000700, "Member 'UPlayer_Sprint_AnimBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_Root) == 0x000708, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_TransitionResult_4) == 0x000728, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_TransitionResult_3) == 0x000750, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_TransitionResult_2) == 0x000778, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_TransitionResult_1) == 0x0007A0, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_SequencePlayer_8) == 0x0007C8, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_SequencePlayer_7) == 0x000810, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_BlendListByBool_4) == 0x000858, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_BlendListByBool_4' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_StateResult_2) == 0x0008A0, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_SequencePlayer_6) == 0x0008C0, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_SequencePlayer_5) == 0x000908, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_BlendListByBool_3) == 0x000950, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_StateResult_1) == 0x000998, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_TransitionResult) == 0x0009B8, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_StateMachine_1) == 0x0009E0, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_RotateRootBone) == 0x000AA8, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_RotateRootBone' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_BlendSpacePlayer_2) == 0x000B50, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_ApplyAdditive_4) == 0x000BC0, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_ApplyAdditive_4' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_ApplyAdditive_3) == 0x000C88, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_ApplyAdditive_3' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x000D50, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_BlendListByBool_2) == 0x000D98, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x000DE0, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x000E28, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x000E70, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_BlendListByBool_1) == 0x000EB8, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_ApplyAdditive_2) == 0x000F00, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_ApplyAdditive_2' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_ApplyAdditive_1) == 0x000FC8, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x001090, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_ApplyAdditive) == 0x0010D8, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_Slot_1) == 0x0011A0, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_UseCachedPose_2) == 0x0011E8, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_LayeredBoneBlend_1) == 0x001210, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_BlendSpacePlayer_1) == 0x0012F0, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_BlendSpacePlayer) == 0x001360, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_BlendListByBool) == 0x0013D0, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_UseCachedPose_1) == 0x001418, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_UseCachedPose) == 0x001440, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_Slot) == 0x001468, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_LayeredBoneBlend) == 0x0014B0, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_StateResult) == 0x001590, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_StateMachine) == 0x0015B0, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_SaveCachedPose) == 0x001678, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UPlayer_Sprint_AnimBP_C, AnimGraphNode_Inertialization) == 0x001778, "Member 'UPlayer_Sprint_AnimBP_C::AnimGraphNode_Inertialization' has a wrong offset!");

}

