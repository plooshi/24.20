#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CaretakerRuntime

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function CaretakerRuntime.FortAthenaCaretakerAIController.DebugUpdate
// 0x0004 (0x0004 - 0x0000)
struct FortAthenaCaretakerAIController_DebugUpdate final
{
public:
	float                                         UpdateInterval;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaCaretakerAIController_DebugUpdate) == 0x000004, "Wrong alignment on FortAthenaCaretakerAIController_DebugUpdate");
static_assert(sizeof(FortAthenaCaretakerAIController_DebugUpdate) == 0x000004, "Wrong size on FortAthenaCaretakerAIController_DebugUpdate");
static_assert(offsetof(FortAthenaCaretakerAIController_DebugUpdate, UpdateInterval) == 0x000000, "Member 'FortAthenaCaretakerAIController_DebugUpdate::UpdateInterval' has a wrong offset!");

// Function CaretakerRuntime.FortAthenaCaretakerAIController.OnMovementModeChanged
// 0x0010 (0x0010 - 0x0000)
struct FortAthenaCaretakerAIController_OnMovementModeChanged final
{
public:
	class ACharacter*                             CharacterOwner;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMovementMode                                 PreviousMovementMode;                              // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         PreviousCustomMode;                                // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortAthenaCaretakerAIController_OnMovementModeChanged) == 0x000008, "Wrong alignment on FortAthenaCaretakerAIController_OnMovementModeChanged");
static_assert(sizeof(FortAthenaCaretakerAIController_OnMovementModeChanged) == 0x000010, "Wrong size on FortAthenaCaretakerAIController_OnMovementModeChanged");
static_assert(offsetof(FortAthenaCaretakerAIController_OnMovementModeChanged, CharacterOwner) == 0x000000, "Member 'FortAthenaCaretakerAIController_OnMovementModeChanged::CharacterOwner' has a wrong offset!");
static_assert(offsetof(FortAthenaCaretakerAIController_OnMovementModeChanged, PreviousMovementMode) == 0x000008, "Member 'FortAthenaCaretakerAIController_OnMovementModeChanged::PreviousMovementMode' has a wrong offset!");
static_assert(offsetof(FortAthenaCaretakerAIController_OnMovementModeChanged, PreviousCustomMode) == 0x000009, "Member 'FortAthenaCaretakerAIController_OnMovementModeChanged::PreviousCustomMode' has a wrong offset!");

// Function CaretakerRuntime.FortAIAnimInstance_Caretaker.GetStartAnimPosition
// 0x0004 (0x0004 - 0x0000)
struct FortAIAnimInstance_Caretaker_GetStartAnimPosition final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAIAnimInstance_Caretaker_GetStartAnimPosition) == 0x000004, "Wrong alignment on FortAIAnimInstance_Caretaker_GetStartAnimPosition");
static_assert(sizeof(FortAIAnimInstance_Caretaker_GetStartAnimPosition) == 0x000004, "Wrong size on FortAIAnimInstance_Caretaker_GetStartAnimPosition");
static_assert(offsetof(FortAIAnimInstance_Caretaker_GetStartAnimPosition, ReturnValue) == 0x000000, "Member 'FortAIAnimInstance_Caretaker_GetStartAnimPosition::ReturnValue' has a wrong offset!");

// Function CaretakerRuntime.FortAIAnimInstance_Caretaker.GetWalkPlayRateValue
// 0x0004 (0x0004 - 0x0000)
struct FortAIAnimInstance_Caretaker_GetWalkPlayRateValue final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAIAnimInstance_Caretaker_GetWalkPlayRateValue) == 0x000004, "Wrong alignment on FortAIAnimInstance_Caretaker_GetWalkPlayRateValue");
static_assert(sizeof(FortAIAnimInstance_Caretaker_GetWalkPlayRateValue) == 0x000004, "Wrong size on FortAIAnimInstance_Caretaker_GetWalkPlayRateValue");
static_assert(offsetof(FortAIAnimInstance_Caretaker_GetWalkPlayRateValue, ReturnValue) == 0x000000, "Member 'FortAIAnimInstance_Caretaker_GetWalkPlayRateValue::ReturnValue' has a wrong offset!");

// Function CaretakerRuntime.FortAIAnimInstance_Caretaker.GetWalkSpeedWarpingValue
// 0x0004 (0x0004 - 0x0000)
struct FortAIAnimInstance_Caretaker_GetWalkSpeedWarpingValue final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAIAnimInstance_Caretaker_GetWalkSpeedWarpingValue) == 0x000004, "Wrong alignment on FortAIAnimInstance_Caretaker_GetWalkSpeedWarpingValue");
static_assert(sizeof(FortAIAnimInstance_Caretaker_GetWalkSpeedWarpingValue) == 0x000004, "Wrong size on FortAIAnimInstance_Caretaker_GetWalkSpeedWarpingValue");
static_assert(offsetof(FortAIAnimInstance_Caretaker_GetWalkSpeedWarpingValue, ReturnValue) == 0x000000, "Member 'FortAIAnimInstance_Caretaker_GetWalkSpeedWarpingValue::ReturnValue' has a wrong offset!");

// Function CaretakerRuntime.FortAIAnimInstance_Caretaker.GetWorldStriderComponent
// 0x0008 (0x0008 - 0x0000)
struct FortAIAnimInstance_Caretaker_GetWorldStriderComponent final
{
public:
	class UFortAnimWorldStriderComponent*         ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAIAnimInstance_Caretaker_GetWorldStriderComponent) == 0x000008, "Wrong alignment on FortAIAnimInstance_Caretaker_GetWorldStriderComponent");
static_assert(sizeof(FortAIAnimInstance_Caretaker_GetWorldStriderComponent) == 0x000008, "Wrong size on FortAIAnimInstance_Caretaker_GetWorldStriderComponent");
static_assert(offsetof(FortAIAnimInstance_Caretaker_GetWorldStriderComponent, ReturnValue) == 0x000000, "Member 'FortAIAnimInstance_Caretaker_GetWorldStriderComponent::ReturnValue' has a wrong offset!");

}

