#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortAnimationBPFunctionLibrary

#include "Basic.hpp"

#include "FortAnimationBPFunctionLibrary_classes.hpp"
#include "FortAnimationBPFunctionLibrary_parameters.hpp"


namespace SDK
{

// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Adjust Emote Vehicle Wheel Rotation
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Owning_Actor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  CurrentWheelRotation                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CurrentActorRotation                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  NewActorRotation                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  NewWheelRotation                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Adjust_Emote_Vehicle_Wheel_Rotation(class AActor* Owning_Actor, double CurrentWheelRotation, double DeltaTime, double CurrentActorRotation, class UObject* __WorldContext, double* NewActorRotation, double* NewWheelRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Adjust Emote Vehicle Wheel Rotation");

	Params::FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation Parms{};

	Parms.Owning_Actor = Owning_Actor;
	Parms.CurrentWheelRotation = CurrentWheelRotation;
	Parms.DeltaTime = DeltaTime;
	Parms.CurrentActorRotation = CurrentActorRotation;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (NewActorRotation != nullptr)
		*NewActorRotation = Parms.NewActorRotation;

	if (NewWheelRotation != nullptr)
		*NewWheelRotation = Parms.NewWheelRotation;
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Cape Spine05 Pelvis Rotation Function
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkinnedMeshComponent*            SkeletalMeshComponent                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotate_Z_Output                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UFortAnimationBPFunctionLibrary_C::Cape_Spine05_Pelvis_Rotation_Function(const class USkinnedMeshComponent* SkeletalMeshComponent, class UObject* __WorldContext, struct FRotator* Rotate_Z_Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Cape Spine05 Pelvis Rotation Function");

	Params::FortAnimationBPFunctionLibrary_C_Cape_Spine05_Pelvis_Rotation_Function Parms{};

	Parms.SkeletalMeshComponent = SkeletalMeshComponent;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Rotate_Z_Output != nullptr)
		*Rotate_Z_Output = std::move(Parms.Rotate_Z_Output);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Clear Transformation Montage
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  FortPlayerPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Clear_Transformation_Montage(class AFortPlayerPawn* FortPlayerPawn, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Clear Transformation Montage");

	Params::FortAnimationBPFunctionLibrary_C_Clear_Transformation_Montage Parms{};

	Parms.FortPlayerPawn = FortPlayerPawn;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Cloth Controller Convert To Nativized Parameters
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FClothParamsStruct               ClothParametersStruct                                  (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWindGustParamsStruct            WindParametersStruct                                   (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FClothCoreSettingStruct          Cloth_Core_Settings                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWindGustLocalSettingStruct      Wind_Gust_Settings                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Character_State_Name                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FClothParameters                 Cloth_Parameters_Nativized                             (Parm, OutParm, NoDestructor)
// struct FWindGustParameters              Wind_Parameters_Nativized                              (Parm, OutParm, NoDestructor)
// struct FClothCoreSettings               ClothCoreSettings                                      (Parm, OutParm, NoDestructor)
// struct FWindGustSettings                Wind_Settings_Nativized                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UFortAnimationBPFunctionLibrary_C::Cloth_Controller_Convert_To_Nativized_Parameters(const struct FClothParamsStruct& ClothParametersStruct, const struct FWindGustParamsStruct& WindParametersStruct, const struct FClothCoreSettingStruct& Cloth_Core_Settings, const struct FWindGustLocalSettingStruct& Wind_Gust_Settings, class FName Character_State_Name, class UObject* __WorldContext, struct FClothParameters* Cloth_Parameters_Nativized, struct FWindGustParameters* Wind_Parameters_Nativized, struct FClothCoreSettings* ClothCoreSettings, struct FWindGustSettings* Wind_Settings_Nativized)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Cloth Controller Convert To Nativized Parameters");

	Params::FortAnimationBPFunctionLibrary_C_Cloth_Controller_Convert_To_Nativized_Parameters Parms{};

	Parms.ClothParametersStruct = std::move(ClothParametersStruct);
	Parms.WindParametersStruct = std::move(WindParametersStruct);
	Parms.Cloth_Core_Settings = std::move(Cloth_Core_Settings);
	Parms.Wind_Gust_Settings = std::move(Wind_Gust_Settings);
	Parms.Character_State_Name = Character_State_Name;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Cloth_Parameters_Nativized != nullptr)
		*Cloth_Parameters_Nativized = std::move(Parms.Cloth_Parameters_Nativized);

	if (Wind_Parameters_Nativized != nullptr)
		*Wind_Parameters_Nativized = std::move(Parms.Wind_Parameters_Nativized);

	if (ClothCoreSettings != nullptr)
		*ClothCoreSettings = std::move(Parms.ClothCoreSettings);

	if (Wind_Settings_Nativized != nullptr)
		*Wind_Settings_Nativized = std::move(Parms.Wind_Settings_Nativized);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Cloth Controller Function
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           ClothingAssetName                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FClothParamsStruct               Cloth_Paramaters                                       (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FClothCoreSettingStruct          Cloth_Core_Settings                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ClothUpAxis                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  OnGround_Moving_SpeedLimit                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  OnGround_Moving_AngularVel_Max                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  OnGround_Moving_FictitiousVel_Max                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  LinVelScale_FwdBwd_Clamp                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  LinVelScale_UpDwn_Clamp                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  GameTimeInSeconds                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWindGustParamsStruct            WindGustsParams                                        (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWindGustLocalSettingStruct      WindGustLocalSettings                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           CurrentStateOut                                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// struct FClothSettingStruct              Cloth_Settings_Out                                     (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FClothCoreSettingStruct          Cloth_Core_Settings_Out                                (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWindGustSettingStruct           WindGustSettings_Out                                   (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWindGustLocalSettingStruct      WindGustLocalSettings_Out                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          GustStrength___WindVelocityOut                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LinearVelVector_DELETE_LATER                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Cloth_Controller_Function(class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance, const class FString& ClothingAssetName, const struct FClothParamsStruct& Cloth_Paramaters, const struct FClothCoreSettingStruct& Cloth_Core_Settings, const struct FVector& ClothUpAxis, double OnGround_Moving_SpeedLimit, double OnGround_Moving_AngularVel_Max, double OnGround_Moving_FictitiousVel_Max, double LinVelScale_FwdBwd_Clamp, double LinVelScale_UpDwn_Clamp, double DeltaTime, double GameTimeInSeconds, const struct FWindGustParamsStruct& WindGustsParams, const struct FWindGustLocalSettingStruct& WindGustLocalSettings, class UObject* __WorldContext, class FString* CurrentStateOut, struct FClothSettingStruct* Cloth_Settings_Out, struct FClothCoreSettingStruct* Cloth_Core_Settings_Out, struct FWindGustSettingStruct* WindGustSettings_Out, struct FWindGustLocalSettingStruct* WindGustLocalSettings_Out, struct FVector* GustStrength___WindVelocityOut, struct FVector* LinearVelVector_DELETE_LATER)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Cloth Controller Function");

	Params::FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function Parms{};

	Parms.CharacterPartAnimInstance = CharacterPartAnimInstance;
	Parms.ClothingAssetName = std::move(ClothingAssetName);
	Parms.Cloth_Paramaters = std::move(Cloth_Paramaters);
	Parms.Cloth_Core_Settings = std::move(Cloth_Core_Settings);
	Parms.ClothUpAxis = std::move(ClothUpAxis);
	Parms.OnGround_Moving_SpeedLimit = OnGround_Moving_SpeedLimit;
	Parms.OnGround_Moving_AngularVel_Max = OnGround_Moving_AngularVel_Max;
	Parms.OnGround_Moving_FictitiousVel_Max = OnGround_Moving_FictitiousVel_Max;
	Parms.LinVelScale_FwdBwd_Clamp = LinVelScale_FwdBwd_Clamp;
	Parms.LinVelScale_UpDwn_Clamp = LinVelScale_UpDwn_Clamp;
	Parms.DeltaTime = DeltaTime;
	Parms.GameTimeInSeconds = GameTimeInSeconds;
	Parms.WindGustsParams = std::move(WindGustsParams);
	Parms.WindGustLocalSettings = std::move(WindGustLocalSettings);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (CurrentStateOut != nullptr)
		*CurrentStateOut = std::move(Parms.CurrentStateOut);

	if (Cloth_Settings_Out != nullptr)
		*Cloth_Settings_Out = std::move(Parms.Cloth_Settings_Out);

	if (Cloth_Core_Settings_Out != nullptr)
		*Cloth_Core_Settings_Out = std::move(Parms.Cloth_Core_Settings_Out);

	if (WindGustSettings_Out != nullptr)
		*WindGustSettings_Out = std::move(Parms.WindGustSettings_Out);

	if (WindGustLocalSettings_Out != nullptr)
		*WindGustLocalSettings_Out = std::move(Parms.WindGustLocalSettings_Out);

	if (GustStrength___WindVelocityOut != nullptr)
		*GustStrength___WindVelocityOut = std::move(Parms.GustStrength___WindVelocityOut);

	if (LinearVelVector_DELETE_LATER != nullptr)
		*LinearVelVector_DELETE_LATER = std::move(Parms.LinearVelVector_DELETE_LATER);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Cloth Controller Function Nativization Wrapper
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           ClothingAssetName                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
// struct FClothControllerClothParameterMapCloth_Paramaters                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FClothCoreSettings               Cloth_Core_Settings                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// struct FVector                          ClothUpAxis                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  OnGround_Moving_Speed_Limit                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  OnGround_Moving_AngularVel_Max                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  OnGround_Moving_FictitiousVel_Max                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  LinVelScale_FwdBwd_Clamp                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  LinVelScale_UpDwn_Clamp                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   GameTimeInSeconds                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FClothControllerWindParameterMap WindGustsParams                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FWindGustSettings                WindGustLocalSettings                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName                             CharacterStateOut                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FClothParameters                 Cloth_Settings_Out                                     (Parm, OutParm, NoDestructor)
// struct FWindGustSettings                WindGustLocalSettings_Out                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          GustStrength___WindVelocityOut                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LinearVelVector_DELETE_LATER                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Cloth_Controller_Function_Nativization_Wrapper(const class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance, class FString& ClothingAssetName, const struct FClothControllerClothParameterMap& Cloth_Paramaters, struct FClothCoreSettings& Cloth_Core_Settings, const struct FVector& ClothUpAxis, double OnGround_Moving_Speed_Limit, double OnGround_Moving_AngularVel_Max, double OnGround_Moving_FictitiousVel_Max, double LinVelScale_FwdBwd_Clamp, double LinVelScale_UpDwn_Clamp, float DeltaTime, float GameTimeInSeconds, const struct FClothControllerWindParameterMap& WindGustsParams, struct FWindGustSettings& WindGustLocalSettings, class UObject* __WorldContext, class FName* CharacterStateOut, struct FClothParameters* Cloth_Settings_Out, struct FWindGustSettings* WindGustLocalSettings_Out, struct FVector* GustStrength___WindVelocityOut, struct FVector* LinearVelVector_DELETE_LATER)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Cloth Controller Function Nativization Wrapper");

	Params::FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function_Nativization_Wrapper Parms{};

	Parms.CharacterPartAnimInstance = CharacterPartAnimInstance;
	Parms.ClothingAssetName = std::move(ClothingAssetName);
	Parms.Cloth_Paramaters = std::move(Cloth_Paramaters);
	Parms.Cloth_Core_Settings = std::move(Cloth_Core_Settings);
	Parms.ClothUpAxis = std::move(ClothUpAxis);
	Parms.OnGround_Moving_Speed_Limit = OnGround_Moving_Speed_Limit;
	Parms.OnGround_Moving_AngularVel_Max = OnGround_Moving_AngularVel_Max;
	Parms.OnGround_Moving_FictitiousVel_Max = OnGround_Moving_FictitiousVel_Max;
	Parms.LinVelScale_FwdBwd_Clamp = LinVelScale_FwdBwd_Clamp;
	Parms.LinVelScale_UpDwn_Clamp = LinVelScale_UpDwn_Clamp;
	Parms.DeltaTime = DeltaTime;
	Parms.GameTimeInSeconds = GameTimeInSeconds;
	Parms.WindGustsParams = std::move(WindGustsParams);
	Parms.WindGustLocalSettings = std::move(WindGustLocalSettings);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	ClothingAssetName = std::move(Parms.ClothingAssetName);
	Cloth_Core_Settings = std::move(Parms.Cloth_Core_Settings);
	WindGustLocalSettings = std::move(Parms.WindGustLocalSettings);

	if (CharacterStateOut != nullptr)
		*CharacterStateOut = Parms.CharacterStateOut;

	if (Cloth_Settings_Out != nullptr)
		*Cloth_Settings_Out = std::move(Parms.Cloth_Settings_Out);

	if (WindGustLocalSettings_Out != nullptr)
		*WindGustLocalSettings_Out = std::move(Parms.WindGustLocalSettings_Out);

	if (GustStrength___WindVelocityOut != nullptr)
		*GustStrength___WindVelocityOut = std::move(Parms.GustStrength___WindVelocityOut);

	if (LinearVelVector_DELETE_LATER != nullptr)
		*LinearVelVector_DELETE_LATER = std::move(Parms.LinearVelVector_DELETE_LATER);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Cloth Controller Helper Scale For Player Movement
// (Static, Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          LinearVelScale                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PlayerFwdVector                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PlayerFwdVectorJump                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ClothUpX                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ClothUpZ                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LinearVelVectorOut                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Cloth_Controller_Helper_Scale_For_Player_Movement(const struct FVector& LinearVelScale, double PlayerFwdVector, double PlayerFwdVectorJump, double ClothUpX, double ClothUpZ, class UObject* __WorldContext, struct FVector* LinearVelVectorOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Cloth Controller Helper Scale For Player Movement");

	Params::FortAnimationBPFunctionLibrary_C_Cloth_Controller_Helper_Scale_For_Player_Movement Parms{};

	Parms.LinearVelScale = std::move(LinearVelScale);
	Parms.PlayerFwdVector = PlayerFwdVector;
	Parms.PlayerFwdVectorJump = PlayerFwdVectorJump;
	Parms.ClothUpX = ClothUpX;
	Parms.ClothUpZ = ClothUpZ;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (LinearVelVectorOut != nullptr)
		*LinearVelVectorOut = std::move(Parms.LinearVelVectorOut);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Cloth Controller Setter Function
// (Static, Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FClothSettingStruct              Cloth_Settings                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FClothSettingStruct              Cloth_Settings_Out                                     (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Cloth_Controller_Setter_Function(class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance, const struct FClothSettingStruct& Cloth_Settings, class UObject* __WorldContext, struct FClothSettingStruct* Cloth_Settings_Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Cloth Controller Setter Function");

	Params::FortAnimationBPFunctionLibrary_C_Cloth_Controller_Setter_Function Parms{};

	Parms.CharacterPartAnimInstance = CharacterPartAnimInstance;
	Parms.Cloth_Settings = std::move(Cloth_Settings);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Cloth_Settings_Out != nullptr)
		*Cloth_Settings_Out = std::move(Parms.Cloth_Settings_Out);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.ComplexSimSpaceFunction
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  InterpSpeedMax                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PawnSpeedMax                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  RInterpErrorTolerance                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DebugDraw                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         sim_space_rotation_in                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    inComponentSpaceIn                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    inComponentSpaceLastFrameIn                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    lockedOnSimSpaceIn                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InterpSpeedIn                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         sim_space_rotation                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    inComponentSpaceOut                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    inComponentSpaceLastFrameOut                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    lockedOnSimSpaceOut                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InterpSpeedOut                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::ComplexSimSpaceFunction(class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance, double InterpSpeedMax, double PawnSpeedMax, double RInterpErrorTolerance, double DeltaTime, bool DebugDraw, const struct FRotator& sim_space_rotation_in, bool inComponentSpaceIn, bool inComponentSpaceLastFrameIn, bool lockedOnSimSpaceIn, double InterpSpeedIn, class UObject* __WorldContext, struct FRotator* sim_space_rotation, bool* inComponentSpaceOut, bool* inComponentSpaceLastFrameOut, bool* lockedOnSimSpaceOut, double* InterpSpeedOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "ComplexSimSpaceFunction");

	Params::FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction Parms{};

	Parms.CharacterPartAnimInstance = CharacterPartAnimInstance;
	Parms.InterpSpeedMax = InterpSpeedMax;
	Parms.PawnSpeedMax = PawnSpeedMax;
	Parms.RInterpErrorTolerance = RInterpErrorTolerance;
	Parms.DeltaTime = DeltaTime;
	Parms.DebugDraw = DebugDraw;
	Parms.sim_space_rotation_in = std::move(sim_space_rotation_in);
	Parms.inComponentSpaceIn = inComponentSpaceIn;
	Parms.inComponentSpaceLastFrameIn = inComponentSpaceLastFrameIn;
	Parms.lockedOnSimSpaceIn = lockedOnSimSpaceIn;
	Parms.InterpSpeedIn = InterpSpeedIn;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (sim_space_rotation != nullptr)
		*sim_space_rotation = std::move(Parms.sim_space_rotation);

	if (inComponentSpaceOut != nullptr)
		*inComponentSpaceOut = Parms.inComponentSpaceOut;

	if (inComponentSpaceLastFrameOut != nullptr)
		*inComponentSpaceLastFrameOut = Parms.inComponentSpaceLastFrameOut;

	if (lockedOnSimSpaceOut != nullptr)
		*lockedOnSimSpaceOut = Parms.lockedOnSimSpaceOut;

	if (InterpSpeedOut != nullptr)
		*InterpSpeedOut = Parms.InterpSpeedOut;
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.ConvertToNativizedClothParameters
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FClothSettingStruct              ClothSettingStruct                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FClothParameters                 ClothParameters                                        (Parm, OutParm, NoDestructor)

void UFortAnimationBPFunctionLibrary_C::ConvertToNativizedClothParameters(const struct FClothSettingStruct& ClothSettingStruct, class UObject* __WorldContext, struct FClothParameters* ClothParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "ConvertToNativizedClothParameters");

	Params::FortAnimationBPFunctionLibrary_C_ConvertToNativizedClothParameters Parms{};

	Parms.ClothSettingStruct = std::move(ClothSettingStruct);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ClothParameters != nullptr)
		*ClothParameters = std::move(Parms.ClothParameters);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.ConvertToNativizedWindParameters
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FWindGustSettingStruct           WindGustSettingStruct                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FWindGustParameters              WindGustParameters                                     (Parm, OutParm, NoDestructor)

void UFortAnimationBPFunctionLibrary_C::ConvertToNativizedWindParameters(const struct FWindGustSettingStruct& WindGustSettingStruct, class UObject* __WorldContext, struct FWindGustParameters* WindGustParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "ConvertToNativizedWindParameters");

	Params::FortAnimationBPFunctionLibrary_C_ConvertToNativizedWindParameters Parms{};

	Parms.WindGustSettingStruct = std::move(WindGustSettingStruct);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (WindGustParameters != nullptr)
		*WindGustParameters = std::move(Parms.WindGustParameters);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Debug Cloth Teleport Threshold Function
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  MinDistance                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MinRotation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  SkelMeshComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    PrintToScreen                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          InVector                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         PawnDeltaRotation                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// double                                  PrintToScreenDuration                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Rotation                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Debug_Cloth_Teleport_Threshold_Function(double MinDistance, double MinRotation, class USceneComponent* SkelMeshComponent, bool PrintToScreen, class FName BoneName, struct FVector& InVector, const struct FRotator& PawnDeltaRotation, double PrintToScreenDuration, class UObject* __WorldContext, double* Distance, double* Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Debug Cloth Teleport Threshold Function");

	Params::FortAnimationBPFunctionLibrary_C_Debug_Cloth_Teleport_Threshold_Function Parms{};

	Parms.MinDistance = MinDistance;
	Parms.MinRotation = MinRotation;
	Parms.SkelMeshComponent = SkelMeshComponent;
	Parms.PrintToScreen = PrintToScreen;
	Parms.BoneName = BoneName;
	Parms.InVector = std::move(InVector);
	Parms.PawnDeltaRotation = std::move(PawnDeltaRotation);
	Parms.PrintToScreenDuration = PrintToScreenDuration;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	InVector = std::move(Parms.InVector);

	if (Distance != nullptr)
		*Distance = Parms.Distance;

	if (Rotation != nullptr)
		*Rotation = Parms.Rotation;
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.DrawJointDebugFunction
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  SkelMeshComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          JointOffset                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FName>                     JointName                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// double                                  Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Thickness                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DebugDraw                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::DrawJointDebugFunction(class USceneComponent* SkelMeshComponent, const struct FVector& JointOffset, TArray<class FName>& JointName, double Scale, double Duration, double Thickness, bool DebugDraw, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "DrawJointDebugFunction");

	Params::FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction Parms{};

	Parms.SkelMeshComponent = SkelMeshComponent;
	Parms.JointOffset = std::move(JointOffset);
	Parms.JointName = std::move(JointName);
	Parms.Scale = Scale;
	Parms.Duration = Duration;
	Parms.Thickness = Thickness;
	Parms.DebugDraw = DebugDraw;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	JointName = std::move(Parms.JointName);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.DrawVectorFromJointFunction
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  SkelMeshComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FName                             JointName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LineEnd                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          JointOffset                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     LineColor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Thickness                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::DrawVectorFromJointFunction(class USceneComponent* SkelMeshComponent, class FName JointName, const struct FVector& LineEnd, const struct FVector& JointOffset, const struct FLinearColor& LineColor, double Thickness, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "DrawVectorFromJointFunction");

	Params::FortAnimationBPFunctionLibrary_C_DrawVectorFromJointFunction Parms{};

	Parms.SkelMeshComponent = SkelMeshComponent;
	Parms.JointName = JointName;
	Parms.LineEnd = std::move(LineEnd);
	Parms.JointOffset = std::move(JointOffset);
	Parms.LineColor = std::move(LineColor);
	Parms.Thickness = Thickness;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.FN_PSDPoseReaderFNC
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           startJnt                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           endJnt                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           poseJnt                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// double                                  Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Debug                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           SkeletalMeshComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  pose_output                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::FN_PSDPoseReaderFNC(const class FString& startJnt, const class FString& endJnt, const class FString& poseJnt, double Angle, bool Debug, class USkeletalMeshComponent* SkeletalMeshComponent, class UObject* __WorldContext, double* pose_output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "FN_PSDPoseReaderFNC");

	Params::FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC Parms{};

	Parms.startJnt = std::move(startJnt);
	Parms.endJnt = std::move(endJnt);
	Parms.poseJnt = std::move(poseJnt);
	Parms.Angle = Angle;
	Parms.Debug = Debug;
	Parms.SkeletalMeshComponent = SkeletalMeshComponent;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (pose_output != nullptr)
		*pose_output = Parms.pose_output;
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Get Joint Location Relative to Bone
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Target_Joint                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Relative_Joint                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Offset                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMeshComponent*                   SkelMeshComponent                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Debug_Draw                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Joint_Location_Vector                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Get_Joint_Location_Relative_to_Bone(class FName Target_Joint, class FName Relative_Joint, const struct FVector& Offset, const class UMeshComponent* SkelMeshComponent, bool Debug_Draw, class UObject* __WorldContext, struct FVector* Joint_Location_Vector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Get Joint Location Relative to Bone");

	Params::FortAnimationBPFunctionLibrary_C_Get_Joint_Location_Relative_to_Bone Parms{};

	Parms.Target_Joint = Target_Joint;
	Parms.Relative_Joint = Relative_Joint;
	Parms.Offset = std::move(Offset);
	Parms.SkelMeshComponent = SkelMeshComponent;
	Parms.Debug_Draw = Debug_Draw;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Joint_Location_Vector != nullptr)
		*Joint_Location_Vector = std::move(Parms.Joint_Location_Vector);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Gravity Override Function
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  GameTimeInSeconds                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          WindFreq                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          WindAmp                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          WindOffset                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          GoingUpGravityOverride                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ComingDownGravityOverride                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          DivingDownGravityOverride                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ParachuteOpenedGravityOverride                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          GroundWindFreq                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          GroundWindAmp                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          GroundWindOffset                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          OnGroundGravityOverride                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          SwimmingGravityOverride                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             JointName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          GravityOverride                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Gravity_Override_Function(class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance, const double GameTimeInSeconds, const struct FVector& WindFreq, const struct FVector& WindAmp, const struct FVector& WindOffset, const struct FVector& GoingUpGravityOverride, const struct FVector& ComingDownGravityOverride, const struct FVector& DivingDownGravityOverride, const struct FVector& ParachuteOpenedGravityOverride, const struct FVector& GroundWindFreq, const struct FVector& GroundWindAmp, const struct FVector& GroundWindOffset, const struct FVector& OnGroundGravityOverride, const struct FVector& SwimmingGravityOverride, class FName JointName, class UObject* __WorldContext, struct FVector* GravityOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Gravity Override Function");

	Params::FortAnimationBPFunctionLibrary_C_Gravity_Override_Function Parms{};

	Parms.CharacterPartAnimInstance = CharacterPartAnimInstance;
	Parms.GameTimeInSeconds = GameTimeInSeconds;
	Parms.WindFreq = std::move(WindFreq);
	Parms.WindAmp = std::move(WindAmp);
	Parms.WindOffset = std::move(WindOffset);
	Parms.GoingUpGravityOverride = std::move(GoingUpGravityOverride);
	Parms.ComingDownGravityOverride = std::move(ComingDownGravityOverride);
	Parms.DivingDownGravityOverride = std::move(DivingDownGravityOverride);
	Parms.ParachuteOpenedGravityOverride = std::move(ParachuteOpenedGravityOverride);
	Parms.GroundWindFreq = std::move(GroundWindFreq);
	Parms.GroundWindAmp = std::move(GroundWindAmp);
	Parms.GroundWindOffset = std::move(GroundWindOffset);
	Parms.OnGroundGravityOverride = std::move(OnGroundGravityOverride);
	Parms.SwimmingGravityOverride = std::move(SwimmingGravityOverride);
	Parms.JointName = JointName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (GravityOverride != nullptr)
		*GravityOverride = std::move(Parms.GravityOverride);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Gravity Override Setter Function
// (Static, Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UMeshComponent*                   SkelMeshComponent                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FGravityOverrideSettingStruct    GravityOverride_Settings                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  GameTimeInSeconds                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGravityOverrideSettingStruct    GravityOverride_Settings_Out                           (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          GravityOverride_Out                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Gravity_Override_Setter_Function(class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance, const class UMeshComponent* SkelMeshComponent, const struct FGravityOverrideSettingStruct& GravityOverride_Settings, double GameTimeInSeconds, class UObject* __WorldContext, struct FGravityOverrideSettingStruct* GravityOverride_Settings_Out, struct FVector* GravityOverride_Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Gravity Override Setter Function");

	Params::FortAnimationBPFunctionLibrary_C_Gravity_Override_Setter_Function Parms{};

	Parms.CharacterPartAnimInstance = CharacterPartAnimInstance;
	Parms.SkelMeshComponent = SkelMeshComponent;
	Parms.GravityOverride_Settings = std::move(GravityOverride_Settings);
	Parms.GameTimeInSeconds = GameTimeInSeconds;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (GravityOverride_Settings_Out != nullptr)
		*GravityOverride_Settings_Out = std::move(Parms.GravityOverride_Settings_Out);

	if (GravityOverride_Out != nullptr)
		*GravityOverride_Out = std::move(Parms.GravityOverride_Out);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Gravity Override State Function
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  GameTimeInSeconds                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGravityOverrideParamsStruct     GravityOverrideParams                                  (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DebugDraw                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             DebugJointName                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          GravityOverride                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           CurrentStateOut                                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// struct FGravityOverrideSettingStruct    GravityOverrideSettingsOut                             (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Gravity_Override_State_Function(class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance, const double GameTimeInSeconds, const struct FGravityOverrideParamsStruct& GravityOverrideParams, bool DebugDraw, class FName DebugJointName, class UObject* __WorldContext, struct FVector* GravityOverride, class FString* CurrentStateOut, struct FGravityOverrideSettingStruct* GravityOverrideSettingsOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Gravity Override State Function");

	Params::FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function Parms{};

	Parms.CharacterPartAnimInstance = CharacterPartAnimInstance;
	Parms.GameTimeInSeconds = GameTimeInSeconds;
	Parms.GravityOverrideParams = std::move(GravityOverrideParams);
	Parms.DebugDraw = DebugDraw;
	Parms.DebugJointName = DebugJointName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (GravityOverride != nullptr)
		*GravityOverride = std::move(Parms.GravityOverride);

	if (CurrentStateOut != nullptr)
		*CurrentStateOut = std::move(Parms.CurrentStateOut);

	if (GravityOverrideSettingsOut != nullptr)
		*GravityOverrideSettingsOut = std::move(Parms.GravityOverrideSettingsOut);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Play Transformation Montage
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  FortPlayerPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Play_Transformation_Montage(class AFortPlayerPawn* FortPlayerPawn, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Play Transformation Montage");

	Params::FortAnimationBPFunctionLibrary_C_Play_Transformation_Montage Parms{};

	Parms.FortPlayerPawn = FortPlayerPawn;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Player Movement Function
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  X_Dot_Product                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Y_Dot_Product                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Z_Dot_Product                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DrawDebug                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Debug_Scalar                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  X_Movement                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Y_Movement                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Z_Movement                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Player_Movement_Function(class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance, double X_Dot_Product, double Y_Dot_Product, double Z_Dot_Product, bool DrawDebug, double Debug_Scalar, class UObject* __WorldContext, double* X_Movement, double* Y_Movement, double* Z_Movement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Player Movement Function");

	Params::FortAnimationBPFunctionLibrary_C_Player_Movement_Function Parms{};

	Parms.CharacterPartAnimInstance = CharacterPartAnimInstance;
	Parms.X_Dot_Product = X_Dot_Product;
	Parms.Y_Dot_Product = Y_Dot_Product;
	Parms.Z_Dot_Product = Z_Dot_Product;
	Parms.DrawDebug = DrawDebug;
	Parms.Debug_Scalar = Debug_Scalar;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (X_Movement != nullptr)
		*X_Movement = Parms.X_Movement;

	if (Y_Movement != nullptr)
		*Y_Movement = Parms.Y_Movement;

	if (Z_Movement != nullptr)
		*Z_Movement = Parms.Z_Movement;
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Random Vector Function
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UMeshComponent*                   SkelMeshComponent                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FName                             JointName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  GameTimeInSeconds                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  TimeOffset                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PerlinScale                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Frequency                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Amplitude                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Offset                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          VectorOut                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Random_Vector_Function(class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance, const class UMeshComponent* SkelMeshComponent, class FName JointName, double GameTimeInSeconds, double TimeOffset, double PerlinScale, const struct FVector& Frequency, const struct FVector& Amplitude, const struct FVector& Offset, class UObject* __WorldContext, struct FVector* VectorOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Random Vector Function");

	Params::FortAnimationBPFunctionLibrary_C_Random_Vector_Function Parms{};

	Parms.CharacterPartAnimInstance = CharacterPartAnimInstance;
	Parms.SkelMeshComponent = SkelMeshComponent;
	Parms.JointName = JointName;
	Parms.GameTimeInSeconds = GameTimeInSeconds;
	Parms.TimeOffset = TimeOffset;
	Parms.PerlinScale = PerlinScale;
	Parms.Frequency = std::move(Frequency);
	Parms.Amplitude = std::move(Amplitude);
	Parms.Offset = std::move(Offset);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (VectorOut != nullptr)
		*VectorOut = std::move(Parms.VectorOut);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.RandomRotatorFunction
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  GameTimeInSeconds                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PerlinScale                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Frequency                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         Amplitude                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         Offset                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// double                                  TimeOffset                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         RandomRotator                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UFortAnimationBPFunctionLibrary_C::RandomRotatorFunction(double GameTimeInSeconds, double PerlinScale, const struct FRotator& Frequency, const struct FRotator& Amplitude, const struct FRotator& Offset, double TimeOffset, class UObject* __WorldContext, struct FRotator* RandomRotator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "RandomRotatorFunction");

	Params::FortAnimationBPFunctionLibrary_C_RandomRotatorFunction Parms{};

	Parms.GameTimeInSeconds = GameTimeInSeconds;
	Parms.PerlinScale = PerlinScale;
	Parms.Frequency = std::move(Frequency);
	Parms.Amplitude = std::move(Amplitude);
	Parms.Offset = std::move(Offset);
	Parms.TimeOffset = TimeOffset;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (RandomRotator != nullptr)
		*RandomRotator = std::move(Parms.RandomRotator);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Scale Joint Rotation Function
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             TargetBone                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ReferenceBone                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkinnedMeshComponent*            SkelMeshComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         FinalRotation                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         OriginalRotation                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UFortAnimationBPFunctionLibrary_C::Scale_Joint_Rotation_Function(const struct FRotator& Scale, class FName TargetBone, class FName ReferenceBone, class USkinnedMeshComponent* SkelMeshComponent, class UObject* __WorldContext, struct FRotator* FinalRotation, struct FRotator* OriginalRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Scale Joint Rotation Function");

	Params::FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function Parms{};

	Parms.Scale = std::move(Scale);
	Parms.TargetBone = TargetBone;
	Parms.ReferenceBone = ReferenceBone;
	Parms.SkelMeshComponent = SkelMeshComponent;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (FinalRotation != nullptr)
		*FinalRotation = std::move(Parms.FinalRotation);

	if (OriginalRotation != nullptr)
		*OriginalRotation = std::move(Parms.OriginalRotation);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Separated Cloth Control Calculate Parameters
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCustomCharacterPartAnimInstance* InCharacterPartAnimInstance                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FClothParamsStruct               Cloth_Paramaters                                       (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FClothCoreSettingStruct          Cloth_Core_Settings                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ClothUpAxis                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  OnGround_Moving_SpeedLimit                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  OnGround_Moving_AngularVel_Max                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  OnGround_Moving_FictitiousVel_Max                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  LinVelScale_FwdBwd_Clamp                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  LinVelScale_UpDwn_Clamp                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  GameTimeInSeconds                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWindGustParamsStruct            InWindGustParams                                       (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWindGustLocalSettingStruct      InWindGustLocalSettings                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           OutCurrentState                                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// struct FClothCoreSettingStruct          OutClothCoreSettings                                   (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FClothSettingStruct              OutClothSettings                                       (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWindGustSettingStruct           OutWindGustSettings                                    (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWindGustLocalSettingStruct      OutWindGustLocalSettings                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          OutGustStrength                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LinearVelVector_DELETE_LATER                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Separated_Cloth_Control_Calculate_Parameters(class UCustomCharacterPartAnimInstance* InCharacterPartAnimInstance, const struct FClothParamsStruct& Cloth_Paramaters, const struct FClothCoreSettingStruct& Cloth_Core_Settings, const struct FVector& ClothUpAxis, double OnGround_Moving_SpeedLimit, double OnGround_Moving_AngularVel_Max, double OnGround_Moving_FictitiousVel_Max, double LinVelScale_FwdBwd_Clamp, double LinVelScale_UpDwn_Clamp, double DeltaTime, double GameTimeInSeconds, const struct FWindGustParamsStruct& InWindGustParams, const struct FWindGustLocalSettingStruct& InWindGustLocalSettings, class UObject* __WorldContext, class FString* OutCurrentState, struct FClothCoreSettingStruct* OutClothCoreSettings, struct FClothSettingStruct* OutClothSettings, struct FWindGustSettingStruct* OutWindGustSettings, struct FWindGustLocalSettingStruct* OutWindGustLocalSettings, struct FVector* OutGustStrength, struct FVector* LinearVelVector_DELETE_LATER)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Separated Cloth Control Calculate Parameters");

	Params::FortAnimationBPFunctionLibrary_C_Separated_Cloth_Control_Calculate_Parameters Parms{};

	Parms.InCharacterPartAnimInstance = InCharacterPartAnimInstance;
	Parms.Cloth_Paramaters = std::move(Cloth_Paramaters);
	Parms.Cloth_Core_Settings = std::move(Cloth_Core_Settings);
	Parms.ClothUpAxis = std::move(ClothUpAxis);
	Parms.OnGround_Moving_SpeedLimit = OnGround_Moving_SpeedLimit;
	Parms.OnGround_Moving_AngularVel_Max = OnGround_Moving_AngularVel_Max;
	Parms.OnGround_Moving_FictitiousVel_Max = OnGround_Moving_FictitiousVel_Max;
	Parms.LinVelScale_FwdBwd_Clamp = LinVelScale_FwdBwd_Clamp;
	Parms.LinVelScale_UpDwn_Clamp = LinVelScale_UpDwn_Clamp;
	Parms.DeltaTime = DeltaTime;
	Parms.GameTimeInSeconds = GameTimeInSeconds;
	Parms.InWindGustParams = std::move(InWindGustParams);
	Parms.InWindGustLocalSettings = std::move(InWindGustLocalSettings);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (OutCurrentState != nullptr)
		*OutCurrentState = std::move(Parms.OutCurrentState);

	if (OutClothCoreSettings != nullptr)
		*OutClothCoreSettings = std::move(Parms.OutClothCoreSettings);

	if (OutClothSettings != nullptr)
		*OutClothSettings = std::move(Parms.OutClothSettings);

	if (OutWindGustSettings != nullptr)
		*OutWindGustSettings = std::move(Parms.OutWindGustSettings);

	if (OutWindGustLocalSettings != nullptr)
		*OutWindGustLocalSettings = std::move(Parms.OutWindGustLocalSettings);

	if (OutGustStrength != nullptr)
		*OutGustStrength = std::move(Parms.OutGustStrength);

	if (LinearVelVector_DELETE_LATER != nullptr)
		*LinearVelVector_DELETE_LATER = std::move(Parms.LinearVelVector_DELETE_LATER);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Separated Cloth Control Function
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           ClothingAssetName                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FClothParamsStruct               Cloth_Paramaters                                       (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FClothCoreSettingStruct          Cloth_Core_Settings                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ClothUpAxis                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  OnGround_Moving_SpeedLimit                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  OnGround_Moving_AngularVel_Max                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  OnGround_Moving_FictitiousVel_Max                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  LinVelScale_FwdBwd_Clamp                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  LinVelScale_UpDwn_Clamp                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  GameTimeInSeconds                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWindGustParamsStruct            WindGustsParams                                        (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWindGustLocalSettingStruct      WindGustLocalSettings                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           CurrentStateOut                                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// struct FClothCoreSettingStruct          Cloth_Core_Settings_Out                                (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FClothSettingStruct              Cloth_Settings_Out                                     (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWindGustSettingStruct           WindGustSettings_Out                                   (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWindGustLocalSettingStruct      WindGustLocalSettings_Out                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          GustStrength___WindVelocityOut                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LinearVelVector_DELETE_LATER                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Separated_Cloth_Control_Function(class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance, const class FString& ClothingAssetName, const struct FClothParamsStruct& Cloth_Paramaters, const struct FClothCoreSettingStruct& Cloth_Core_Settings, const struct FVector& ClothUpAxis, double OnGround_Moving_SpeedLimit, double OnGround_Moving_AngularVel_Max, double OnGround_Moving_FictitiousVel_Max, double LinVelScale_FwdBwd_Clamp, double LinVelScale_UpDwn_Clamp, double DeltaTime, double GameTimeInSeconds, const struct FWindGustParamsStruct& WindGustsParams, const struct FWindGustLocalSettingStruct& WindGustLocalSettings, class UObject* __WorldContext, class FString* CurrentStateOut, struct FClothCoreSettingStruct* Cloth_Core_Settings_Out, struct FClothSettingStruct* Cloth_Settings_Out, struct FWindGustSettingStruct* WindGustSettings_Out, struct FWindGustLocalSettingStruct* WindGustLocalSettings_Out, struct FVector* GustStrength___WindVelocityOut, struct FVector* LinearVelVector_DELETE_LATER)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Separated Cloth Control Function");

	Params::FortAnimationBPFunctionLibrary_C_Separated_Cloth_Control_Function Parms{};

	Parms.CharacterPartAnimInstance = CharacterPartAnimInstance;
	Parms.ClothingAssetName = std::move(ClothingAssetName);
	Parms.Cloth_Paramaters = std::move(Cloth_Paramaters);
	Parms.Cloth_Core_Settings = std::move(Cloth_Core_Settings);
	Parms.ClothUpAxis = std::move(ClothUpAxis);
	Parms.OnGround_Moving_SpeedLimit = OnGround_Moving_SpeedLimit;
	Parms.OnGround_Moving_AngularVel_Max = OnGround_Moving_AngularVel_Max;
	Parms.OnGround_Moving_FictitiousVel_Max = OnGround_Moving_FictitiousVel_Max;
	Parms.LinVelScale_FwdBwd_Clamp = LinVelScale_FwdBwd_Clamp;
	Parms.LinVelScale_UpDwn_Clamp = LinVelScale_UpDwn_Clamp;
	Parms.DeltaTime = DeltaTime;
	Parms.GameTimeInSeconds = GameTimeInSeconds;
	Parms.WindGustsParams = std::move(WindGustsParams);
	Parms.WindGustLocalSettings = std::move(WindGustLocalSettings);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (CurrentStateOut != nullptr)
		*CurrentStateOut = std::move(Parms.CurrentStateOut);

	if (Cloth_Core_Settings_Out != nullptr)
		*Cloth_Core_Settings_Out = std::move(Parms.Cloth_Core_Settings_Out);

	if (Cloth_Settings_Out != nullptr)
		*Cloth_Settings_Out = std::move(Parms.Cloth_Settings_Out);

	if (WindGustSettings_Out != nullptr)
		*WindGustSettings_Out = std::move(Parms.WindGustSettings_Out);

	if (WindGustLocalSettings_Out != nullptr)
		*WindGustLocalSettings_Out = std::move(Parms.WindGustLocalSettings_Out);

	if (GustStrength___WindVelocityOut != nullptr)
		*GustStrength___WindVelocityOut = std::move(Parms.GustStrength___WindVelocityOut);

	if (LinearVelVector_DELETE_LATER != nullptr)
		*LinearVelVector_DELETE_LATER = std::move(Parms.LinearVelVector_DELETE_LATER);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Separated Cloth Control Wind Gust Function
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  GameTimeInSeconds                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             JointName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWindGustSettingStruct           WindGustSettings                                       (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWindGustLocalSettingStruct      WindGustLocalSettings                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          GustStrengthWindVelocity_Out                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWindGustLocalSettingStruct      WindGustLocalSettingsOut                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Separated_Cloth_Control_Wind_Gust_Function(double DeltaTime, double GameTimeInSeconds, class FName JointName, const struct FWindGustSettingStruct& WindGustSettings, const struct FWindGustLocalSettingStruct& WindGustLocalSettings, class UObject* __WorldContext, struct FVector* GustStrengthWindVelocity_Out, struct FWindGustLocalSettingStruct* WindGustLocalSettingsOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Separated Cloth Control Wind Gust Function");

	Params::FortAnimationBPFunctionLibrary_C_Separated_Cloth_Control_Wind_Gust_Function Parms{};

	Parms.DeltaTime = DeltaTime;
	Parms.GameTimeInSeconds = GameTimeInSeconds;
	Parms.JointName = JointName;
	Parms.WindGustSettings = std::move(WindGustSettings);
	Parms.WindGustLocalSettings = std::move(WindGustLocalSettings);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (GustStrengthWindVelocity_Out != nullptr)
		*GustStrengthWindVelocity_Out = std::move(Parms.GustStrengthWindVelocity_Out);

	if (WindGustLocalSettingsOut != nullptr)
		*WindGustLocalSettingsOut = std::move(Parms.WindGustLocalSettingsOut);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Separated Cloth Control Write To Instance
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCustomCharacterPartAnimInstance* Character_Part_Anim_Instance                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           Clothing_Asset_Name                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FClothCoreSettingStruct          Cloth_Core_Settings                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FClothSettingStruct              Cloth_Settings                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Gust_Strength___Wind_Velocity                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Joint_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Separated_Cloth_Control_Write_To_Instance(class UCustomCharacterPartAnimInstance* Character_Part_Anim_Instance, const class FString& Clothing_Asset_Name, const struct FClothCoreSettingStruct& Cloth_Core_Settings, const struct FClothSettingStruct& Cloth_Settings, const struct FVector& Gust_Strength___Wind_Velocity, class FName Joint_Name, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Separated Cloth Control Write To Instance");

	Params::FortAnimationBPFunctionLibrary_C_Separated_Cloth_Control_Write_To_Instance Parms{};

	Parms.Character_Part_Anim_Instance = Character_Part_Anim_Instance;
	Parms.Clothing_Asset_Name = std::move(Clothing_Asset_Name);
	Parms.Cloth_Core_Settings = std::move(Cloth_Core_Settings);
	Parms.Cloth_Settings = std::move(Cloth_Settings);
	Parms.Gust_Strength___Wind_Velocity = std::move(Gust_Strength___Wind_Velocity);
	Parms.Joint_Name = Joint_Name;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Set Transformation Montage
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  FortPlayerPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     Montage                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  StartTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Set_Transformation_Montage(class AFortPlayerPawn* FortPlayerPawn, class UAnimMontage* Montage, double StartTime, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Set Transformation Montage");

	Params::FortAnimationBPFunctionLibrary_C_Set_Transformation_Montage Parms{};

	Parms.FortPlayerPawn = FortPlayerPawn;
	Parms.Montage = Montage;
	Parms.StartTime = StartTime;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Wind Gust Control Function
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  GameTimeInSeconds                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             JointName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWindGustSettingStruct           WindGustSettings                                       (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWindGustLocalSettingStruct      WindGustLocalSettings                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          GustStrengthWindVelocity_Out                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWindGustLocalSettingStruct      WindGustLocalSettingsOut                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Wind_Gust_Control_Function(class UCustomCharacterPartAnimInstance* CharacterPartAnimInstance, double DeltaTime, double GameTimeInSeconds, class FName JointName, const struct FWindGustSettingStruct& WindGustSettings, const struct FWindGustLocalSettingStruct& WindGustLocalSettings, class UObject* __WorldContext, struct FVector* GustStrengthWindVelocity_Out, struct FWindGustLocalSettingStruct* WindGustLocalSettingsOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "Wind Gust Control Function");

	Params::FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function Parms{};

	Parms.CharacterPartAnimInstance = CharacterPartAnimInstance;
	Parms.DeltaTime = DeltaTime;
	Parms.GameTimeInSeconds = GameTimeInSeconds;
	Parms.JointName = JointName;
	Parms.WindGustSettings = std::move(WindGustSettings);
	Parms.WindGustLocalSettings = std::move(WindGustLocalSettings);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (GustStrengthWindVelocity_Out != nullptr)
		*GustStrengthWindVelocity_Out = std::move(Parms.GustStrengthWindVelocity_Out);

	if (WindGustLocalSettingsOut != nullptr)
		*WindGustLocalSettingsOut = std::move(Parms.WindGustLocalSettingsOut);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.WindGustGeneratorFunction
// (Static, Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWindGustSettingStruct           GustSettings                                           (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWindGustLocalSettingStruct      ClothGustLocalSettings                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  GustStrength___WindVelocity                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWindGustLocalSettingStruct      ClothGustLocalSettingsOut                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::WindGustGeneratorFunction(double DeltaTime, const struct FWindGustSettingStruct& GustSettings, const struct FWindGustLocalSettingStruct& ClothGustLocalSettings, class UObject* __WorldContext, double* GustStrength___WindVelocity, struct FWindGustLocalSettingStruct* ClothGustLocalSettingsOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAnimationBPFunctionLibrary_C", "WindGustGeneratorFunction");

	Params::FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction Parms{};

	Parms.DeltaTime = DeltaTime;
	Parms.GustSettings = std::move(GustSettings);
	Parms.ClothGustLocalSettings = std::move(ClothGustLocalSettings);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (GustStrength___WindVelocity != nullptr)
		*GustStrength___WindVelocity = Parms.GustStrength___WindVelocity;

	if (ClothGustLocalSettingsOut != nullptr)
		*ClothGustLocalSettingsOut = std::move(Parms.ClothGustLocalSettingsOut);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Get  Motion Vector For Transform Function
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  Skeletal_Mesh                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FName                             Transform_Name                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Previous_Transform_Location                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Transform_Motion_Vector                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Transform_Location                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       Transform                                              (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Get__Motion_Vector_For_Transform_Function(class USceneComponent* Skeletal_Mesh, class FName Transform_Name, struct FVector& Previous_Transform_Location, class UObject* __WorldContext, struct FVector* Transform_Motion_Vector, struct FVector* Transform_Location, struct FTransform* Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAnimationBPFunctionLibrary_C", "Get  Motion Vector For Transform Function");

	Params::FortAnimationBPFunctionLibrary_C_Get__Motion_Vector_For_Transform_Function Parms{};

	Parms.Skeletal_Mesh = Skeletal_Mesh;
	Parms.Transform_Name = Transform_Name;
	Parms.Previous_Transform_Location = std::move(Previous_Transform_Location);
	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);

	Previous_Transform_Location = std::move(Parms.Previous_Transform_Location);

	if (Transform_Motion_Vector != nullptr)
		*Transform_Motion_Vector = std::move(Parms.Transform_Motion_Vector);

	if (Transform_Location != nullptr)
		*Transform_Location = std::move(Parms.Transform_Location);

	if (Transform != nullptr)
		*Transform = std::move(Parms.Transform);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Get WPO Regional Param Names Function
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Region                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName                             Velocity                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Bone_Position                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Bone_Vector                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Get_WPO_Regional_Param_Names_Function(int32& Region, class UObject* __WorldContext, class FName* Velocity, class FName* Bone_Position, class FName* Bone_Vector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAnimationBPFunctionLibrary_C", "Get WPO Regional Param Names Function");

	Params::FortAnimationBPFunctionLibrary_C_Get_WPO_Regional_Param_Names_Function Parms{};

	Parms.Region = Region;
	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);

	Region = Parms.Region;

	if (Velocity != nullptr)
		*Velocity = Parms.Velocity;

	if (Bone_Position != nullptr)
		*Bone_Position = Parms.Bone_Position;

	if (Bone_Vector != nullptr)
		*Bone_Vector = Parms.Bone_Vector;
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Set WPO Globals Function
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic*         Material                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstanceDynamic*         Overlay_Material                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           Skeletal_Mesh                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FName                             Local_Noise_Reference_Transform                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Local_Noise_Offset_Multiplier                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Local_Noise_Transform__Location                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Local_Noise_Offset                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Local_Turbulence_Vector_Transform                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EAxis                                   Local_Turbulence_Vector_Transform_Axis                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Set_WPO_Globals_Function(class UMaterialInstanceDynamic* Material, class UMaterialInstanceDynamic* Overlay_Material, class USkeletalMeshComponent* Skeletal_Mesh, class FName Local_Noise_Reference_Transform, double Local_Noise_Offset_Multiplier, struct FVector& Local_Noise_Transform__Location, struct FVector& Local_Noise_Offset, class FName Local_Turbulence_Vector_Transform, EAxis Local_Turbulence_Vector_Transform_Axis, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAnimationBPFunctionLibrary_C", "Set WPO Globals Function");

	Params::FortAnimationBPFunctionLibrary_C_Set_WPO_Globals_Function Parms{};

	Parms.Material = Material;
	Parms.Overlay_Material = Overlay_Material;
	Parms.Skeletal_Mesh = Skeletal_Mesh;
	Parms.Local_Noise_Reference_Transform = Local_Noise_Reference_Transform;
	Parms.Local_Noise_Offset_Multiplier = Local_Noise_Offset_Multiplier;
	Parms.Local_Noise_Transform__Location = std::move(Local_Noise_Transform__Location);
	Parms.Local_Noise_Offset = std::move(Local_Noise_Offset);
	Parms.Local_Turbulence_Vector_Transform = Local_Turbulence_Vector_Transform;
	Parms.Local_Turbulence_Vector_Transform_Axis = Local_Turbulence_Vector_Transform_Axis;
	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);

	Local_Noise_Transform__Location = std::move(Parms.Local_Noise_Transform__Location);
	Local_Noise_Offset = std::move(Parms.Local_Noise_Offset);
}


// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Set WPO Regional Function
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic*         Material                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstanceDynamic*         Overlay_Material                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           Skeletal_Mesh                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FName                             Velocity_Transform                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Velocity_Interp_Speed                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Collision_Transform                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EAxis                                   Collision_Transform_Axis                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Invert_Collision_Transform_Axis                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Delta_Time_X                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Previous_Velocity_Transform_Location                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Previous_Velocity_Transform_Velocity                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Region                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UFortAnimationBPFunctionLibrary_C::Set_WPO_Regional_Function(class UMaterialInstanceDynamic* Material, class UMaterialInstanceDynamic* Overlay_Material, class USkeletalMeshComponent* Skeletal_Mesh, class FName Velocity_Transform, double Velocity_Interp_Speed, class FName Collision_Transform, EAxis Collision_Transform_Axis, bool Invert_Collision_Transform_Axis, double Delta_Time_X, struct FVector& Previous_Velocity_Transform_Location, struct FVector& Previous_Velocity_Transform_Velocity, int32 Region, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAnimationBPFunctionLibrary_C", "Set WPO Regional Function");

	Params::FortAnimationBPFunctionLibrary_C_Set_WPO_Regional_Function Parms{};

	Parms.Material = Material;
	Parms.Overlay_Material = Overlay_Material;
	Parms.Skeletal_Mesh = Skeletal_Mesh;
	Parms.Velocity_Transform = Velocity_Transform;
	Parms.Velocity_Interp_Speed = Velocity_Interp_Speed;
	Parms.Collision_Transform = Collision_Transform;
	Parms.Collision_Transform_Axis = Collision_Transform_Axis;
	Parms.Invert_Collision_Transform_Axis = Invert_Collision_Transform_Axis;
	Parms.Delta_Time_X = Delta_Time_X;
	Parms.Previous_Velocity_Transform_Location = std::move(Previous_Velocity_Transform_Location);
	Parms.Previous_Velocity_Transform_Velocity = std::move(Previous_Velocity_Transform_Velocity);
	Parms.Region = Region;
	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);

	Previous_Velocity_Transform_Location = std::move(Parms.Previous_Velocity_Transform_Location);
	Previous_Velocity_Transform_Velocity = std::move(Parms.Previous_Velocity_Transform_Velocity);
}

}

