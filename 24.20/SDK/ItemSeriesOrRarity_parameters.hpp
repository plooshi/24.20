#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemSeriesOrRarity

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function ItemSeriesOrRarity.ItemSeriesOrRarity_C.UpdateItemDefinition
// 0x0158 (0x0158 - 0x0000)
struct ItemSeriesOrRarity_C_UpdateItemDefinition final
{
public:
	class UFortItemDefinition*                    ItemDefinition;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	struct FFortColorPalette                      CallFunc_GetRarityOrSeriesColors_ReturnValue;      // 0x0020(0x0050)(NoDestructor)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0070(0x0014)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0088(0x0014)()
	EFortRarity                                   CallFunc_GetRarity_ReturnValue;                    // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E[0x2];                                       // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortRarityItemData                    CallFunc_BPGetRarityData_ReturnValue;              // 0x00A0(0x0080)()
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_126[0x2];                                      // 0x0126(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0128(0x0018)()
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default_1;                           // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemSeriesOrRarity_C_UpdateItemDefinition) == 0x000008, "Wrong alignment on ItemSeriesOrRarity_C_UpdateItemDefinition");
static_assert(sizeof(ItemSeriesOrRarity_C_UpdateItemDefinition) == 0x000158, "Wrong size on ItemSeriesOrRarity_C_UpdateItemDefinition");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, ItemDefinition) == 0x000000, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::ItemDefinition' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, Temp_text_Variable) == 0x000008, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, CallFunc_GetRarityOrSeriesColors_ReturnValue) == 0x000020, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::CallFunc_GetRarityOrSeriesColors_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, K2Node_MakeStruct_SlateColor) == 0x000070, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, CallFunc_IsValid_ReturnValue) == 0x000084, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, K2Node_MakeStruct_SlateColor_1) == 0x000088, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, CallFunc_GetRarity_ReturnValue) == 0x00009C, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::CallFunc_GetRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, CallFunc_IsValid_ReturnValue_1) == 0x00009D, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, CallFunc_BPGetRarityData_ReturnValue) == 0x0000A0, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::CallFunc_BPGetRarityData_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, CallFunc_IsValid_ReturnValue_2) == 0x000120, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, CallFunc_IsValid_ReturnValue_3) == 0x000121, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, CallFunc_Not_PreBool_ReturnValue) == 0x000122, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, Temp_bool_Variable) == 0x000123, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, Temp_bool_Variable_1) == 0x000124, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, CallFunc_BooleanAND_ReturnValue) == 0x000125, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, K2Node_Select_Default) == 0x000128, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, Temp_byte_Variable) == 0x000140, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, K2Node_Select_Default_1) == 0x000148, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, Temp_byte_Variable_1) == 0x000150, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, Temp_bool_Variable_2) == 0x000151, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ItemSeriesOrRarity_C_UpdateItemDefinition, K2Node_Select_Default_2) == 0x000152, "Member 'ItemSeriesOrRarity_C_UpdateItemDefinition::K2Node_Select_Default_2' has a wrong offset!");

}

