#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortniteGameFramework

#include "Basic.hpp"

#include "StateTreeModule_structs.hpp"
#include "NetCore_structs.hpp"


namespace SDK
{

// Enum FortniteGameFramework.ETaskObjectStateChangeType
// NumValues: 0x0004
enum class ETaskObjectStateChangeType : uint8
{
	None                                     = 0,
	BeginState                               = 1,
	EndState                                 = 2,
	ETaskObjectStateChangeType_MAX           = 3,
};

// ScriptStruct FortniteGameFramework.ComponentCacheHelper
// 0x0058 (0x0058 - 0x0000)
struct alignas(0x08) FComponentCacheHelper final
{
public:
	uint8                                         Pad_0[0x58];                                       // 0x0000(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FComponentCacheHelper) == 0x000008, "Wrong alignment on FComponentCacheHelper");
static_assert(sizeof(FComponentCacheHelper) == 0x000058, "Wrong size on FComponentCacheHelper");

// ScriptStruct FortniteGameFramework.ActorOwnedStateTreeConfig
// 0x0030 (0x0030 - 0x0000)
struct FActorOwnedStateTreeConfig final
{
public:
	TSoftObjectPtr<class UStateTree>              StateTreeAsset;                                    // 0x0000(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldReplicate;                                  // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FActorOwnedStateTreeConfig) == 0x000008, "Wrong alignment on FActorOwnedStateTreeConfig");
static_assert(sizeof(FActorOwnedStateTreeConfig) == 0x000030, "Wrong size on FActorOwnedStateTreeConfig");
static_assert(offsetof(FActorOwnedStateTreeConfig, StateTreeAsset) == 0x000000, "Member 'FActorOwnedStateTreeConfig::StateTreeAsset' has a wrong offset!");
static_assert(offsetof(FActorOwnedStateTreeConfig, bShouldReplicate) == 0x000028, "Member 'FActorOwnedStateTreeConfig::bShouldReplicate' has a wrong offset!");

// ScriptStruct FortniteGameFramework.StateTreeRuntimeData
// 0x0030 (0x0030 - 0x0000)
struct FStateTreeRuntimeData final
{
public:
	class UObject*                                Owner;                                             // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStateTree*                             StateTree;                                         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStateTreeInstanceData                 StateTreeInstanceData;                             // 0x0010(0x0010)(NativeAccessSpecifierPublic)
	uint8                                         Pad_20[0x10];                                      // 0x0020(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FStateTreeRuntimeData) == 0x000008, "Wrong alignment on FStateTreeRuntimeData");
static_assert(sizeof(FStateTreeRuntimeData) == 0x000030, "Wrong size on FStateTreeRuntimeData");
static_assert(offsetof(FStateTreeRuntimeData, Owner) == 0x000000, "Member 'FStateTreeRuntimeData::Owner' has a wrong offset!");
static_assert(offsetof(FStateTreeRuntimeData, StateTree) == 0x000008, "Member 'FStateTreeRuntimeData::StateTree' has a wrong offset!");
static_assert(offsetof(FStateTreeRuntimeData, StateTreeInstanceData) == 0x000010, "Member 'FStateTreeRuntimeData::StateTreeInstanceData' has a wrong offset!");

// ScriptStruct FortniteGameFramework.StateChangeData
// 0x001C (0x0028 - 0x000C)
struct FStateChangeData final : public FFastArraySerializerItem
{
public:
	int32                                         StateTreeDataHandle;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Handle;                                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StateIdentifier;                                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStateTreeTaskObject*                   StateObject;                                       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETaskObjectStateChangeType                    StateChangeType;                                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FStateChangeData) == 0x000008, "Wrong alignment on FStateChangeData");
static_assert(sizeof(FStateChangeData) == 0x000028, "Wrong size on FStateChangeData");
static_assert(offsetof(FStateChangeData, StateTreeDataHandle) == 0x00000C, "Member 'FStateChangeData::StateTreeDataHandle' has a wrong offset!");
static_assert(offsetof(FStateChangeData, Handle) == 0x000010, "Member 'FStateChangeData::Handle' has a wrong offset!");
static_assert(offsetof(FStateChangeData, StateIdentifier) == 0x000014, "Member 'FStateChangeData::StateIdentifier' has a wrong offset!");
static_assert(offsetof(FStateChangeData, StateObject) == 0x000018, "Member 'FStateChangeData::StateObject' has a wrong offset!");
static_assert(offsetof(FStateChangeData, StateChangeType) == 0x000020, "Member 'FStateChangeData::StateChangeType' has a wrong offset!");

// ScriptStruct FortniteGameFramework.StateChangeDataArray
// 0x0018 (0x0120 - 0x0108)
struct FStateChangeDataArray final : public FFastArraySerializer
{
public:
	TArray<struct FStateChangeData>               StateChangeDataList;                               // 0x0108(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	class UStateTreeManagerComponent*             StateTreeManagerComponent;                         // 0x0118(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FStateChangeDataArray) == 0x000008, "Wrong alignment on FStateChangeDataArray");
static_assert(sizeof(FStateChangeDataArray) == 0x000120, "Wrong size on FStateChangeDataArray");
static_assert(offsetof(FStateChangeDataArray, StateChangeDataList) == 0x000108, "Member 'FStateChangeDataArray::StateChangeDataList' has a wrong offset!");
static_assert(offsetof(FStateChangeDataArray, StateTreeManagerComponent) == 0x000118, "Member 'FStateChangeDataArray::StateTreeManagerComponent' has a wrong offset!");

// ScriptStruct FortniteGameFramework.StateTreeClientSimulationData
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x08) FStateTreeClientSimulationData final
{
public:
	uint8                                         Pad_0[0x28];                                       // 0x0000(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FStateTreeClientSimulationData) == 0x000008, "Wrong alignment on FStateTreeClientSimulationData");
static_assert(sizeof(FStateTreeClientSimulationData) == 0x000028, "Wrong size on FStateTreeClientSimulationData");

}

