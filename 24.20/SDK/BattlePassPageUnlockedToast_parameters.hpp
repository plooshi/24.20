#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattlePassPageUnlockedToast

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BattlePassPageUnlockedToast.BattlePassPageUnlockedToast_C.ApplyAdditionalStyling
// 0x0020 (0x0020 - 0x0000)
struct BattlePassPageUnlockedToast_C_ApplyAdditionalStyling final
{
public:
	class UClass*                                 NewLocalVar_2;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 NewLocalVar_1;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 NewLocalVar_0;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EFortNotificationType                         CallFunc_GetNotificationType_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePassPageUnlockedToast_C_ApplyAdditionalStyling) == 0x000008, "Wrong alignment on BattlePassPageUnlockedToast_C_ApplyAdditionalStyling");
static_assert(sizeof(BattlePassPageUnlockedToast_C_ApplyAdditionalStyling) == 0x000020, "Wrong size on BattlePassPageUnlockedToast_C_ApplyAdditionalStyling");
static_assert(offsetof(BattlePassPageUnlockedToast_C_ApplyAdditionalStyling, NewLocalVar_2) == 0x000000, "Member 'BattlePassPageUnlockedToast_C_ApplyAdditionalStyling::NewLocalVar_2' has a wrong offset!");
static_assert(offsetof(BattlePassPageUnlockedToast_C_ApplyAdditionalStyling, NewLocalVar_1) == 0x000008, "Member 'BattlePassPageUnlockedToast_C_ApplyAdditionalStyling::NewLocalVar_1' has a wrong offset!");
static_assert(offsetof(BattlePassPageUnlockedToast_C_ApplyAdditionalStyling, NewLocalVar_0) == 0x000010, "Member 'BattlePassPageUnlockedToast_C_ApplyAdditionalStyling::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BattlePassPageUnlockedToast_C_ApplyAdditionalStyling, CallFunc_GetNotificationType_ReturnValue) == 0x000018, "Member 'BattlePassPageUnlockedToast_C_ApplyAdditionalStyling::CallFunc_GetNotificationType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePassPageUnlockedToast_C_ApplyAdditionalStyling, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'BattlePassPageUnlockedToast_C_ApplyAdditionalStyling::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BattlePassPageUnlockedToast.BattlePassPageUnlockedToast_C.ExecuteUbergraph_BattlePassPageUnlockedToast
// 0x01A8 (0x01A8 - 0x0000)
struct BattlePassPageUnlockedToast_C_ExecuteUbergraph_BattlePassPageUnlockedToast final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDisplayTime_bOutDisplayTimeOverridden; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDisplayTime_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0020(0x0040)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0060(0x0098)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00F8(0x0098)(ConstParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortUINotification*                    K2Node_Event_Notification_1;                       // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortUINotification*                    K2Node_Event_Notification;                         // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePassPageUnlockedToast_C_ExecuteUbergraph_BattlePassPageUnlockedToast) == 0x000008, "Wrong alignment on BattlePassPageUnlockedToast_C_ExecuteUbergraph_BattlePassPageUnlockedToast");
static_assert(sizeof(BattlePassPageUnlockedToast_C_ExecuteUbergraph_BattlePassPageUnlockedToast) == 0x0001A8, "Wrong size on BattlePassPageUnlockedToast_C_ExecuteUbergraph_BattlePassPageUnlockedToast");
static_assert(offsetof(BattlePassPageUnlockedToast_C_ExecuteUbergraph_BattlePassPageUnlockedToast, EntryPoint) == 0x000000, "Member 'BattlePassPageUnlockedToast_C_ExecuteUbergraph_BattlePassPageUnlockedToast::EntryPoint' has a wrong offset!");
static_assert(offsetof(BattlePassPageUnlockedToast_C_ExecuteUbergraph_BattlePassPageUnlockedToast, CallFunc_GetDisplayTime_bOutDisplayTimeOverridden) == 0x000004, "Member 'BattlePassPageUnlockedToast_C_ExecuteUbergraph_BattlePassPageUnlockedToast::CallFunc_GetDisplayTime_bOutDisplayTimeOverridden' has a wrong offset!");
static_assert(offsetof(BattlePassPageUnlockedToast_C_ExecuteUbergraph_BattlePassPageUnlockedToast, CallFunc_GetDisplayTime_ReturnValue) == 0x000008, "Member 'BattlePassPageUnlockedToast_C_ExecuteUbergraph_BattlePassPageUnlockedToast::CallFunc_GetDisplayTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePassPageUnlockedToast_C_ExecuteUbergraph_BattlePassPageUnlockedToast, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'BattlePassPageUnlockedToast_C_ExecuteUbergraph_BattlePassPageUnlockedToast::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BattlePassPageUnlockedToast_C_ExecuteUbergraph_BattlePassPageUnlockedToast, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'BattlePassPageUnlockedToast_C_ExecuteUbergraph_BattlePassPageUnlockedToast::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePassPageUnlockedToast_C_ExecuteUbergraph_BattlePassPageUnlockedToast, K2Node_Event_MyGeometry) == 0x000020, "Member 'BattlePassPageUnlockedToast_C_ExecuteUbergraph_BattlePassPageUnlockedToast::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BattlePassPageUnlockedToast_C_ExecuteUbergraph_BattlePassPageUnlockedToast, K2Node_Event_MouseEvent_1) == 0x000060, "Member 'BattlePassPageUnlockedToast_C_ExecuteUbergraph_BattlePassPageUnlockedToast::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(BattlePassPageUnlockedToast_C_ExecuteUbergraph_BattlePassPageUnlockedToast, K2Node_Event_MouseEvent) == 0x0000F8, "Member 'BattlePassPageUnlockedToast_C_ExecuteUbergraph_BattlePassPageUnlockedToast::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(BattlePassPageUnlockedToast_C_ExecuteUbergraph_BattlePassPageUnlockedToast, CallFunc_PlayAnimation_ReturnValue) == 0x000190, "Member 'BattlePassPageUnlockedToast_C_ExecuteUbergraph_BattlePassPageUnlockedToast::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePassPageUnlockedToast_C_ExecuteUbergraph_BattlePassPageUnlockedToast, K2Node_Event_Notification_1) == 0x000198, "Member 'BattlePassPageUnlockedToast_C_ExecuteUbergraph_BattlePassPageUnlockedToast::K2Node_Event_Notification_1' has a wrong offset!");
static_assert(offsetof(BattlePassPageUnlockedToast_C_ExecuteUbergraph_BattlePassPageUnlockedToast, K2Node_Event_Notification) == 0x0001A0, "Member 'BattlePassPageUnlockedToast_C_ExecuteUbergraph_BattlePassPageUnlockedToast::K2Node_Event_Notification' has a wrong offset!");

// Function BattlePassPageUnlockedToast.BattlePassPageUnlockedToast_C.GetOpenButtonVisibility
// 0x0018 (0x0018 - 0x0000)
struct BattlePassPageUnlockedToast_C_GetOpenButtonVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAction_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInZone_ReturnValue;                     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePassPageUnlockedToast_C_GetOpenButtonVisibility) == 0x000008, "Wrong alignment on BattlePassPageUnlockedToast_C_GetOpenButtonVisibility");
static_assert(sizeof(BattlePassPageUnlockedToast_C_GetOpenButtonVisibility) == 0x000018, "Wrong size on BattlePassPageUnlockedToast_C_GetOpenButtonVisibility");
static_assert(offsetof(BattlePassPageUnlockedToast_C_GetOpenButtonVisibility, ReturnValue) == 0x000000, "Member 'BattlePassPageUnlockedToast_C_GetOpenButtonVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePassPageUnlockedToast_C_GetOpenButtonVisibility, Temp_bool_Variable) == 0x000001, "Member 'BattlePassPageUnlockedToast_C_GetOpenButtonVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattlePassPageUnlockedToast_C_GetOpenButtonVisibility, Temp_byte_Variable) == 0x000002, "Member 'BattlePassPageUnlockedToast_C_GetOpenButtonVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattlePassPageUnlockedToast_C_GetOpenButtonVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'BattlePassPageUnlockedToast_C_GetOpenButtonVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattlePassPageUnlockedToast_C_GetOpenButtonVisibility, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000008, "Member 'BattlePassPageUnlockedToast_C_GetOpenButtonVisibility::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePassPageUnlockedToast_C_GetOpenButtonVisibility, CallFunc_HasAction_ReturnValue) == 0x000010, "Member 'BattlePassPageUnlockedToast_C_GetOpenButtonVisibility::CallFunc_HasAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePassPageUnlockedToast_C_GetOpenButtonVisibility, CallFunc_IsInZone_ReturnValue) == 0x000011, "Member 'BattlePassPageUnlockedToast_C_GetOpenButtonVisibility::CallFunc_IsInZone_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePassPageUnlockedToast_C_GetOpenButtonVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'BattlePassPageUnlockedToast_C_GetOpenButtonVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePassPageUnlockedToast_C_GetOpenButtonVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'BattlePassPageUnlockedToast_C_GetOpenButtonVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePassPageUnlockedToast_C_GetOpenButtonVisibility, K2Node_Select_Default) == 0x000014, "Member 'BattlePassPageUnlockedToast_C_GetOpenButtonVisibility::K2Node_Select_Default' has a wrong offset!");

// Function BattlePassPageUnlockedToast.BattlePassPageUnlockedToast_C.OnMouseEnter
// 0x00D8 (0x00D8 - 0x0000)
struct BattlePassPageUnlockedToast_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0040(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BattlePassPageUnlockedToast_C_OnMouseEnter) == 0x000008, "Wrong alignment on BattlePassPageUnlockedToast_C_OnMouseEnter");
static_assert(sizeof(BattlePassPageUnlockedToast_C_OnMouseEnter) == 0x0000D8, "Wrong size on BattlePassPageUnlockedToast_C_OnMouseEnter");
static_assert(offsetof(BattlePassPageUnlockedToast_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'BattlePassPageUnlockedToast_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(BattlePassPageUnlockedToast_C_OnMouseEnter, MouseEvent) == 0x000040, "Member 'BattlePassPageUnlockedToast_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function BattlePassPageUnlockedToast.BattlePassPageUnlockedToast_C.OnMouseLeave
// 0x0098 (0x0098 - 0x0000)
struct BattlePassPageUnlockedToast_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BattlePassPageUnlockedToast_C_OnMouseLeave) == 0x000008, "Wrong alignment on BattlePassPageUnlockedToast_C_OnMouseLeave");
static_assert(sizeof(BattlePassPageUnlockedToast_C_OnMouseLeave) == 0x000098, "Wrong size on BattlePassPageUnlockedToast_C_OnMouseLeave");
static_assert(offsetof(BattlePassPageUnlockedToast_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'BattlePassPageUnlockedToast_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function BattlePassPageUnlockedToast.BattlePassPageUnlockedToast_C.OnNotificationSet
// 0x0008 (0x0008 - 0x0000)
struct BattlePassPageUnlockedToast_C_OnNotificationSet final
{
public:
	class UFortUINotification*                    Notification;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePassPageUnlockedToast_C_OnNotificationSet) == 0x000008, "Wrong alignment on BattlePassPageUnlockedToast_C_OnNotificationSet");
static_assert(sizeof(BattlePassPageUnlockedToast_C_OnNotificationSet) == 0x000008, "Wrong size on BattlePassPageUnlockedToast_C_OnNotificationSet");
static_assert(offsetof(BattlePassPageUnlockedToast_C_OnNotificationSet, Notification) == 0x000000, "Member 'BattlePassPageUnlockedToast_C_OnNotificationSet::Notification' has a wrong offset!");

// Function BattlePassPageUnlockedToast.BattlePassPageUnlockedToast_C.OnNotificationUpdated
// 0x0008 (0x0008 - 0x0000)
struct BattlePassPageUnlockedToast_C_OnNotificationUpdated final
{
public:
	class UFortUINotification*                    Notification;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePassPageUnlockedToast_C_OnNotificationUpdated) == 0x000008, "Wrong alignment on BattlePassPageUnlockedToast_C_OnNotificationUpdated");
static_assert(sizeof(BattlePassPageUnlockedToast_C_OnNotificationUpdated) == 0x000008, "Wrong size on BattlePassPageUnlockedToast_C_OnNotificationUpdated");
static_assert(offsetof(BattlePassPageUnlockedToast_C_OnNotificationUpdated, Notification) == 0x000000, "Member 'BattlePassPageUnlockedToast_C_OnNotificationUpdated::Notification' has a wrong offset!");

// Function BattlePassPageUnlockedToast.BattlePassPageUnlockedToast_C.SetImage
// 0x0038 (0x0038 - 0x0000)
struct BattlePassPageUnlockedToast_C_SetImage final
{
public:
	TSoftObjectPtr<class UObject>                 CallFunc_GetDisplayAsset_ReturnValue;              // 0x0000(0x0028)(ConstParm, UObjectWrapper, HasGetValueTypeHash)
	class UTwitchNotification_C*                  K2Node_DynamicCast_AsTwitch_Notification;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePassPageUnlockedToast_C_SetImage) == 0x000008, "Wrong alignment on BattlePassPageUnlockedToast_C_SetImage");
static_assert(sizeof(BattlePassPageUnlockedToast_C_SetImage) == 0x000038, "Wrong size on BattlePassPageUnlockedToast_C_SetImage");
static_assert(offsetof(BattlePassPageUnlockedToast_C_SetImage, CallFunc_GetDisplayAsset_ReturnValue) == 0x000000, "Member 'BattlePassPageUnlockedToast_C_SetImage::CallFunc_GetDisplayAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePassPageUnlockedToast_C_SetImage, K2Node_DynamicCast_AsTwitch_Notification) == 0x000028, "Member 'BattlePassPageUnlockedToast_C_SetImage::K2Node_DynamicCast_AsTwitch_Notification' has a wrong offset!");
static_assert(offsetof(BattlePassPageUnlockedToast_C_SetImage, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BattlePassPageUnlockedToast_C_SetImage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattlePassPageUnlockedToast_C_SetImage, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000031, "Member 'BattlePassPageUnlockedToast_C_SetImage::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");

// Function BattlePassPageUnlockedToast.BattlePassPageUnlockedToast_C.SetupAnimBindings
// 0x0034 (0x0034 - 0x0000)
struct BattlePassPageUnlockedToast_C_SetupAnimBindings final
{
public:
	bool                                          Unbind;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x001C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0028(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePassPageUnlockedToast_C_SetupAnimBindings) == 0x000004, "Wrong alignment on BattlePassPageUnlockedToast_C_SetupAnimBindings");
static_assert(sizeof(BattlePassPageUnlockedToast_C_SetupAnimBindings) == 0x000034, "Wrong size on BattlePassPageUnlockedToast_C_SetupAnimBindings");
static_assert(offsetof(BattlePassPageUnlockedToast_C_SetupAnimBindings, Unbind) == 0x000000, "Member 'BattlePassPageUnlockedToast_C_SetupAnimBindings::Unbind' has a wrong offset!");
static_assert(offsetof(BattlePassPageUnlockedToast_C_SetupAnimBindings, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BattlePassPageUnlockedToast_C_SetupAnimBindings::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BattlePassPageUnlockedToast_C_SetupAnimBindings, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'BattlePassPageUnlockedToast_C_SetupAnimBindings::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BattlePassPageUnlockedToast_C_SetupAnimBindings, K2Node_CreateDelegate_OutputDelegate_2) == 0x00001C, "Member 'BattlePassPageUnlockedToast_C_SetupAnimBindings::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BattlePassPageUnlockedToast_C_SetupAnimBindings, K2Node_CreateDelegate_OutputDelegate_3) == 0x000028, "Member 'BattlePassPageUnlockedToast_C_SetupAnimBindings::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");

// Function BattlePassPageUnlockedToast.BattlePassPageUnlockedToast_C.StartIntro
// 0x0008 (0x0008 - 0x0000)
struct BattlePassPageUnlockedToast_C_StartIntro final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePassPageUnlockedToast_C_StartIntro) == 0x000008, "Wrong alignment on BattlePassPageUnlockedToast_C_StartIntro");
static_assert(sizeof(BattlePassPageUnlockedToast_C_StartIntro) == 0x000008, "Wrong size on BattlePassPageUnlockedToast_C_StartIntro");
static_assert(offsetof(BattlePassPageUnlockedToast_C_StartIntro, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'BattlePassPageUnlockedToast_C_StartIntro::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function BattlePassPageUnlockedToast.BattlePassPageUnlockedToast_C.UpdateToast
// 0x0040 (0x0040 - 0x0000)
struct BattlePassPageUnlockedToast_C_UpdateToast final
{
public:
	class UFortUINotification*                    Notification;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetDescription_ReturnValue;               // 0x0008(0x0018)(ConstParm)
	class FText                                   CallFunc_GetTitle_ReturnValue;                     // 0x0020(0x0018)(ConstParm)
	ESlateVisibility                              CallFunc_GetOpenButtonVisibility_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePassPageUnlockedToast_C_UpdateToast) == 0x000008, "Wrong alignment on BattlePassPageUnlockedToast_C_UpdateToast");
static_assert(sizeof(BattlePassPageUnlockedToast_C_UpdateToast) == 0x000040, "Wrong size on BattlePassPageUnlockedToast_C_UpdateToast");
static_assert(offsetof(BattlePassPageUnlockedToast_C_UpdateToast, Notification) == 0x000000, "Member 'BattlePassPageUnlockedToast_C_UpdateToast::Notification' has a wrong offset!");
static_assert(offsetof(BattlePassPageUnlockedToast_C_UpdateToast, CallFunc_GetDescription_ReturnValue) == 0x000008, "Member 'BattlePassPageUnlockedToast_C_UpdateToast::CallFunc_GetDescription_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePassPageUnlockedToast_C_UpdateToast, CallFunc_GetTitle_ReturnValue) == 0x000020, "Member 'BattlePassPageUnlockedToast_C_UpdateToast::CallFunc_GetTitle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePassPageUnlockedToast_C_UpdateToast, CallFunc_GetOpenButtonVisibility_ReturnValue) == 0x000038, "Member 'BattlePassPageUnlockedToast_C_UpdateToast::CallFunc_GetOpenButtonVisibility_ReturnValue' has a wrong offset!");

}

