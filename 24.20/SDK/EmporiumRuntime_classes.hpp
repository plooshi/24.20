#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EmporiumRuntime

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class EmporiumRuntime.EmporiumAssetsPaths
// 0x0488 (0x04B0 - 0x0028)
class UEmporiumAssetsPaths final : public UObject
{
public:
	TSoftObjectPtr<class UMaterialInstanceConstant> MR_MI_Opaque;                                      // 0x0028(0x0028)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> MR_MI_Opaque_Clearcoat;                            // 0x0050(0x0028)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> MR_MI_Opaque_Sheen;                                // 0x0078(0x0028)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> MR_MI_Opaque_Unlit;                                // 0x00A0(0x0028)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> MR_MI_Translucent;                                 // 0x00C8(0x0028)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> MR_MI_Translucent_Clearcoat;                       // 0x00F0(0x0028)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> MR_MI_Transmission;                                // 0x0118(0x0028)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> MR_MI_Opaque_TS;                                   // 0x0140(0x0028)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> MR_MI_Opaque_Clearcoat_TS;                         // 0x0168(0x0028)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> MR_MI_Opaque_Sheen_TS;                             // 0x0190(0x0028)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> MR_MI_Opaque_Unlit_TS;                             // 0x01B8(0x0028)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> MR_MI_Translucent_TS;                              // 0x01E0(0x0028)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> MR_MI_Translucent_Clearcoat_TS;                    // 0x0208(0x0028)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> MR_MI_Transmission_TS;                             // 0x0230(0x0028)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> SG_MI_Opaque;                                      // 0x0258(0x0028)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> SG_MI_Opaque_Clearcoat;                            // 0x0280(0x0028)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> SG_MI_Opaque_Sheen;                                // 0x02A8(0x0028)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> SG_MI_Translucent;                                 // 0x02D0(0x0028)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> SG_MI_Translucent_Clearcoat;                       // 0x02F8(0x0028)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> SG_MI_Transmission;                                // 0x0320(0x0028)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> SG_MI_Opaque_TS;                                   // 0x0348(0x0028)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> SG_MI_Opaque_Clearcoat_TS;                         // 0x0370(0x0028)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> SG_MI_Opaque_Sheen_TS;                             // 0x0398(0x0028)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> SG_MI_Translucent_TS;                              // 0x03C0(0x0028)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> SG_MI_Translucent_Clearcoat_TS;                    // 0x03E8(0x0028)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> SG_MI_Transmission_TS;                             // 0x0410(0x0028)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> SG_MI_Foliage_TS;                                  // 0x0438(0x0028)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInstanceConstant> MR_MI_Foliage_TS;                                  // 0x0460(0x0028)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UStaticMesh>             PlaceholderSphere;                                 // 0x0488(0x0028)(Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EmporiumAssetsPaths">();
	}
	static class UEmporiumAssetsPaths* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEmporiumAssetsPaths>();
	}
};
static_assert(alignof(UEmporiumAssetsPaths) == 0x000008, "Wrong alignment on UEmporiumAssetsPaths");
static_assert(sizeof(UEmporiumAssetsPaths) == 0x0004B0, "Wrong size on UEmporiumAssetsPaths");
static_assert(offsetof(UEmporiumAssetsPaths, MR_MI_Opaque) == 0x000028, "Member 'UEmporiumAssetsPaths::MR_MI_Opaque' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, MR_MI_Opaque_Clearcoat) == 0x000050, "Member 'UEmporiumAssetsPaths::MR_MI_Opaque_Clearcoat' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, MR_MI_Opaque_Sheen) == 0x000078, "Member 'UEmporiumAssetsPaths::MR_MI_Opaque_Sheen' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, MR_MI_Opaque_Unlit) == 0x0000A0, "Member 'UEmporiumAssetsPaths::MR_MI_Opaque_Unlit' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, MR_MI_Translucent) == 0x0000C8, "Member 'UEmporiumAssetsPaths::MR_MI_Translucent' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, MR_MI_Translucent_Clearcoat) == 0x0000F0, "Member 'UEmporiumAssetsPaths::MR_MI_Translucent_Clearcoat' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, MR_MI_Transmission) == 0x000118, "Member 'UEmporiumAssetsPaths::MR_MI_Transmission' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, MR_MI_Opaque_TS) == 0x000140, "Member 'UEmporiumAssetsPaths::MR_MI_Opaque_TS' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, MR_MI_Opaque_Clearcoat_TS) == 0x000168, "Member 'UEmporiumAssetsPaths::MR_MI_Opaque_Clearcoat_TS' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, MR_MI_Opaque_Sheen_TS) == 0x000190, "Member 'UEmporiumAssetsPaths::MR_MI_Opaque_Sheen_TS' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, MR_MI_Opaque_Unlit_TS) == 0x0001B8, "Member 'UEmporiumAssetsPaths::MR_MI_Opaque_Unlit_TS' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, MR_MI_Translucent_TS) == 0x0001E0, "Member 'UEmporiumAssetsPaths::MR_MI_Translucent_TS' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, MR_MI_Translucent_Clearcoat_TS) == 0x000208, "Member 'UEmporiumAssetsPaths::MR_MI_Translucent_Clearcoat_TS' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, MR_MI_Transmission_TS) == 0x000230, "Member 'UEmporiumAssetsPaths::MR_MI_Transmission_TS' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, SG_MI_Opaque) == 0x000258, "Member 'UEmporiumAssetsPaths::SG_MI_Opaque' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, SG_MI_Opaque_Clearcoat) == 0x000280, "Member 'UEmporiumAssetsPaths::SG_MI_Opaque_Clearcoat' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, SG_MI_Opaque_Sheen) == 0x0002A8, "Member 'UEmporiumAssetsPaths::SG_MI_Opaque_Sheen' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, SG_MI_Translucent) == 0x0002D0, "Member 'UEmporiumAssetsPaths::SG_MI_Translucent' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, SG_MI_Translucent_Clearcoat) == 0x0002F8, "Member 'UEmporiumAssetsPaths::SG_MI_Translucent_Clearcoat' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, SG_MI_Transmission) == 0x000320, "Member 'UEmporiumAssetsPaths::SG_MI_Transmission' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, SG_MI_Opaque_TS) == 0x000348, "Member 'UEmporiumAssetsPaths::SG_MI_Opaque_TS' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, SG_MI_Opaque_Clearcoat_TS) == 0x000370, "Member 'UEmporiumAssetsPaths::SG_MI_Opaque_Clearcoat_TS' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, SG_MI_Opaque_Sheen_TS) == 0x000398, "Member 'UEmporiumAssetsPaths::SG_MI_Opaque_Sheen_TS' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, SG_MI_Translucent_TS) == 0x0003C0, "Member 'UEmporiumAssetsPaths::SG_MI_Translucent_TS' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, SG_MI_Translucent_Clearcoat_TS) == 0x0003E8, "Member 'UEmporiumAssetsPaths::SG_MI_Translucent_Clearcoat_TS' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, SG_MI_Transmission_TS) == 0x000410, "Member 'UEmporiumAssetsPaths::SG_MI_Transmission_TS' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, SG_MI_Foliage_TS) == 0x000438, "Member 'UEmporiumAssetsPaths::SG_MI_Foliage_TS' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, MR_MI_Foliage_TS) == 0x000460, "Member 'UEmporiumAssetsPaths::MR_MI_Foliage_TS' has a wrong offset!");
static_assert(offsetof(UEmporiumAssetsPaths, PlaceholderSphere) == 0x000488, "Member 'UEmporiumAssetsPaths::PlaceholderSphere' has a wrong offset!");

}

