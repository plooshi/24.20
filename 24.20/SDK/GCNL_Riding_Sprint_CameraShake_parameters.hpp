#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCNL_Riding_Sprint_CameraShake

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GCNL_Riding_Sprint_CameraShake.GCNL_Riding_Sprint_CameraShake_C.ExecuteUbergraph_GCNL_Riding_Sprint_CameraShake
// 0x0138 (0x0138 - 0x0000)
struct GCNL_Riding_Sprint_CameraShake_C_ExecuteUbergraph_GCNL_Riding_Sprint_CameraShake final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_MyTarget;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters;                           // 0x0010(0x00D0)(ConstParm, ContainsInstancedReference)
	TArray<class UFXSystemComponent*>             K2Node_Event_ParticleComponents;                   // 0x00E0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                K2Node_Event_AudioComponents;                      // 0x00F0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UCameraShakeBase*                       CallFunc_StartCameraShake_ReturnValue;             // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112[0x6];                                      // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue; // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraShakeBase*                       CallFunc_StartCameraShake_ReturnValue_1;           // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_Riding_Sprint_CameraShake_C_ExecuteUbergraph_GCNL_Riding_Sprint_CameraShake) == 0x000008, "Wrong alignment on GCNL_Riding_Sprint_CameraShake_C_ExecuteUbergraph_GCNL_Riding_Sprint_CameraShake");
static_assert(sizeof(GCNL_Riding_Sprint_CameraShake_C_ExecuteUbergraph_GCNL_Riding_Sprint_CameraShake) == 0x000138, "Wrong size on GCNL_Riding_Sprint_CameraShake_C_ExecuteUbergraph_GCNL_Riding_Sprint_CameraShake");
static_assert(offsetof(GCNL_Riding_Sprint_CameraShake_C_ExecuteUbergraph_GCNL_Riding_Sprint_CameraShake, EntryPoint) == 0x000000, "Member 'GCNL_Riding_Sprint_CameraShake_C_ExecuteUbergraph_GCNL_Riding_Sprint_CameraShake::EntryPoint' has a wrong offset!");
static_assert(offsetof(GCNL_Riding_Sprint_CameraShake_C_ExecuteUbergraph_GCNL_Riding_Sprint_CameraShake, K2Node_Event_MyTarget) == 0x000008, "Member 'GCNL_Riding_Sprint_CameraShake_C_ExecuteUbergraph_GCNL_Riding_Sprint_CameraShake::K2Node_Event_MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_Riding_Sprint_CameraShake_C_ExecuteUbergraph_GCNL_Riding_Sprint_CameraShake, K2Node_Event_Parameters) == 0x000010, "Member 'GCNL_Riding_Sprint_CameraShake_C_ExecuteUbergraph_GCNL_Riding_Sprint_CameraShake::K2Node_Event_Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_Riding_Sprint_CameraShake_C_ExecuteUbergraph_GCNL_Riding_Sprint_CameraShake, K2Node_Event_ParticleComponents) == 0x0000E0, "Member 'GCNL_Riding_Sprint_CameraShake_C_ExecuteUbergraph_GCNL_Riding_Sprint_CameraShake::K2Node_Event_ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNL_Riding_Sprint_CameraShake_C_ExecuteUbergraph_GCNL_Riding_Sprint_CameraShake, K2Node_Event_AudioComponents) == 0x0000F0, "Member 'GCNL_Riding_Sprint_CameraShake_C_ExecuteUbergraph_GCNL_Riding_Sprint_CameraShake::K2Node_Event_AudioComponents' has a wrong offset!");
static_assert(offsetof(GCNL_Riding_Sprint_CameraShake_C_ExecuteUbergraph_GCNL_Riding_Sprint_CameraShake, CallFunc_StartCameraShake_ReturnValue) == 0x000100, "Member 'GCNL_Riding_Sprint_CameraShake_C_ExecuteUbergraph_GCNL_Riding_Sprint_CameraShake::CallFunc_StartCameraShake_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Riding_Sprint_CameraShake_C_ExecuteUbergraph_GCNL_Riding_Sprint_CameraShake, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000108, "Member 'GCNL_Riding_Sprint_CameraShake_C_ExecuteUbergraph_GCNL_Riding_Sprint_CameraShake::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GCNL_Riding_Sprint_CameraShake_C_ExecuteUbergraph_GCNL_Riding_Sprint_CameraShake, K2Node_DynamicCast_bSuccess) == 0x000110, "Member 'GCNL_Riding_Sprint_CameraShake_C_ExecuteUbergraph_GCNL_Riding_Sprint_CameraShake::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCNL_Riding_Sprint_CameraShake_C_ExecuteUbergraph_GCNL_Riding_Sprint_CameraShake, CallFunc_IsValid_ReturnValue) == 0x000111, "Member 'GCNL_Riding_Sprint_CameraShake_C_ExecuteUbergraph_GCNL_Riding_Sprint_CameraShake::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Riding_Sprint_CameraShake_C_ExecuteUbergraph_GCNL_Riding_Sprint_CameraShake, CallFunc_GetFortPlayerControllerFromActor_ReturnValue) == 0x000118, "Member 'GCNL_Riding_Sprint_CameraShake_C_ExecuteUbergraph_GCNL_Riding_Sprint_CameraShake::CallFunc_GetFortPlayerControllerFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Riding_Sprint_CameraShake_C_ExecuteUbergraph_GCNL_Riding_Sprint_CameraShake, CallFunc_IsValid_ReturnValue_1) == 0x000120, "Member 'GCNL_Riding_Sprint_CameraShake_C_ExecuteUbergraph_GCNL_Riding_Sprint_CameraShake::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Riding_Sprint_CameraShake_C_ExecuteUbergraph_GCNL_Riding_Sprint_CameraShake, CallFunc_StartCameraShake_ReturnValue_1) == 0x000128, "Member 'GCNL_Riding_Sprint_CameraShake_C_ExecuteUbergraph_GCNL_Riding_Sprint_CameraShake::CallFunc_StartCameraShake_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCNL_Riding_Sprint_CameraShake_C_ExecuteUbergraph_GCNL_Riding_Sprint_CameraShake, CallFunc_IsValid_ReturnValue_2) == 0x000130, "Member 'GCNL_Riding_Sprint_CameraShake_C_ExecuteUbergraph_GCNL_Riding_Sprint_CameraShake::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function GCNL_Riding_Sprint_CameraShake.GCNL_Riding_Sprint_CameraShake_C.OnLoopingStartGeneric
// 0x00F8 (0x00F8 - 0x0000)
struct GCNL_Riding_Sprint_CameraShake_C_OnLoopingStartGeneric final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UFXSystemComponent*>             ParticleComponents;                                // 0x00D8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x00E8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GCNL_Riding_Sprint_CameraShake_C_OnLoopingStartGeneric) == 0x000008, "Wrong alignment on GCNL_Riding_Sprint_CameraShake_C_OnLoopingStartGeneric");
static_assert(sizeof(GCNL_Riding_Sprint_CameraShake_C_OnLoopingStartGeneric) == 0x0000F8, "Wrong size on GCNL_Riding_Sprint_CameraShake_C_OnLoopingStartGeneric");
static_assert(offsetof(GCNL_Riding_Sprint_CameraShake_C_OnLoopingStartGeneric, MyTarget) == 0x000000, "Member 'GCNL_Riding_Sprint_CameraShake_C_OnLoopingStartGeneric::MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_Riding_Sprint_CameraShake_C_OnLoopingStartGeneric, Parameters) == 0x000008, "Member 'GCNL_Riding_Sprint_CameraShake_C_OnLoopingStartGeneric::Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_Riding_Sprint_CameraShake_C_OnLoopingStartGeneric, ParticleComponents) == 0x0000D8, "Member 'GCNL_Riding_Sprint_CameraShake_C_OnLoopingStartGeneric::ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNL_Riding_Sprint_CameraShake_C_OnLoopingStartGeneric, AudioComponents) == 0x0000E8, "Member 'GCNL_Riding_Sprint_CameraShake_C_OnLoopingStartGeneric::AudioComponents' has a wrong offset!");

// Function GCNL_Riding_Sprint_CameraShake.GCNL_Riding_Sprint_CameraShake_C.OnRemove
// 0x00E0 (0x00E0 - 0x0000)
struct GCNL_Riding_Sprint_CameraShake_C_OnRemove final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00D8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_Riding_Sprint_CameraShake_C_OnRemove) == 0x000008, "Wrong alignment on GCNL_Riding_Sprint_CameraShake_C_OnRemove");
static_assert(sizeof(GCNL_Riding_Sprint_CameraShake_C_OnRemove) == 0x0000E0, "Wrong size on GCNL_Riding_Sprint_CameraShake_C_OnRemove");
static_assert(offsetof(GCNL_Riding_Sprint_CameraShake_C_OnRemove, MyTarget) == 0x000000, "Member 'GCNL_Riding_Sprint_CameraShake_C_OnRemove::MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_Riding_Sprint_CameraShake_C_OnRemove, Parameters) == 0x000008, "Member 'GCNL_Riding_Sprint_CameraShake_C_OnRemove::Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_Riding_Sprint_CameraShake_C_OnRemove, ReturnValue) == 0x0000D8, "Member 'GCNL_Riding_Sprint_CameraShake_C_OnRemove::ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Riding_Sprint_CameraShake_C_OnRemove, CallFunc_IsValid_ReturnValue) == 0x0000D9, "Member 'GCNL_Riding_Sprint_CameraShake_C_OnRemove::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Riding_Sprint_CameraShake_C_OnRemove, CallFunc_IsValid_ReturnValue_1) == 0x0000DA, "Member 'GCNL_Riding_Sprint_CameraShake_C_OnRemove::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

}

