#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TeleportationDrone

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TeleportationDrone.BP_TeleportationDrone_C
// 0x0048 (0x0358 - 0x0310)
class ABP_TeleportationDrone_C final : public APawn
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0310(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponentBudgeted*         SkeletalMeshComponentBudgeted;                     // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        AnimPlayRate;                                      // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               StaticMeshMID;                                     // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          TeleportIn;                                        // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CharacterAttached;                                 // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          InLobby;                                           // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 Mesh_for_Attachment;                               // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_TeleportationDrone(int32 EntryPoint);
	void OnSpawnOutAnimEnded(class UAnimMontage* Montage, bool bInterrupted);
	void PlaySpawnAnim();
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);

	class UAnimationAsset* Get_Spawn_Animation() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TeleportationDrone_C">();
	}
	static class ABP_TeleportationDrone_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TeleportationDrone_C>();
	}
};
static_assert(alignof(ABP_TeleportationDrone_C) == 0x000008, "Wrong alignment on ABP_TeleportationDrone_C");
static_assert(sizeof(ABP_TeleportationDrone_C) == 0x000358, "Wrong size on ABP_TeleportationDrone_C");
static_assert(offsetof(ABP_TeleportationDrone_C, UberGraphFrame) == 0x000310, "Member 'ABP_TeleportationDrone_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_TeleportationDrone_C, SkeletalMeshComponentBudgeted) == 0x000318, "Member 'ABP_TeleportationDrone_C::SkeletalMeshComponentBudgeted' has a wrong offset!");
static_assert(offsetof(ABP_TeleportationDrone_C, Scene) == 0x000320, "Member 'ABP_TeleportationDrone_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_TeleportationDrone_C, AnimPlayRate) == 0x000328, "Member 'ABP_TeleportationDrone_C::AnimPlayRate' has a wrong offset!");
static_assert(offsetof(ABP_TeleportationDrone_C, StaticMeshMID) == 0x000330, "Member 'ABP_TeleportationDrone_C::StaticMeshMID' has a wrong offset!");
static_assert(offsetof(ABP_TeleportationDrone_C, TeleportIn) == 0x000338, "Member 'ABP_TeleportationDrone_C::TeleportIn' has a wrong offset!");
static_assert(offsetof(ABP_TeleportationDrone_C, CharacterAttached) == 0x000340, "Member 'ABP_TeleportationDrone_C::CharacterAttached' has a wrong offset!");
static_assert(offsetof(ABP_TeleportationDrone_C, InLobby) == 0x000348, "Member 'ABP_TeleportationDrone_C::InLobby' has a wrong offset!");
static_assert(offsetof(ABP_TeleportationDrone_C, Mesh_for_Attachment) == 0x000350, "Member 'ABP_TeleportationDrone_C::Mesh_for_Attachment' has a wrong offset!");

}

