#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AudioClustersRuntime

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// ScriptStruct AudioClustersRuntime.AudioClusterActorInfo
// 0x000C (0x000C - 0x0000)
struct FAudioClusterActorInfo final
{
public:
	TWeakObjectPtr<class AActor>                  Actor;                                             // 0x0000(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           tag;                                               // 0x0008(0x0004)(BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FAudioClusterActorInfo) == 0x000004, "Wrong alignment on FAudioClusterActorInfo");
static_assert(sizeof(FAudioClusterActorInfo) == 0x00000C, "Wrong size on FAudioClusterActorInfo");
static_assert(offsetof(FAudioClusterActorInfo, Actor) == 0x000000, "Member 'FAudioClusterActorInfo::Actor' has a wrong offset!");
static_assert(offsetof(FAudioClusterActorInfo, tag) == 0x000008, "Member 'FAudioClusterActorInfo::tag' has a wrong offset!");

// ScriptStruct AudioClustersRuntime.AudioClusterOneShotInfo
// 0x0028 (0x0028 - 0x0000)
struct FAudioClusterOneShotInfo final
{
public:
	struct FGameplayTag                           tag;                                               // 0x0000(0x0004)(BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Position;                                          // 0x0008(0x0018)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LifetimeSeconds;                                   // 0x0020(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeRemainingSeconds;                              // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FAudioClusterOneShotInfo) == 0x000008, "Wrong alignment on FAudioClusterOneShotInfo");
static_assert(sizeof(FAudioClusterOneShotInfo) == 0x000028, "Wrong size on FAudioClusterOneShotInfo");
static_assert(offsetof(FAudioClusterOneShotInfo, tag) == 0x000000, "Member 'FAudioClusterOneShotInfo::tag' has a wrong offset!");
static_assert(offsetof(FAudioClusterOneShotInfo, Position) == 0x000008, "Member 'FAudioClusterOneShotInfo::Position' has a wrong offset!");
static_assert(offsetof(FAudioClusterOneShotInfo, LifetimeSeconds) == 0x000020, "Member 'FAudioClusterOneShotInfo::LifetimeSeconds' has a wrong offset!");
static_assert(offsetof(FAudioClusterOneShotInfo, TimeRemainingSeconds) == 0x000024, "Member 'FAudioClusterOneShotInfo::TimeRemainingSeconds' has a wrong offset!");

}

