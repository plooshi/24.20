#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MeshCosmetics

#include "Basic.hpp"

#include "MeshCosmetics_classes.hpp"
#include "MeshCosmetics_parameters.hpp"


namespace SDK
{

// Function MeshCosmetics.FortCustomizableObjectParameterVariant.ApplyVariants
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortAthenaLoadout               Loadout                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortCustomizableObjectParameterVariant::ApplyVariants(class AActor* Actor, const struct FFortAthenaLoadout& Loadout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortCustomizableObjectParameterVariant", "ApplyVariants");

	Params::FortCustomizableObjectParameterVariant_ApplyVariants Parms{};

	Parms.Actor = Actor;
	Parms.Loadout = std::move(Loadout);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MeshCosmetics.InstanceCache_FortGameInstance.OnGameInstanceWorldChanged
// (Final, Native, Private)
// Parameters:
// class UWorld*                           OldWorld                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWorld*                           NewWorld                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInstanceCache_FortGameInstance::OnGameInstanceWorldChanged(class UWorld* OldWorld, class UWorld* NewWorld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InstanceCache_FortGameInstance", "OnGameInstanceWorldChanged");

	Params::InstanceCache_FortGameInstance_OnGameInstanceWorldChanged Parms{};

	Parms.OldWorld = OldWorld;
	Parms.NewWorld = NewWorld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MeshCosmetics.InstanceCache_FortGameInstance.OnGamePhaseChanged
// (Final, Native, Private)
// Parameters:
// EAthenaGamePhase                        GamePhase                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInstanceCache_FortGameInstance::OnGamePhaseChanged(EAthenaGamePhase GamePhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InstanceCache_FortGameInstance", "OnGamePhaseChanged");

	Params::InstanceCache_FortGameInstance_OnGamePhaseChanged Parms{};

	Parms.GamePhase = GamePhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MeshCosmetics.InstanceCache_FortGameInstance.OnGameStateChanged
// (Final, Native, Private)
// Parameters:
// class AGameStateBase*                   InGameState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInstanceCache_FortGameInstance::OnGameStateChanged(class AGameStateBase* InGameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InstanceCache_FortGameInstance", "OnGameStateChanged");

	Params::InstanceCache_FortGameInstance_OnGameStateChanged Parms{};

	Parms.InGameState = InGameState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MeshCosmetics.InstanceCache_FortGameInstance.OnPreLoadMap
// (Final, Native, Private, HasOutParams, Const)
// Parameters:
// struct FWorldContext                    WorldContext                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           MapName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInstanceCache_FortGameInstance::OnPreLoadMap(const struct FWorldContext& WorldContext, const class FString& MapName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InstanceCache_FortGameInstance", "OnPreLoadMap");

	Params::InstanceCache_FortGameInstance_OnPreLoadMap Parms{};

	Parms.WorldContext = std::move(WorldContext);
	Parms.MapName = std::move(MapName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MeshCosmetics.MeshCosmeticTagInterface.OnPostCustomizationAnimGameplayTags_BP
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGameplayTagContainer            GameplayTags                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IMeshCosmeticTagInterface::OnPostCustomizationAnimGameplayTags_BP(const struct FGameplayTagContainer& GameplayTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeshCosmeticTagInterface", "OnPostCustomizationAnimGameplayTags_BP");

	Params::MeshCosmeticTagInterface_OnPostCustomizationAnimGameplayTags_BP Parms{};

	Parms.GameplayTags = std::move(GameplayTags);

	UObject::ProcessEvent(Func, &Parms);
}

}

